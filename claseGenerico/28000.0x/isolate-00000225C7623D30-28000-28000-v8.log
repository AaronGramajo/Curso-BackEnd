v8-version,9,4,146,24,-node.14,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff6a77e0000,0x7ff6ab330000,0
shared-library,C:\\Windows\\SYSTEM32\\ntdll.dll,0x7fffb2970000,0x7fffb2b68000,0
shared-library,C:\\Windows\\System32\\KERNEL32.DLL,0x7fffb1ab0000,0x7fffb1b6f000,0
shared-library,C:\\Windows\\System32\\KERNELBASE.dll,0x7fffb06d0000,0x7fffb09a2000,0
shared-library,C:\\Windows\\System32\\WS2_32.dll,0x7fffb1f40000,0x7fffb1fab000,0
shared-library,C:\\Windows\\System32\\RPCRT4.dll,0x7fffb09b0000,0x7fffb0ad5000,0
shared-library,C:\\Windows\\SYSTEM32\\dbghelp.dll,0x7fffadda0000,0x7fffadf84000,0
shared-library,C:\\Windows\\System32\\ucrtbase.dll,0x7fffb0160000,0x7fffb0260000,0
shared-library,C:\\Windows\\System32\\PSAPI.DLL,0x7fffb1bd0000,0x7fffb1bd8000,0
shared-library,C:\\Windows\\System32\\ADVAPI32.dll,0x7fffb27f0000,0x7fffb289e000,0
shared-library,C:\\Windows\\System32\\msvcrt.dll,0x7fffb24d0000,0x7fffb256e000,0
shared-library,C:\\Windows\\SYSTEM32\\IPHLPAPI.DLL,0x7fffaf4c0000,0x7fffaf4fb000,0
shared-library,C:\\Windows\\System32\\sechost.dll,0x7fffb20a0000,0x7fffb213c000,0
shared-library,C:\\Windows\\SYSTEM32\\USERENV.dll,0x7fffaff20000,0x7fffaff4e000,0
shared-library,C:\\Windows\\System32\\USER32.dll,0x7fffb22e0000,0x7fffb2481000,0
shared-library,C:\\Windows\\System32\\win32u.dll,0x7fffb0540000,0x7fffb0562000,0
shared-library,C:\\Windows\\System32\\GDI32.dll,0x7fffb1a20000,0x7fffb1a4b000,0
shared-library,C:\\Windows\\System32\\gdi32full.dll,0x7fffb0260000,0x7fffb036f000,0
shared-library,C:\\Windows\\System32\\msvcp_win.dll,0x7fffb0370000,0x7fffb040d000,0
shared-library,C:\\Windows\\System32\\CRYPT32.dll,0x7fffb0570000,0x7fffb06c6000,0
shared-library,C:\\Windows\\System32\\bcrypt.dll,0x7fffb0410000,0x7fffb0437000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMM.dll,0x7fffa1d20000,0x7fffa1d47000,0
shared-library,C:\\Windows\\SYSTEM32\\CRYPTBASE.DLL,0x7fffafa10000,0x7fffafa1c000,0
shared-library,C:\\Windows\\System32\\IMM32.DLL,0x7fffb2490000,0x7fffb24c2000,0
shared-library,C:\\Windows\\SYSTEM32\\powrprof.dll,0x7fffaf630000,0x7fffaf67b000,0
shared-library,C:\\Windows\\SYSTEM32\\UMPDC.dll,0x7fffaf4a0000,0x7fffaf4b2000,0
shared-library,C:\\Windows\\system32\\uxtheme.dll,0x7fffad630000,0x7fffad6ce000,0
shared-library,C:\\Windows\\System32\\combase.dll,0x7fffb1be0000,0x7fffb1f35000,0
shared-library,C:\\Windows\\system32\\mswsock.dll,0x7fffaf820000,0x7fffaf88a000,0
shared-library,C:\\Windows\\SYSTEM32\\kernel.appcore.dll,0x7fffae8d0000,0x7fffae8e2000,0
shared-library,C:\\Windows\\System32\\bcryptPrimitives.dll,0x7fffb04b0000,0x7fffb0532000,0
shared-library-end
tick,0x7fffb2a0d144,124721,0,0x0,6
profiler,begin,1000
new,CodeRange,0x225ca720000,0
new,MemoryChunk,0x3cb83740000,262144
new,MemoryChunk,0x2b9fe600000,262144
new,MemoryChunk,0x2ce29000000,262144
new,MemoryChunk,0x128982c0000,262144
new,MemoryChunk,0xa286780000,262144
heap-capacity,1031072
heap-available,4346136384
new,MemoryChunk,0x25aadb00000,262144
new,MemoryChunk,0x116164c0000,262144
new,MemoryChunk,0x6682e80000,262144
new,MemoryChunk,0x2ee4c9c0000,262144
new,MemoryChunk,0x334252c0000,262144
new,MemoryChunk,0x3f9d3540000,262144
new,MemoryChunk,0x1d24e4c0000,262144
new,MemoryChunk,0x225ca740000,262144
new,MemoryChunk,0x2e751340000,262144
code-creation,Builtin,2,128084,0x7ff6a8349a24,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,128094,0x7ff6a8349f84,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,128101,0x7ff6a834a164,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,128107,0x7ff6a834a3e4,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,128113,0x7ff6a834a4c4,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,128119,0x7ff6a834a644,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,128124,0x7ff6a834a6e4,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,128130,0x7ff6a834a724,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,128137,0x7ff6a834a8a4,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,128143,0x7ff6a834aa64,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,128176,0x7ff6a834ac24,104,CallBoundFunction
code-creation,Builtin,2,128183,0x7ff6a834aca4,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,128190,0x7ff6a834ad24,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,128196,0x7ff6a834ada4,120,Call_ReceiverIsAny
code-creation,Builtin,2,128201,0x7ff6a834ae24,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,128207,0x7ff6a834b224,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,128213,0x7ff6a834b624,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,128220,0x7ff6a834ba64,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,128226,0x7ff6a834bea4,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,128232,0x7ff6a834c2e4,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,128238,0x7ff6a834c724,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,128244,0x7ff6a834cae4,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,128250,0x7ff6a834cea4,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,128256,0x7ff6a834d264,736,CallProxy
code-creation,Builtin,2,128261,0x7ff6a834d564,148,CallVarargs
code-creation,Builtin,2,128266,0x7ff6a834d604,944,CallWithSpread
code-creation,Builtin,2,128272,0x7ff6a834d9c4,1956,CallWithSpread_Baseline
code-creation,Builtin,2,128277,0x7ff6a834e184,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,128283,0x7ff6a834e924,864,CallWithArrayLike
code-creation,Builtin,2,128289,0x7ff6a834eca4,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,128295,0x7ff6a834f3c4,156,CallForwardVarargs
code-creation,Builtin,2,128300,0x7ff6a834f464,156,CallFunctionForwardVarargs
code-creation,Builtin,2,128306,0x7ff6a834f504,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,128312,0x7ff6a834f5a4,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,128318,0x7ff6a834f6a4,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,128324,0x7ff6a834f7e4,28,ConstructFunction
code-creation,Builtin,2,128331,0x7ff6a834f804,104,ConstructBoundFunction
code-creation,Builtin,2,128337,0x7ff6a834f884,28,ConstructedNonConstructable
code-creation,Builtin,2,128342,0x7ff6a834f8a4,100,Construct
code-creation,Builtin,2,128348,0x7ff6a834f924,148,ConstructVarargs
code-creation,Builtin,2,128353,0x7ff6a834f9c4,968,ConstructWithSpread
code-creation,Builtin,2,128359,0x7ff6a834fda4,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,128365,0x7ff6a8350484,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,128371,0x7ff6a8350b84,924,ConstructWithArrayLike
code-creation,Builtin,2,128376,0x7ff6a8350f24,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,128382,0x7ff6a83515a4,196,ConstructForwardVarargs
code-creation,Builtin,2,128388,0x7ff6a8351684,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,128394,0x7ff6a8351764,804,Construct_Baseline
code-creation,Builtin,2,128399,0x7ff6a8351aa4,820,Construct_WithFeedback
code-creation,Builtin,2,128405,0x7ff6a8351de4,476,JSConstructStubGeneric
code-creation,Builtin,2,128411,0x7ff6a8351fc4,376,JSBuiltinsConstructStub
code-creation,Builtin,2,128416,0x7ff6a8352144,676,FastNewObject
code-creation,Builtin,2,128422,0x7ff6a8352404,292,FastNewClosure
code-creation,Builtin,2,128427,0x7ff6a8352544,720,ConstructProxy
code-creation,Builtin,2,128432,0x7ff6a8352824,360,JSEntry
code-creation,Builtin,2,128438,0x7ff6a83529a4,360,JSConstructEntry
code-creation,Builtin,2,128443,0x7ff6a8352b24,360,JSRunMicrotasksEntry
code-creation,Builtin,2,128449,0x7ff6a8352ca4,96,JSEntryTrampoline
code-creation,Builtin,2,128454,0x7ff6a8352d24,96,JSConstructEntryTrampoline
code-creation,Builtin,2,128460,0x7ff6a8352da4,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,128466,0x7ff6a8352ec4,1116,StringCodePointAt
code-creation,Builtin,2,128471,0x7ff6a8353324,1552,StringFromCodePointAt
code-creation,Builtin,2,128477,0x7ff6a8353944,544,StringEqual
code-creation,Builtin,2,128484,0x7ff6a8353b84,276,StringGreaterThan
code-creation,Builtin,2,128515,0x7ff6a8353ca4,276,StringGreaterThanOrEqual
code-creation,Builtin,2,128522,0x7ff6a8353dc4,276,StringLessThan
code-creation,Builtin,2,128527,0x7ff6a8353ee4,276,StringLessThanOrEqual
code-creation,Builtin,2,128533,0x7ff6a8354004,2492,StringSubstring
code-creation,Builtin,2,128538,0x7ff6a83549c4,80,OrderedHashTableHealIndex
code-creation,Builtin,2,128545,0x7ff6a8354a24,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,128551,0x7ff6a8354ec4,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,128556,0x7ff6a8354f24,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,128562,0x7ff6a8354f84,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,128568,0x7ff6a8354fe4,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,128574,0x7ff6a8355044,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,128580,0x7ff6a83550a4,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,128587,0x7ff6a8355104,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,128592,0x7ff6a8355164,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,128598,0x7ff6a8355244,52,InterpreterOnStackReplacement
code-creation,Builtin,2,128604,0x7ff6a8355284,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,128610,0x7ff6a83554e4,56,BaselineOnStackReplacement
code-creation,Builtin,2,128615,0x7ff6a8355524,84,BaselineLeaveFrame
code-creation,Builtin,2,128621,0x7ff6a8355584,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,128627,0x7ff6a8355664,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,128633,0x7ff6a8355764,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,128639,0x7ff6a8355844,1004,CompileLazy
code-creation,Builtin,2,128644,0x7ff6a8355c44,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,128650,0x7ff6a8355ca4,252,InstantiateAsmJs
code-creation,Builtin,2,128655,0x7ff6a8355da4,32,NotifyDeoptimized
code-creation,Builtin,2,128661,0x7ff6a8355de4,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,128666,0x7ff6a8356104,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,128672,0x7ff6a8356424,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,128678,0x7ff6a8356744,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,128683,0x7ff6a8356a64,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,128689,0x7ff6a8356aa4,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,128695,0x7ff6a8356ae4,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,128701,0x7ff6a8356b24,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,128707,0x7ff6a8356b84,288,CallApiCallback
code-creation,Builtin,2,128712,0x7ff6a8356cc4,268,CallApiGetter
code-creation,Builtin,2,128717,0x7ff6a8356de4,12,HandleApiCall
code-creation,Builtin,2,128723,0x7ff6a8356e04,12,HandleApiCallAsFunction
code-creation,Builtin,2,128728,0x7ff6a8356e24,12,HandleApiCallAsConstructor
code-creation,Builtin,2,128734,0x7ff6a8356e44,64,AllocateInYoungGeneration
code-creation,Builtin,2,128741,0x7ff6a8356ea4,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,128747,0x7ff6a8356ee4,64,AllocateInOldGeneration
code-creation,Builtin,2,128753,0x7ff6a8356f44,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,128758,0x7ff6a8356f84,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,128764,0x7ff6a8357144,496,GrowFastDoubleElements
code-creation,Builtin,2,128770,0x7ff6a8357344,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,128775,0x7ff6a83574e4,388,DebugBreakTrampoline
code-creation,Builtin,2,128781,0x7ff6a8357684,180,ToNumber
code-creation,Builtin,2,128786,0x7ff6a8357744,292,ToNumber_Baseline
code-creation,Builtin,2,128792,0x7ff6a8357884,360,ToNumeric_Baseline
code-creation,Builtin,2,128797,0x7ff6a8357a04,104,PlainPrimitiveToNumber
code-creation,Builtin,2,128803,0x7ff6a8357a84,212,ToNumberConvertBigInt
code-creation,Builtin,2,128808,0x7ff6a8357b64,132,Typeof
code-creation,Builtin,2,128814,0x7ff6a8357c04,104,BigIntToI64
code-creation,Builtin,2,128819,0x7ff6a8357c84,4,BigIntToI32Pair
code-creation,Builtin,2,128826,0x7ff6a8357ca4,232,I64ToBigInt
code-creation,Builtin,2,128831,0x7ff6a8357da4,4,I32PairToBigInt
code-creation,Builtin,2,128837,0x7ff6a8357dc4,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,128843,0x7ff6a8357e44,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,128848,0x7ff6a8358ee4,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,128854,0x7ff6a835cce4,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,128860,0x7ff6a835ce04,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,128865,0x7ff6a835ce44,12,LoadIC_StringLength
code-creation,Builtin,2,128871,0x7ff6a835ce64,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,128877,0x7ff6a835ce84,3056,LoadIC_NoFeedback
code-creation,Builtin,2,128882,0x7ff6a835da84,32,StoreGlobalIC_Slow
code-creation,Builtin,2,128888,0x7ff6a835dac4,7332,StoreIC_NoFeedback
code-creation,Builtin,2,128893,0x7ff6a835f784,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,128899,0x7ff6a835f844,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,128905,0x7ff6a835f8a4,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,128910,0x7ff6a835f9a4,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,128917,0x7ff6a835faa4,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,128923,0x7ff6a835fba4,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,128929,0x7ff6a835fca4,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,128935,0x7ff6a83634c4,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,128941,0x7ff6a8365a64,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,128947,0x7ff6a8368ea4,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,128953,0x7ff6a836a684,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,128960,0x7ff6a836c7c4,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,128967,0x7ff6a8371384,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,128973,0x7ff6a83734c4,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,128979,0x7ff6a8375fe4,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,128985,0x7ff6a8376304,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,128990,0x7ff6a83763c4,72,HasIndexedInterceptorIC
code-creation,Builtin,2,128996,0x7ff6a8376424,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,129002,0x7ff6a83764a4,224,DynamicCheckMaps
code-creation,Builtin,2,129008,0x7ff6a83765a4,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,129014,0x7ff6a8376624,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,129020,0x7ff6a83766e4,152,EnqueueMicrotask
code-creation,Builtin,2,129026,0x7ff6a8376784,8,RunMicrotasksTrampoline
code-creation,Builtin,2,129031,0x7ff6a83767a4,3476,RunMicrotasks
code-creation,Builtin,2,129037,0x7ff6a8377544,2636,HasProperty
code-creation,Builtin,2,129044,0x7ff6a8377fa4,1156,DeleteProperty
code-creation,Builtin,2,129051,0x7ff6a8378444,1972,CopyDataProperties
code-creation,Builtin,2,129057,0x7ff6a8378c04,9184,SetDataProperties
code-creation,Builtin,2,129063,0x7ff6a837b004,28,Abort
code-creation,Builtin,2,129070,0x7ff6a837b024,28,AbortCSAAssert
code-creation,Builtin,2,129076,0x7ff6a837b044,12,EmptyFunction
code-creation,Builtin,2,129082,0x7ff6a837b064,12,Illegal
code-creation,Builtin,2,129089,0x7ff6a837b084,12,StrictPoisonPillThrower
code-creation,Builtin,2,129095,0x7ff6a837b0a4,12,UnsupportedThrower
code-creation,Builtin,2,129101,0x7ff6a837b0c4,64,ReturnReceiver
code-creation,Builtin,2,129106,0x7ff6a837b124,28,ArrayConstructor
code-creation,Builtin,2,129112,0x7ff6a837b144,404,ArrayConstructorImpl
code-creation,Builtin,2,129118,0x7ff6a837b2e4,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,129124,0x7ff6a837b3c4,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,129130,0x7ff6a837b4a4,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,129138,0x7ff6a837b564,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,129162,0x7ff6a837b624,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,129170,0x7ff6a837b6e4,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,129176,0x7ff6a837b7a4,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,129183,0x7ff6a837b864,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,129190,0x7ff6a837b924,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,129196,0x7ff6a837bb44,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,129202,0x7ff6a837bd44,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,129209,0x7ff6a837bf04,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,129216,0x7ff6a837c0a4,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,129222,0x7ff6a837c264,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,129229,0x7ff6a837c404,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,129236,0x7ff6a837c5e4,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,129242,0x7ff6a837c784,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,129248,0x7ff6a837c7e4,12,ArrayConcat
code-creation,Builtin,2,129254,0x7ff6a837c804,12,ArrayPrototypeFill
code-creation,Builtin,2,129259,0x7ff6a837c824,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,129265,0x7ff6a837cbe4,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,129271,0x7ff6a837cc84,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,129277,0x7ff6a837cd64,548,ArrayIncludes
code-creation,Builtin,2,129282,0x7ff6a837cfa4,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,129288,0x7ff6a837d304,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,129294,0x7ff6a837d384,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,129300,0x7ff6a837d404,552,ArrayIndexOf
code-creation,Builtin,2,129305,0x7ff6a837d644,12,ArrayPop
code-creation,Builtin,2,129311,0x7ff6a837d664,616,ArrayPrototypePop
code-creation,Builtin,2,129316,0x7ff6a837d8e4,12,ArrayPush
code-creation,Builtin,2,129322,0x7ff6a837d904,2424,ArrayPrototypePush
code-creation,Builtin,2,129328,0x7ff6a837e284,12,ArrayShift
code-creation,Builtin,2,129333,0x7ff6a837e2a4,12,ArrayUnshift
code-creation,Builtin,2,129339,0x7ff6a837e2c4,956,CloneFastJSArray
code-creation,Builtin,2,129344,0x7ff6a837e684,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,129350,0x7ff6a837ef24,976,ExtractFastJSArray
code-creation,Builtin,2,129356,0x7ff6a837f304,260,ArrayPrototypeEntries
code-creation,Builtin,2,129362,0x7ff6a837f424,248,ArrayPrototypeKeys
code-creation,Builtin,2,129367,0x7ff6a837f524,260,ArrayPrototypeValues
code-creation,Builtin,2,129373,0x7ff6a837f644,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,129379,0x7ff6a83807a4,4168,FlattenIntoArray
code-creation,Builtin,2,129384,0x7ff6a8381804,4172,FlatMapIntoArray
code-creation,Builtin,2,129390,0x7ff6a8382864,372,ArrayPrototypeFlat
code-creation,Builtin,2,129396,0x7ff6a83829e4,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,129401,0x7ff6a8382ba4,12,ArrayBufferConstructor
code-creation,Builtin,2,129407,0x7ff6a8382bc4,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,129413,0x7ff6a8382be4,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,129419,0x7ff6a8382c04,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,129425,0x7ff6a8382c24,804,AsyncFunctionEnter
code-creation,Builtin,2,129430,0x7ff6a8382f64,132,AsyncFunctionReject
code-creation,Builtin,2,129436,0x7ff6a8383004,128,AsyncFunctionResolve
code-creation,Builtin,2,129442,0x7ff6a83830a4,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,129448,0x7ff6a83830c4,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,129454,0x7ff6a8383bc4,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,129476,0x7ff6a83846c4,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,129483,0x7ff6a8384784,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,129489,0x7ff6a8384844,12,BigIntConstructor
code-creation,Builtin,2,129494,0x7ff6a8384864,12,BigIntAsUintN
code-creation,Builtin,2,129500,0x7ff6a8384884,12,BigIntAsIntN
code-creation,Builtin,2,129505,0x7ff6a83848a4,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,129511,0x7ff6a83848c4,12,BigIntPrototypeToString
code-creation,Builtin,2,129517,0x7ff6a83848e4,12,BigIntPrototypeValueOf
code-creation,Builtin,2,129523,0x7ff6a8384904,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,129529,0x7ff6a8384924,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,129535,0x7ff6a8384944,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,129541,0x7ff6a8384964,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,129547,0x7ff6a8384984,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,129553,0x7ff6a83849a4,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,129559,0x7ff6a83849c4,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,129565,0x7ff6a83849e4,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,129571,0x7ff6a8384a04,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,129577,0x7ff6a8384a24,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,129582,0x7ff6a8384a44,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,129589,0x7ff6a8384a64,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,129595,0x7ff6a8384a84,12,CallSitePrototypeGetThis
code-creation,Builtin,2,129600,0x7ff6a8384aa4,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,129606,0x7ff6a8384ac4,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,129612,0x7ff6a8384ae4,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,129618,0x7ff6a8384b04,12,CallSitePrototypeIsEval
code-creation,Builtin,2,129624,0x7ff6a8384b24,12,CallSitePrototypeIsNative
code-creation,Builtin,2,129630,0x7ff6a8384b44,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,129635,0x7ff6a8384b64,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,129641,0x7ff6a8384b84,12,CallSitePrototypeToString
code-creation,Builtin,2,129647,0x7ff6a8384ba4,12,ConsoleDebug
code-creation,Builtin,2,129653,0x7ff6a8384bc4,12,ConsoleError
code-creation,Builtin,2,129658,0x7ff6a8384be4,12,ConsoleInfo
code-creation,Builtin,2,129664,0x7ff6a8384c04,12,ConsoleLog
code-creation,Builtin,2,129669,0x7ff6a8384c24,12,ConsoleWarn
code-creation,Builtin,2,129675,0x7ff6a8384c44,12,ConsoleDir
code-creation,Builtin,2,129680,0x7ff6a8384c64,12,ConsoleDirXml
code-creation,Builtin,2,129686,0x7ff6a8384c84,12,ConsoleTable
code-creation,Builtin,2,129691,0x7ff6a8384ca4,12,ConsoleTrace
code-creation,Builtin,2,129697,0x7ff6a8384cc4,12,ConsoleGroup
code-creation,Builtin,2,129702,0x7ff6a8384ce4,12,ConsoleGroupCollapsed
code-creation,Builtin,2,129708,0x7ff6a8384d04,12,ConsoleGroupEnd
code-creation,Builtin,2,129713,0x7ff6a8384d24,12,ConsoleClear
code-creation,Builtin,2,129719,0x7ff6a8384d44,12,ConsoleCount
code-creation,Builtin,2,129724,0x7ff6a8384d64,12,ConsoleCountReset
code-creation,Builtin,2,129730,0x7ff6a8384d84,12,ConsoleAssert
code-creation,Builtin,2,129736,0x7ff6a8384da4,12,ConsoleProfile
code-creation,Builtin,2,129741,0x7ff6a8384dc4,12,ConsoleProfileEnd
code-creation,Builtin,2,129747,0x7ff6a8384de4,12,ConsoleTime
code-creation,Builtin,2,129752,0x7ff6a8384e04,12,ConsoleTimeLog
code-creation,Builtin,2,129758,0x7ff6a8384e24,12,ConsoleTimeEnd
code-creation,Builtin,2,129763,0x7ff6a8384e44,12,ConsoleTimeStamp
code-creation,Builtin,2,129769,0x7ff6a8384e64,12,ConsoleContext
code-creation,Builtin,2,129774,0x7ff6a8384e84,12,DataViewConstructor
code-creation,Builtin,2,129780,0x7ff6a8384ea4,12,DateConstructor
code-creation,Builtin,2,129786,0x7ff6a8384ec4,216,DatePrototypeGetDate
code-creation,Builtin,2,129791,0x7ff6a8384fa4,216,DatePrototypeGetDay
code-creation,Builtin,2,129797,0x7ff6a8385084,216,DatePrototypeGetFullYear
code-creation,Builtin,2,129803,0x7ff6a8385164,216,DatePrototypeGetHours
code-creation,Builtin,2,129897,0x7ff6a8385244,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,129905,0x7ff6a8385324,216,DatePrototypeGetMinutes
code-creation,Builtin,2,129910,0x7ff6a8385404,216,DatePrototypeGetMonth
code-creation,Builtin,2,129916,0x7ff6a83854e4,216,DatePrototypeGetSeconds
code-creation,Builtin,2,129922,0x7ff6a83855c4,124,DatePrototypeGetTime
code-creation,Builtin,2,129928,0x7ff6a8385644,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,129934,0x7ff6a8385724,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,129939,0x7ff6a8385804,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,129945,0x7ff6a83858e4,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,129951,0x7ff6a83859c4,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,129959,0x7ff6a8385aa4,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,129964,0x7ff6a8385b84,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,129970,0x7ff6a8385c64,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,129976,0x7ff6a8385d44,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,129982,0x7ff6a8385e24,124,DatePrototypeValueOf
code-creation,Builtin,2,129988,0x7ff6a8385ea4,352,DatePrototypeToPrimitive
code-creation,Builtin,2,129993,0x7ff6a8386024,12,DatePrototypeGetYear
code-creation,Builtin,2,129999,0x7ff6a8386044,12,DatePrototypeSetYear
code-creation,Builtin,2,130005,0x7ff6a8386064,12,DateNow
code-creation,Builtin,2,130010,0x7ff6a8386084,12,DateParse
code-creation,Builtin,2,130016,0x7ff6a83860a4,12,DatePrototypeSetDate
code-creation,Builtin,2,130021,0x7ff6a83860c4,12,DatePrototypeSetFullYear
code-creation,Builtin,2,130027,0x7ff6a83860e4,12,DatePrototypeSetHours
code-creation,Builtin,2,130033,0x7ff6a8386104,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,130039,0x7ff6a8386124,12,DatePrototypeSetMinutes
code-creation,Builtin,2,130045,0x7ff6a8386144,12,DatePrototypeSetMonth
code-creation,Builtin,2,130052,0x7ff6a8386164,12,DatePrototypeSetSeconds
code-creation,Builtin,2,130059,0x7ff6a8386184,12,DatePrototypeSetTime
code-creation,Builtin,2,130064,0x7ff6a83861a4,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,130070,0x7ff6a83861c4,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,130076,0x7ff6a83861e4,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,130082,0x7ff6a8386204,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,130087,0x7ff6a8386224,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,130093,0x7ff6a8386244,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,130099,0x7ff6a8386264,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,130105,0x7ff6a8386284,12,DatePrototypeToDateString
code-creation,Builtin,2,130110,0x7ff6a83862a4,12,DatePrototypeToISOString
code-creation,Builtin,2,130116,0x7ff6a83862c4,12,DatePrototypeToUTCString
code-creation,Builtin,2,130122,0x7ff6a83862e4,12,DatePrototypeToString
code-creation,Builtin,2,130128,0x7ff6a8386304,12,DatePrototypeToTimeString
code-creation,Builtin,2,130133,0x7ff6a8386324,12,DatePrototypeToJson
code-creation,Builtin,2,130140,0x7ff6a8386344,12,DateUTC
code-creation,Builtin,2,130145,0x7ff6a8386364,12,ErrorConstructor
code-creation,Builtin,2,130151,0x7ff6a8386384,12,ErrorCaptureStackTrace
code-creation,Builtin,2,130157,0x7ff6a83863a4,12,ErrorPrototypeToString
code-creation,Builtin,2,130162,0x7ff6a83863c4,12,FunctionConstructor
code-creation,Builtin,2,130168,0x7ff6a83863e4,68,FunctionPrototypeApply
code-creation,Builtin,2,130174,0x7ff6a8386444,12,FunctionPrototypeBind
code-creation,Builtin,2,130180,0x7ff6a8386464,32,FunctionPrototypeCall
code-creation,Builtin,2,130185,0x7ff6a83864a4,12,FunctionPrototypeToString
code-creation,Builtin,2,130191,0x7ff6a83864c4,192,CreateIterResultObject
code-creation,Builtin,2,130197,0x7ff6a83865a4,788,CreateGeneratorObject
code-creation,Builtin,2,130202,0x7ff6a83868c4,12,GeneratorFunctionConstructor
code-creation,Builtin,2,130208,0x7ff6a83868e4,412,GeneratorPrototypeNext
code-creation,Builtin,2,130214,0x7ff6a8386a84,420,GeneratorPrototypeReturn
code-creation,Builtin,2,130219,0x7ff6a8386c44,424,GeneratorPrototypeThrow
code-creation,Builtin,2,130226,0x7ff6a8386e04,12,AsyncFunctionConstructor
code-creation,Builtin,2,130232,0x7ff6a8386e24,372,SuspendGeneratorBaseline
code-creation,Builtin,2,130238,0x7ff6a8386fa4,88,ResumeGeneratorBaseline
code-creation,Builtin,2,130244,0x7ff6a8387004,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,130250,0x7ff6a8387044,12,GlobalDecodeURI
code-creation,Builtin,2,130256,0x7ff6a8387064,12,GlobalDecodeURIComponent
code-creation,Builtin,2,130261,0x7ff6a8387084,12,GlobalEncodeURI
code-creation,Builtin,2,130267,0x7ff6a83870a4,12,GlobalEncodeURIComponent
code-creation,Builtin,2,130272,0x7ff6a83870c4,12,GlobalEscape
code-creation,Builtin,2,130278,0x7ff6a83870e4,12,GlobalUnescape
code-creation,Builtin,2,130283,0x7ff6a8387104,12,GlobalEval
code-creation,Builtin,2,130289,0x7ff6a8387124,132,GlobalIsFinite
code-creation,Builtin,2,130294,0x7ff6a83871c4,124,GlobalIsNaN
code-creation,Builtin,2,130300,0x7ff6a8387244,12,JsonParse
code-creation,Builtin,2,130305,0x7ff6a8387264,12,JsonStringify
code-creation,Builtin,2,130311,0x7ff6a8387284,4608,LoadIC
code-creation,Builtin,2,130316,0x7ff6a83884a4,4296,LoadIC_Megamorphic
code-creation,Builtin,2,130322,0x7ff6a8389584,4520,LoadIC_Noninlined
code-creation,Builtin,2,130327,0x7ff6a838a744,44,LoadICTrampoline
code-creation,Builtin,2,130333,0x7ff6a838a784,24,LoadICBaseline
code-creation,Builtin,2,130338,0x7ff6a838a7a4,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,130344,0x7ff6a838a7e4,7376,LoadSuperIC
code-creation,Builtin,2,130349,0x7ff6a838c4c4,24,LoadSuperICBaseline
code-creation,Builtin,2,130355,0x7ff6a838c4e4,8148,KeyedLoadIC
code-creation,Builtin,2,130360,0x7ff6a838e4c4,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,130366,0x7ff6a8391804,44,KeyedLoadICTrampoline
code-creation,Builtin,2,130372,0x7ff6a8391844,24,KeyedLoadICBaseline
code-creation,Builtin,2,130377,0x7ff6a8391864,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,130383,0x7ff6a83918a4,5104,StoreGlobalIC
code-creation,Builtin,2,130389,0x7ff6a8392ca4,44,StoreGlobalICTrampoline
code-creation,Builtin,2,130395,0x7ff6a8392ce4,24,StoreGlobalICBaseline
code-creation,Builtin,2,130400,0x7ff6a8392d04,5340,StoreIC
code-creation,Builtin,2,130406,0x7ff6a83941e4,44,StoreICTrampoline
code-creation,Builtin,2,130411,0x7ff6a8394224,24,StoreICBaseline
code-creation,Builtin,2,130417,0x7ff6a8394244,5780,KeyedStoreIC
code-creation,Builtin,2,130422,0x7ff6a83958e4,44,KeyedStoreICTrampoline
code-creation,Builtin,2,130428,0x7ff6a8395924,24,KeyedStoreICBaseline
code-creation,Builtin,2,130433,0x7ff6a8395944,404,StoreInArrayLiteralIC
code-creation,Builtin,2,130439,0x7ff6a8395ae4,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,130445,0x7ff6a8395b04,140,LookupContextBaseline
code-creation,Builtin,2,130451,0x7ff6a8395ba4,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,130457,0x7ff6a8395c44,3244,LoadGlobalIC
code-creation,Builtin,2,130462,0x7ff6a8396904,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,130468,0x7ff6a83975a4,44,LoadGlobalICTrampoline
code-creation,Builtin,2,130473,0x7ff6a83975e4,24,LoadGlobalICBaseline
code-creation,Builtin,2,130479,0x7ff6a8397604,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,130485,0x7ff6a8397644,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,130491,0x7ff6a8397664,140,LookupGlobalICBaseline
code-creation,Builtin,2,130497,0x7ff6a8397704,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,130504,0x7ff6a83977a4,2064,CloneObjectIC
code-creation,Builtin,2,130510,0x7ff6a8397fc4,24,CloneObjectICBaseline
code-creation,Builtin,2,130515,0x7ff6a8397fe4,1988,CloneObjectIC_Slow
code-creation,Builtin,2,130521,0x7ff6a83987c4,2756,KeyedHasIC
code-creation,Builtin,2,130526,0x7ff6a83992a4,24,KeyedHasICBaseline
code-creation,Builtin,2,130532,0x7ff6a83992c4,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,130538,0x7ff6a8399d24,1436,IterableToList
code-creation,Builtin,2,130543,0x7ff6a839a2c4,1240,IterableToFixedArray
code-creation,Builtin,2,130549,0x7ff6a839a7a4,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,130556,0x7ff6a839aaa4,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,130562,0x7ff6a839aae4,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,130568,0x7ff6a839ab64,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,130574,0x7ff6a839af44,1616,StringListFromIterable
code-creation,Builtin,2,130580,0x7ff6a839b5a4,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,130585,0x7ff6a839ba84,4156,MapConstructor
code-creation,Builtin,2,130591,0x7ff6a839cac4,1996,MapPrototypeSet
code-creation,Builtin,2,130597,0x7ff6a839d2a4,1524,MapPrototypeDelete
code-creation,Builtin,2,130602,0x7ff6a839d8a4,204,MapPrototypeGet
code-creation,Builtin,2,130608,0x7ff6a839d984,164,MapPrototypeHas
code-creation,Builtin,2,130613,0x7ff6a839da44,12,MapPrototypeClear
code-creation,Builtin,2,130619,0x7ff6a839da64,284,MapPrototypeEntries
code-creation,Builtin,2,130624,0x7ff6a839db84,144,MapPrototypeGetSize
code-creation,Builtin,2,130630,0x7ff6a839dc24,492,MapPrototypeForEach
code-creation,Builtin,2,130636,0x7ff6a839de24,284,MapPrototypeKeys
code-creation,Builtin,2,130641,0x7ff6a839df44,284,MapPrototypeValues
code-creation,Builtin,2,130647,0x7ff6a839e064,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,130653,0x7ff6a839e484,1168,MapIteratorToList
code-creation,Builtin,2,130658,0x7ff6a839e924,12,NumberPrototypeToExponential
code-creation,Builtin,2,130664,0x7ff6a839e944,12,NumberPrototypeToFixed
code-creation,Builtin,2,130670,0x7ff6a839e964,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,130676,0x7ff6a839e984,12,NumberPrototypeToPrecision
code-creation,Builtin,2,130681,0x7ff6a839e9a4,328,SameValue
code-creation,Builtin,2,130687,0x7ff6a839eb04,204,SameValueNumbersOnly
code-creation,Builtin,2,130692,0x7ff6a839ebe4,792,Add_Baseline
code-creation,Builtin,2,130698,0x7ff6a839ef04,828,Subtract_Baseline
code-creation,Builtin,2,130703,0x7ff6a839f244,808,Multiply_Baseline
code-creation,Builtin,2,130709,0x7ff6a839f584,832,Divide_Baseline
code-creation,Builtin,2,130714,0x7ff6a839f8e4,764,Modulus_Baseline
code-creation,Builtin,2,130720,0x7ff6a839fbe4,808,Exponentiate_Baseline
code-creation,Builtin,2,130726,0x7ff6a839ff24,708,BitwiseAnd_Baseline
code-creation,Builtin,2,130731,0x7ff6a83a0204,700,BitwiseOr_Baseline
code-creation,Builtin,2,130737,0x7ff6a83a04c4,708,BitwiseXor_Baseline
code-creation,Builtin,2,130742,0x7ff6a83a07a4,720,ShiftLeft_Baseline
code-creation,Builtin,2,130748,0x7ff6a83a0a84,720,ShiftRight_Baseline
code-creation,Builtin,2,130754,0x7ff6a83a0d64,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,130759,0x7ff6a83a10c4,720,Add_WithFeedback
code-creation,Builtin,2,130765,0x7ff6a83a13a4,780,Subtract_WithFeedback
code-creation,Builtin,2,130771,0x7ff6a83a16c4,776,Multiply_WithFeedback
code-creation,Builtin,2,130776,0x7ff6a83a19e4,804,Divide_WithFeedback
code-creation,Builtin,2,130782,0x7ff6a83a1d24,724,Modulus_WithFeedback
code-creation,Builtin,2,130787,0x7ff6a83a2004,764,Exponentiate_WithFeedback
code-creation,Builtin,2,130793,0x7ff6a83a2304,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,130799,0x7ff6a83a25c4,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,130805,0x7ff6a83a2884,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,130810,0x7ff6a83a2b44,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,130816,0x7ff6a83a2e04,692,ShiftRight_WithFeedback
code-creation,Builtin,2,130822,0x7ff6a83a30c4,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,130827,0x7ff6a83a3404,1696,Equal_Baseline
code-creation,Builtin,2,130833,0x7ff6a83a3ac4,908,StrictEqual_Baseline
code-creation,Builtin,2,130839,0x7ff6a83a3e64,1264,LessThan_Baseline
code-creation,Builtin,2,130844,0x7ff6a83a4364,1264,GreaterThan_Baseline
code-creation,Builtin,2,130850,0x7ff6a83a4864,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,130856,0x7ff6a83a4d64,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,130861,0x7ff6a83a5264,1620,Equal_WithFeedback
code-creation,Builtin,2,130867,0x7ff6a83a58c4,940,StrictEqual_WithFeedback
code-creation,Builtin,2,130873,0x7ff6a83a5c84,1240,LessThan_WithFeedback
code-creation,Builtin,2,130879,0x7ff6a83a6164,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,130885,0x7ff6a83a6644,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,130891,0x7ff6a83a6b24,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,130897,0x7ff6a83a7004,332,BitwiseNot_Baseline
code-creation,Builtin,2,130903,0x7ff6a83a7164,460,Decrement_Baseline
code-creation,Builtin,2,130909,0x7ff6a83a7344,464,Increment_Baseline
code-creation,Builtin,2,130916,0x7ff6a83a7524,488,Negate_Baseline
code-creation,Builtin,2,130921,0x7ff6a83a7724,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,130927,0x7ff6a83a7864,440,Decrement_WithFeedback
code-creation,Builtin,2,130932,0x7ff6a83a7a24,444,Increment_WithFeedback
code-creation,Builtin,2,130938,0x7ff6a83a7be4,472,Negate_WithFeedback
code-creation,Builtin,2,130944,0x7ff6a83a7dc4,252,ObjectAssign
code-creation,Builtin,2,130949,0x7ff6a83a7ec4,864,ObjectCreate
code-creation,Builtin,2,130955,0x7ff6a83a8244,12,ObjectDefineGetter
code-creation,Builtin,2,130960,0x7ff6a83a8264,12,ObjectDefineProperties
code-creation,Builtin,2,130966,0x7ff6a83a8284,12,ObjectDefineProperty
code-creation,Builtin,2,130972,0x7ff6a83a82a4,12,ObjectDefineSetter
code-creation,Builtin,2,130977,0x7ff6a83a82c4,1516,ObjectEntries
code-creation,Builtin,2,130983,0x7ff6a83a88c4,12,ObjectFreeze
code-creation,Builtin,2,130988,0x7ff6a83a88e4,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,130994,0x7ff6a83a9ee4,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,131000,0x7ff6a83a9f04,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,131006,0x7ff6a83aa164,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,131012,0x7ff6a83aa184,164,ObjectHasOwn
code-creation,Builtin,2,131017,0x7ff6a83aa244,388,ObjectIs
code-creation,Builtin,2,131023,0x7ff6a83aa3e4,12,ObjectIsFrozen
code-creation,Builtin,2,131028,0x7ff6a83aa404,12,ObjectIsSealed
code-creation,Builtin,2,131034,0x7ff6a83aa424,536,ObjectKeys
code-creation,Builtin,2,131039,0x7ff6a83aa644,12,ObjectLookupGetter
code-creation,Builtin,2,131045,0x7ff6a83aa664,12,ObjectLookupSetter
code-creation,Builtin,2,131050,0x7ff6a83aa684,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,131056,0x7ff6a83aaf84,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,131062,0x7ff6a83ab064,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,131068,0x7ff6a83ab084,12,ObjectPrototypeGetProto
code-creation,Builtin,2,131073,0x7ff6a83ab0a4,12,ObjectPrototypeSetProto
code-creation,Builtin,2,131079,0x7ff6a83ab0c4,12,ObjectSeal
code-creation,Builtin,2,131085,0x7ff6a83ab0e4,1108,ObjectToString
code-creation,Builtin,2,131090,0x7ff6a83ab544,1284,ObjectValues
code-creation,Builtin,2,131096,0x7ff6a83aba64,280,OrdinaryHasInstance
code-creation,Builtin,2,131101,0x7ff6a83abb84,344,InstanceOf
code-creation,Builtin,2,131107,0x7ff6a83abce4,632,InstanceOf_WithFeedback
code-creation,Builtin,2,131113,0x7ff6a83abf64,648,InstanceOf_Baseline
code-creation,Builtin,2,131118,0x7ff6a83ac204,268,ForInEnumerate
code-creation,Builtin,2,131124,0x7ff6a83ac324,148,ForInPrepare
code-creation,Builtin,2,131129,0x7ff6a83ac3c4,2584,ForInFilter
code-creation,Builtin,2,131136,0x7ff6a83acde4,52,ReflectApply
code-creation,Builtin,2,131141,0x7ff6a83ace24,60,ReflectConstruct
code-creation,Builtin,2,131147,0x7ff6a83ace64,12,ReflectDefineProperty
code-creation,Builtin,2,131153,0x7ff6a83ace84,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,131158,0x7ff6a83acea4,12,ReflectOwnKeys
code-creation,Builtin,2,131164,0x7ff6a83acec4,12,ReflectSet
code-creation,Builtin,2,131169,0x7ff6a83acee4,12,RegExpCapture1Getter
code-creation,Builtin,2,131175,0x7ff6a83acf04,12,RegExpCapture2Getter
code-creation,Builtin,2,131180,0x7ff6a83acf24,12,RegExpCapture3Getter
code-creation,Builtin,2,131186,0x7ff6a83acf44,12,RegExpCapture4Getter
code-creation,Builtin,2,131192,0x7ff6a83acf64,12,RegExpCapture5Getter
code-creation,Builtin,2,131197,0x7ff6a83acf84,12,RegExpCapture6Getter
code-creation,Builtin,2,131203,0x7ff6a83acfa4,12,RegExpCapture7Getter
code-creation,Builtin,2,131208,0x7ff6a83acfc4,12,RegExpCapture8Getter
code-creation,Builtin,2,131215,0x7ff6a83acfe4,12,RegExpCapture9Getter
code-creation,Builtin,2,131221,0x7ff6a83ad004,2212,RegExpConstructor
code-creation,Builtin,2,131227,0x7ff6a83ad8c4,12,RegExpInputGetter
code-creation,Builtin,2,131233,0x7ff6a83ad8e4,12,RegExpInputSetter
code-creation,Builtin,2,131238,0x7ff6a83ad904,12,RegExpLastMatchGetter
code-creation,Builtin,2,131244,0x7ff6a83ad924,12,RegExpLastParenGetter
code-creation,Builtin,2,131250,0x7ff6a83ad944,12,RegExpLeftContextGetter
code-creation,Builtin,2,131256,0x7ff6a83ad964,908,RegExpPrototypeCompile
code-creation,Builtin,2,131262,0x7ff6a83add04,12,RegExpPrototypeToString
code-creation,Builtin,2,131267,0x7ff6a83add24,12,RegExpRightContextGetter
code-creation,Builtin,2,131273,0x7ff6a83add44,252,RegExpExecAtom
code-creation,Builtin,2,131279,0x7ff6a83ade44,1040,RegExpExecInternal
code-creation,Builtin,2,131285,0x7ff6a83ae264,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,131291,0x7ff6a83ae284,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,131296,0x7ff6a83ae2a4,2684,SetConstructor
code-creation,Builtin,2,131302,0x7ff6a83aed24,1284,SetPrototypeHas
code-creation,Builtin,2,131308,0x7ff6a83af244,1736,SetPrototypeAdd
code-creation,Builtin,2,131314,0x7ff6a83af924,1476,SetPrototypeDelete
code-creation,Builtin,2,131319,0x7ff6a83aff04,12,SetPrototypeClear
code-creation,Builtin,2,131325,0x7ff6a83aff24,284,SetPrototypeEntries
code-creation,Builtin,2,131331,0x7ff6a83b0044,144,SetPrototypeGetSize
code-creation,Builtin,2,131337,0x7ff6a83b00e4,444,SetPrototypeForEach
code-creation,Builtin,2,131343,0x7ff6a83b02a4,284,SetPrototypeValues
code-creation,Builtin,2,131348,0x7ff6a83b03c4,988,SetIteratorPrototypeNext
code-creation,Builtin,2,131354,0x7ff6a83b07a4,1112,SetOrSetIteratorToList
code-creation,Builtin,2,131360,0x7ff6a83b0c04,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,131366,0x7ff6a83b0c24,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,131372,0x7ff6a83b0c44,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,131378,0x7ff6a83b0c64,1280,AtomicsLoad
code-creation,Builtin,2,131383,0x7ff6a83b1184,1008,AtomicsStore
code-creation,Builtin,2,131389,0x7ff6a83b1584,1704,AtomicsExchange
code-creation,Builtin,2,131394,0x7ff6a83b1c44,2092,AtomicsCompareExchange
code-creation,Builtin,2,131400,0x7ff6a83b2484,1804,AtomicsAdd
code-creation,Builtin,2,131406,0x7ff6a83b2ba4,1804,AtomicsSub
code-creation,Builtin,2,131411,0x7ff6a83b32c4,1804,AtomicsAnd
code-creation,Builtin,2,131416,0x7ff6a83b39e4,1804,AtomicsOr
code-creation,Builtin,2,131422,0x7ff6a83b4104,1804,AtomicsXor
code-creation,Builtin,2,131427,0x7ff6a83b4824,12,AtomicsNotify
code-creation,Builtin,2,131433,0x7ff6a83b4844,12,AtomicsIsLockFree
code-creation,Builtin,2,131438,0x7ff6a83b4864,12,AtomicsWait
code-creation,Builtin,2,131444,0x7ff6a83b4884,12,AtomicsWaitAsync
code-creation,Builtin,2,131449,0x7ff6a83b48a4,12,StringFromCodePoint
code-creation,Builtin,2,131455,0x7ff6a83b48c4,1428,StringFromCharCode
code-creation,Builtin,2,131460,0x7ff6a83b4e64,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,131466,0x7ff6a83b4e84,4360,StringPrototypeMatchAll
code-creation,Builtin,2,131472,0x7ff6a83b5fa4,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,131477,0x7ff6a83b5fc4,1228,StringPrototypeReplace
code-creation,Builtin,2,131483,0x7ff6a83b64a4,2900,StringPrototypeSplit
code-creation,Builtin,2,131489,0x7ff6a83b7004,12,StringRaw
code-creation,Builtin,2,131494,0x7ff6a83b7024,12,SymbolConstructor
code-creation,Builtin,2,131500,0x7ff6a83b7044,12,SymbolFor
code-creation,Builtin,2,131505,0x7ff6a83b7064,12,SymbolKeyFor
code-creation,Builtin,2,131510,0x7ff6a83b7084,88,TypedArrayBaseConstructor
code-creation,Builtin,2,131516,0x7ff6a83b70e4,256,TypedArrayConstructor
code-creation,Builtin,2,131522,0x7ff6a83b7204,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,131528,0x7ff6a83b7224,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,131533,0x7ff6a83b75a4,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,131539,0x7ff6a83b7724,584,TypedArrayPrototypeLength
code-creation,Builtin,2,131545,0x7ff6a83b7984,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,131552,0x7ff6a83b79a4,12,TypedArrayPrototypeFill
code-creation,Builtin,2,131558,0x7ff6a83b79c4,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,131564,0x7ff6a83b79e4,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,131570,0x7ff6a83b7a04,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,131576,0x7ff6a83b7a24,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,131581,0x7ff6a83b7a44,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,131587,0x7ff6a83b7b84,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,131593,0x7ff6a83ba544,792,GenericJSToWasmWrapper
code-creation,Builtin,2,131598,0x7ff6a83ba864,148,WasmCompileLazy
code-creation,Builtin,2,131604,0x7ff6a83ba904,168,WasmDebugBreak
code-creation,Builtin,2,131610,0x7ff6a83ba9c4,16,WasmOnStackReplace
code-creation,Builtin,2,131615,0x7ff6a83ba9e4,140,WasmFloat32ToNumber
code-creation,Builtin,2,131621,0x7ff6a83baa84,152,WasmFloat64ToNumber
code-creation,Builtin,2,131627,0x7ff6a83bab24,4,WasmI32AtomicWait32
code-creation,Builtin,2,131632,0x7ff6a83bab44,4,WasmI64AtomicWait32
code-creation,Builtin,2,131638,0x7ff6a83bab64,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,131644,0x7ff6a83bab84,4320,WeakMapConstructor
code-creation,Builtin,2,131650,0x7ff6a83bbc84,196,WeakMapLookupHashIndex
code-creation,Builtin,2,131655,0x7ff6a83bbd64,220,WeakMapGet
code-creation,Builtin,2,131661,0x7ff6a83bbe44,176,WeakMapPrototypeHas
code-creation,Builtin,2,131666,0x7ff6a83bbf04,204,WeakMapPrototypeSet
code-creation,Builtin,2,131672,0x7ff6a83bbfe4,144,WeakMapPrototypeDelete
code-creation,Builtin,2,131677,0x7ff6a83bc084,2876,WeakSetConstructor
code-creation,Builtin,2,131683,0x7ff6a83bcbc4,176,WeakSetPrototypeHas
code-creation,Builtin,2,131689,0x7ff6a83bcc84,204,WeakSetPrototypeAdd
code-creation,Builtin,2,131694,0x7ff6a83bcd64,144,WeakSetPrototypeDelete
code-creation,Builtin,2,131700,0x7ff6a83bce04,372,WeakCollectionDelete
code-creation,Builtin,2,131706,0x7ff6a83bcf84,764,WeakCollectionSet
code-creation,Builtin,2,131711,0x7ff6a83bd284,296,AsyncGeneratorResolve
code-creation,Builtin,2,131717,0x7ff6a83bd3c4,100,AsyncGeneratorReject
code-creation,Builtin,2,131722,0x7ff6a83bd444,2760,AsyncGeneratorYield
code-creation,Builtin,2,131728,0x7ff6a83bdf24,2872,AsyncGeneratorReturn
code-creation,Builtin,2,131734,0x7ff6a83bea64,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,131739,0x7ff6a83beba4,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,131745,0x7ff6a83bebc4,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,131751,0x7ff6a83befc4,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,131757,0x7ff6a83bf3e4,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,131763,0x7ff6a83bf804,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,131768,0x7ff6a83c02c4,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,131774,0x7ff6a83c0d84,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,131780,0x7ff6a83c0e04,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,131786,0x7ff6a83c0ea4,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,131792,0x7ff6a83c0f24,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,131798,0x7ff6a83c0fa4,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,131804,0x7ff6a83c1024,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,131810,0x7ff6a83c10c4,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,131816,0x7ff6a83c1704,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,131822,0x7ff6a83c1dc4,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,131828,0x7ff6a83c2484,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,131833,0x7ff6a83c2504,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,131840,0x7ff6a83c2604,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,131846,0x7ff6a83c2704,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,131853,0x7ff6a83c27e4,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,131860,0x7ff6a83c2984,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,131866,0x7ff6a83c2b24,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,131873,0x7ff6a83c2c24,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,131879,0x7ff6a83c2d24,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,131886,0x7ff6a83c2e24,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,131892,0x7ff6a83c2fc4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,131898,0x7ff6a83c3164,4,DirectCEntry
code-creation,Builtin,2,131904,0x7ff6a83c3184,1096,StringAdd_CheckNone
code-creation,Builtin,2,131909,0x7ff6a83c35e4,2484,SubString
code-creation,Builtin,2,131915,0x7ff6a83c3fa4,16,StackCheck
code-creation,Builtin,2,131920,0x7ff6a83c3fc4,84,DoubleToI
code-creation,Builtin,2,131925,0x7ff6a83c4024,2236,GetProperty
code-creation,Builtin,2,131931,0x7ff6a83c48e4,2308,GetPropertyWithReceiver
code-creation,Builtin,2,131937,0x7ff6a83c5204,16004,SetProperty
code-creation,Builtin,2,131942,0x7ff6a83c90a4,13480,SetPropertyInLiteral
code-creation,Builtin,2,131948,0x7ff6a83cc564,8,MemCopyUint8Uint8
code-creation,Builtin,2,131955,0x7ff6a83cc584,8,MemMove
code-creation,Builtin,2,131960,0x7ff6a83cc5a4,12,IsTraceCategoryEnabled
code-creation,Builtin,2,131966,0x7ff6a83cc5c4,12,Trace
code-creation,Builtin,2,131971,0x7ff6a83cc5e4,12,FinalizationRegistryUnregister
code-creation,Builtin,2,131977,0x7ff6a83cc604,416,AsyncModuleEvaluate
code-creation,Builtin,2,131983,0x7ff6a83cc7c4,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,131988,0x7ff6a83cc7e4,12,CallAsyncModuleRejected
code-creation,Builtin,2,131994,0x7ff6a83cc804,260,AggregateErrorConstructor
code-creation,Builtin,2,132000,0x7ff6a83cc924,856,ArrayPrototypeAt
code-creation,Builtin,2,132005,0x7ff6a83ccc84,656,ArrayPrototypeConcat
code-creation,Builtin,2,132011,0x7ff6a83ccf24,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,132017,0x7ff6a83ce604,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,132023,0x7ff6a83ce6e4,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,132028,0x7ff6a83ce964,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,132034,0x7ff6a83cf664,1464,ArrayEvery
code-creation,Builtin,2,132040,0x7ff6a83cfc24,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,132048,0x7ff6a83cfd44,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,132054,0x7ff6a83d0124,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,132061,0x7ff6a83d0f24,4260,ArrayFilter
code-creation,Builtin,2,132068,0x7ff6a83d1fe4,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,132075,0x7ff6a83d20c4,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,132081,0x7ff6a83d2104,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,132089,0x7ff6a83d2244,528,ArrayFindLoopContinuation
code-creation,Builtin,2,132095,0x7ff6a83d2464,1460,ArrayPrototypeFind
code-creation,Builtin,2,132101,0x7ff6a83d2a24,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,132107,0x7ff6a83d2b04,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,132113,0x7ff6a83d2b44,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,132119,0x7ff6a83d2c84,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,132125,0x7ff6a83d2ea4,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,132131,0x7ff6a83d3464,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,132138,0x7ff6a83d3644,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,132144,0x7ff6a83d3d04,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,132150,0x7ff6a83d3ee4,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,132156,0x7ff6a83d45a4,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,132162,0x7ff6a83d4684,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,132169,0x7ff6a83d4764,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,132175,0x7ff6a83d53c4,1328,ArrayForEach
code-creation,Builtin,2,132181,0x7ff6a83d5904,3572,ArrayFrom
code-creation,Builtin,2,132187,0x7ff6a83d6704,148,ArrayIsArray
code-creation,Builtin,2,132192,0x7ff6a83d67a4,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,132198,0x7ff6a83d6944,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,132205,0x7ff6a83d6984,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,132211,0x7ff6a83d6a24,312,ConvertToLocaleString
code-creation,Builtin,2,132216,0x7ff6a83d6b64,752,JoinStackPush
code-creation,Builtin,2,132222,0x7ff6a83d6e64,272,JoinStackPop
code-creation,Builtin,2,132227,0x7ff6a83d6f84,6628,ArrayPrototypeJoin
code-creation,Builtin,2,132233,0x7ff6a83d8984,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,132239,0x7ff6a83d9e84,236,ArrayPrototypeToString
code-creation,Builtin,2,132245,0x7ff6a83d9f84,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,132250,0x7ff6a83db6c4,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,132256,0x7ff6a83dc8e4,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,132262,0x7ff6a83dd7e4,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,132268,0x7ff6a83dd904,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,132274,0x7ff6a83dda04,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,132280,0x7ff6a83ddc24,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,132286,0x7ff6a83de8a4,3912,ArrayMap
code-creation,Builtin,2,132291,0x7ff6a83df804,1000,ArrayOf
code-creation,Builtin,2,132297,0x7ff6a83dfc04,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,132303,0x7ff6a83dfdc4,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,132309,0x7ff6a83dfea4,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,132315,0x7ff6a83dff84,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,132321,0x7ff6a83e0c24,2000,ArrayReduceRight
code-creation,Builtin,2,132327,0x7ff6a83e1404,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,132333,0x7ff6a83e14c4,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,132339,0x7ff6a83e15a4,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,132345,0x7ff6a83e1684,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,132351,0x7ff6a83e2344,1604,ArrayReduce
code-creation,Builtin,2,132356,0x7ff6a83e29a4,3216,ArrayPrototypeReverse
code-creation,Builtin,2,132362,0x7ff6a83e3644,3592,ArrayPrototypeShift
code-creation,Builtin,2,132368,0x7ff6a83e4464,5220,ArrayPrototypeSlice
code-creation,Builtin,2,132373,0x7ff6a83e58e4,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,132379,0x7ff6a83e59c4,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,132386,0x7ff6a83e5c24,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,132392,0x7ff6a83e6924,1448,ArraySome
code-creation,Builtin,2,132397,0x7ff6a83e6ee4,14216,ArrayPrototypeSplice
code-creation,Builtin,2,132403,0x7ff6a83ea684,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,132408,0x7ff6a83eb364,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,132414,0x7ff6a83eb4c4,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,132421,0x7ff6a83eb624,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,132426,0x7ff6a83eb704,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,132433,0x7ff6a83eb864,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,132439,0x7ff6a83eb944,96,ArrayBufferIsView
code-creation,Builtin,2,132444,0x7ff6a83eb9c4,396,ToInteger
code-creation,Builtin,2,132450,0x7ff6a83ebb64,3084,FastCreateDataProperty
code-creation,Builtin,2,132455,0x7ff6a83ec784,676,CheckNumberInRange
code-creation,Builtin,2,132461,0x7ff6a83eca44,584,CheckSameObject
code-creation,Builtin,2,132467,0x7ff6a83ecca4,904,BooleanConstructor
code-creation,Builtin,2,132472,0x7ff6a83ed044,164,BooleanPrototypeToString
code-creation,Builtin,2,132478,0x7ff6a83ed104,156,BooleanPrototypeValueOf
code-creation,Builtin,2,132485,0x7ff6a83ed1a4,1184,BigIntAddNoThrow
code-creation,Builtin,2,132491,0x7ff6a83ed664,1280,BigIntAdd
code-creation,Builtin,2,132496,0x7ff6a83edb84,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,132502,0x7ff6a83ee044,1280,BigIntSubtract
code-creation,Builtin,2,132507,0x7ff6a83ee564,284,BigIntUnaryMinus
code-creation,Builtin,2,132513,0x7ff6a83ee684,1360,ToString
code-creation,Builtin,2,132518,0x7ff6a83eebe4,156,StringPrototypeToString
code-creation,Builtin,2,132524,0x7ff6a83eec84,156,StringPrototypeValueOf
code-creation,Builtin,2,132530,0x7ff6a83eed24,2480,StringToList
code-creation,Builtin,2,132535,0x7ff6a83ef6e4,1012,StringPrototypeCharAt
code-creation,Builtin,2,132541,0x7ff6a83efae4,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,132547,0x7ff6a83efda4,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,132553,0x7ff6a83f02c4,400,StringPrototypeConcat
code-creation,Builtin,2,132558,0x7ff6a83f0464,992,StringConstructor
code-creation,Builtin,2,132564,0x7ff6a83f0864,1436,StringAddConvertLeft
code-creation,Builtin,2,132570,0x7ff6a83f0e04,1464,StringAddConvertRight
code-creation,Builtin,2,132575,0x7ff6a83f13c4,816,StringCharAt
code-creation,Builtin,2,132581,0x7ff6a83f1704,16,FastNewClosureBaseline
code-creation,Builtin,2,132587,0x7ff6a83f1724,196,FastNewFunctionContextEval
code-creation,Builtin,2,132592,0x7ff6a83f1804,196,FastNewFunctionContextFunction
code-creation,Builtin,2,132598,0x7ff6a83f18e4,248,CreateRegExpLiteral
code-creation,Builtin,2,132604,0x7ff6a83f19e4,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,132610,0x7ff6a83f1e24,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,132616,0x7ff6a83f2024,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,132622,0x7ff6a83f2704,384,ObjectConstructor
code-creation,Builtin,2,132627,0x7ff6a83f28a4,176,CreateEmptyLiteralObject
code-creation,Builtin,2,132633,0x7ff6a83f2964,536,NumberConstructor
code-creation,Builtin,2,132639,0x7ff6a83f2b84,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,132644,0x7ff6a83f2be4,64,StringToNumber
code-creation,Builtin,2,132650,0x7ff6a83f2c44,184,NonNumberToNumber
code-creation,Builtin,2,132656,0x7ff6a83f2d04,240,NonNumberToNumeric
code-creation,Builtin,2,132661,0x7ff6a83f2e04,36,ToNumeric
code-creation,Builtin,2,132667,0x7ff6a83f2e44,1184,NumberToString
code-creation,Builtin,2,132672,0x7ff6a83f3304,92,ToBoolean
code-creation,Builtin,2,132678,0x7ff6a83f3364,96,ToBooleanForBaselineJump
code-creation,Builtin,2,132683,0x7ff6a83f33e4,728,ToLength
code-creation,Builtin,2,132689,0x7ff6a83f36c4,1312,ToName
code-creation,Builtin,2,132694,0x7ff6a83f3c04,756,ToObject
code-creation,Builtin,2,132699,0x7ff6a83f3f04,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,132705,0x7ff6a83f3fe4,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,132711,0x7ff6a83f40c4,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,132717,0x7ff6a83f41a4,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,132723,0x7ff6a83f42e4,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,132729,0x7ff6a83f4424,216,FastConsoleAssert
code-creation,Builtin,2,132734,0x7ff6a83f4504,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,132740,0x7ff6a83f45c4,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,132746,0x7ff6a83f4724,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,132752,0x7ff6a83f4884,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,132758,0x7ff6a83f4ac4,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,132763,0x7ff6a83f4d04,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,132769,0x7ff6a83f4fa4,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,132775,0x7ff6a83f5244,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,132781,0x7ff6a83f5584,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,132787,0x7ff6a83f5844,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,132792,0x7ff6a83f5ba4,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,132798,0x7ff6a83f5f44,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,132805,0x7ff6a83f6324,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,132812,0x7ff6a83f6724,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,132818,0x7ff6a83f6ae4,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,132824,0x7ff6a83f6ea4,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,132830,0x7ff6a83f72c4,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,132836,0x7ff6a83f76e4,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,132841,0x7ff6a83f7b24,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,132848,0x7ff6a83f7f64,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,132853,0x7ff6a83f8384,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,132859,0x7ff6a83f87e4,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,132865,0x7ff6a83f8ba4,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,132871,0x7ff6a83f8f64,828,FinalizationRegistryConstructor
code-creation,Builtin,2,132877,0x7ff6a83f92a4,1152,FinalizationRegistryRegister
code-creation,Builtin,2,132883,0x7ff6a83f9744,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,132889,0x7ff6a83f99e4,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,132895,0x7ff6a83f9b44,924,FastFunctionPrototypeBind
code-creation,Builtin,2,132901,0x7ff6a83f9ee4,88,IncBlockCounter
code-creation,Builtin,2,132906,0x7ff6a83f9f44,228,GetTemplateObject
code-creation,Builtin,2,132912,0x7ff6a83fa044,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,132918,0x7ff6a83fa064,92,ForInNext
code-creation,Builtin,2,132923,0x7ff6a83fa0c4,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,132929,0x7ff6a83fa164,116,GetIteratorWithFeedback
code-creation,Builtin,2,132935,0x7ff6a83fa1e4,100,GetIteratorBaseline
code-creation,Builtin,2,132941,0x7ff6a83fa264,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,132947,0x7ff6a83fa384,1084,CallIteratorWithFeedback
code-creation,Builtin,2,132952,0x7ff6a83fa7c4,288,MathAbs
code-creation,Builtin,2,132958,0x7ff6a83fa904,428,MathCeil
code-creation,Builtin,2,132963,0x7ff6a83faac4,432,MathFloor
code-creation,Builtin,2,132969,0x7ff6a83fac84,488,MathRound
code-creation,Builtin,2,132974,0x7ff6a83fae84,428,MathTrunc
code-creation,Builtin,2,132979,0x7ff6a83fb044,368,MathPow
code-creation,Builtin,2,132985,0x7ff6a83fb1c4,396,MathMax
code-creation,Builtin,2,132990,0x7ff6a83fb364,404,MathMin
code-creation,Builtin,2,132996,0x7ff6a83fb504,320,MathAcos
code-creation,Builtin,2,133001,0x7ff6a83fb664,320,MathAcosh
code-creation,Builtin,2,133006,0x7ff6a83fb7c4,320,MathAsin
code-creation,Builtin,2,133012,0x7ff6a83fb924,320,MathAsinh
code-creation,Builtin,2,133017,0x7ff6a83fba84,320,MathAtan
code-creation,Builtin,2,133023,0x7ff6a83fbbe4,416,MathAtan2
code-creation,Builtin,2,133028,0x7ff6a83fbda4,320,MathAtanh
code-creation,Builtin,2,133033,0x7ff6a83fbf04,320,MathCbrt
code-creation,Builtin,2,133039,0x7ff6a83fc064,168,MathClz32
code-creation,Builtin,2,133044,0x7ff6a83fc124,320,MathCos
code-creation,Builtin,2,133050,0x7ff6a83fc284,320,MathCosh
code-creation,Builtin,2,133055,0x7ff6a83fc3e4,320,MathExp
code-creation,Builtin,2,133060,0x7ff6a83fc544,320,MathExpm1
code-creation,Builtin,2,133066,0x7ff6a83fc6a4,272,MathFround
code-creation,Builtin,2,133071,0x7ff6a83fc7c4,304,MathImul
code-creation,Builtin,2,133077,0x7ff6a83fc904,320,MathLog
code-creation,Builtin,2,133082,0x7ff6a83fca64,320,MathLog1p
code-creation,Builtin,2,133087,0x7ff6a83fcbc4,320,MathLog10
code-creation,Builtin,2,133093,0x7ff6a83fcd24,320,MathLog2
code-creation,Builtin,2,133098,0x7ff6a83fce84,320,MathSin
code-creation,Builtin,2,133104,0x7ff6a83fcfe4,180,MathSign
code-creation,Builtin,2,133109,0x7ff6a83fd0a4,320,MathSinh
code-creation,Builtin,2,133115,0x7ff6a83fd204,268,MathSqrt
code-creation,Builtin,2,133120,0x7ff6a83fd324,320,MathTan
code-creation,Builtin,2,133126,0x7ff6a83fd484,320,MathTanh
code-creation,Builtin,2,133131,0x7ff6a83fd5e4,1060,MathHypot
code-creation,Builtin,2,133137,0x7ff6a83fda24,332,MathRandom
code-creation,Builtin,2,133143,0x7ff6a83fdb84,2956,NumberPrototypeToString
code-creation,Builtin,2,133149,0x7ff6a83fe724,136,NumberIsFinite
code-creation,Builtin,2,133155,0x7ff6a83fe7c4,340,NumberIsInteger
code-creation,Builtin,2,133161,0x7ff6a83fe924,116,NumberIsNaN
code-creation,Builtin,2,133167,0x7ff6a83fe9a4,372,NumberIsSafeInteger
code-creation,Builtin,2,133172,0x7ff6a83feb24,156,NumberPrototypeValueOf
code-creation,Builtin,2,133178,0x7ff6a83febc4,196,NumberParseFloat
code-creation,Builtin,2,133184,0x7ff6a83feca4,248,ParseInt
code-creation,Builtin,2,133189,0x7ff6a83feda4,84,NumberParseInt
code-creation,Builtin,2,133195,0x7ff6a83fee04,860,Add
code-creation,Builtin,2,133200,0x7ff6a83ff164,424,Subtract
code-creation,Builtin,2,133206,0x7ff6a83ff324,608,Multiply
code-creation,Builtin,2,133211,0x7ff6a83ff5a4,532,Divide
code-creation,Builtin,2,133216,0x7ff6a83ff7c4,592,Modulus
code-creation,Builtin,2,133222,0x7ff6a83ffa24,524,Exponentiate
code-creation,Builtin,2,133227,0x7ff6a83ffc44,344,Negate
code-creation,Builtin,2,133233,0x7ff6a83ffda4,112,BitwiseNot
code-creation,Builtin,2,133238,0x7ff6a83ffe24,112,Decrement
code-creation,Builtin,2,133244,0x7ff6a83ffea4,112,Increment
code-creation,Builtin,2,133249,0x7ff6a83fff24,392,ShiftLeft
code-creation,Builtin,2,133255,0x7ff6a84000c4,392,ShiftRight
code-creation,Builtin,2,133260,0x7ff6a8400264,508,ShiftRightLogical
code-creation,Builtin,2,133266,0x7ff6a8400464,388,BitwiseAnd
code-creation,Builtin,2,133271,0x7ff6a8400604,388,BitwiseOr
code-creation,Builtin,2,133277,0x7ff6a84007a4,388,BitwiseXor
code-creation,Builtin,2,133282,0x7ff6a8400944,796,LessThan
code-creation,Builtin,2,133287,0x7ff6a8400c64,796,LessThanOrEqual
code-creation,Builtin,2,133293,0x7ff6a8400f84,796,GreaterThan
code-creation,Builtin,2,133298,0x7ff6a84012a4,796,GreaterThanOrEqual
code-creation,Builtin,2,133304,0x7ff6a84015c4,860,Equal
code-creation,Builtin,2,133309,0x7ff6a8401924,348,StrictEqual
code-creation,Builtin,2,133315,0x7ff6a8401a84,3132,ObjectFromEntries
code-creation,Builtin,2,133321,0x7ff6a84026c4,756,CreateObjectWithoutProperties
code-creation,Builtin,2,133326,0x7ff6a84029c4,144,ObjectIsExtensible
code-creation,Builtin,2,133332,0x7ff6a8402a64,148,ObjectPreventExtensions
code-creation,Builtin,2,133338,0x7ff6a8402b04,144,ObjectGetPrototypeOf
code-creation,Builtin,2,133343,0x7ff6a8402ba4,300,ObjectSetPrototypeOf
code-creation,Builtin,2,133349,0x7ff6a8402ce4,80,ObjectPrototypeToString
code-creation,Builtin,2,133355,0x7ff6a8402d44,96,ObjectPrototypeValueOf
code-creation,Builtin,2,133361,0x7ff6a8402dc4,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,133366,0x7ff6a8402e84,868,FulfillPromise
code-creation,Builtin,2,133372,0x7ff6a8403204,988,RejectPromise
code-creation,Builtin,2,133378,0x7ff6a84035e4,2416,NewPromiseCapability
code-creation,Builtin,2,133383,0x7ff6a8403f64,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,133389,0x7ff6a8404024,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,133395,0x7ff6a84040c4,1416,PerformPromiseThen
code-creation,Builtin,2,133401,0x7ff6a8404664,648,PromiseReject
code-creation,Builtin,2,133406,0x7ff6a8404904,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,133412,0x7ff6a8404a24,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,133418,0x7ff6a8404aa4,4560,PromiseAll
code-creation,Builtin,2,133424,0x7ff6a8405c84,4880,PromiseAllSettled
code-creation,Builtin,2,133429,0x7ff6a8406fa4,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,133435,0x7ff6a8407404,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,133441,0x7ff6a8407984,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,133447,0x7ff6a8407f04,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,133453,0x7ff6a84083a4,2368,PromiseAny
code-creation,Builtin,2,133459,0x7ff6a8408d04,2908,PromiseConstructor
code-creation,Builtin,2,133464,0x7ff6a8409864,296,PromisePrototypeCatch
code-creation,Builtin,2,133470,0x7ff6a84099a4,88,PromiseValueThunkFinally
code-creation,Builtin,2,133476,0x7ff6a8409a04,84,PromiseThrowerFinally
code-creation,Builtin,2,133481,0x7ff6a8409a64,904,PromiseCatchFinally
code-creation,Builtin,2,133487,0x7ff6a8409e04,904,PromiseThenFinally
code-creation,Builtin,2,133494,0x7ff6a840a1a4,1700,PromisePrototypeFinally
code-creation,Builtin,2,133500,0x7ff6a840a864,1336,PromiseRace
code-creation,Builtin,2,133505,0x7ff6a840ada4,268,PromiseFulfillReactionJob
code-creation,Builtin,2,133512,0x7ff6a840aec4,364,PromiseRejectReactionJob
code-creation,Builtin,2,133518,0x7ff6a840b044,156,PromiseResolveTrampoline
code-creation,Builtin,2,133524,0x7ff6a840b0e4,656,PromiseResolve
code-creation,Builtin,2,133529,0x7ff6a840b384,712,ResolvePromise
code-creation,Builtin,2,133535,0x7ff6a840b664,2224,PromisePrototypeThen
code-creation,Builtin,2,133541,0x7ff6a840bf24,1144,PromiseResolveThenableJob
code-creation,Builtin,2,133546,0x7ff6a840c3a4,448,ProxyConstructor
code-creation,Builtin,2,133552,0x7ff6a840c584,1760,ProxyDeleteProperty
code-creation,Builtin,2,133558,0x7ff6a840cc84,2112,ProxyGetProperty
code-creation,Builtin,2,133563,0x7ff6a840d4e4,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,133569,0x7ff6a840d924,1668,ProxyHasProperty
code-creation,Builtin,2,133574,0x7ff6a840dfc4,760,ProxyIsExtensible
code-creation,Builtin,2,133580,0x7ff6a840e2c4,800,ProxyPreventExtensions
code-creation,Builtin,2,133586,0x7ff6a840e604,1148,ProxyRevocable
code-creation,Builtin,2,133591,0x7ff6a840ea84,120,ProxyRevoke
code-creation,Builtin,2,133597,0x7ff6a840eb04,2216,ProxySetProperty
code-creation,Builtin,2,133602,0x7ff6a840f3c4,1292,ProxySetPrototypeOf
code-creation,Builtin,2,133608,0x7ff6a840f8e4,208,ReflectIsExtensible
code-creation,Builtin,2,133614,0x7ff6a840f9c4,212,ReflectPreventExtensions
code-creation,Builtin,2,133620,0x7ff6a840faa4,188,ReflectGetPrototypeOf
code-creation,Builtin,2,133625,0x7ff6a840fb64,292,ReflectSetPrototypeOf
code-creation,Builtin,2,133631,0x7ff6a840fca4,284,ReflectGet
code-creation,Builtin,2,133636,0x7ff6a840fdc4,160,ReflectDeleteProperty
code-creation,Builtin,2,133642,0x7ff6a840fe84,148,ReflectHas
code-creation,Builtin,2,133647,0x7ff6a840ff24,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,133653,0x7ff6a8411344,5104,RegExpPrototypeExec
code-creation,Builtin,2,133659,0x7ff6a8412744,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,133665,0x7ff6a8413084,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,133671,0x7ff6a8415564,8840,RegExpMatchFast
code-creation,Builtin,2,133676,0x7ff6a8417804,3600,RegExpPrototypeMatch
code-creation,Builtin,2,133682,0x7ff6a8418624,6328,RegExpReplace
code-creation,Builtin,2,133687,0x7ff6a8419ee4,524,RegExpPrototypeReplace
code-creation,Builtin,2,133693,0x7ff6a841a104,1424,RegExpSearchFast
code-creation,Builtin,2,133698,0x7ff6a841a6a4,1640,RegExpPrototypeSearch
code-creation,Builtin,2,133704,0x7ff6a841ad24,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,133710,0x7ff6a841ae04,5872,RegExpSplit
code-creation,Builtin,2,133716,0x7ff6a841c504,476,RegExpPrototypeSplit
code-creation,Builtin,2,133721,0x7ff6a841c6e4,2252,RegExpPrototypeTest
code-creation,Builtin,2,133727,0x7ff6a841cfc4,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,133733,0x7ff6a841d524,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,133738,0x7ff6a841d624,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,133744,0x7ff6a841d724,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,133750,0x7ff6a841d824,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,133756,0x7ff6a841d924,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,133762,0x7ff6a841da24,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,133768,0x7ff6a841db24,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,133774,0x7ff6a841dc44,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,133779,0x7ff6a841dd64,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,133785,0x7ff6a841e644,1500,StringPrototypeAt
code-creation,Builtin,2,133791,0x7ff6a841ec24,3008,StringPrototypeEndsWith
code-creation,Builtin,2,133796,0x7ff6a841f804,480,CreateHTML
code-creation,Builtin,2,133802,0x7ff6a841fa04,164,StringPrototypeAnchor
code-creation,Builtin,2,133808,0x7ff6a841fac4,128,StringPrototypeBig
code-creation,Builtin,2,133813,0x7ff6a841fb64,128,StringPrototypeBlink
code-creation,Builtin,2,133820,0x7ff6a841fc04,128,StringPrototypeBold
code-creation,Builtin,2,133826,0x7ff6a841fca4,168,StringPrototypeFontcolor
code-creation,Builtin,2,133832,0x7ff6a841fd64,168,StringPrototypeFontsize
code-creation,Builtin,2,133837,0x7ff6a841fe24,128,StringPrototypeFixed
code-creation,Builtin,2,133843,0x7ff6a841fec4,128,StringPrototypeItalics
code-creation,Builtin,2,133849,0x7ff6a841ff64,168,StringPrototypeLink
code-creation,Builtin,2,133855,0x7ff6a8420024,128,StringPrototypeSmall
code-creation,Builtin,2,133860,0x7ff6a84200c4,128,StringPrototypeStrike
code-creation,Builtin,2,133866,0x7ff6a8420164,128,StringPrototypeSub
code-creation,Builtin,2,133872,0x7ff6a8420204,128,StringPrototypeSup
code-creation,Builtin,2,133877,0x7ff6a84202a4,1028,StringPrototypeIncludes
code-creation,Builtin,2,133883,0x7ff6a84206c4,628,StringPrototypeIndexOf
code-creation,Builtin,2,133889,0x7ff6a8420944,344,StringPrototypeIterator
code-creation,Builtin,2,133895,0x7ff6a8420aa4,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,133901,0x7ff6a84212a4,1304,StringPrototypeMatch
code-creation,Builtin,2,133906,0x7ff6a84217c4,1304,StringPrototypeSearch
code-creation,Builtin,2,133912,0x7ff6a8421ce4,824,StringPrototypePadStart
code-creation,Builtin,2,133918,0x7ff6a8422024,824,StringPrototypePadEnd
code-creation,Builtin,2,133923,0x7ff6a8422364,120,StringRepeat
code-creation,Builtin,2,133929,0x7ff6a84223e4,400,StringPrototypeRepeat
code-creation,Builtin,2,133935,0x7ff6a8422584,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,133940,0x7ff6a8425144,3388,StringPrototypeSlice
code-creation,Builtin,2,133947,0x7ff6a8425e84,3028,StringPrototypeStartsWith
code-creation,Builtin,2,133953,0x7ff6a8426a64,3328,StringPrototypeSubstr
code-creation,Builtin,2,133959,0x7ff6a8427784,3260,StringPrototypeSubstring
code-creation,Builtin,2,133965,0x7ff6a8428444,6916,StringPrototypeTrim
code-creation,Builtin,2,133970,0x7ff6a8429f64,6332,StringPrototypeTrimStart
code-creation,Builtin,2,133976,0x7ff6a842b824,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,133982,0x7ff6a842cf04,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,133988,0x7ff6a842cfc4,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,133993,0x7ff6a842d064,172,SymbolPrototypeToString
code-creation,Builtin,2,133999,0x7ff6a842d124,156,SymbolPrototypeValueOf
code-creation,Builtin,2,134005,0x7ff6a842d1c4,832,TypedArrayPrototypeAt
code-creation,Builtin,2,134011,0x7ff6a842d524,10064,CreateTypedArray
code-creation,Builtin,2,134016,0x7ff6a842fc84,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,134022,0x7ff6a8430084,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,134028,0x7ff6a8430204,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,134034,0x7ff6a8430fc4,996,TypedArrayPrototypeFind
code-creation,Builtin,2,134040,0x7ff6a84313c4,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,134045,0x7ff6a84317c4,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,134052,0x7ff6a8431984,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,134057,0x7ff6a8431e44,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,134064,0x7ff6a8432004,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,134069,0x7ff6a84324e4,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,134075,0x7ff6a8432864,2352,TypedArrayFrom
code-creation,Builtin,2,134081,0x7ff6a84331a4,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,134087,0x7ff6a8433324,1028,TypedArrayOf
code-creation,Builtin,2,134092,0x7ff6a8433744,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,134098,0x7ff6a8433b04,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,134104,0x7ff6a8433ec4,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,134110,0x7ff6a84348a4,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,134115,0x7ff6a84354a4,992,TypedArrayPrototypeSome
code-creation,Builtin,2,134121,0x7ff6a84358a4,1060,TypedArrayMergeSort
code-creation,Builtin,2,134127,0x7ff6a8435ce4,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,134133,0x7ff6a8436344,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,134140,0x7ff6a8436e04,372,TypedArrayPrototypeValues
code-creation,Builtin,2,134147,0x7ff6a8436f84,952,WeakRefConstructor
code-creation,Builtin,2,134153,0x7ff6a8437344,184,WeakRefDeref
code-creation,Builtin,2,134158,0x7ff6a8437404,680,NewSloppyArgumentsElements
code-creation,Builtin,2,134164,0x7ff6a84376c4,296,NewStrictArgumentsElements
code-creation,Builtin,2,134170,0x7ff6a8437804,320,NewRestArgumentsElements
code-creation,Builtin,2,134176,0x7ff6a8437964,1388,FastNewSloppyArguments
code-creation,Builtin,2,134182,0x7ff6a8437ee4,524,FastNewStrictArguments
code-creation,Builtin,2,134187,0x7ff6a8438104,556,FastNewRestArguments
code-creation,Builtin,2,134193,0x7ff6a8438344,676,StringSlowFlatten
code-creation,Builtin,2,134199,0x7ff6a8438604,2068,StringIndexOf
code-creation,Builtin,2,134204,0x7ff6a8438e24,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,134210,0x7ff6a8438e44,20,TestHelperPlus1
code-creation,Builtin,2,134216,0x7ff6a8438e64,20,TestHelperPlus2
code-creation,Builtin,2,134221,0x7ff6a8438e84,96,NewSmiBox
code-creation,Builtin,2,134227,0x7ff6a8438f04,24,ReturnTwoValues
code-creation,Builtin,2,134232,0x7ff6a8438f24,32,Load_FastSmiElements_0
code-creation,Builtin,2,134238,0x7ff6a8438f64,32,Load_FastObjectElements_0
code-creation,Builtin,2,134244,0x7ff6a8438fa4,144,Load_FastDoubleElements_0
code-creation,Builtin,2,134249,0x7ff6a8439044,32,Store_FastSmiElements_0
code-creation,Builtin,2,134255,0x7ff6a8439084,96,Store_FastObjectElements_0
code-creation,Builtin,2,134261,0x7ff6a8439104,48,Store_FastDoubleElements_0
code-creation,Builtin,2,134267,0x7ff6a8439144,36,Delete_FastSmiElements_0
code-creation,Builtin,2,134272,0x7ff6a8439184,36,Delete_FastObjectElements_0
code-creation,Builtin,2,134278,0x7ff6a84391c4,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,134284,0x7ff6a8439204,308,SortCompareDefault
code-creation,Builtin,2,134290,0x7ff6a8439344,92,SortCompareUserFn
code-creation,Builtin,2,134295,0x7ff6a84393a4,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,134301,0x7ff6a84393c4,312,Copy
code-creation,Builtin,2,134307,0x7ff6a8439504,5776,MergeAt
code-creation,Builtin,2,134312,0x7ff6a843aba4,792,GallopLeft
code-creation,Builtin,2,134317,0x7ff6a843aec4,832,GallopRight
code-creation,Builtin,2,134323,0x7ff6a843b224,3832,ArrayTimSort
code-creation,Builtin,2,134329,0x7ff6a843c124,2112,ArrayPrototypeSort
code-creation,Builtin,2,134335,0x7ff6a843c984,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,134341,0x7ff6a843ca04,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,134347,0x7ff6a843ca84,76,WasmTaggedToFloat64
code-creation,Builtin,2,134353,0x7ff6a843cae4,72,WasmMemoryGrow
code-creation,Builtin,2,134358,0x7ff6a843cb44,100,WasmTableInit
code-creation,Builtin,2,134364,0x7ff6a843cbc4,100,WasmTableCopy
code-creation,Builtin,2,134369,0x7ff6a843cc44,84,WasmTableFill
code-creation,Builtin,2,134375,0x7ff6a843cca4,72,WasmTableGrow
code-creation,Builtin,2,134380,0x7ff6a843cd04,144,WasmTableGet
code-creation,Builtin,2,134386,0x7ff6a843cda4,236,WasmTableSet
code-creation,Builtin,2,134391,0x7ff6a843cea4,88,WasmRefFunc
code-creation,Builtin,2,134397,0x7ff6a843cf04,144,WasmAllocateFixedArray
code-creation,Builtin,2,134402,0x7ff6a843cfa4,44,WasmThrow
code-creation,Builtin,2,134408,0x7ff6a843cfe4,52,WasmRethrow
code-creation,Builtin,2,134413,0x7ff6a843d024,44,WasmTriggerTierUp
code-creation,Builtin,2,134419,0x7ff6a843d064,32,WasmStackGuard
code-creation,Builtin,2,134424,0x7ff6a843d0a4,32,WasmStackOverflow
code-creation,Builtin,2,134430,0x7ff6a843d0e4,40,WasmTraceMemory
code-creation,Builtin,2,134436,0x7ff6a843d124,32,WasmTraceEnter
code-creation,Builtin,2,134441,0x7ff6a843d164,40,WasmTraceExit
code-creation,Builtin,2,134446,0x7ff6a843d1a4,332,WasmAllocateJSArray
code-creation,Builtin,2,134452,0x7ff6a843d304,104,WasmAllocatePair
code-creation,Builtin,2,134458,0x7ff6a843d384,64,WasmAllocateRtt
code-creation,Builtin,2,134463,0x7ff6a843d3e4,72,WasmAllocateFreshRtt
code-creation,Builtin,2,134469,0x7ff6a843d444,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,134475,0x7ff6a843d4c4,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,134482,0x7ff6a843d564,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,134488,0x7ff6a843d624,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,134494,0x7ff6a843d6e4,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,134500,0x7ff6a843d764,60,WasmArrayCopy
code-creation,Builtin,2,134505,0x7ff6a843d7a4,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,134511,0x7ff6a843d8a4,52,WasmSubtypeCheck
code-creation,Builtin,2,134517,0x7ff6a843d8e4,8,WasmInt32ToNumber
code-creation,Builtin,2,134522,0x7ff6a843d904,116,WasmUint32ToNumber
code-creation,Builtin,2,134528,0x7ff6a843d984,144,UintPtr53ToNumber
code-creation,Builtin,2,134533,0x7ff6a843da24,96,WasmAtomicNotify
code-creation,Builtin,2,134539,0x7ff6a843daa4,116,WasmI32AtomicWait64
code-creation,Builtin,2,134545,0x7ff6a843db24,116,WasmI64AtomicWait64
code-creation,Builtin,2,134550,0x7ff6a843dba4,580,WasmGetOwnProperty
code-creation,Builtin,2,134556,0x7ff6a843de04,40,WasmTrap
code-creation,Builtin,2,134562,0x7ff6a843de44,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,134567,0x7ff6a843de64,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,134573,0x7ff6a843de84,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,134580,0x7ff6a843dea4,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,134585,0x7ff6a843dec4,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,134591,0x7ff6a843dee4,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,134597,0x7ff6a843df04,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,134603,0x7ff6a843df24,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,134609,0x7ff6a843df44,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,134615,0x7ff6a843df64,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,134621,0x7ff6a843df84,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,134627,0x7ff6a843dfa4,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,134633,0x7ff6a843dfc4,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,134638,0x7ff6a843dfe4,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,134644,0x7ff6a843e004,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,134650,0x7ff6a843e024,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,134656,0x7ff6a843e044,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,134662,0x7ff6a843e104,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,134668,0x7ff6a843e124,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,134674,0x7ff6a843e1a4,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,134680,0x7ff6a843e224,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,134686,0x7ff6a843e244,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,134692,0x7ff6a843e324,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,134699,0x7ff6a843e424,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,134705,0x7ff6a843e444,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,134711,0x7ff6a843e464,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,134717,0x7ff6a843e484,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,134722,0x7ff6a843e4a4,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,134729,0x7ff6a843e544,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,134734,0x7ff6a843e564,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,134740,0x7ff6a843e5a4,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,134746,0x7ff6a843e5e4,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,134752,0x7ff6a843e624,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,134758,0x7ff6a843f0a4,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,134764,0x7ff6a843f0c4,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,134770,0x7ff6a843f104,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,134776,0x7ff6a843f124,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,134782,0x7ff6a843f1e4,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,134789,0x7ff6a843f2a4,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,134796,0x7ff6a843f324,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,134802,0x7ff6a843f364,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,134808,0x7ff6a843f404,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,134814,0x7ff6a843f484,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,134820,0x7ff6a843f4a4,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,134826,0x7ff6a843f544,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,134833,0x7ff6a843f564,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,134839,0x7ff6a843f584,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,134845,0x7ff6a843f804,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,134851,0x7ff6a843f8e4,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,134857,0x7ff6a843f924,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,134864,0x7ff6a843fa04,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,134870,0x7ff6a843fb04,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,134876,0x7ff6a843fb44,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,134882,0x7ff6a843fc24,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,134888,0x7ff6a843fc44,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,134894,0x7ff6a843fc64,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,134900,0x7ff6a843fd24,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,134906,0x7ff6a843fd44,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,134912,0x7ff6a843fd64,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,134918,0x7ff6a843fe24,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,134924,0x7ff6a843fe44,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,134930,0x7ff6a843fe64,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,134936,0x7ff6a843ff24,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,134942,0x7ff6a843ff44,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,134948,0x7ff6a843ff64,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,134954,0x7ff6a8440024,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,134960,0x7ff6a84400c4,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,134966,0x7ff6a8440184,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,134974,0x7ff6a8440244,12,CollatorConstructor
code-creation,Builtin,2,134979,0x7ff6a8440264,12,CollatorInternalCompare
code-creation,Builtin,2,134985,0x7ff6a8440284,12,CollatorPrototypeCompare
code-creation,Builtin,2,134991,0x7ff6a84402a4,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,134997,0x7ff6a84402c4,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,135002,0x7ff6a84402e4,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,135008,0x7ff6a8440304,12,DatePrototypeToLocaleString
code-creation,Builtin,2,135014,0x7ff6a8440324,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,135020,0x7ff6a8440344,12,DateTimeFormatConstructor
code-creation,Builtin,2,135026,0x7ff6a8440364,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,135033,0x7ff6a8440384,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,135040,0x7ff6a84403a4,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,135046,0x7ff6a84403c4,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,135053,0x7ff6a84403e4,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,135061,0x7ff6a8440404,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,135067,0x7ff6a8440424,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,135073,0x7ff6a8440444,12,DisplayNamesConstructor
code-creation,Builtin,2,135079,0x7ff6a8440464,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,135085,0x7ff6a8440484,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,135091,0x7ff6a84404a4,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,135097,0x7ff6a84404c4,12,IntlGetCanonicalLocales
code-creation,Builtin,2,135103,0x7ff6a84404e4,12,ListFormatConstructor
code-creation,Builtin,2,135109,0x7ff6a8440504,224,ListFormatPrototypeFormat
code-creation,Builtin,2,135114,0x7ff6a8440604,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,135120,0x7ff6a8440704,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,135126,0x7ff6a8440724,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,135132,0x7ff6a8440744,12,LocaleConstructor
code-creation,Builtin,2,135139,0x7ff6a8440764,12,LocalePrototypeBaseName
code-creation,Builtin,2,135145,0x7ff6a8440784,12,LocalePrototypeCalendar
code-creation,Builtin,2,135212,0x7ff6a84407a4,12,LocalePrototypeCalendars
code-creation,Builtin,2,135224,0x7ff6a84407c4,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,135236,0x7ff6a84407e4,12,LocalePrototypeCollation
code-creation,Builtin,2,135247,0x7ff6a8440804,12,LocalePrototypeCollations
code-creation,Builtin,2,135255,0x7ff6a8440824,12,LocalePrototypeHourCycle
code-creation,Builtin,2,135270,0x7ff6a8440844,12,LocalePrototypeHourCycles
code-creation,Builtin,2,135286,0x7ff6a8440864,12,LocalePrototypeLanguage
code-creation,Builtin,2,135295,0x7ff6a8440884,12,LocalePrototypeMaximize
code-creation,Builtin,2,135303,0x7ff6a84408a4,12,LocalePrototypeMinimize
code-creation,Builtin,2,135313,0x7ff6a84408c4,12,LocalePrototypeNumeric
code-creation,Builtin,2,135321,0x7ff6a84408e4,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,135331,0x7ff6a8440904,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,135339,0x7ff6a8440924,12,LocalePrototypeRegion
code-creation,Builtin,2,135348,0x7ff6a8440944,12,LocalePrototypeScript
code-creation,Builtin,2,135357,0x7ff6a8440964,12,LocalePrototypeTextInfo
code-creation,Builtin,2,135367,0x7ff6a8440984,12,LocalePrototypeTimeZones
code-creation,Builtin,2,135375,0x7ff6a84409a4,12,LocalePrototypeToString
code-creation,Builtin,2,135385,0x7ff6a84409c4,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,135394,0x7ff6a84409e4,12,NumberFormatConstructor
code-creation,Builtin,2,135403,0x7ff6a8440a04,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,135412,0x7ff6a8440a24,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,135421,0x7ff6a8440a44,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,135431,0x7ff6a8440a64,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,135440,0x7ff6a8440a84,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,135450,0x7ff6a8440aa4,12,PluralRulesConstructor
code-creation,Builtin,2,135460,0x7ff6a8440ac4,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,135471,0x7ff6a8440ae4,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,135480,0x7ff6a8440b04,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,135490,0x7ff6a8440b24,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,135499,0x7ff6a8440b44,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,135509,0x7ff6a8440b64,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,135519,0x7ff6a8440b84,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,135528,0x7ff6a8440ba4,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,135539,0x7ff6a8440bc4,12,SegmenterConstructor
code-creation,Builtin,2,135548,0x7ff6a8440be4,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,135558,0x7ff6a8440c04,12,SegmenterPrototypeSegment
code-creation,Builtin,2,135568,0x7ff6a8440c24,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,135577,0x7ff6a8440c44,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,135587,0x7ff6a8440c64,12,SegmentsPrototypeContaining
code-creation,Builtin,2,135596,0x7ff6a8440c84,12,SegmentsPrototypeIterator
code-creation,Builtin,2,135605,0x7ff6a8440ca4,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,135617,0x7ff6a8440cc4,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,135629,0x7ff6a8440ce4,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,135639,0x7ff6a8440d04,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,135649,0x7ff6a8440de4,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,135658,0x7ff6a8440e04,636,StringToLowerCaseIntl
code-creation,Builtin,2,135668,0x7ff6a8441084,12,V8BreakIteratorConstructor
code-creation,Builtin,2,135677,0x7ff6a84410a4,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,135687,0x7ff6a84410c4,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,135695,0x7ff6a84410e4,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,135706,0x7ff6a8441104,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,135715,0x7ff6a8441124,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,135724,0x7ff6a8441144,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,135736,0x7ff6a8441164,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,135747,0x7ff6a8441184,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,135756,0x7ff6a84411a4,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,135765,0x7ff6a84411c4,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,135774,0x7ff6a84411e4,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,135782,0x7ff6a8441204,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,135791,0x7ff6a8441224,24,Wide
code-creation,BytecodeHandler,0,135799,0x7ff6a8441244,24,ExtraWide
code-creation,BytecodeHandler,0,135808,0x7ff6a8441264,104,DebugBreakWide
code-creation,BytecodeHandler,0,135816,0x7ff6a84412e4,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,135825,0x7ff6a8441364,164,DebugBreak0
code-creation,BytecodeHandler,0,135833,0x7ff6a8441424,104,DebugBreak1
code-creation,BytecodeHandler,0,135841,0x7ff6a84414a4,104,DebugBreak2
code-creation,BytecodeHandler,0,135849,0x7ff6a8441524,104,DebugBreak3
code-creation,BytecodeHandler,0,135857,0x7ff6a84415a4,104,DebugBreak4
code-creation,BytecodeHandler,0,135865,0x7ff6a8441624,104,DebugBreak5
code-creation,BytecodeHandler,0,135873,0x7ff6a84416a4,104,DebugBreak6
code-creation,BytecodeHandler,0,135882,0x7ff6a8441724,32,Ldar
code-creation,BytecodeHandler,0,135889,0x7ff6a8441764,68,LdaZero
code-creation,BytecodeHandler,0,135898,0x7ff6a84417c4,76,LdaSmi
code-creation,BytecodeHandler,0,135906,0x7ff6a8441824,68,LdaUndefined
code-creation,BytecodeHandler,0,135914,0x7ff6a8441884,68,LdaNull
code-creation,BytecodeHandler,0,135922,0x7ff6a84418e4,68,LdaTheHole
code-creation,BytecodeHandler,0,135931,0x7ff6a8441944,20,LdaTrue
code-creation,BytecodeHandler,0,135938,0x7ff6a8441964,20,LdaFalse
code-creation,BytecodeHandler,0,135946,0x7ff6a8441984,76,LdaConstant
code-creation,BytecodeHandler,0,135954,0x7ff6a84419e4,132,LdaContextSlot
code-creation,BytecodeHandler,0,135962,0x7ff6a8441a84,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,135971,0x7ff6a8441b24,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,135979,0x7ff6a8441b84,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,135988,0x7ff6a8441be4,32,Star
code-creation,BytecodeHandler,0,135996,0x7ff6a8441c24,40,Mov
code-creation,BytecodeHandler,0,136004,0x7ff6a8441c64,40,PushContext
code-creation,BytecodeHandler,0,136013,0x7ff6a8441ca4,36,PopContext
code-creation,BytecodeHandler,0,136020,0x7ff6a8441ce4,48,TestReferenceEqual
code-creation,BytecodeHandler,0,136028,0x7ff6a8441d24,52,TestUndetectable
code-creation,BytecodeHandler,0,136036,0x7ff6a8441d64,36,TestNull
code-creation,BytecodeHandler,0,136043,0x7ff6a8441da4,36,TestUndefined
code-creation,BytecodeHandler,0,136050,0x7ff6a8441de4,336,TestTypeOf
code-creation,BytecodeHandler,0,136057,0x7ff6a8441f44,6036,LdaGlobal
code-creation,BytecodeHandler,0,136065,0x7ff6a84436e4,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,136073,0x7ff6a84448a4,168,StaGlobal
code-creation,BytecodeHandler,0,136080,0x7ff6a8444964,160,StaContextSlot
code-creation,BytecodeHandler,0,136088,0x7ff6a8444a24,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,136099,0x7ff6a8444aa4,124,LdaLookupSlot
code-creation,BytecodeHandler,0,136108,0x7ff6a8444b24,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,136116,0x7ff6a8444c24,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,136124,0x7ff6a8445ee4,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,136133,0x7ff6a8445f64,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,136142,0x7ff6a8446064,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,136153,0x7ff6a8447304,220,StaLookupSlot
code-creation,BytecodeHandler,0,136161,0x7ff6a84473e4,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,136169,0x7ff6a8448864,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,136177,0x7ff6a8448924,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,136185,0x7ff6a8448a04,160,LdaModuleVariable
code-creation,BytecodeHandler,0,136192,0x7ff6a8448ac4,292,StaModuleVariable
code-creation,BytecodeHandler,0,136200,0x7ff6a8448c04,172,StaNamedProperty
code-creation,BytecodeHandler,0,136207,0x7ff6a8448cc4,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,136215,0x7ff6a8448d84,164,StaKeyedProperty
code-creation,BytecodeHandler,0,136223,0x7ff6a8448e44,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,136230,0x7ff6a8448f04,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,136239,0x7ff6a8448fe4,160,CollectTypeProfile
code-creation,BytecodeHandler,0,136246,0x7ff6a84490a4,1028,Add
code-creation,BytecodeHandler,0,136254,0x7ff6a84494c4,1064,Sub
code-creation,BytecodeHandler,0,136261,0x7ff6a8449904,1024,Mul
code-creation,BytecodeHandler,0,136268,0x7ff6a8449d24,988,Div
code-creation,BytecodeHandler,0,136275,0x7ff6a844a104,912,Mod
code-creation,BytecodeHandler,0,136282,0x7ff6a844a4a4,964,Exp
code-creation,BytecodeHandler,0,136289,0x7ff6a844a884,876,BitwiseOr
code-creation,BytecodeHandler,0,136297,0x7ff6a844ac04,888,BitwiseXor
code-creation,BytecodeHandler,0,136304,0x7ff6a844af84,888,BitwiseAnd
code-creation,BytecodeHandler,0,136311,0x7ff6a844b304,900,ShiftLeft
code-creation,BytecodeHandler,0,136319,0x7ff6a844b6a4,900,ShiftRight
code-creation,BytecodeHandler,0,136325,0x7ff6a844ba44,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,136333,0x7ff6a844be44,960,AddSmi
code-creation,BytecodeHandler,0,136341,0x7ff6a844c224,1000,SubSmi
code-creation,BytecodeHandler,0,136348,0x7ff6a844c624,916,MulSmi
code-creation,BytecodeHandler,0,136355,0x7ff6a844c9c4,920,DivSmi
code-creation,BytecodeHandler,0,136362,0x7ff6a844cd64,816,ModSmi
code-creation,BytecodeHandler,0,136369,0x7ff6a844d0a4,872,ExpSmi
code-creation,BytecodeHandler,0,136377,0x7ff6a844d424,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,136384,0x7ff6a844d624,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,136392,0x7ff6a844d824,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,136400,0x7ff6a844da24,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,136407,0x7ff6a844dc24,488,ShiftRightSmi
code-creation,BytecodeHandler,0,136415,0x7ff6a844de24,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,136423,0x7ff6a844e0c4,656,Inc
code-creation,BytecodeHandler,0,136430,0x7ff6a844e364,656,Dec
code-creation,BytecodeHandler,0,136437,0x7ff6a844e604,640,Negate
code-creation,BytecodeHandler,0,136445,0x7ff6a844e8a4,480,BitwiseNot
code-creation,BytecodeHandler,0,136452,0x7ff6a844eaa4,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,136459,0x7ff6a844eb24,36,LogicalNot
code-creation,BytecodeHandler,0,136466,0x7ff6a844eb64,208,TypeOf
code-creation,BytecodeHandler,0,136473,0x7ff6a844ec44,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,136481,0x7ff6a844ecc4,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,136489,0x7ff6a844ed44,40,GetSuperConstructor
code-creation,BytecodeHandler,0,136496,0x7ff6a844ed84,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,136504,0x7ff6a844f204,1132,CallProperty
code-creation,BytecodeHandler,0,136511,0x7ff6a844f684,1012,CallProperty0
code-creation,BytecodeHandler,0,136519,0x7ff6a844fa84,1028,CallProperty1
code-creation,BytecodeHandler,0,136526,0x7ff6a844fea4,1040,CallProperty2
code-creation,BytecodeHandler,0,136537,0x7ff6a84502c4,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,136547,0x7ff6a84506c4,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,136557,0x7ff6a8450ae4,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,136567,0x7ff6a8450ee4,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,136578,0x7ff6a8451304,1132,CallWithSpread
code-creation,BytecodeHandler,0,136588,0x7ff6a8451784,124,CallRuntime
code-creation,BytecodeHandler,0,136597,0x7ff6a8451804,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,136605,0x7ff6a84518a4,80,CallJSRuntime
code-creation,BytecodeHandler,0,136612,0x7ff6a8451904,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,136620,0x7ff6a8451de4,1020,Construct
code-creation,BytecodeHandler,0,136628,0x7ff6a84521e4,536,ConstructWithSpread
code-creation,BytecodeHandler,0,136636,0x7ff6a8452404,1936,TestEqual
code-creation,BytecodeHandler,0,136643,0x7ff6a8452ba4,1064,TestEqualStrict
code-creation,BytecodeHandler,0,136651,0x7ff6a8452fe4,1624,TestLessThan
code-creation,BytecodeHandler,0,136658,0x7ff6a8453644,1624,TestGreaterThan
code-creation,BytecodeHandler,0,136665,0x7ff6a8453ca4,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,136673,0x7ff6a8454304,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,136680,0x7ff6a8454964,860,TestInstanceOf
code-creation,BytecodeHandler,0,136687,0x7ff6a8454cc4,156,TestIn
code-creation,BytecodeHandler,0,136694,0x7ff6a8454d64,112,ToName
code-creation,BytecodeHandler,0,136702,0x7ff6a8454de4,212,ToNumber
code-creation,BytecodeHandler,0,136709,0x7ff6a8454ec4,232,ToNumeric
code-creation,BytecodeHandler,0,136717,0x7ff6a8454fc4,112,ToObject
code-creation,BytecodeHandler,0,136724,0x7ff6a8455044,116,ToString
code-creation,BytecodeHandler,0,136733,0x7ff6a84550c4,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,136740,0x7ff6a8455264,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,136747,0x7ff6a8455824,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,136756,0x7ff6a8455884,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,136768,0x7ff6a8455ba4,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,137105,0x7ff6a8456404,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,137124,0x7ff6a8456504,168,CloneObject
code-creation,BytecodeHandler,0,137132,0x7ff6a84565c4,212,GetTemplateObject
code-creation,BytecodeHandler,0,137141,0x7ff6a84566a4,328,CreateClosure
code-creation,BytecodeHandler,0,137149,0x7ff6a8456804,120,CreateBlockContext
code-creation,BytecodeHandler,0,137157,0x7ff6a8456884,132,CreateCatchContext
code-creation,BytecodeHandler,0,137164,0x7ff6a8456924,256,CreateFunctionContext
code-creation,BytecodeHandler,0,137172,0x7ff6a8456a44,256,CreateEvalContext
code-creation,BytecodeHandler,0,137180,0x7ff6a8456b64,132,CreateWithContext
code-creation,BytecodeHandler,0,137187,0x7ff6a8456c04,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,137195,0x7ff6a8457244,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,137203,0x7ff6a84574a4,632,CreateRestParameter
code-creation,BytecodeHandler,0,137210,0x7ff6a8457724,424,JumpLoop
code-creation,BytecodeHandler,0,137217,0x7ff6a84578e4,44,Jump
code-creation,BytecodeHandler,0,137225,0x7ff6a8457924,56,JumpConstant
code-creation,BytecodeHandler,0,137233,0x7ff6a8457964,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,137240,0x7ff6a84579c4,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,137248,0x7ff6a8457a24,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,137255,0x7ff6a8457a84,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,137262,0x7ff6a8457ae4,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,137269,0x7ff6a8457b44,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,137277,0x7ff6a8457ba4,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,137284,0x7ff6a8457c04,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,137292,0x7ff6a8457c64,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,137300,0x7ff6a8457d04,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,137310,0x7ff6a8457da4,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,137319,0x7ff6a8457e44,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,137327,0x7ff6a8457ee4,64,JumpIfTrue
code-creation,BytecodeHandler,0,137335,0x7ff6a8457f44,64,JumpIfFalse
code-creation,BytecodeHandler,0,137342,0x7ff6a8457fa4,64,JumpIfNull
code-creation,BytecodeHandler,0,137350,0x7ff6a8458004,64,JumpIfNotNull
code-creation,BytecodeHandler,0,137358,0x7ff6a8458064,64,JumpIfUndefined
code-creation,BytecodeHandler,0,137365,0x7ff6a84580c4,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,137374,0x7ff6a8458124,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,137382,0x7ff6a8458184,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,137389,0x7ff6a84581e4,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,137397,0x7ff6a8458264,464,ForInEnumerate
code-creation,BytecodeHandler,0,137404,0x7ff6a8458444,252,ForInPrepare
code-creation,BytecodeHandler,0,137412,0x7ff6a8458544,60,ForInContinue
code-creation,BytecodeHandler,0,137419,0x7ff6a8458584,256,ForInNext
code-creation,BytecodeHandler,0,137427,0x7ff6a84586a4,48,ForInStep
code-creation,BytecodeHandler,0,137435,0x7ff6a84586e4,36,SetPendingMessage
code-creation,BytecodeHandler,0,137443,0x7ff6a8458724,116,Throw
code-creation,BytecodeHandler,0,137451,0x7ff6a84587a4,116,ReThrow
code-creation,BytecodeHandler,0,137459,0x7ff6a8458824,112,Return
code-creation,BytecodeHandler,0,137467,0x7ff6a84588a4,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,137475,0x7ff6a8458984,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,137485,0x7ff6a8458a24,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,137495,0x7ff6a8458ac4,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,137504,0x7ff6a8458b64,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,137512,0x7ff6a8458be4,512,SuspendGenerator
code-creation,BytecodeHandler,0,137520,0x7ff6a8458e04,128,ResumeGenerator
code-creation,BytecodeHandler,0,137528,0x7ff6a8458ea4,152,GetIterator
tick,0x7ff6a88e38f2,137537,0,0x0,6
code-creation,BytecodeHandler,0,137557,0x7ff6a8458f44,116,Debugger
code-creation,BytecodeHandler,0,137585,0x7ff6a8458fc4,124,IncBlockCounter
code-creation,BytecodeHandler,0,137592,0x7ff6a8459044,56,Abort
code-creation,BytecodeHandler,0,137599,0x7ff6a8459084,32,Star0
code-creation,BytecodeHandler,0,137605,0x7ff6a84590c4,60,Illegal
code-creation,BytecodeHandler,0,137613,0x7ff6a8459104,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,137619,0x7ff6a8459184,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,137626,0x7ff6a8459204,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,137633,0x7ff6a8459284,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,137640,0x7ff6a8459304,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,137647,0x7ff6a8459384,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,137654,0x7ff6a8459404,32,Ldar.Wide
code-creation,BytecodeHandler,0,137661,0x7ff6a8459444,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,137668,0x7ff6a8459484,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,137675,0x7ff6a84594c4,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,137682,0x7ff6a8459524,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,137689,0x7ff6a8459584,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,137697,0x7ff6a84595c4,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,137704,0x7ff6a8459604,32,Star.Wide
code-creation,BytecodeHandler,0,137710,0x7ff6a8459644,40,Mov.Wide
code-creation,BytecodeHandler,0,137716,0x7ff6a8459684,40,PushContext.Wide
code-creation,BytecodeHandler,0,137723,0x7ff6a84596c4,36,PopContext.Wide
code-creation,BytecodeHandler,0,137730,0x7ff6a8459704,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,137737,0x7ff6a8459744,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,137743,0x7ff6a845a984,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,137750,0x7ff6a845bb84,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,137760,0x7ff6a845bc44,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,137769,0x7ff6a845bd04,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,137776,0x7ff6a845bd84,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,137783,0x7ff6a845be24,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,137789,0x7ff6a845bf24,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,137797,0x7ff6a845d224,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,137805,0x7ff6a845d2c4,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,137812,0x7ff6a845d3c4,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,137819,0x7ff6a845e6a4,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,137827,0x7ff6a845e784,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,137834,0x7ff6a845fc04,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,137842,0x7ff6a845fcc4,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,137849,0x7ff6a845fd84,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,137855,0x7ff6a845fe44,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,137863,0x7ff6a845ff84,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,137869,0x7ff6a8460044,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,137876,0x7ff6a8460104,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,137883,0x7ff6a84601c4,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,137889,0x7ff6a8460284,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,137896,0x7ff6a8460364,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,137903,0x7ff6a8460424,984,Add.Wide
code-creation,BytecodeHandler,0,137909,0x7ff6a8460804,1020,Sub.Wide
code-creation,BytecodeHandler,0,137915,0x7ff6a8460c04,972,Mul.Wide
code-creation,BytecodeHandler,0,137922,0x7ff6a8460fe4,988,Div.Wide
code-creation,BytecodeHandler,0,137928,0x7ff6a84613c4,916,Mod.Wide
code-creation,BytecodeHandler,0,137935,0x7ff6a8461764,988,Exp.Wide
code-creation,BytecodeHandler,0,137941,0x7ff6a8461b44,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,137948,0x7ff6a8461ee4,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,137954,0x7ff6a8462284,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,137961,0x7ff6a8462624,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,137968,0x7ff6a84629e4,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,137974,0x7ff6a8462da4,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,137981,0x7ff6a84631c4,916,AddSmi.Wide
code-creation,BytecodeHandler,0,137987,0x7ff6a8463564,960,SubSmi.Wide
code-creation,BytecodeHandler,0,137993,0x7ff6a8463944,912,MulSmi.Wide
code-creation,BytecodeHandler,0,138000,0x7ff6a8463ce4,920,DivSmi.Wide
code-creation,BytecodeHandler,0,138006,0x7ff6a8464084,816,ModSmi.Wide
code-creation,BytecodeHandler,0,138012,0x7ff6a84643c4,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,138019,0x7ff6a8464744,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,138026,0x7ff6a8464944,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,138033,0x7ff6a8464b44,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,138039,0x7ff6a8464d44,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,138046,0x7ff6a8464f44,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,138053,0x7ff6a8465144,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,138059,0x7ff6a84653e4,616,Inc.Wide
code-creation,BytecodeHandler,0,138066,0x7ff6a8465664,616,Dec.Wide
code-creation,BytecodeHandler,0,138073,0x7ff6a84658e4,648,Negate.Wide
code-creation,BytecodeHandler,0,138079,0x7ff6a8465b84,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,138087,0x7ff6a8465d84,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,138094,0x7ff6a8465e04,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,138101,0x7ff6a8465e84,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,138163,0x7ff6a8465ec4,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,138175,0x7ff6a8466344,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,138186,0x7ff6a84667c4,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,138194,0x7ff6a8466bc4,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,138200,0x7ff6a8466fe4,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,138206,0x7ff6a8467404,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,138213,0x7ff6a8467804,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,138220,0x7ff6a8467c24,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,138227,0x7ff6a8468044,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,138234,0x7ff6a8468464,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,138241,0x7ff6a84688e4,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,138248,0x7ff6a8468984,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,138255,0x7ff6a8468a44,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,138261,0x7ff6a8468aa4,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,138269,0x7ff6a8468f84,968,Construct.Wide
code-creation,BytecodeHandler,0,138275,0x7ff6a8469364,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,138281,0x7ff6a8469544,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,138288,0x7ff6a8469d04,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,138294,0x7ff6a846a144,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,138301,0x7ff6a846a744,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,138307,0x7ff6a846ad44,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,138314,0x7ff6a846b344,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,138321,0x7ff6a846b944,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,138327,0x7ff6a846bcc4,160,TestIn.Wide
code-creation,BytecodeHandler,0,138334,0x7ff6a846bd84,116,ToName.Wide
code-creation,BytecodeHandler,0,138340,0x7ff6a846be04,216,ToNumber.Wide
code-creation,BytecodeHandler,0,138347,0x7ff6a846bee4,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,138353,0x7ff6a846bfe4,116,ToObject.Wide
code-creation,BytecodeHandler,0,138359,0x7ff6a846c064,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,138367,0x7ff6a846c204,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,138373,0x7ff6a846c784,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,138381,0x7ff6a846caa4,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,138387,0x7ff6a846d2a4,172,CloneObject.Wide
code-creation,BytecodeHandler,0,138394,0x7ff6a846d364,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,138401,0x7ff6a846d424,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,138408,0x7ff6a846d584,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,138414,0x7ff6a846d604,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,138422,0x7ff6a846d6a4,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,138428,0x7ff6a846d7c4,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,138435,0x7ff6a846d8e4,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,138441,0x7ff6a846d984,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,138447,0x7ff6a846db44,44,Jump.Wide
code-creation,BytecodeHandler,0,138454,0x7ff6a846db84,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,138461,0x7ff6a846dbc4,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,138468,0x7ff6a846dc24,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,138474,0x7ff6a846dc84,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,138481,0x7ff6a846dce4,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,138488,0x7ff6a846dd44,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,138496,0x7ff6a846dda4,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,138502,0x7ff6a846de04,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,138509,0x7ff6a846de64,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,138516,0x7ff6a846dec4,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,138523,0x7ff6a846df64,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,138532,0x7ff6a846e004,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,138540,0x7ff6a846e0a4,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,138547,0x7ff6a846e144,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,138554,0x7ff6a846e1a4,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,138560,0x7ff6a846e204,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,138567,0x7ff6a846e264,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,138574,0x7ff6a846e2c4,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,138581,0x7ff6a846e324,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,138587,0x7ff6a846e384,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,138594,0x7ff6a846e3e4,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,138601,0x7ff6a846e444,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,138608,0x7ff6a846e4c4,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,138615,0x7ff6a846e6a4,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,138622,0x7ff6a846e7a4,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,138628,0x7ff6a846e7e4,260,ForInNext.Wide
code-creation,BytecodeHandler,0,138635,0x7ff6a846e904,48,ForInStep.Wide
code-creation,BytecodeHandler,0,138641,0x7ff6a846e944,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,138648,0x7ff6a846e9e4,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,138655,0x7ff6a846eaa4,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,138662,0x7ff6a846eb24,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,138668,0x7ff6a846ed44,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,138675,0x7ff6a846ede4,156,GetIterator.Wide
code-creation,BytecodeHandler,0,138681,0x7ff6a846ee84,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,138688,0x7ff6a846ef24,56,Abort.Wide
code-creation,BytecodeHandler,0,138695,0x7ff6a846ef64,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,138702,0x7ff6a846efe4,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,138708,0x7ff6a846f064,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,138715,0x7ff6a846f0e4,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,138722,0x7ff6a846f164,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,138729,0x7ff6a846f1e4,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,138735,0x7ff6a846f264,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,138742,0x7ff6a846f2a4,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,138748,0x7ff6a846f2c4,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,138754,0x7ff6a846f304,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,138761,0x7ff6a846f364,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,138768,0x7ff6a846f3c4,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,138775,0x7ff6a846f404,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,138782,0x7ff6a846f444,28,Star.ExtraWide
code-creation,BytecodeHandler,0,138788,0x7ff6a846f464,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,138794,0x7ff6a846f4a4,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,138801,0x7ff6a846f4e4,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,138808,0x7ff6a846f524,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,138815,0x7ff6a846f564,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,138821,0x7ff6a84707a4,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,138828,0x7ff6a84719a4,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,138836,0x7ff6a8471a64,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,138843,0x7ff6a8471b04,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,138850,0x7ff6a8471b84,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,138856,0x7ff6a8471c24,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,138863,0x7ff6a8471d24,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,138871,0x7ff6a8473024,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,138879,0x7ff6a84730c4,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,138887,0x7ff6a84731c4,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,138894,0x7ff6a84744a4,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,138901,0x7ff6a8474584,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,138908,0x7ff6a84759e4,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,138915,0x7ff6a8475aa4,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,138921,0x7ff6a8475b44,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,138928,0x7ff6a8475c04,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,138935,0x7ff6a8475d44,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,138942,0x7ff6a8475e04,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,138948,0x7ff6a8475ec4,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,138955,0x7ff6a8475f84,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,138961,0x7ff6a8476044,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,138968,0x7ff6a8476124,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,138975,0x7ff6a84761e4,980,Add.ExtraWide
code-creation,BytecodeHandler,0,138981,0x7ff6a84765c4,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,138987,0x7ff6a84769c4,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,138993,0x7ff6a8476da4,988,Div.ExtraWide
code-creation,BytecodeHandler,0,139000,0x7ff6a8477184,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,139006,0x7ff6a8477524,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,139013,0x7ff6a8477904,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,139020,0x7ff6a8477ca4,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,139027,0x7ff6a8478044,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,139036,0x7ff6a84783e4,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,139043,0x7ff6a84787a4,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,139051,0x7ff6a8478b64,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,139059,0x7ff6a8478f84,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,139066,0x7ff6a8479324,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,139074,0x7ff6a8479704,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,139081,0x7ff6a8479aa4,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,139088,0x7ff6a8479e44,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,139095,0x7ff6a847a184,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,139102,0x7ff6a847a504,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,139108,0x7ff6a847a704,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,139115,0x7ff6a847a904,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,139121,0x7ff6a847ab04,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,139128,0x7ff6a847ad04,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,139135,0x7ff6a847af04,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,139153,0x7ff6a847b1a4,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,139161,0x7ff6a847b424,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,139168,0x7ff6a847b6a4,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,139175,0x7ff6a847b944,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,139181,0x7ff6a847bb44,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,139189,0x7ff6a847bbc4,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,139196,0x7ff6a847bc44,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,139203,0x7ff6a847bc84,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,139210,0x7ff6a847c104,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,139218,0x7ff6a847c584,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,139225,0x7ff6a847c984,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,139233,0x7ff6a847cda4,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,139242,0x7ff6a847d1c4,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,139251,0x7ff6a847d5c4,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,139258,0x7ff6a847d9e4,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,139266,0x7ff6a847dde4,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,139273,0x7ff6a847e204,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,139280,0x7ff6a847e684,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,139286,0x7ff6a847e724,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,139293,0x7ff6a847e7e4,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,139300,0x7ff6a847e844,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,139307,0x7ff6a847ed24,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,139314,0x7ff6a847f104,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,139321,0x7ff6a847f2e4,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,139327,0x7ff6a847faa4,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,139334,0x7ff6a847fee4,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,139341,0x7ff6a84804e4,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,139348,0x7ff6a8480ae4,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,139355,0x7ff6a84810e4,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,139362,0x7ff6a84816e4,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,139369,0x7ff6a8481a64,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,139375,0x7ff6a8481b04,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,139382,0x7ff6a8481b84,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,139389,0x7ff6a8481c64,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,139396,0x7ff6a8481d64,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,139402,0x7ff6a8481de4,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,139409,0x7ff6a8481f84,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,139416,0x7ff6a8482504,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,139423,0x7ff6a8482824,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,139431,0x7ff6a8483024,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,139437,0x7ff6a84830e4,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,139444,0x7ff6a84831a4,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,139451,0x7ff6a8483304,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,139458,0x7ff6a8483384,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,139465,0x7ff6a8483424,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,139472,0x7ff6a8483544,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,139479,0x7ff6a8483664,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,139485,0x7ff6a8483704,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,139492,0x7ff6a84838c4,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,139498,0x7ff6a8483904,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,139505,0x7ff6a8483944,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,139513,0x7ff6a84839a4,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,139520,0x7ff6a8483a04,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,139527,0x7ff6a8483a64,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,139534,0x7ff6a8483ac4,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,139541,0x7ff6a8483b24,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,139548,0x7ff6a8483b84,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,139556,0x7ff6a8483be4,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,139563,0x7ff6a8483c44,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,139571,0x7ff6a8483ce4,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,139618,0x7ff6a8483d84,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,139626,0x7ff6a8483e24,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,139633,0x7ff6a8483ec4,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,139639,0x7ff6a8483f24,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,139646,0x7ff6a8483f84,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,139653,0x7ff6a8483fe4,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,139659,0x7ff6a8484044,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,139666,0x7ff6a84840a4,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,139673,0x7ff6a8484104,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,139681,0x7ff6a8484164,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,139688,0x7ff6a84841c4,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,139695,0x7ff6a8484244,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,139702,0x7ff6a8484424,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,139709,0x7ff6a8484524,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,139716,0x7ff6a8484564,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,139723,0x7ff6a8484684,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,139730,0x7ff6a84846c4,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,139736,0x7ff6a8484764,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,139744,0x7ff6a8484824,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,139751,0x7ff6a84848a4,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,139758,0x7ff6a8484ac4,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,139764,0x7ff6a8484b44,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,139771,0x7ff6a8484be4,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,139778,0x7ff6a8484c64,56,Abort.ExtraWide
new,MemoryChunk,0x2d78c080000,262144
new,MemoryChunk,0x36bef180000,262144
new,MemoryChunk,0x21ae3a40000,262144
new,MemoryChunk,0x3103a40000,262144
code-creation,Eval,10,143799,0x3103a7b4ee,5, node:internal/main/run_main_module:1:1,0x3103a7b3a8,~
script-source,91,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x3103a7b4ee,91,0,649,C0O0C4O649,,
code-creation,Function,10,143858,0x3103a7b596,58, node:internal/main/run_main_module:1:1,0x3103a7b468,~
code-source-info,0x3103a7b596,91,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,144090,0x3103a7b7d6,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x25aadb0fca0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n  */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x3103a7b7d6,9,10646,10999,C0O10656C2O10667C4O10663C9O10684C13O10705C14O10728C19O10741C24O10745C29O10745C35O10889C37O10899C47O10947C60O10905C65O10899C66O10969C71O10969C75O10996,,
code-creation,LazyCompile,10,144738,0x3103a7c4e6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x25aadb0fbd0,~
code-source-info,0x3103a7c4e6,9,9826,10409,C0O9845C6O9860C12O9890C16O9898C17O9929C22O9938C23O9951C30O9997C37O10028C45O9997C63O10130C70O10130C75O10166C89O10201C103O10158C108O10241C109O10253C124O10285C126O10298C141O10321C152O10340C160O10372C165O10321C170O10396C174O10404,,
code-creation,Eval,10,145084,0x3103a7d42e,5, node:internal/bootstrap/pre_execution:1:1,0x3103a7d098,~
script-source,92,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  // TODO(joyeecheung): snapshot fast APIs (which need to work with\x0d\n  // array buffers\x2C whose connection with C++ needs to be rebuilt after\x0d\n  // deserialization).\x0d\n  const {\x0d\n    hrtime\x2C\x0d\n    hrtimeBigInt\x0d\n  } = require('internal/process/per_thread').getFastAPIs(binding);\x0d\n\x0d\n  process.hrtime = hrtime;\x0d\n  process.hrtime.bigint = hrtimeBigInt;\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {}\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x3103a7d42e,92,0,16490,C0O0C4O16490,,
code-creation,Function,10,145799,0x3103a7df2e,426, node:internal/bootstrap/pre_execution:1:1,0x3103a7d3a8,~
code-source-info,0x3103a7df2e,92,0,16490,C0O0C190O28C196O47C202O72C208O84C214O100C220O130C226O218C232O218C237O174C243O193C249O284C255O284C260O256C266O334C272O334C277O323C283O396C289O396C294O422C299O362C305O446C311O446C315O446C317O16075C324O16097C330O16120C336O16143C342O16167C348O16185C354O16204C360O16235C366O16262C372O16286C378O16317C384O16350C390O16373C396O16401C402O16425C408O16446C414O16470C420O16090C425O16489,,
code-creation,Eval,10,145994,0x3103a7f8b6,5, node:internal/options:1:1,0x3103a7f6e0,~
script-source,93,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x3103a7f8b6,93,0,1892,C0O0C4O1892,,
code-creation,Function,10,146100,0x3103a7fc86,154, node:internal/options:1:1,0x3103a7f830,~
code-source-info,0x3103a7fc86,93,0,1892,C0O0C54O102C57O102C62O28C68O66C74O163C75O163C77O176C78O176C80O193C81O193C83O210C84O210C86O1675C93O1824C99O1843C105O1868C148O1690C153O1891,,
new,MemoryChunk,0x33416080000,262144
code-creation,LazyCompile,10,146210,0x334160812d6,69,internalBinding node:internal/bootstrap/loaders:164:45,0x25aadb0f720,~
code-source-info,0x334160812d6,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,146389,0x33416081b06,213,prepareMainThreadExecution node:internal/bootstrap/pre_execution:22:36,0x3103a7d460,~
code-source-info,0x33416081b06,92,512,2458,C10O658C15O658C18O763C21O763C25O799C28O799C31O829C34O829C37O850C40O850C43O876C46O876C49O1084C52O1096C57O1100C63O1125C66O1133C77O1190C82O1194C87O1163C91O1154C95O1225C98O1225C101O1320C104O1320C107O1429C110O1429C113O1452C116O1452C119O1513C122O1513C125O1843C128O1843C131O1921C134O1921C137O2123C140O2123C143O2152C146O2152C149O2187C152O2187C155O2216C158O2216C161O2237C164O2237C167O2263C170O2263C173O2309C179O2309C184O2352C189O2370C195O2352C199O2401C202O2401C205O2426C208O2426C212O2457,,
code-creation,LazyCompile,10,146508,0x33416082d2e,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x6682eb2fe8,~
script-source,19,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x33416082d2e,19,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,147986,0x3341608557e,432,patchProcessObject node:internal/bootstrap/pre_execution:81:28,0x3103a7d4b0,~
code-source-info,0x3341608557e
code-creation,LazyCompile,10,148157,0x33416085c16,113,getFastAPIs node:internal/process/per_thread:57:21,0x6682ebf748,~
script-source,23,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nfunction getFastAPIs(binding) {\x0d\n  const {\x0d\n    hrtime: _hrtime\x0d\n  } = binding.getFastAPIs();\x0d\n\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  const hrValues = new Uint32Array(_hrtime.buffer);\x0d\n\x0d\n  function hrtime(time) {\x0d\n    _hrtime.hrtime();\x0d\n\x0d\n    if (time !== undefined) {\x0d\n      validateArray(time\x2C 'time');\x0d\n      if (time.length !== 2) {\x0d\n        throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n      }\x0d\n\x0d\n      const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n      const nsec = hrValues[2] - time[1];\x0d\n      const needsBorrow = nsec < 0;\x0d\n      return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n    }\x0d\n\x0d\n    return [\x0d\n      hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n      hrValues[2]\x2C\x0d\n    ];\x0d\n  }\x0d\n\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  const hrBigintValues = new BigUint64Array(_hrtime.buffer\x2C 0\x2C 1);\x0d\n  function hrtimeBigInt() {\x0d\n    _hrtime.hrtimeBigInt();\x0d\n    return hrBigintValues[0];\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    hrtime\x2C\x0d\n    hrtimeBigInt\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  getFastAPIs\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x0d\n};\x0d\n
code-source-info,0x33416085c16,23,1285,2511,C0O1285C24O1344C29O1344C34O1321C40O1564C50O1588C57O1564C62O1564C64O2321C74O2348C86O2321C91O2321C93O2462C100O2476C106O2489C112O2508,,
code-creation,LazyCompile,10,148941,0x3341608741e,832,resolve node:path:158:10,0x2ee4c9e9670,~
script-source,35,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instancee\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x3341608741e
tick,0x7ff6a7fd004e,151202,0,0x0,3,0x7ff6a7f1e5b0,0x3341608744f,0x33416085663,0x33416081b1b,0x3103a7b5a5
code-creation,LazyCompile,10,151228,0x3341608aa36,30,validateString node:internal/validators:117:24,0x6682e9a8e0,~
script-source,17,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x3341608aa36,17,3514,3626,C0O3533C6O3569C22O3575C27O3569C29O3625,,
code-creation,LazyCompile,10,151627,0x3341608b39e,17,isPathSeparator node:path:52:25,0x2ee4c9e90f0,~
code-source-info,0x3341608b39e,35,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,151662,0x3341608b49e,35,isWindowsDeviceRoot node:path:60:29,0x2ee4c9e9568,~
code-source-info,0x3341608b49e,35,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,151709,0x3341608b5be,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x1d24e4d3f60,~
script-source,90,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x3341608b5be,90,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,151985,0x3341608bc26,442,normalizeString node:path:66:25,0x2ee4c9e95b8,~
code-source-info,0x3341608bc
code-creation,LazyCompile,10,152134,0x3341608c346,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:129:33,0x3103a7d500,~
code-source-info,0x3341608c346,92,4413,4648,C16O4466C21O4466C26O4493C28O4511C36O4541C43O4607C49O4626C56O4511C62O4647,,
code-creation,LazyCompile,10,152197,0x3341608c4c6,82,getOptionValue node:internal/options:39:24,0x3103a7f9d8,~
code-source-info,0x3341608c4c6,93,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,152239,0x3341608c876,33,getCLIOptionsFromBinding node:internal/options:18:34,0x3103a7f8e8,~
code-source-info,0x3341608c876,93,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,152514,0x3341608cc56,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:221:33,0x3103a7d7a8,~
code-source-info,0x3341608cc56,92,6973,7204,C0O7016C6O7016C11O6989C16O7089C22O7089C27O7060C32O7132C35O7157C40O7132C45O7203,,
code-creation,LazyCompile,10,152566,0x3341608cdee,77,toggleTraceCategoryState node:internal/process/per_thread:385:34,0x6682ebfd38,~
code-source-info,0x3341608cdee,23,11424,11731,C0O11449C4O11479C10O11515C16O11547C21O11591C26O11592C33O11536C39O11618C44O11639C49O11639C55O11659C61O11692C66O11713C71O11713C76O11730,,
code-creation,LazyCompile,10,152608,0x3341608cf9e,42,setupPerfHooks node:internal/bootstrap/pre_execution:227:24,0x3103a7d7f8,~
code-source-info,0x3341608cf9e,92,7231,7354,C0O7239C6O7239C11O7275C16O7276C20O7300C26O7300C31O7330C36O7331C41O7353,,
code-creation,LazyCompile,10,152656,0x3341608d11e,42,refreshTimeOrigin node:internal/perf/performance:178:27,0x3f9d354a000,~
script-source,70,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (type !== undefined) {\x0d\n    type = `${type}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x3341608d11e,70,3932,4095,C0O3940C7O3961C10O3973C25O4060C28O4060C35O3940C41O4094,,
code-creation,LazyCompile,10,152913,0x3341608d82e,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x2ee4c9fd268,~
script-source,41,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x3341608d82e,41,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,152991,0x3341608da9e,62,setupInspectorHooks node:internal/bootstrap/pre_execution:232:29,0x3103a7d848,~
code-source-info,0x3341608da9e,92,7386,7952,C0O7735C6O7739C11O7764C17O7833C23O7833C28O7801C33O7816C38O7880C44O7880C49O7908C54O7909C61O7951,,
code-creation,Eval,10,153102,0x3341608de4e,5, node:internal/inspector_async_hook:1:1,0x3341608dc98,~
script-source,94,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x3341608de4e,94,0,2048,C0O0C4O2048,,
code-creation,Function,10,153223,0x3341608e06e,79, node:internal/inspector_async_hook:1:1,0x3341608ddc8,~
code-source-info,0x3341608e06e,94,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,153318,0x3341608e566,69,setupWarningHandler node:internal/bootstrap/pre_execution:141:29,0x3103a7d550,~
code-source-info,0x3341608e566,92,4680,4885,C0O4718C6O4718C11O4701C16O4758C24O4762C33O4807C38O4811C45O4828C50O4844C53O4852C61O4852C68O4884,,
code-creation,LazyCompile,10,153421,0x3341608e6c6,20,addListener node:events:486:58,0x25aadb33ed8,~
script-source,13,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catcheable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {}\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {}\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventEmitter memory leak detected. ' +\x0d\n                          `${existing.length} ${String(type)} listeners ` +\x0d\n                          `added to ${inspect(target\x2C { depth: -1 })}. Use ` +\x0d\n                          'emitter.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.emitter = target;\x0d\n      w.type = type;\x0d\n      w.count = existing.length;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x3341608e6c6,13,14677,14751,C0O14699C14O14706C19O14748,,
code-creation,LazyCompile,10,154871,0x33416090926,387,_addListener node:events:418:22,0x25aadb33e38,~
code-source-info,0x
code-creation,LazyCompile,10,154984,0x33416090c5e,15,checkListener node:events:127:23,0x25aadb33798,~
code-source-info,0x33416090c5e,13,3796,3854,C0O3812C8O3812C14O3853,,
code-creation,LazyCompile,10,155018,0x33416090d4e,30, node:internal/validators:235:42,0x6682e9ad78,~
code-source-info,0x33416090d4e,17,7441,7560,C0O7463C6O7501C22O7507C27O7501C29O7559,,
code-creation,LazyCompile,10,155126,0x33416090fce,380,emit node:events:340:44,0x25aadb33d78,~
code-source-info,0x33416090fce
code-creation,LazyCompile,10,155247,0x33416091376,172,startListeningIfSignal node:internal/process/signal:22:32,0x1d24e4d2d20,~
script-source,89,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x33416091376,89,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,155360,0x33416091736,19,isSignal node:internal/process/signal:17:18,0x1d24e4d2b68,~
code-source-info,0x33416091736,89,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,155409,0x334160918d6,75,setupDebugEnv node:internal/bootstrap/pre_execution:193:23,0x3103a7d6b8,~
code-source-info,0x334160918d6,92,6195,6410,C0O6203C6O6203C11O6236C19O6264C24O6268C29O6237C34O6284C42O6288C48O6333C54O6333C59O6370C64O6383C69O6384C74O6409,,
code-creation,LazyCompile,10,155521,0x33416091c6e,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x2ee4c9fc5f0,~
script-source,40,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 0: return debug();\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 0: return debug();\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x33416091c6e,40,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
new,MemoryChunk,0x225ca780000,262144
code-creation,Function,11,155792,0x225ca783060,572,getOptionValue node:internal/options:39:24,0x3103a7f9d8,^
code-source-info,0x225ca783060,93,940,1190,,,
code-creation,Function,11,155817,0x225ca783300,216,isPathSeparator node:path:52:25,0x2ee4c9e90f0,^
code-source-info,0x225ca783300,35,1794,1876,,,
code-creation,Function,11,155862,0x225ca783440,3076,normalizeString node:path:66:25,0x2ee4c9e95b8,^
code-source-info,0x225ca783440,35,2226,4212,,,
code-creation,LazyCompile,10,155913,0x334160925c6,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:172:40,0x3103a7d5f0,~
code-source-info,0x334160925c6,92,5738,5932,C0O5746C8O5751C14O5792C15O5799C16O5835C22O5835C27O5816C32O5887C38O5921C43O5921C48O5931,,
code-creation,LazyCompile,10,155967,0x33416092836,62,initializeReport node:internal/bootstrap/pre_execution:182:26,0x3103a7d640,~
code-source-info,0x33416092836,92,5961,6169,C0O5961C8O5988C16O5988C21O5977C27O6027C42O6048C47O6123C55O6027C61O6168,,
code-creation,Eval,10,156127,0x33416092db6,5, node:internal/process/report:1:1,0x33416092bb0,~
script-source,95,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined && typeof file !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('file'\x2C 'String'\x2C file);\x0d\n    } else if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x33416092db6,95,0,2743,C0O0C4O2743,,
code-creation,Function,10,156284,0x334160938ce,315, node:internal/process/report:1:1,0x33416092d30,~
code-source-info,0x334160938ce,95,0,2743,C0O0C51O70C54O70C59O96C64O26C70O51C76O199C79O199C84O116C90O136C96O155C102O178C108O243C111O243C115O243C117O282C123O327C128O332C136O786C290O2688C297O2710C303O2731C309O2703C314O2742,,
code-creation,LazyCompile,10,156470,0x3341609560e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:201:40,0x3103a7d708,~
code-source-info,0x3341609560e,92,6514,6614,C0O6551C6O6551C11O6530C16O6592C20O6613,,
code-creation,LazyCompile,10,156522,0x33416095756,57,addSignalHandler node:internal/process/report:97:26,0x33416092de8,~
code-source-info,0x33416095756,95,2318,2471,C0O2329C5O2336C10O2336C16O2367C22O2403C27O2412C32O2412C38O2432C41O2440C49O2440C56O2470,,
code-creation,LazyCompile,10,156570,0x33416095d16,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:207:46,0x3103a7d758,~
code-source-info,0x33416095d16,92,6663,6937,C0O6663C8O6686C18O6686C23O6732C25O6750C26O6757C27O6763C35O6763C40O6793C45O6794C50O6855C58O6855C63O6833C69O6875C74O6883C79O6886C84O6883C91O6936,,
code-creation,LazyCompile,10,156631,0x33416095fa6,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:337:37,0x3103a7d928,~
code-source-info,0x33416095fa6,92,10807,11353,C0O10815C3O10827C8O10831C14O10870C20O10870C25O10916C33O10939C38O10943C46O10916C52O10970C53O10980C57O10970C61O11064C64O11079C73O11140C76O11148C81O11152C90O11200C93O11215C102O11259C108O11259C113O11283C118O11284C124O11324C127O11339C132O11324C137O11352,,
code-creation,LazyCompile,10,156750,0x3341609639e,455,initializePolicy node:internal/bootstrap/pre_execution:365:26,0x3103a7d9c8,~
code-source-info,0x3341609639e
code-creation,LazyCompile,10,156847,0x3341609678e,63,initializeClusterIPC node:internal/bootstrap/pre_execution:356:30,0x3103a7d978,~
code-source-info,0x3341609678e,92,11386,11634,C0O11394C3O11406C10O11410C18O11425C23O11429C29O11468C35O11468C40O11501C45O11501C49O11592C52O11607C62O11633,,
code-creation,LazyCompile,10,156889,0x334160968fe,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:460:38,0x3103a7db08,~
code-source-info,0x334160968fe,92,15289,15442,C0O15335C6O15335C11O15305C16O15387C21O15416C26O15441,,
code-creation,Eval,10,157099,0x3341609727e,5, node:internal/source_map/source_map_cache:1:1,0x33416096f18,~
script-source,96,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err.stack);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err.stack);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x3341609727e,96,0,7905,C0O0C4O7905,,
code-creation,Function,10,157463,0x334160978f6,435, node:internal/source_map/source_map_cache:1:1,0x334160971f8,~
code-source-info,0x334160978f6,96,0,7905,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7762C399O7784C405O7802C411O7827C417O7852C423O7876C429O7777C434O7904,,
code-creation,LazyCompile,10,157621,0x334160986de,82,debuglog node:internal/util/debuglog:71:18,0x2ee4c9fc928,~
code-source-info,0x334160986de,40,2302,3390,C0O2302C28O2432C32O2432C34O2878C35O2878C37O2901C41O2901C43O2994C48O3231C58O3252C63O3278C74O3231C79O3373C81O3387,,
code-creation,Eval,10,157758,0x33416098c5e,5, node:internal/util/iterable_weak_map:1:1,0x33416098a10,~
script-source,97,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x33416098c5e,97,0,2042,C0O0C4O2042,,
code-creation,Function,10,157878,0x334160993be,196, node:internal/util/iterable_weak_map:1:1,0x33416098bd8,~
code-source-info,0x334160993be,97,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,157902,0x3341609953e,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x33416098ee8,~
code-source-info,0x3341609953e,97,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,158158,0x3341609a206,5, node:internal/modules/cjs/helpers:1:1,0x33416099f50,~
script-source,98,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x3341609a206,98,0,6975,C0O0C4O6975,,
code-creation,Function,10,158481,0x3341609a786,536, node:internal/modules/cjs/helpers:1:1,0x3341609a180,~
code-source-info,0x3341609a786,98,0,6975,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6806C488O6828C494O6855C500O6873C506O6890C512O6911C518O6935C524O6960C530O6821C535O6974,,
code-creation,LazyCompile,10,158644,0x3341609b3c6,27,SafeSet node:internal/per_context/primordials:364:16,0x25aadb0a168,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(global[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x3341609b3c6,6,10890,10907,C3O10896C7O10902C11O10896C26O10906,,
code-creation,LazyCompile,10,159229,0x3341609c206,27,SafeMap node:internal/per_context/primordials:351:16,0x25aadb09fe0,~
code-source-info,0x3341609c206,6,10550,10567,C3O10556C7O10562C11O10556C26O10566,,
code-creation,LazyCompile,10,159274,0x3341609c37e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x33416098ce0,~
code-source-info,0x3341609c37e,97,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,159303,0x3341609c706,27,SafeWeakMap node:internal/per_context/primordials:357:16,0x25aadb0a0a0,~
code-source-info,0x3341609c706,6,10727,10744,C3O10733C7O10739C11O10733C26O10743,,
code-creation,LazyCompile,10,159333,0x3341609c80e,27,SafeFinalizationRegistry node:internal/per_context/primordials:378:16,0x25aadb0a2f0,~
code-source-info,0x3341609c80e,6,11354,11399,C3O11374C7O11380C11O11374C26O11398,,
code-creation,LazyCompile,10,159452,0x3341609cff6,492,initializeDeprecations node:internal/bootstrap/pre_execution:250:32,0x3103a7d898,~
code-source-info,0x3341609cff
code-creation,LazyCompile,10,159560,0x3341609d626,53,initializeWASI node:internal/bootstrap/pre_execution:414:24,0x3103a7da18,~
code-source-info,0x3341609d626,92,13535,13746,C0O13568C6O13568C11O13551C16O13635C21O13639C29O13639C35O13655C37O13687C43O13687C47O13680C52O13745,,
code-creation,LazyCompile,10,159607,0x3341609d826,66,initializeCJSLoader node:internal/bootstrap/pre_execution:421:29,0x3103a7da68,~
code-source-info,0x3341609d826,92,13778,14101,C0O13804C6O13804C11O13847C16O13852C20O13872C26O13911C31O13918C36O13918C40O14017C51O14039C56O14075C60O14032C65O14100,,
code-creation,Eval,10,160432,0x3341609f7ae,5, node:internal/modules/cjs/loader:1:1,0x3341609eec8,~
script-source,99,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {}\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x3341609f7ae,99,0,41471,C0O0C4O41471,,
code-creation,Function,10,162193,0x334160a154e,2547, node:internal/modules/cjs/loader:1:1,0x3341609f728,~
code-source-info,0x334160a154e
code-creation,Eval,10,162644,0x334160a55be,5, node:internal/modules/package_json_reader:1:1,0x334160a5418,~
script-source,100,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x334160a55be,100,0,1024,C0O0C4O1024,,
code-creation,Function,10,162716,0x334160a570e,113, node:internal/modules/package_json_reader:1:1,0x334160a5538,~
code-source-info,0x334160a570e,100,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,162874,0x334160a5ede,5, node:internal/process/esm_loader:1:1,0x334160a5ce8,~
script-source,101,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x334160a5ede,101,0,2982,C0O0C4O2982,,
code-creation,Function,10,163024,0x334160a617e,182, node:internal/process/esm_loader:1:1,0x334160a5e58,~
code-source-info,0x334160a617e,101,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,163338,0x334160a71e6,5, node:internal/modules/esm/loader:1:1,0x334160a6de8,~
script-source,102,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }) => {\x0d\n          return this.import(specifier\x2C url);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(this\x2C url\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  async getModuleJob(specifier\x2C parentURL) {\x0d\n    const { format\x2C url } = await this.resolve(specifier\x2C parentURL);\x0d\n    let job = this.moduleMap.get(url);\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') this.moduleMap.set(url\x2C job = job());\x0d\n\x0d\n    if (job !== undefined) return job;\x0d\n\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const { format: finalFormat\x2C source } = await this.load(url\x2C { format });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat);\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module\x0d\n   * @param {string} [parentURL] Path of the parent importing the module\x0d\n   * @returns {object | object[]} A list of module export(s)\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {Object} context Metadata about the module\x0d\n   * @returns {Object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n        url\x2C\x0d\n        dataUrl ? `has an unsupported MIME type "${dataUrl[1]}"` : ''\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const preload = this.#globalPreloaders[i]();\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\n      FunctionPrototypeCall(preloadInit\x2C globalThis\x2C (builtinName) => {\x0d\n        if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n          return require(builtinName);\x0d\n        }\x0d\n        throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   * be resolved\x0d\n   * @param {String} parentURL The URL path of the module's parent\x0d\n   * @returns {{ url: String }}\x0d\n   */\x0d\n  async resolve(originalSpecifier\x2C parentURL) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n    if (typeof url !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x334160a71e6,102,0,12388,C0O0C4O12388,,
code-creation,Function,10,163958,0x334160a792e,530, node:internal/modules/esm/loader:1:1,0x334160a7160,~
code-source-info,0x334160a792e,102,0,12388,C0O0C104O82C110O82C114O136C120O146C126O163C132O186C138O209C144O235C150O261C156O278C161O303C167O318C173O342C179O364C185O380C191O606C197O606C202O632C207O424C213O449C219O475C225O508C231O546C237O575C243O682C249O682C254O649C260O664C266O764C272O764C277O719C283O740C289O815C295O815C299O815C301O878C307O878C311O878C313O980C319O980C324O936C330O955C336O1046C342O1046C347O1030C353O1109C359O1109C364O1093C370O1186C376O1186C381O1167C510O12335C517O12304C522O12356C524O12374C529O12387,,
code-creation,Function,10,164014,0x334160a7d26,139,<instance_members_initializer> node:internal/modules/esm/loader:59:3,0x334160a74e8,~
code-source-info,0x334160a7d26,102,1669,2500,C3O1689C17O1851C28O1858C45O2040C56O2047C73O2146C80O2146C94O2269C104O2361C111O2361C125O2489C138O2500,,
code-creation,Eval,10,164160,0x334160a90ee,5, node:internal/modules/esm/module_map:1:1,0x334160a8f20,~
script-source,103,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst {\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url) {\x0d\n    validateString(url\x2C 'url');\x0d\n    return super.get(url);\x0d\n  }\x0d\n  set(url\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} in ModuleMap`);\x0d\n    return super.set(url\x2C job);\x0d\n  }\x0d\n  has(url) {\x0d\n    validateString(url\x2C 'url');\x0d\n    return super.has(url);\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x334160a90ee,103,0,989,C0O0C4O989,,
code-creation,Function,10,164227,0x334160a950e,149, node:internal/modules/esm/module_map:1:1,0x334160a9068,~
code-source-info,0x334160a950e,103,0,989,C0O0C17O35C20O35C24O35C26O91C31O131C34O131C39O164C52O165C58O131C60O245C63O245C68O271C73O220C79O307C82O307C87O288C97O420C141O960C143O975C148O988,,
code-creation,Eval,10,164443,0x334160a9f36,5, node:internal/modules/esm/module_job:1:1,0x334160a9c50,~
script-source,104,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        const { format } = await this.loader.load(childFileURL);\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x334160a9f36,104,0,7906,C0O0C4O7906,,
code-creation,Function,10,164786,0x334160aa426,334, node:internal/modules/esm/module_job:1:1,0x334160a9eb0,~
code-source-info,0x334160aa426,104,0,7906,C0O0C85O28C91O51C97O73C103O96C109O119C114O141C119O166C125O181C130O200C136O226C142O243C148O267C154O289C160O301C166O329C172O354C178O381C184O406C190O477C196O477C201O462C207O543C213O543C218O520C224O608C230O608C235O581C241O673C247O673C251O673C253O726C256O726C258O760C260O760C262O803C263O803C265O835C269O835C271O960C275O960C314O7858C321O7827C326O7877C328O7892C333O7905,,
code-creation,Eval,10,165575,0x334160ad17e,5, node:internal/modules/esm/resolve:1:1,0x334160aca88,~
script-source,105,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   exports?: ExportConfig;\x0d\n *   name?: string;\x0d\n *   main?: string;\x0d\n *   type?: PackageType;\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormat(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  const path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n    if (file !== undefined) return file;\x0d\n    if (!StringPrototypeEndsWith(path\x2C '/')) {\x0d\n      file = resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n      if (file !== undefined) return file;\x0d\n    } else {\x0d\n      return resolveDirectoryEntry(resolved) || resolved;\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)(\\.\\.?|node_modules)(\\\\|\\/|$)/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {}\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern)\x0d\n    return new URL(RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C\x0d\n                                                () => subpath));\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0)\x0d\n      return null;\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolved;\x0d\n      try {\x0d\n        resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\x0d\n          continue;\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolved === undefined)\x0d\n        continue;\x0d\n      if (resolved === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolved;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolved === undefined)\x0d\n          continue;\x0d\n        return resolved;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n    if (resolved === null || resolved === undefined)\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                          bestMatchSubpath\x2C bestMatch\x2C base\x2C\x0d\n                                          pattern\x2C false\x2C conditions);\x0d\n    if (resolved === null || resolved === undefined)\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    if (!pattern)\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved !== null)\x0d\n          return { resolved\x2C exact: true };\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                                bestMatchSubpath\x2C bestMatch\x2C\x0d\n                                                base\x2C pattern\x2C true\x2C\x0d\n                                                conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // separators.\x0d\n  for (let i = 0; i < packageName.length; i++) {\x0d\n    if (packageName[i] === '%' || packageName[i] === '\\\\') {\x0d\n      validPackageName = false;\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null)\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    if (packageSubpath === '.')\x0d\n      return legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base);\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions) {\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n  return finalizeResolution(resolved\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  let parsed;\x0d\n  try {\x0d\n    parsed = new URL(specifier);\x0d\n    if (parsed.protocol === 'data:') {\x0d\n      return {\x0d\n        url: specifier\x0d\n      };\x0d\n    }\x0d\n  } catch {}\x0d\n  if (parsed && parsed.protocol === 'node:')\x0d\n    return { url: specifier };\x0d\n  if (parsed && parsed.protocol !== 'file:' && parsed.protocol !== 'data:')\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed);\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n    return {\x0d\n      url: 'node:' + specifier\x0d\n    };\x0d\n  }\x0d\n  if (parentURL && StringPrototypeStartsWith(parentURL\x2C 'data:')) {\x0d\n    // This is gonna blow up\x2C we want the error\x0d\n    new URL(specifier\x2C parentURL);\x0d\n  }\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag)\x0d\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  if (isMain ? !preserveSymlinksMain : !preserveSymlinks) {\x0d\n    const urlPath = fileURLToPath(url);\x0d\n    const real = realpathSync(urlPath\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const old = url;\x0d\n    url = pathToFileURL(\x0d\n      real + (StringPrototypeEndsWith(urlPath\x2C sep) ? '/' : ''));\x0d\n    url.search = old.search;\x0d\n    url.hash = old.hash;\x0d\n  }\x0d\n\x0d\n  return { url: `${url}` };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\n
code-source-info,0x334160ad17e,105,0,37562,C0O0C4O37562,,
tick,0x7ff6a88cf98d,167284,1,0x7ff6a79aa4a0,3,0x7ff6a82ef2d0,0x3103a7c52c,0x3103a7b81d,0x334160a7a6d,0x3103a7c54d,0x3103a7b81d,0x334160a61cc,0x3103a7c54d,0x3103a7b81d,0x334160a19f9,0x3103a7c54d,0x3103a7b81d,0x3341609d82c,0x33416081baa,0x3103a7b5a5
code-creation,Function,10,167312,0x334160ae11e,1086, node:internal/modules/esm/resolve:1:1,0x334160ad0f8,~
code-source-info,0x334160ae11e
code-creation,Eval,10,167710,0x334160b1306,5, node:internal/modules/esm/get_format:1:1,0x334160b10e0,~
script-source,106,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { extname } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst experimentalJsonModules = getOptionValue('--experimental-json-modules');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\nconst { getPackageType } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.mjs': 'module'\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules)\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n\x0d\nif (experimentalJsonModules)\x0d\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:'(parsed) {\x0d\n    const { 1: mime } = RegExpPrototypeExec(\x0d\n      /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n      parsed.pathname\x2C\x0d\n    ) || [\x2C null];\x0d\n    const format = ({\x0d\n      '__proto__': null\x2C\x0d\n      'text/javascript': 'module'\x2C\x0d\n      'application/json': experimentalJsonModules ? 'json' : null\x2C\x0d\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\x0d\n    })[mime] || null;\x0d\n\x0d\n    return format;\x0d\n  }\x2C\x0d\n  'file:'(parsed\x2C url) {\x0d\n    const ext = extname(parsed.pathname);\x0d\n    let format;\x0d\n\x0d\n    if (ext === '.js') {\x0d\n      format = getPackageType(parsed.href) === 'module' ? 'module' : 'commonjs';\x0d\n    } else {\x0d\n      format = extensionFormatMap[ext];\x0d\n    }\x0d\n    if (!format) {\x0d\n      if (experimentalSpecifierResolution === 'node') {\x0d\n        process.emitWarning(\x0d\n          'The Node.js specifier resolution in ESM is experimental.'\x2C\x0d\n          'ExperimentalWarning');\x0d\n        format = legacyExtensionFormatMap[ext];\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C fileURLToPath(url));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return format || null;\x0d\n  }\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C url) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  extensionFormatMap\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x334160b1306,106,0,2723,C0O0C4O2723,,
code-creation,Function,10,167882,0x334160b1736,314, node:internal/modules/esm/get_format:1:1,0x334160b1280,~
code-source-info,0x334160b1736,106,0,2723,C0O0C53O26C58O43C63O60C69O94C75O154C78O154C83O142C89O199C92O199C97O180C102O263C105O263C109O263C111O354C114O354C118O354C120O442C123O442C127O442C129O517C132O517C137O498C143O590C146O590C151O567C157O572C163O655C166O655C171O681C176O624C182O719C186O719C188O846C192O846C194O990C198O1022C207O1086C213O1050C217O1099C221O1131C230O1195C236O1159C240O1233C242O1246C252O1271C260O1701C268O2361C276O1233C281O1233C283O2626C290O2648C296O2669C302O2692C308O2641C313O2722,,
code-creation,Eval,10,168044,0x334160b20c6,5, node:internal/modules/esm/load:1:1,0x334160b1f50,~
script-source,107,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { translators } = require('internal/modules/esm/translators');\x0d\n\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (!translators.has(format)) format = defaultGetFormat(url);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C { format });\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x334160b20c6,107,0,675,C0O0C4O675,,
code-creation,Function,10,168105,0x334160b220e,80, node:internal/modules/esm/load:1:1,0x334160b2040,~
code-source-info,0x334160b220e,107,0,675,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O189C50O189C55O173C61O635C68O657C74O650C79O674,,
code-creation,Eval,10,168225,0x334160b2776,5, node:internal/modules/esm/get_source:1:1,0x334160b25a0,~
script-source,108,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_INVALID_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C { format } = {}\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = Buffer.from(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else {\x0d\n    throw new ERR_INVALID_URL_SCHEME(['file'\x2C 'data']);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x334160b2776,108,0,1394,C0O0C4O1394,,
code-creation,Function,10,168335,0x334160b28e6,169, node:internal/modules/esm/get_source:1:1,0x334160b26f0,~
code-source-info,0x334160b28e6,108,0,1394,C0O0C37O28C43O52C49O118C52O118C57O99C62O215C65O215C74O260C81O215C83O328C86O328C91O317C97O361C100O361C105O392C110O419C113O419C118O411C124O505C127O505C132O531C137O456C143O476C149O565C153O562C155O603C159O603C161O1348C163O1373C168O1393,,
code-creation,Eval,10,168977,0x334160b3c5e,5, node:internal/fs/promises:1:1,0x334160b34c0,~
script-source,109,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    if (bufferOrOptions === undefined) {\x0d\n      bufferOrOptions = {};\x0d\n    }\x0d\n    if (bufferOrOptions.buffer) {\x0d\n      buffer = bufferOrOptions.buffer;\x0d\n      validateBuffer(buffer);\x0d\n    } else {\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n    offset = bufferOrOptions.offset || 0;\x0d\n    length = buffer.byteLength;\x0d\n    position = bufferOrOptions.position || null;\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x334160b3c5e,109,0,23714,C0O0C4O23714,,
code-creation,Function,10,170128,0x334160b6396,1659, node:internal/fs/promises:1:1,0x334160b3bd8,~
code-source-info,0x334160b6396,109,0,23714,C0O0C490O28C496O51C502O61C508O73C514O85C520O109C526O121C532O146C538O165C544O187C550O219C555O230C561O334C565O334C571O362C577O274C583O283C589O297C595O310C601O321C607O384C611O384C615O384C617O427C625O427C631O416C637O584C645O584C651O584C657O474C663O502C669O530C675O567C681O643C689O643C695O621C701O703C709O703C715O684C721O1365C729O1365C735O1365C741O764C747O783C753O800C759O828C765O863C771O896C777O911C783O941C788O956C794O971C800O995C806O1016C812O1033C818O1047C824O1080C830O1098C836O1122C842O1142C848O1166C854O1188C860O1217C866O1247C871O1269C877O1294C883O1333C889O1416C897O1416C903O1404C908O1599C916O1599C922O1456C928O1474C934O1498C940O1518C946O1537C952O1558C958O1578C964O1651C972O1651C976O1651C978O1709C986O1709C992O1677C998O1695C1003O1766C1011O1766C1017O1744C1022O1819C1030O1819C1036O1809C1041O1876C1049O1876C1055O1861C1061O1927C1069O1927C1073O1927C1075O1974C1079O1974C1083O1974C1085O2006C1089O2006C1093O2006C1095O2036C1099O2036C1103O2036C1105O2076C1109O2076C1113O2076C1115O2124C1119O2124C1123O2124C1125O2171C1129O2171C1133O2171C1135O2209C1139O2209C1143O2209C1145O2241C1149O2241C1153O2241C1155O2287C1159O2270C1165O2368C1173O2368C1179O2308C1184O2324C1189O2338C1194O2349C1199O2450C1203O2450C1205O2507C1209O2507C1211O2544C1212O2544C1214O2705C1215O2705C1217O2831C1339O6112C1349O6532C1359O6593C1371O6689C1381O6730C1413O2806C1415O23234C1421O23265C1429O23272C1435O23285C1441O23300C1447O23309C1451O23329C1461O23354C1467O23367C1473O23382C1479O23391C1485O23403C1491O23415C1497O23429C1503O23444C1509O23458C1515O23470C1521O23481C1527O23492C1533O23505C1539O23517C1545O23530C1551O23543C1557O23555C1563O23568C1569O23582C1575O23597C1581O23611C1587O23627C1593O23644C1599O23659C1619O23677C1629O23692C1639O23701C1649O23249C1658O23713,,
code-creation,Function,10,170279,0x334160b6d46,27,<instance_members_initializer> node:internal/fs/promises:189:3,0x334160b5238,~
code-source-info,0x334160b6d46,109,4390,5219,C0O4390C12O4398C26O5219,,
code-creation,Eval,10,170624,0x334160b97e6,5, node:internal/fs/rimraf:1:1,0x334160b9480,~
script-source,110,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x334160b97e6,110,0,7392,C0O0C4O7392,,
code-creation,Function,10,170992,0x334160b9de6,409, node:internal/fs/rimraf:1:1,0x334160b9760,~
code-source-info,0x334160b9de6,110,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,171222,0x334160bac7e,188,from node:buffer:295:28,0x6682ea59e0,~
script-source,18,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error(`Unable to transcode Buffer [${code}]`);\x0d\n    err.code = code;\x0d\n    err.errno = result;\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x334160bac7e,18,8700,9683,C3O8739C9O8775C12O8782C17O8818C18O8824C28O8880C33O8884C39O8916C51O8923C56O8972C57O9002C63O9019C68O9019C73O9035C78O9075C95O9168C104O9175C109O9215C110O9240C113O9240C118O9264C120O9278C122O9287C123O9295C125O9312C127O9311C134O9374C136O9380C138O9379C145O9398C151O9417C155O9463C158O9470C163O9510C164O9537C182O9543C187O9537,,
code-creation,LazyCompile,10,172934,0x334160bd656,110,fromString node:buffer:431:20,0x6682ea5dc8,~
code-source-info,0x334160bd656,18,12887,13336,C0O12915C2O12923C8O12968C14O12975C19O13000C25O13007C30O13021C35O13028C40O13045C41O13051C46O13069C51O13080C56O13119C59O13125C64O13156C66O13186C73O13192C78O13186C79O13244C85O13251C90O13265C95O13272C100O13289C101O13298C104O13305C109O13333,,
code-creation,LazyCompile,10,173007,0x334160bd80e,177,fromStringFast node:buffer:412:24,0x6682ea5d28,~
code-source-info,0x334160bd80e,18,12324,12864,C0O12362C5O12362C11O12387C14O12409C18O12418C21O12398C26O12431C31O12467C36O12438C41O12480C42O12486C44O12500C49O12511C51O12509C54O12497C59O12529C62O12529C65O12554C72O12569C77O12580C85O12554C91O12623C110O12623C116O12655C118O12666C123O12752C130O12771C135O12782C143O12756C149O12811C156O12825C162O12822C168O12836C171O12836C174O12852C176O12861,,
code-creation,LazyCompile,10,173071,0x334160bd9fe,36,FastBuffer node:internal/buffer:958:14,0x6682eb2d30,~
code-source-info,0x334160bd9fe,19,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,173100,0x334160bdafe,23,write node:buffer:592:12,0x6682ea6138,~
code-source-info,0x334160bdafe,18,17116,17180,C0O17150C17O17150C22O17180,,
code-creation,LazyCompile,10,173137,0x334160bdbee,42,alignPool node:buffer:158:19,0x6682ea5760,~
code-source-info,0x334160bdbee,18,4155,4265,C0O4191C4O4206C9O4220C19O4231C25O4244C34O4254C41O4264,,
code-creation,LazyCompile,10,173267,0x334160bdfae,251,promisify node:internal/util:324:19,0x25aadb2b1e8,~
script-source,12,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x0d\n};\x0d\n
code-source-info,0x334160bdfae,12,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
new,MemoryChunk,0xbfdd340000,262144
code-creation,LazyCompile,10,174100,0x334160bf4d6,65,EventEmitterMixin node:internal/event_target:827:27,0x2ee4c9f7ec0,~
script-source,38,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\x0d\n  }\x0d\n\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x334160bf4d6,38,24249,24683,C0O24302C23O24493C30O24525C33O24538C38O24493C43O24553C47O24587C52O24628C57O24587C62O24655C64O24680,,
code-creation,Eval,10,175663,0xbfdd3437a6,5, node:internal/modules/esm/translators:1:1,0xbfdd3432f0,~
script-source,111,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n    getOptionValue('--experimental-import-meta-resolve');\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url);\x0d\n}\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction initializeImportMeta(meta\x2C { url }) {\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve)\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {}\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {}\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing Web Assembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0xbfdd3437a6,111,0,11592,C0O0C4O11592,,
code-creation,Function,10,176187,0xbfdd344046,773, node:internal/modules/esm/translators:1:1,0xbfdd343720,~
code-source-info,0xbfdd344046,111,0,11592,C0O0C201O28C207O54C213O76C219O88C225O102C231O127C237O161C243O176C249O201C255O219C261O241C266O253C272O265C278O292C284O317C290O347C301O386C307O435C308O435C310O586C316O586C321O569C327O634C333O634C338O610C344O619C350O716C356O716C361O663C367O680C373O701C379O810C385O810C390O777C396O791C402O877C408O877C412O877C414O931C420O931C424O931C426O1022C432O1022C437O999C443O1014C449O1051C455O1051C460O1084C473O1085C479O1051C481O1168C487O1168C492O1140C498O1276C504O1276C509O1302C514O1206C520O1237C526O1343C532O1343C537O1319C543O1412C546O1412C550O1412C552O1468C555O1453C561O1508C567O1508C572O1489C577O1581C580O1581C584O1581C586O1653C592O1653C596O1653C598O1722C604O1722C609O1702C615O1784C621O1784C626O1768C632O1821C633O1821C635O2157C637O2157C643O2173C645O2193C649O2209C651O2232C655O2267C656O2267C658O3845C671O3845C677O5067C684O5076C687O5059C689O5110C693O5110C695O5130C708O5130C714O8236C727O8236C733O8698C746O8698C752O10702C765O10702C772O11591,,
code-creation,Eval,10,176443,0xbfdd34565e,5, node:internal/modules/esm/create_dynamic_module:1:1,0xbfdd345488,~
script-source,112,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0xbfdd34565e,112,0,1828,C0O0C4O1828,,
code-creation,Function,10,176555,0xbfdd345886,111, node:internal/modules/esm/create_dynamic_module:1:1,0xbfdd3455d8,~
code-source-info,0xbfdd345886,112,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,176964,0xbfdd346b3e,5, node:internal/vm/module:1:1,0xbfdd3465f8,~
script-source,113,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0xbfdd346b3e,113,0,12768,C0O0C4O12768,,
code-creation,Function,10,177562,0xbfdd347d9e,872, node:internal/vm/module:1:1,0xbfdd346ab8,~
code-source-info,0xbfdd347d9e
code-creation,Function,10,177657,0xbfdd3482de,30,<instance_members_initializer> node:internal/vm/module:256:3,0xbfdd347128,~
code-source-info,0xbfdd3482de,113,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,177819,0xbfdd3497a6,16,ESMLoader node:internal/modules/esm/loader:52:1,0x334160a7218,~
code-source-info,0xbfdd3497a6,102,1443,1443,C0O1443C15O1443,,
code-creation,LazyCompile,10,177865,0xbfdd34a73e,27,ModuleMap node:internal/modules/esm/module_map:15:14,0x334160a9170,~
code-source-info,0xbfdd34a73e,103,444,461,C3O450C7O456C11O450C26O460,,
code-creation,LazyCompile,10,177907,0xbfdd34a99e,13,desc.value node:internal/per_context/primordials:325:32,0x25aadb09f38,~
code-source-info,0xbfdd34a99e,6,9820,9881,C0O9838C7O9845C12O9868,,
code-creation,LazyCompile,10,177937,0xbfdd34aaa6,13,SafeIterator node:internal/per_context/primordials:270:16,0x25aadb09988,~
code-source-info,0xbfdd34aaa6,6,8054,8116,C0O8074C3O8091C7O8089C12O8115,,
code-creation,LazyCompile,10,177969,0xbfdd34abde,13,next node:internal/per_context/primordials:273:9,0x25aadb09a50,~
code-source-info,0xbfdd34abde,6,8126,8173,C0O8138C3O8155C8O8145C12O8166,,
code-creation,LazyCompile,10,178127,0xbfdd34ae5e,152,deprecate node:internal/util:96:19,0x25aadb2aa70,~
code-source-info,0xbfdd34ae5e,12,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,LazyCompile,10,178215,0xbfdd34b43e,28,getEmbedderOptions node:internal/options:32:28,0x3103a7f988,~
code-source-info,0xbfdd34b43e,93,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,178353,0xbfdd34b6e6,315,Module._initPaths node:internal/modules/cjs/loader:1227:29,0x334160a0a30,~
code-source-info,0xbfdd34b6e
code-creation,Eval,10,178551,0xbfdd34e57e,5, node:internal/modules/run_main:1:1,0xbfdd34e378,~
script-source,114,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href :\x0d\n      mainPath;\x0d\n    return esmLoader.import(main);\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  // Handle a Promise from running code that potentially does Top-Level Await.\x0d\n  // In that case\x2C it makes sense to set the exit code to a specific non-zero\x0d\n  // value if the main code never finishes running.\x0d\n  function handler() {\x0d\n    if (process.exitCode === undefined)\x0d\n      process.exitCode = 13;\x0d\n  }\x0d\n  process.on('exit'\x2C handler);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handler);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0xbfdd34e57e,114,0,2783,C0O0C4O2783,,
code-creation,Function,10,178691,0xbfdd34e876,149, node:internal/modules/run_main:1:1,0xbfdd34e4f8,~
code-source-info,0xbfdd34e876,114,0,2783,C0O0C60O28C66O90C72O90C77O139C83O147C89O159C95O219C101O219C106O200C112O262C118O262C122O262C124O2711C131O2733C137O2759C143O2726C148O2782,,
code-creation,LazyCompile,10,178800,0xbfdd34f02e,163,initializeESMLoader node:internal/bootstrap/pre_execution:431:29,0x3103a7dab8,~
code-source-info,0xbfdd34f02e,92,14133,15248,C0O14217C6O14217C13O14266C16O14262C21O14260C25O14286C30O14290C34O14310C40O14339C41O14346C42O14451C48O14451C53O14365C58O14406C63O14498C69O14498C74O14702C79O14660C83O14773C88O14734C92O14943C100O14947C106O15066C112O15066C117O15014C122O15022C127O15040C132O15113C138O15113C143O15133C145O15143C149O15158C151O15178C155O15203C157O15222C162O15247,,
code-creation,LazyCompile,10,178866,0xbfdd34f246,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x3341609ff20,~
code-source-info,0xbfdd34f246,99,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,178900,0xbfdd34f2ee,21,assert node:internal/assert:11:16,0x6682e98098,~
script-source,16,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0xbfdd34f2ee,16,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,LazyCompile,10,178965,0xbfdd34f4ee,53,loadPreloadModules node:internal/bootstrap/pre_execution:474:28,0x3103a7dba8,~
code-source-info,0xbfdd34f4ee,92,15740,16071,C0O15829C8O15829C13O15861C15O15898C21O15905C26O15986C32O15986C37O15986C42O15951C47O16031C52O16070,,
code-creation,LazyCompile,10,179027,0xbfdd34f6e6,166,Module._preloadModules node:internal/modules/cjs/loader:1257:34,0x334160a0ac0,~
code-source-info,0xbfdd34f6e6,99,40620,41215,C0O40636C5O40641C11O40670C12O40677C13O40683C17O40696C23O40896C33O40896C42O40948C45O40970C53O40995C58O40995C63O40970C68O40961C85O41025C88O41031C95O41036C100O41059C106O41072C114O41088C116O41088C119O41125C121O41141C125O41130C130O41166C137O41182C141O41166C146O41150C151O41112C154O41191C158O41204C165O41214,,
code-creation,LazyCompile,10,179091,0xbfdd34f906,94,Module node:internal/modules/cjs/loader:172:16,0x3341609f880,~
code-source-info,0xbfdd34f906,99,5455,5701,C14O5478C16O5486C20O5495C22O5507C25O5512C30O5512C35O5505C39O5528C40O5541C44O5550C49O5568C54O5568C60O5590C71O5590C76O5630C77O5644C81O5655C82O5667C86O5679C88O5693C93O5700,,
code-creation,LazyCompile,10,179213,0xbfdd34fafe,449,dirname node:path:653:10,0x2ee4c9e98c8,~
code-source-info,0xbfdd34fafe
code-creation,Function,11,179353,0x225ca7840c0,412,isWindowsDeviceRoot node:path:60:29,0x2ee4c9e9568,^
code-source-info,0x225ca7840c0,35,1991,2136,,,
code-creation,Function,11,179379,0x225ca7842c0,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x25aadb0fca0,^
code-source-info,0x225ca7842c0,9,10646,10999,,,
code-creation,Function,11,179409,0x225ca7845c0,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x25aadb0fbd0,^
code-source-info,0x225ca7845c0,9,9826,10409,,,
code-creation,Function,11,179430,0x225ca784b20,432,getCLIOptionsFromBinding node:internal/options:18:34,0x3103a7f8e8,^
code-source-info,0x225ca784b20,93,514,620,,,
code-creation,Function,11,179447,0x225ca784d40,104,next node:internal/per_context/primordials:273:9,0x25aadb09a50,^
code-source-info,0x225ca784d40,6,8126,8173,,,
code-creation,Function,11,179467,0x225ca784e20,252,SafeMap node:internal/per_context/primordials:351:16,0x25aadb09fe0,^
code-source-info,0x225ca784e20,6,10550,10567,,,
code-creation,LazyCompile,10,179522,0xbfdd350216,45,updateChildren node:internal/modules/cjs/loader:165:24,0x3341609f830,~
code-source-info,0xbfdd350216,99,5213,5390,C0O5257C7O5263C15O5278C19O5296C23O5304C26O5304C33O5351C38O5351C44O5389,,
code-creation,LazyCompile,10,179603,0xbfdd350406,251,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x334160a02d0,~
code-source-info,0xbfdd
code-creation,LazyCompile,10,179716,0xbfdd350866,127,Module.require node:internal/modules/cjs/loader:997:36,0x334160a06c0,~
code-source-info,0xbfdd350866,99,32200,32503,C0O32210C8O32210C13O32239C15O32246C20O32261C36O32267C41O32261C42O32379C51O32391C60O32409C63O32423C76O32423C93O32480C102O32492C126O32502,,
code-creation,LazyCompile,10,179850,0xbfdd350b4e,619,Module._load node:internal/modules/cjs/loader:757:24,0x334160a0520,~
code-source-info,0xbfdd350b4e
code-creation,LazyCompile,10,179981,0xbfdd350fe6,104,logger node:internal/util/debuglog:96:18,0x2ee4c9fcb90,~
code-source-info,0xbfdd350fe6,40,2994,3226,C0O2994C3O3027C30O3052C35O3059C38O3067C39O3083C45O3100C49O3090C53O3105C54O3121C60O3138C66O3147C70O3128C75O3152C76O3169C80O3176C87O3189C92O3185C98O3176C103O3214,,
code-creation,LazyCompile,10,180028,0xbfdd35113e,3, node:internal/per_context/primordials:276:21,0x25aadb09af8,~
code-source-info,0xbfdd35113e,6,8195,8226,C0O8207C2O8219,,
code-creation,LazyCompile,10,180075,0xbfdd351216,155,debug node:internal/util/debuglog:76:15,0x2ee4c9fcaf0,~
code-source-info,0xbfdd351216,40,2432,2869,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C81O2695C86O2702C89O2710C90O2726C96O2743C100O2733C104O2748C105O2764C111O2781C117O2790C121O2771C126O2795C127O2812C131O2819C138O2832C143O2828C149O2819C154O2857,,
code-creation,LazyCompile,10,180127,0xbfdd3513e6,41,init node:internal/util/debuglog:72:16,0x2ee4c9fcaa0,~
code-source-info,0xbfdd3513e6,40,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,180154,0xbfdd3514d6,2,testEnabled node:internal/util/debuglog:32:19,0x33416091b48,~
code-source-info,0xbfdd3514d6,40,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,180203,0xbfdd35166e,116,debuglogImpl node:internal/util/debuglog:49:22,0x2ee4c9fc8d8,~
code-source-info,0xbfdd35166e,40,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,180285,0xbfdd351826,10, node:internal/modules/cjs/loader:272:66,0x334160a01f0,~
code-source-info,0xbfdd351826,99,7980,8007,C0O7993C2O7999C9O8006,,
code-creation,LazyCompile,10,180312,0xbfdd3518d6,2,noop node:internal/util/debuglog:47:14,0x2ee4c9fc888,~
code-source-info,0xbfdd3518d6,40,1465,1473,C1O1472,,
code-creation,LazyCompile,10,180458,0xbfdd351cd6,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x334160a05a8,~
code-source-info,0xbfdd351cd
code-creation,LazyCompile,10,180603,0xbfdd352296,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x25aadb0fa00,~
code-source-info,0xbfdd352296,9,7592,7691,C0O7616C5O7629C10O7633C15O7633C21O7647C23O7665C27O7686,,
code-creation,LazyCompile,10,180674,0xbfdd35254e,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x334160a03f0,~
code-source-info,0xbfdd35254e
code-creation,LazyCompile,10,180758,0xbfdd35286e,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x3341609fba0,~
code-source-info,0xbfdd35286e,99,12696,12971,C0O12710C4O12723C5O12736C6O12753C12O12784C16O12793C17O12815C24O12818C29O12841C36O12844C44O12888C47O12903C52O12903C59O12911C62O12916C66O12909C69O12920C72O12943C73O12956C75O12970,,
code-creation,LazyCompile,10,180834,0xbfdd352aae,235,trySelf node:internal/modules/cjs/loader:441:17,0x3341609fbf0,~
code-source-info,0xbfdd352aae,99,12991,13849,C0O13018C4O13035C5O13048C6O13091C9O13091C17O13068C22O13079C27O13130C31O13146C37O13169C38O13182C39O13201C47O13220C48O13233C49O13243C51O13277C55O13269C60O13290C65O13317C70O13363C82O13321C89O13380C94O13398C97O13432C102O13437C107O13398C112O13396C118O13463C119O13476C123O13498C128O13527C133O13557C138O13579C142O13557C149O13622C152O13622C159O13649C168O13527C183O13505C188O13695C200O13718C203O13724C210O13729C215O13764C222O13808C226O13770C231O13764C232O13833C234O13833,,
code-creation,LazyCompile,10,180917,0xbfdd352d66,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x3341609f9c0,~
code-source-info,0xbfdd352d66,99,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,181061,0xbfdd3530c6,234,readPackage node:internal/modules/cjs/loader:290:21,0x3341609f970,~
code-source-info,0xbfdd3530c6,99,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,181172,0xbfdd3533ce,199,read node:internal/modules/package_json_reader:16:14,0x334160a55f0,~
code-source-info,0xbfdd3533ce,100,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,181261,0xbfdd3537ee,232,toNamespacedPath node:path:618:19,0x2ee4c9e9858,~
code-source-info,0xbfdd3537ee,35,20087,21202,C0O20153C6O20190C12O20197C17O20211C19O20223C20O20252C25O20258C30O20258C36O20297C43O20304C48O20317C50O20329C51O20337C58O20341C66O20388C68O20384C73O20446C81O20450C89O20497C91O20493C96O20542C104O20542C110O20595C112O20608C114O20604C121O20639C123O20635C128O20739C133O20761C139O20761C148O20801C151O20834C156O20866C161O20866C167O20846C175O20920C181O20920C189O20967C191O20963C198O20988C204O20988C212O21035C214O21031C219O21138C224O21155C228O21170C229O21185C231O21197,,
code-creation,LazyCompile,10,181588,0xbfdd354026,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x334160a0240,~
code-source-info,0xbfdd
code-creation,LazyCompile,10,181708,0xbfdd3543d6,109,isAbsolute node:path:402:13,0x2ee4c9e9730,~
code-source-info,0xbfdd3543d6,35,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,181829,0xbfdd354666,85,stat node:internal/modules/cjs/loader:151:14,0x3341609f7e0,~
code-source-info,0xbfdd354666,99,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,181940,0xbfdd3547be,44,tryExtensions node:internal/modules/cjs/loader:400:23,0x3341609fb00,~
code-source-info,0xbfdd3547be,99,11900,12093,C0O11936C2O11948C6O11941C11O11985C16O12001C19O11995C23O11985C29O12022C31O12045C33O12061C34O11957C39O11923C42O12077C43O12090,,
code-creation,LazyCompile,10,181988,0xbfdd3548ee,50,tryFile node:internal/modules/cjs/loader:384:17,0x3341609fa60,~
code-source-info,0xbfdd3548ee,99,11460,11661,C0O11498C3O11498C8O11520C9O11527C14O11534C15O11541C16O11545C24O11570C26O11585C31O11597C36O11597C41O11618C42O11627C45O11634C49O11658,,
code-creation,LazyCompile,10,182129,0xbfdd354a36,42,toRealPath node:internal/modules/cjs/loader:393:20,0x3341609fab0,~
code-source-info,0xbfdd354a36,99,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,182437,0xbfdd354e66,1036,realpathSync node:fs:2408:22,0x3f9d3569ce0,~
script-source,77,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void | never}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = {};\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength\x2C\x0d\n      position\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C buffer\x2C options)\x0d\n    const options = offset || {};\x0d\n\x0d\n    ({ offset = 0\x2C length = buffer.byteLength\x2C position } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch { }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | Object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | Object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      if (cache) cache.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {Object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {Object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      if (promises === null)\x0d\n        promises = require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xbfdd354e
tick,0x7ff6a7ec24e2,186413,0,0x0,3,0x7ff6a7f1e5b0,0xbfdd354a59,0xbfdd35491b,0xbfdd3547d5,0xbfdd35417c,0xbfdd351f67,0xbfdd350bd8,0xbfdd3508b2,0xbfdd34f773,0xbfdd34f51d,0x33416081bd0,0x3103a7b5a5
code-creation,LazyCompile,10,186516,0xbfdd35b50e,123,getOptions node:internal/fs/utils:314:20,0x3f9d3572438,~
script-source,78,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0xbfdd35b50e,78,7531,8175,C0O7562C14O7656C16O7678C17O7689C23O7729C29O7774C31O7798C35O7814C42O7850C48O7890C66O7896C71O7890C72O7986C79O7995C84O8014C87O8037C92O8014C96O8065C102O8094C107O8122C115O8094C120O8157C122O8172,,
code-creation,LazyCompile,10,187760,0xbfdd35d466,48,assertEncoding node:internal/fs/utils:151:24,0x3f9d3571e40,~
code-source-info,0xbfdd35d466,78,3677,3859,C0O3693C6O3710C9O3717C14O3717C21O3761C24O3789C40O3795C45O3789C47O3858,,
code-creation,LazyCompile,10,187864,0xbfdd35d57e,20,toPathIfFileURL node:internal/url:1496:25,0x2ee4c9dc0f8,~
script-source,33,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: { enumerable: true }\x2C\x0d\n  delete: { enumerable: true }\x2C\x0d\n  get: { enumerable: true }\x2C\x0d\n  getAll: { enumerable: true }\x2C\x0d\n  has: { enumerable: true }\x2C\x0d\n  set: { enumerable: true }\x2C\x0d\n  sort: { enumerable: true }\x2C\x0d\n  entries: { enumerable: true }\x2C\x0d\n  forEach: { enumerable: true }\x2C\x0d\n  keys: { enumerable: true }\x2C\x0d\n  values: { enumerable: true }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(flags\x2C input) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  href: { enumerable: true }\x2C\x0d\n  origin: { enumerable: true }\x2C\x0d\n  protocol: { enumerable: true }\x2C\x0d\n  username: { enumerable: true }\x2C\x0d\n  password: { enumerable: true }\x2C\x0d\n  host: { enumerable: true }\x2C\x0d\n  hostname: { enumerable: true }\x2C\x0d\n  port: { enumerable: true }\x2C\x0d\n  pathname: { enumerable: true }\x2C\x0d\n  search: { enumerable: true }\x2C\x0d\n  searchParams: { enumerable: true }\x2C\x0d\n  hash: { enumerable: true }\x2C\x0d\n  toJSON: { enumerable: true }\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0xbfdd35d57e,33,42956,43081,C0O42977C3O42982C9O43017C11O43038C12O43042C15O43049C19O43078,,
code-creation,LazyCompile,10,189779,0xbfdd3606ae,17,isURLInstance node:internal/url:1492:23,0x2ee4c9dc0a8,~
code-source-info,0xbfdd3606ae,33,42829,42928,C0O42850C3O42871C6O42896C12O42918C16O42925,,
code-creation,LazyCompile,10,189826,0xbfdd36080e,81, node:internal/fs/utils:668:38,0x3f9d3572e60,~
code-source-info,0xbfdd36080e,78,18808,19088,C14O18842C22O18875C25O18875C31O18902C36O18933C49O18908C54O18902C55O19001C68O19001C74O19040C76O19070C78O19070C80O19087,,
code-creation,LazyCompile,10,189880,0xbfdd360a1e,110, node:internal/fs/utils:357:35,0x3f9d35724d8,~
code-source-info,0xbfdd360a1e,78,8925,9534,C16O8990C21O9044C26O9044C31O9141C37O9164C41O9193C45O9210C51O9210C60O9262C64O9283C69O9283C76O9329C77O9336C78O9359C94O9359C100O9478C104O9501C106O9501C107O9520C109O9531,,
code-creation,LazyCompile,10,189925,0xbfdd360b96,16,isUint8Array node:internal/util/types:13:22,0x6682e97658,~
script-source,15,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xbfdd360b96,15,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,190097,0xbfdd360ffe,23,splitRoot node:fs:2358:33,0x3f9d3569b98,~
code-source-info,0xbfdd360ffe,77,65046,65112,C0O65059C9O65086C12O65066C19O65103C22O65107,,
code-creation,LazyCompile,10,190257,0xbfdd3611e6,63,handleErrorFromBinding node:internal/fs/utils:340:32,0x3f9d3572488,~
code-source-info,0xbfdd3611e6,78,8269,8780,C0O8288C6O8352C11O8352C16O8375C24O8375C29O8433C31O8433C32O8460C38O8692C43O8719C51O8692C56O8766C60O8756C62O8779,,
code-creation,LazyCompile,10,190314,0xbfdd36135e,53,nextPart node:fs:2384:31,0x3f9d3569c90,~
code-source-info,0xbfdd36135e,77,65803,66054,C0O65830C4O65826C9O65863C14O65863C20O65947C22O65958C24O65954C31O65988C33O65984C38O66017C40O66026C41O65840C47O65817C50O66039C52O66049,,
code-creation,LazyCompile,10,190411,0xbfdd3614be,34,isFileType node:fs:205:20,0x3f9d3567900,~
code-source-info,0xbfdd3614be,77,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,190633,0x225ca784f80,6232,resolve node:path:158:10,0x2ee4c9e9670,^
code-source-info,0x225ca784f80,35,4875,9786,,,
code-creation,Function,11,190674,0x225ca786840,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x334160a02d0,^
code-source-info,0x225ca786840,99,17765,19316,,,
code-creation,Function,11,190695,0x225ca7870c0,544,nextPart node:fs:2384:31,0x3f9d3569c90,^
code-source-info,0x225ca7870c0,77,65803,66054,,,
code-creation,LazyCompile,10,191044,0xbfdd3621d6,72,encodeRealpathResult node:fs:2371:30,0x3f9d3569c40,~
code-source-info,0xbfdd3621d6,77,65392,65658,C0O65415C4O65440C10O65460C17O65469C22O65486C24O65500C25O65521C30O65528C35O65528C41O65557C48O65566C53O65587C55O65603C56O65628C61O65645C66O65628C71O65655,,
code-creation,LazyCompile,10,191116,0xbfdd362366,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x3341609a238,~
code-source-info,0xbfdd362366,98,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,191203,0xbfdd362cb6,246,Module.load node:internal/modules/cjs/loader:969:33,0x334160a0638,~
code-source-info,0xbfdd362cb6,99,31233,32069,C0O31249C8O31295C16O31249C21O31305C26O31318C32O31305C36O31330C38O31344C42O31359C45O31379C52O31396C55O31401C60O31401C66O31379C71O31370C75O31444C78O31444C83O31523C91O31527C101O31580C106O31591C112O31606C124O31612C129O31606C130O31654C133O31661C140O31672C144O31683C150O31704C151O31716C155O31747C160O31756C165O31860C170O31897C175O31908C187O31949C192O31956C197O31956C204O31970C206O31968C211O32003C216O32012C221O32012C228O32038C233O32047C238O32047C245O32068,,
code-creation,LazyCompile,10,191314,0xbfdd362f66,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x3341609fb50,~
code-source-info,0xbfdd362f66,99,12225,12666,C0O12254C5O12259C10O12259C16O12286C18O12311C20O12338C22O12407C36O12360C44O12407C49O12422C51O12441C55O12451C56O12461C61O12468C63O12516C68O12535C74O12575C77O12586C84O12597C89O12617C91O12641C92O12344C95O12650C97O12663,,
code-creation,LazyCompile,10,191429,0xbfdd363146,415,basename node:path:749:11,0x2ee4c9e9930,~
code-source-info,0xbfdd
code-creation,LazyCompile,10,191608,0xbfdd363666,485,Module._extensions..js node:internal/modules/cjs/loader:1110:37,0x334160a07d8,~
code-source-info,0xbfdd
code-creation,LazyCompile,10,191752,0xbfdd363ac6,376,readFileSync node:fs:450:22,0x3f9d3567db8,~
code-source-info,0xbfdd363ac
code-creation,LazyCompile,10,191848,0xbfdd363de6,30,isEncoding node:buffer:529:40,0x6682ea6010,~
code-source-info,0xbfdd363de6,18,15302,15437,C0O15318C6O15366C12O15373C20O15392C23O15392C28O15420C29O15434,,
code-creation,LazyCompile,10,191884,0xbfdd363eee,30,normalizeEncoding node:internal/util:160:27,0x25aadb2ad20,~
code-source-info,0xbfdd363eee,12,4365,4473,C0O4376C7O4399C14O4417C19O4430C21O4444C22O4448C25O4455C29O4470,,
code-creation,LazyCompile,10,191915,0xbfdd363fd6,9,isUint32 node:internal/validators:39:18,0x6682e9a730,~
code-source-info,0xbfdd363fd6,17,815,862,C0O828C2O852C5O841C8O859,,
code-creation,LazyCompile,10,191959,0xbfdd36412e,113,openSync node:fs:576:18,0x3f9d3567fa0,~
code-source-info,0xbfdd36412e,77,15001,15391,C0O15026C5O15033C11O15080C16O15080C21O15105C37O15112C44O15165C51O15167C58O15193C63O15201C70O15206C73O15217C78O15217C95O15201C101O15342C106O15342C110O15374C112O15388,,
code-creation,LazyCompile,10,192002,0xbfdd3642ae,37, node:internal/fs/utils:680:42,0x3f9d3572eb0,~
code-source-info,0xbfdd3642ae,78,19135,19274,C14O19191C19O19191C24O19226C29O19226C34O19259C36O19271,,
code-creation,LazyCompile,10,192079,0xbfdd364686,515,stringToFlags node:internal/fs/utils:555:23,0x3f9d3572cd0,~
code-source-info,0xbfdd
code-creation,LazyCompile,10,192194,0xbfdd364a76,97,parseFileMode node:internal/validators:58:23,0x6682e9a780,~
code-source-info,0xbfdd364a76,17,1525,1832,C0O1549C11O1567C17O1605C24O1630C27O1610C34O1657C41O1702C52O1663C57O1657C58O1725C66O1733C73O1769C89O1769C94O1816C96O1829,,
code-creation,LazyCompile,10,192253,0xbfdd364c46,206, node:internal/validators:83:3,0x6682e9a840,~
code-source-info,0xbfdd364c46,17,2318,2913,C36O2461C39O2466C45O2491C51O2533C67O2539C72O2533C73O2604C78O2609C84O2644C100O2650C105O2644C106O2715C116O2754C129O2767C142O2721C147O2715C148O2794C150O2804C157O2819C162O2835C172O2874C185O2887C198O2841C203O2835C205O2912,,
code-creation,LazyCompile,10,192295,0xbfdd364e0e,9,isInt32 node:internal/validators:35:17,0x6682e9a378,~
code-source-info,0xbfdd364e0e,17,749,794,C0O762C2O786C5O775C8O791,,
code-creation,LazyCompile,10,192391,0xbfdd364f16,66,tryStatSync node:fs:404:21,0x3f9d3567cc8,~
code-source-info,0xbfdd364f16,77,10733,10951,C0O10765C2O10786C7O10794C22O10794C28O10839C36O10863C38O10880C43O10883C48O10883C53O10903C58O10909C62O10903C63O10935C65O10948,,
code-creation,LazyCompile,10,192462,0xbfdd36508e,96,tryCreateBuffer node:fs:414:25,0x3f9d3567d18,~
code-source-info,0xbfdd36508e,77,10979,11279,C0O11017C2O11030C7O11052C9O11063C11O11061C16O11086C23O11092C28O11086C29O11137C34O11153C39O11153C45O11177C57O11183C58O11212C65O11226C67O11236C72O11239C77O11239C93O11262C95O11276,,
code-creation,LazyCompile,10,192504,0xbfdd3651e6,17,allocUnsafe node:buffer:372:42,0x6682ea5b88,~
code-source-info,0xbfdd3651e6,18,11242,11300,C0O11254C5O11254C9O11275C12O11282C16O11297,,
code-creation,LazyCompile,10,192537,0xbfdd3652ee,54, node:buffer:348:36,0x6682ea5ad0,~
code-source-info,0xbfdd3652ee,18,10516,10676,C0O10531C8O10531C13O10564C14O10575C21O10591C23O10588C28O10611C33O10643C46O10617C51O10611C53O10675,,
code-creation,LazyCompile,10,192570,0xbfdd365416,30,validateNumber node:internal/validators:122:24,0x6682e9a980,~
code-source-info,0xbfdd365416,17,3653,3765,C0O3672C6O3708C22O3714C27O3708C29O3764,,
code-creation,LazyCompile,10,192613,0xbfdd36552e,119,allocate node:buffer:397:18,0x6682ea5cd8,~
code-source-info,0xbfdd36552e,18,11969,12297,C0O11981C1O11990C6O12003C11O12010C16O12027C17O12036C20O12055C24O12064C27O12045C32O12079C34O12091C39O12102C41O12100C44O12088C49O12122C52O12122C55O12151C62O12166C67O12177C75O12151C81O12201C88O12215C94O12212C100O12226C103O12226C106O12244C108O12253C109O12262C114O12269C118O12294,,
code-creation,LazyCompile,10,192675,0xbfdd3656ee,86,tryReadSync node:fs:429:21,0x3f9d3567d68,~
code-source-info,0xbfdd3656ee,77,11303,11548,C0O11353C2O11366C7O11391C12O11406C29O11406C35O11443C47O11449C48O11478C55O11492C57O11502C62O11505C67O11505C83O11528C85O11545,,
code-creation,LazyCompile,10,192746,0xbfdd3658d6,239,readSync node:fs:684:18,0x3f9d3568070,~
code-source-info,0xbfdd3658d6,77,17811,18783,C0O17811C2O17855C7O17860C13O17885C18O17885C22O17928C29O17935C34O18008C40O18032C52O18044C58O18060C64O18072C70O18105C75O18132C80O18161C93O18161C98O18209C105O18227C106O18238C111O18252C112O18261C113O18283C119O18294C124O18308C140O18314C145O18308C146O18440C151O18488C162O18440C167O18506C172O18533C176O18553C184O18553C189O18610C191O18632C196O18640C221O18640C227O18734C232O18734C236O18766C238O18780,,
code-creation,LazyCompile,10,192812,0xbfdd365b2e,52, node:internal/fs/utils:686:40,0x3f9d3572f00,~
code-source-info,0xbfdd365b2e,78,19319,19448,C14O19349C22O19353C29O19378C30O19387C31O19398C44O19398C49O19435C51O19445,,
code-creation,LazyCompile,10,192851,0xbfdd365c9e,51, node:internal/validators:190:40,0x6682e9aba8,~
code-source-info,0xbfdd365c9e,17,5851,6087,C14O5885C19O5890C25O5924C30O5955C43O5930C48O5924C50O6086,,
code-creation,LazyCompile,10,192896,0xbfdd365df6,151, node:internal/validators:72:3,0x6682e9a7f0,~
code-source-info,0xbfdd365df6,17,1880,2268,C12O1900C25O1930C32O1964C38O2002C54O2008C59O2002C60O2062C65O2067C71O2098C87O2104C92O2098C93O2158C95O2168C102O2183C107O2197C117O2236C130O2249C143O2203C148O2197C150O2267,,
code-creation,LazyCompile,10,192954,0xbfdd365ffe,103, node:internal/fs/utils:636:3,0x3f9d3572dc0,~
code-source-info,0xbfdd365ffe,78,17893,18283,C0O17934C1O17945C6O17959C22O17965C27O17959C28O18025C29O18036C34O18050C50O18056C55O18050C56O18116C58O18127C64O18136C69O18161C82O18251C95O18167C100O18161C102O18282,,
code-creation,LazyCompile,10,193013,0xbfdd366306,151, node:internal/fs/utils:886:42,0x3f9d3573220,~
code-source-info,0xbfdd366306,78,24850,25422,C0O24875C6O24916C14O24916C21O24965C27O25006C32O25029C35O25024C37O25021C47O25055C53O25062C56O25049C61O25078C77O25162C80O25157C98O25182C104O25189C117O25084C122O25078C125O25266C143O25272C148O25266C150O25421,,
code-creation,LazyCompile,10,193093,0xbfdd3664be,47,closeSync node:fs:526:19,0x3f9d3567ec8,~
code-source-info,0xbfdd3664be,77,13820,13948,C0O13830C5O13835C11O13872C13O13879C18O13887C31O13887C36O13917C41O13917C46O13947,,
code-creation,LazyCompile,10,193169,0xbfdd3665f6,162,toString node:buffer:782:46,0x6682ea7a10,~
code-source-info,0xbfdd3665f6,18,24045,24637,C0O24045C2O24087C8O24094C13O24120C20O24138C25O24120C31O24146C32O24174C37O24187C38O24197C43O24208C48O24227C50O24237C55O24250C57O24260C58O24274C65O24291C71O24320C76O24332C83O24356C90O24371C92O24379C97O24394C99O24404C100O24410C104O24455C109O24455C115O24477C116O24495C119O24495C124O24524C126O24552C133O24558C138O24552C139O24610C156O24610C161O24634,,
code-creation,LazyCompile,10,193286,0xbfdd3668b6,499,getEncodingOps node:buffer:678:24,0x6682ea7868,~
code-source-info,0xbfdd3668b
code-creation,LazyCompile,10,193406,0xbfdd366c9e,12,slice node:buffer:593:12,0x6682ea6230,~
code-source-info,0xbfdd366c9e,18,17194,17240,C0O17219C5O17219C11O17240,,
code-creation,LazyCompile,10,193756,0xbfdd367786,499,Module._compile node:internal/modules/cjs/loader:1055:37,0x334160a0748,~
code-source-info,0xbfdd367786,99,33814,35707,C0O33843C2O33861C4O33875C11O33885C20O33904C25O33916C30O33946C35O33965C40O33974C45O33974C51O34011C56O34018C61O34027C66O34027C72O34074C86O34074C91O34147C103O34147C109O34210C111O34219C119O34223C128O34266C135O34288C141O34384C144O34396C151O34400C159O34433C162O34455C170O34480C177O34484C185O34455C193O34446C203O34681C210O34688C215O34701C221O34701C226O34688C231O34681C237O34768C242O34781C248O34853C256O34874C262O34905C264O34901C269O34928C273O34943C279O34958C285O34977C290O35005C295O35058C300O35063C305O35063C311O35101C316O35101C322O35146C324O35178C329O35208C330O35235C333O35244C339O35261C344O35268C349O35280C357O35278C363O35298C367O35327C388O35336C396O35475C401O35514C410O35553C419O35562C428O35571C437O35579C446O35589C459O35484C465O35608C469O35634C475O35645C481O35662C486O35669C490O35679C496O35690C498O35704,,
code-creation,LazyCompile,10,193903,0xbfdd367cf6,229,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x334160973a0,~
code-source-info,0xbfdd367cf6,96,2312,3381,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2655C69O2645C73O2668C74O2675C75O2698C80O2725C85O2698C91O2805C93O2836C96O2864C101O2871C106O2836C112O2907C117O2927C122O2934C127O2957C131O2989C136O3007C141O3011C148O3041C155O3073C165O3104C171O3119C175O3007C183O3250C188O3268C193O3272C201O3306C211O3337C217O3352C221O3268C228O3380,,
code-creation,LazyCompile,10,193968,0xbfdd368756,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x33416097300,~
code-source-info,0xbfdd368756,96,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,194016,0xbfdd3688ce,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x33416097350,~
code-source-info,0xbfdd3688ce,96,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,194059,0xbfdd368a46,30,validateBoolean node:internal/validators:138:25,0x6682e9aa40,~
code-source-info,0xbfdd368a46,17,4179,4293,C0O4198C6O4235C22O4241C27O4235C29O4292,,
code-creation,LazyCompile,10,194134,0xbfdd368e3e,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0x3341609fdd0,~
code-source-info,0xbfdd368e3e,99,32708,33600,C0O32708C9O32752C17O32788C22O32795C27O32795C33O32815C40O32825C45O32842C52O32860C56O32952C64O32825C70O33111C74O33131C81O33141C86O33157C98O33279C102O33296C113O33141C118O33469C130O33494C135O33506C142O33517C147O33547C157O33547C162O33582C164O33582,,
code-creation,LazyCompile,10,194300,0xbfdd369646,472,compileFunction node:vm:308:25,0x1d24e4c7960,~
script-source,85,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = {}) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = {}) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = {}) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = {}) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0xbfdd
code-creation,LazyCompile,10,194963,0xbfdd36a80e,95, node:internal/validators:167:39,0x6682e9aae0,~
code-source-info,0xbfdd36a80e,17,5132,5418,C16O5169C21O5174C27O5202C43O5208C48O5202C49O5274C56O5281C61O5316C66O5339C71O5357C87O5363C92O5357C94O5417,,
code-creation,LazyCompile,10,195001,0xbfdd36a96e,27, node:vm:313:27,0xbfdd369318,~
code-source-info,0xbfdd36a96e,85,10064,10115,C0O10078C10O10110C21O10078C26O10115,,
code-creation,LazyCompile,10,195046,0xbfdd36aafe,149, node:internal/validators:100:40,0x6682e9a890,~
code-source-info,0xbfdd36aafe,17,2960,3485,C0O2992C3O2997C9O3021C15O3061C31O3067C36O3061C37O3128C42O3133C48O3166C64O3172C69O3166C70O3245C80O3299C90O3338C109O3305C114O3299C115O3377C120O3399C125O3413C141O3419C146O3413C148O3484,,
code-creation,Eval,10,195106,0xbfdd36ae3e,5, C:\\Users\\Aaron\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0xbfdd36acf8,~
script-source,115,C:\\Users\\Aaron\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0xbfdd36ae3e,115,0,119,C0O0C4O119,,
code-creation,Function,10,195137,0xbfdd36af26,29, C:\\Users\\Aaron\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0xbfdd36adb8,~
code-source-info,0xbfdd36af26,115,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,LazyCompile,10,195228,0xbfdd36b19e,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0xbfdd346b70,~
code-source-info,0xbfdd36b19e,113,12139,12597,C0O12139C13O12209C18O12594,,
code-creation,LazyCompile,10,195302,0xbfdd36c376,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x3341609a288,~
code-source-info,0xbfdd36c376,98,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,195366,0xbfdd36c6f6,14,require node:internal/modules/cjs/helpers:101:31,0xbfdd36c248,~
code-source-info,0xbfdd36c6f6,98,3208,3256,C0O3224C3O3235C8O3235C13O3249,,
code-creation,LazyCompile,10,195403,0xbfdd36c836,10, node:internal/modules/cjs/helpers:29:66,0x3341609a458,~
code-source-info,0xbfdd36c836,98,838,865,C0O851C2O857C9O864,,
code-creation,LazyCompile,10,195449,0xbfdd36c9ae,129,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0x25aadb0fa78,~
code-source-info,0xbfdd36c9ae,9,7788,8476,C0O7808C6O7955C16O7998C33O7961C38O7955C39O8037C44O8037C48O8080C54O8272C61O8303C69O8272C75O8328C80O8346C90O8362C93O8378C98O8362C102O8344C106O8405C111O8405C115O8431C120O8431C124O8463C128O8471,,
code-creation,Eval,10,195516,0xbfdd36cd0e,5, node:cluster:1:1,0xbfdd36cbc8,~
script-source,116,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0xbfdd36cd0e,116,0,1316,C0O0C4O1316,,
code-creation,Function,10,195587,0xbfdd36cdb6,39, node:cluster:1:1,0xbfdd36cc88,~
code-source-info,0xbfdd36cdb6,116,0,1316,C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315,,
code-creation,Eval,10,195913,0xbfdd36d9ce,5, node:internal/cluster/primary:1:1,0xbfdd36d648,~
script-source,117,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\nconst minPort = 1024;\x0d\nconst maxPort = 65535;\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet debugPortOffset = 1;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\n  const nodeOptions = process.env.NODE_OPTIONS || '';\x0d\n\x0d\n  if (ArrayPrototypeSome(execArgv\x2C\x0d\n                         (arg) => RegExpPrototypeTest(debugArgRegex\x2C arg)) ||\x0d\n      RegExpPrototypeTest(debugArgRegex\x2C nodeOptions)) {\x0d\n    let inspectPort;\x0d\n    if ('inspectPort' in cluster.settings) {\x0d\n      if (typeof cluster.settings.inspectPort === 'function')\x0d\n        inspectPort = cluster.settings.inspectPort();\x0d\n      else\x0d\n        inspectPort = cluster.settings.inspectPort;\x0d\n\x0d\n      validatePort(inspectPort);\x0d\n    } else {\x0d\n      inspectPort = process.debugPort + debugPortOffset;\x0d\n      if (inspectPort > maxPort)\x0d\n        inspectPort = inspectPort - maxPort + minPort - 1;\x0d\n      debugPortOffset++;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n\x0d\n  signo = signo || 'SIGTERM';\x0d\n\x0d\n  if (this.isConnected()) {\x0d\n    this.once('disconnect'\x2C () => proc.kill(signo));\x0d\n    this.disconnect();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  proc.kill(signo);\x0d\n};\x0d\n
code-source-info,0xbfdd36d9ce,117,0,11181,C0O0C4O11181,,
code-creation,Function,10,196435,0xbfdd36e396,640, node:internal/cluster/primary:1:1,0xbfdd36d948,~
code-source-info,0xbfdd36e
code-creation,Eval,10,197039,0xbfdd370276,5, node:child_process:1:1,0xbfdd36fda0,~
script-source,118,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath /* \x2C args\x2C options */) {\x0d\n  validateString(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n  let options = {};\x0d\n  let args = [];\x0d\n  let pos = 1;\x0d\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\x0d\n    args = arguments[pos++];\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && arguments[pos] != null) {\x0d\n    if (typeof arguments[pos] !== 'object') {\x0d\n      throw new ERR_INVALID_ARG_VALUE(`arguments[${pos}]`\x2C arguments[pos]);\x0d\n    }\x0d\n\x0d\n    options = { ...arguments[pos++] };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file /* \x2C args\x2C options\x2C callback */) {\x0d\n  let args = [];\x0d\n  let callback;\x0d\n  let options;\x0d\n\x0d\n  // Parse the optional positional parameters.\x0d\n  let pos = 1;\x0d\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\x0d\n    args = arguments[pos++];\x0d\n  } else if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && typeof arguments[pos] === 'object') {\x0d\n    options = arguments[pos++];\x0d\n  } else if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && typeof arguments[pos] === 'function') {\x0d\n    callback = arguments[pos++];\x0d\n  }\x0d\n\x0d\n  if (!callback && pos < arguments.length && arguments[pos] != null) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C arguments[pos]);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      ex = new Error('Command failed: ' + cmd + '\\n' + stderr);\x0d\n      ex.killed = child.killed || killed;\x0d\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\x0d\n      ex.signal = signal;\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    err = new Error(msg);\x0d\n  }\x0d\n  if (err) {\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0xbfdd370276,118,0,25580,C0O0C4O25580,,
code-creation,Function,10,198289,0xbfdd370cd6,748, node:child_process:1:1,0xbfdd3701f0,~
code-source-info,0xbfdd370cd
tick,0x7ff6a88cb1a1,198381,1,0x7ff6a79aa4a0,3,0x7ff6a82ef2d0,0x225ca7847fb,0x225ca784545,0xbfdd36e471,0x225ca7848c3,0x225ca784545,0xbfdd36cdd3,0x225ca7848c3,0xbfdd36c9da,0xbfdd36239b,0xbfdd350c7e,0xbfdd3508b2,0xbfdd36c6fe,0xbfdd36af29,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd34f773,0xbfdd34f51d,0x33416081bd0,0x3103a7b5a5
code-creation,Eval,10,199265,0xbfdd375f56,5, node:internal/child_process:1:1,0xbfdd375868,~
script-source,119,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    target.emit(event\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0xbfdd375f56,119,0,31901,C0O0C4O31901,,
code-creation,Function,10,200667,0xbfdd377566,1253, node:internal/child_process:1:1,0xbfdd375ed0,~
code-source-info,0xbfdd
code-creation,Function,10,200803,0xbfdd377cce,35,<instance_members_initializer> node:internal/child_process:524:3,0xbfdd376c30,~
code-source-info,0xbfdd377cce,119,14177,14236,C3O14188C16O14205C26O14231C34O14236,,
new,MemoryChunk,0x2264540000,262144
code-creation,Eval,10,201891,0xbfdd37be0e,5, node:net:1:1,0xbfdd37b630,~
script-source,120,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  uvExceptionWithHostPort\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kSetNoDelay] = false;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const er = new Error('This socket has been ended by the other party');\x0d\n  er.code = 'EPIPE';\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C\x0d\n              enable ? this.setNoDelay : () => this.setNoDelay(enable));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  const newValue = enable === undefined ? true : !!enable;\x0d\n  if (this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = newValue;\x0d\n    this._handle.setNoDelay(newValue);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(setting\x2C msecs) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C () => this.setKeepAlive(setting\x2C msecs));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive)\x0d\n    this._handle.setKeepAlive(setting\x2C ~~(msecs / 1000));\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  let self = handle[owner_symbol];\x0d\n\x0d\n  if (self.constructor.name === 'ReusedHandle') {\x0d\n    self = self.handle;\x0d\n  }\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0xbfdd37be0e,120,0,49543,C0O0C4O49543,,
code-creation,Function,10,204333,0xbfdd37ecde,2513, node:net:1:1,0xbfdd37bd88,~
code-source-info,0xbfdd37ecde,120,0,49543,C0O0C411O1183C417O1200C423O1226C429O1238C435O1248C441O1259C447O1275C453O1294C459O1319C464O1344C469O1394C475O1394C479O1394C481O1429C487O1429C491O1429C493O1461C499O1461C504O1494C518O1495C524O1461C526O1628C532O1628C537O1553C543O1562C548O1573C553O1584C559O1609C565O1669C571O1669C575O1669C577O1758C580O1758C585O1709C591O1727C597O1741C603O1803C609O1803C614O1792C620O1851C623O1851C628O1831C634O1902C637O1902C642O1885C648O2002C651O2002C656O1946C662O1954C668O1984C674O2102C677O2102C682O2043C688O2052C694O2083C700O2238C706O2238C711O2144C717O2159C728O2201C734O2218C740O2448C746O2448C751O2283C757O2301C763O2318C769O2335C774O2356C780O2368C785O2385C790O2406C796O2418C802O2432C808O2844C814O2844C819O2844C824O2515C830O2548C836O2575C842O2603C848O2629C854O2658C860O2690C866O2719C872O2743C878O2770C884O2789C890O2815C896O2898C902O2898C907O2881C913O3061C919O3061C924O2942C930O2966C936O2987C942O3005C948O3024C954O3041C960O3122C963O3122C967O3122C969O3224C975O3224C980O3164C986O3197C992O3307C993O3307C995O3321C996O3321C998O3331C999O3331C1001O3347C1002O3347C1004O3390C1010O3390C1015O3373C1021O3431C1027O3431C1032O3418C1038O3488C1040O3488C1042O3526C1044O3526C1046O3553C1049O3561C1056O3570C1059O3553C1061O3599C1065O3599C1067O7199C1070O7199C1074O7199C1076O7244C1079O7244C1083O7244C1085O7290C1088O7290C1092O7290C1094O11513C1097O11541C1105O11559C1110O11566C1115O11513C1120O11579C1126O11615C1131O11579C1136O11658C1139O11665C1148O11687C1152O11923C1155O11930C1164O11947C1168O13550C1171O13557C1178O13578C1182O13603C1185O13610C1194O13631C1198O14159C1201O14166C1210O14187C1214O14660C1217O14667C1226O14690C1230O14956C1233O14963C1242O14981C1246O15036C1252O15064C1266O15100C1274O15036C1279O15155C1285O15183C1299O15210C1307O15155C1312O15302C1318O15330C1332O15365C1340O15302C1345O15702C1351O15730C1365O15765C1373O15702C1378O15858C1384O15886C1389O15897C1395O15921C1406O15858C1411O16302C1414O16309C1423O16325C1427O16572C1430O16579C1439O16593C1443O16794C1446O16801C1455O16817C1459O17171C1462O17178C1471O17195C1475O17394C1478O17401C1487O17416C1491O17770C1494O17777C1503O17799C1507O17963C1510O17970C1519O17989C1523O18988C1526O18995C1535O19018C1539O19498C1547O19498C1552O19622C1560O19622C1565O19725C1573O19725C1578O19825C1586O19825C1596O19921C1599O19928C1608O19951C1616O20245C1624O20245C1634O20348C1642O20348C1652O20442C1655O20449C1660O20459C1664O20477C1672O20533C1675O20540C1684O20564C1692O21363C1695O21370C1704O21388C1712O21467C1715O21474C1724O21491C1732O21742C1740O21742C1750O21886C1758O21886C1768O25478C1771O25485C1780O25503C1788O30058C1791O30065C1800O30079C1808O30286C1811O30293C1820O30309C1828O33238C1831O33266C1843O33290C1852O33238C1862O33303C1868O33303C1878O37424C1881O37431C1892O37450C1900O38954C1903O38961C1916O38978C1924O43047C1930O43075C1951O43109C1963O43047C1973O43207C1976O43214C1989O43232C1997O44354C2000O44361C2013O44386C2021O45183C2024O45190C2037O45206C2045O46117C2048O46124C2061O46154C2069O46654C2072O46661C2084O46684C2097O46708C2105O47041C2111O47066C2132O47091C2144O47132C2156O47041C2166O47182C2172O47210C2189O47237C2201O47273C2213O47182C2223O47318C2226O47325C2239O47348C2247O47603C2250O47610C2263O47624C2271O47736C2274O47743C2287O47759C2295O47876C2297O47932C2298O47932C2300O47941C2311O47965C2312O47965C2314O47991C2323O48721C2328O49003C2338O49046C2348O49085C2358O49103C2368O49371C2378O49401C2388O49413C2398O49436C2408O49453C2418O49472C2428O49483C2438O49494C2448O49513C2503O49018C2512O49542,,
code-creation,Eval,10,204894,0x2264545af6,5, node:internal/net:1:1,0x2264545930,~
script-source,121,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x2264545af6,121,0,1818,C0O0C4O1818,,
code-creation,Function,10,205006,0x2264545ee6,617, node:internal/net:1:1,0x2264545a70,~
code-source-info,0x2264545ee6,121,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,205273,0x2264547856,5, node:internal/dtrace:1:1,0x2264547710,~
script-source,122,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x2264547856,122,0,589,C0O0C4O589,,
code-creation,Function,10,205326,0x2264547d2e,140, node:internal/dtrace:1:1,0x22645477d0,~
code-source-info,0x2264547d2e,122,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,205537,0x2264548bbe,34,protoGetter node:net:718:21,0xbfdd37c250,~
code-source-info,0x2264548bbe,120,19348,19494,C0O19370C8O19398C13O19409C20O19476C27O19370C33O19493,,
code-creation,Eval,10,206193,0x226454ddb6,5, node:dgram:1:1,0x226454d840,~
script-source,123,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n  // Check if the udp handle was connected and set the state accordingly\x0d\n  if (isConnected(self))\x0d\n    state.connectState = CONNECT_STATE_CONNECTED;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    // Check if the udp handle was connected and set the state accordingly\x0d\n    if (isConnected(this))\x0d\n      state.connectState = CONNECT_STATE_CONNECTED;\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\nfunction isConnected(self) {\x0d\n  try {\x0d\n    self.remoteAddress();\x0d\n    return true;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x226454ddb6,123,0,28763,C0O0C4O28763,,
code-creation,Function,10,207518,0x226454fd1e,1507, node:dgram:1:1,0x226454dd30,~
code-source-info,0x226454fd1e
code-creation,Eval,10,207894,0x22645531d6,5, node:internal/dgram:1:1,0x2264552fd0,~
script-source,124,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x22645531d6,124,0,1941,C0O0C4O1941,,
code-creation,Function,10,208016,0x226455349e,196, node:internal/dgram:1:1,0x2264553150,~
code-source-info,0x226455349e,124,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
code-creation,Function,11,208236,0x225ca787340,1344,deprecate node:internal/util:96:19,0x25aadb2aa70,^
code-source-info,0x225ca787340,12,2503,3720,,,
code-creation,Function,11,208261,0x225ca7878e0,272,validateString node:internal/validators:117:24,0x6682e9a8e0,^
code-source-info,0x225ca7878e0,17,3514,3626,,,
code-creation,Function,11,208297,0x225ca787a60,1936,toNamespacedPath node:path:618:19,0x2ee4c9e9858,^
code-source-info,0x225ca787a60,35,20087,21202,,,
code-creation,Function,11,208316,0x225ca788260,320,isFileType node:fs:205:20,0x3f9d3567900,^
code-source-info,0x225ca788260,77,5489,5737,,,
code-creation,Function,11,208336,0x225ca788400,548,internalBinding node:internal/bootstrap/loaders:164:45,0x25aadb0f720,^
code-source-info,0x225ca788400,9,5278,5523,,,
code-creation,Eval,10,208513,0x22645576f6,5, node:internal/socket_list:1:1,0x22645575a0,~
script-source,125,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x22645576f6,125,0,2813,C0O0C4O2813,,
code-creation,Function,10,208667,0x2264557d36,126, node:internal/socket_list:1:1,0x2264557670,~
code-source-info,0x2264557d36,125,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,208853,0x226455894e,14,customPromiseExecFunction node:child_process:231:35,0xbfdd370858,~
code-source-info,0x226455894e,118,6835,7215,C0O6835C9O6850C13O7212,,
code-creation,Eval,10,209000,0x226455aace,5, node:internal/cluster/round_robin_handle:1:1,0x226455a8f8,~
script-source,126,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Boolean\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = [];\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen(address);  // UNIX socket path.\x0d\n\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  for (const handle of this.handles) {\x0d\n    handle.close();\x0d\n  }\x0d\n  this.handles = [];\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  ArrayPrototypePush(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = ArrayPrototypeShift(this.handles);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x226455aace,126,0,3283,C0O0C4O3283,,
code-creation,Function,10,209176,0x226455ae76,173, node:internal/cluster/round_robin_handle:1:1,0x226455aa48,~
code-source-info,0x226455ae76,126,0,3283,C0O0C37O28C43O45C49O68C55O92C61O104C67O149C70O149C74O149C76O190C79O190C83O190C85O230C88O230C93O215C99O288C102O288C107O274C113O320C115O335C119O1191C128O1205C132O1883C141O1900C145O2268C154O2289C158O2668C167O2686C172O3282,,
code-creation,Eval,10,209301,0x226455b736,5, node:internal/cluster/utils:1:1,0x226455b5c0,~
script-source,127,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x226455b736,127,0,1104,C0O0C4O1104,,
code-creation,Function,10,209380,0x226455b8f6,72, node:internal/cluster/utils:1:1,0x226455b6b0,~
code-source-info,0x226455b8f6,127,0,1104,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103,,
code-creation,Eval,10,209497,0x226455bf06,5, node:internal/cluster/shared_handle:1:1,0x226455bd80,~
script-source,128,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x226455bf06,128,0,1147,C0O0C4O1147,,
code-creation,Function,10,209575,0x226455c13e,89, node:internal/cluster/shared_handle:1:1,0x226455be80,~
code-source-info,0x226455c13e,128,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,209695,0x226455c706,5, node:internal/cluster/worker:1:1,0x226455c590,~
script-source,129,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = {};\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x226455c706,129,0,1370,C0O0C4O1370,,
code-creation,Function,10,209784,0x226455ca6e,141, node:internal/cluster/worker:1:1,0x226455c680,~
code-source-info,0x226455ca6e,129,0,1370,C0O0C17O28C22O53C28O109C31O109C35O109C37O131C39O146C43O849C46O877C54O901C59O849C64O914C70O914C75O961C78O968C87O983C91O1053C94O1060C103O1075C107O1165C110O1172C119O1189C123O1287C126O1294C135O1316C140O1369,,
code-creation,LazyCompile,10,209870,0x226455cfbe,21,EventEmitter node:events:84:22,0x25aadb32d48,~
code-source-info,0x226455cfbe,13,2562,2612,C0O2574C3O2587C8O2592C13O2592C20O2611,,
code-creation,LazyCompile,10,209923,0x226455d106,149,EventEmitter.init node:events:194:29,0x25aadb33a48,~
code-source-info,0x226455d106,13,5772,6380,C0O5795C6O5832C13O5844C16O5844C21O5870C25O5840C30O5887C32O5902C37O5902C41O5900C45O5927C46O5945C50O5986C60O5979C64O6021C71O6029C80O6057C85O6078C93O6057C98O6132C100O6137C105O6149C108O6162C113O6149C117O6147C123O6322C125O6327C131O6352C138O6362C140O6361C143O6337C148O6379,,
code-creation,LazyCompile,10,210055,0x226455d51e,151,getESMFacade node:internal/bootstrap/loaders:264:15,0x25aadb0faf0,~
code-source-info,0x226455d51e,9,8494,9140,C0O8494C8O8513C14O8533C18O8540C19O8569C29O8569C34O8554C39O8618C42O8631C51O8663C53O8663C55O8694C62O8719C67O8694C72O8737C82O8737C87O8786C89O8839C102O8800C107O8798C111O9051C116O9058C121O9058C125O9083C130O9090C140O9090C146O9128C150O9135,,
code-creation,LazyCompile,10,210134,0x226455d906,40, node:internal/bootstrap/loaders:273:15,0x226455d418,~
code-source-info,0x226455d906,9,8867,8975,C0O8881C5O8894C10O8894C14O8923C24O8944C27O8957C32O8923C39O8974,,
code-creation,LazyCompile,10,210183,0x226455da5e,89,syncExports node:internal/bootstrap/loaders:287:14,0x25aadb0fb60,~
code-source-info,0x226455da5e,9,9453,9796,C0O9482C5O9508C11O9538C13O9551C17O9543C22O9594C24O9599C28O9613C30O9628C35O9643C37O9667C42O9674C51O9727C54O9739C59O9765C67O9727C73O9674C79O9560C84O9525C88O9795,,
code-creation,LazyCompile,10,210228,0x226455dbc6,35,getOwn node:internal/bootstrap/loaders:180:16,0x25aadb0f7f8,~
code-source-info,0x226455dbc6,9,5677,5835,C0O5714C5O5721C14O5776C26O5776C34O5832,,
code-creation,RegExp,3,210375,0x225ca7886a0,1532,(?:^|\\/)\\.?\\.$
code-creation,RegExp,3,210569,0x225ca788d00,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,210764,0x225ca7893a0,3380,dirname node:path:653:10,0x2ee4c9e98c8,^
code-source-info,0x225ca7893a0,35,21281,23909,,,
code-creation,Function,11,210788,0x225ca78a140,304,getOwn node:internal/bootstrap/loaders:180:16,0x25aadb0f7f8,^
code-source-info,0x225ca78a140,9,5677,5835,,,
code-creation,Function,11,210808,0x225ca78a2e0,672,syncExports node:internal/bootstrap/loaders:287:14,0x25aadb0fb60,^
code-source-info,0x225ca78a2e0,9,9453,9796,,,
code-creation,Eval,10,211060,0x226455e6e6,5, C:\\Users\\Aaron\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x226455e540,~
script-source,130,C:\\Users\\Aaron\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x226455e6e6,130,0,494,C0O0C4O494,,
code-creation,Function,10,211110,0x226455e98e,157, C:\\Users\\Aaron\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x226455e660,~
code-source-info,0x226455e98e,130,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,LazyCompile,10,211211,0x226455ee7e,37,get BlockList node:net:1779:16,0xbfdd37e180,~
code-source-info,0x226455ee7e,120,49144,49236,C0O49154C14O49168C19O49197C26O49164C32O49214C36O49231,,
code-creation,Eval,10,211383,0x226455f34e,5, node:internal/blocklist:1:1,0x226455f168,~
script-source,131,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x226455f34e,131,0,4043,C0O0C4O4043,,
code-creation,Function,10,211600,0x226455fd56,359, node:internal/blocklist:1:1,0x226455f2c8,~
code-source-info,0x226455fd56,131,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,211855,0x2264561626,5, node:internal/socketaddress:1:1,0x2264561430,~
script-source,132,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x2264561626,132,0,3363,C0O0C4O3363,,
code-creation,Function,10,212051,0x226456214e,366, node:internal/socketaddress:1:1,0x22645615a0,~
code-source-info,0x226456214e,132,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,212205,0x2264562ba6,37,get SocketAddress node:net:1783:20,0xbfdd37e1f8,~
code-source-info,0x2264562ba6,120,49258,49366,C0O49268C14O49286C19O49319C26O49282C32O49340C36O49361,,
code-creation,Eval,10,212295,0x2264562f8e,5, node:worker_threads:1:1,0x2264562e48,~
script-source,133,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x2264562f8e,133,0,727,C0O0C4O727,,
code-creation,Function,10,212359,0x226456319e,180, node:worker_threads:1:1,0x2264562f08,~
code-source-info,0x226456319e,133,0,727,C0O149C3O149C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O303C46O303C51O191C56O207C61O226C66O255C71O280C76O375C79O375C84O348C89O406C96O428C102O445C108O461C114O480C120O505C126O534C132O559C138O578C144O591C150O605C156O658C162O679C168O702C174O421C179O726,,
code-creation,Eval,10,212845,0x2264564126,5, node:internal/worker:1:1,0x2264563b48,~
script-source,134,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\x0d\nconst { validateArray } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\nif (isMainThread) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = {}) {\x0d\n    super();\x0d\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURLInstance(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeTest(/^\\.\\.?[\\\\/]/\x2C filename)) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = ObjectCreate(null);\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true));\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot() {\x0d\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        const { HeapSnapshotStream } = require('internal/heap_utils');\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle = this[kHandle].loopIdleTime();\x0d\n\x0d\n  // Using performance.now() here is fine since it's always the time from\x0d\n  // the beginning of the process\x2C and is why it needs to be offset by the\x0d\n  // loopStart time (which is also calculated from the beginning of the\x0d\n  // process).\x0d\n  const active = now() - this[kLoopStartTime] - idle;\x0d\n\x0d\n  if (!util1) {\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle_delta = idle - util1.idle;\x0d\n  const active_delta = active - util1.active;\x0d\n  const utilization = active_delta / (idle_delta + active_delta);\x0d\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x2264564126,134,0,15857,C0O0C4O15857,,
code-creation,Function,10,213545,0x2264565476,1185, node:internal/worker:1:1,0x22645640a0,~
code-source-info,0x2264565476,134,0,15857,C0O0C244O28C250O54C256O76C262O99C267O116C273O142C279O160C285O172C291O189C297O207C303O219C309O238C315O255C321O279C327O301C332O313C338O324C343O335C348O349C354O377C365O407C371O416C376O479C384O479C389O514C397O514C401O514C403O556C411O556C415O556C417O590C425O590C431O582C437O644C445O644C451O670C455O644C457O859C461O690C467O717C473O737C479O773C485O806C491O831C497O899C505O899C511O880C517O948C525O948C529O948C531O1207C535O991C541O1012C547O1031C553O1048C559O1058C565O1081C571O1101C577O1133C583O1158C589O1182C595O1247C603O1247C609O1226C615O1338C623O1338C629O1290C635O1305C641O1320C647O1390C655O1390C661O1372C667O1674C671O1674C677O1436C682O1457C687O1490C692O1512C698O1533C704O1548C710O1578C716O1606C722O1627C728O1644C733O1720C737O1720C741O1720C743O1760C747O1760C751O1760C753O1801C757O1801C761O1801C763O1838C767O1838C771O1838C773O1877C777O1877C781O1877C783O1932C787O1932C791O1932C793O1992C797O1992C801O1992C803O2045C807O2045C811O2045C813O2097C817O2097C821O2097C823O2142C827O2142C831O2142C833O2184C837O2184C841O2184C843O2243C851O2243C857O2276C873O2277C879O2243C881O2333C882O2333C884O2372C886O2372C891O2372C893O2390C904O2413C910O2442C919O2426C924O2424C928O2494C934O2502C938O2494C940O2512C950O2526C956O3032C966O8230C976O8884C986O8988C996O9167C1006O10092C1092O13086C1094O13086C1099O13086C1101O15601C1109O15623C1115O15644C1121O15661C1130O15697C1136O15712C1149O15759C1155O15782C1161O15805C1167O15831C1173O15844C1179O15616C1184O15856,,
code-creation,Eval,10,213897,0x22645673be,5, node:internal/error_serdes:1:1,0x22645670f8,~
script-source,135,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = ObjectCreate(null);\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n      } catch {}\x0d\n    }\x0d\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\x0d\n      delete descriptor.get;\x0d\n      delete descriptor.set;\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        value: desc.value\x2C enumerable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {}\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {}\x0d\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\x0d\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError:\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        value: { value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x0d\n      });\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError:\x0d\n      const buf = Buffer.from(error.buffer\x2C\x0d\n                              error.byteOffset + 1\x2C\x0d\n                              error.byteLength - 1);\x0d\n      return buf.toString('utf8');\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x22645673be,135,0,4172,C0O0C4O4172,,
code-creation,Function,10,214165,0x22645677de,335, node:internal/error_serdes:1:1,0x2264567338,~
code-source-info,0x22645677de,135,0,4172,C0O0C100O32C106O32C111O49C115O32C117O70C123O96C128O106C133O120C139O146C145O163C151O180C157O205C163O240C169O270C175O295C180O310C186O338C191O353C196O372C201O384C207O406C212O422C217O436C222O492C223O492C225O522C227O522C229O550C231O550C233O571C240O576C246O583C252O594C258O606C264O616C270O629C276O645C282O571C284O690C287O702C294O690C299O690C301O2121C302O2121C304O2326C305O2326C307O3274C308O3274C310O4116C317O4135C323O4151C329O4131C334O4171,,
tick,0x7fffb299fab3,214226,1,0x7ff6a79aa4a0,3,0x7ff6a82ef2d0,0x225ca7847fb,0x225ca784545,0x22645656d1,0x225ca7848c3,0x225ca784545,0x22645631a1,0x225ca7848c3,0xbfdd36c9da,0xbfdd36239b,0xbfdd350c7e,0xbfdd3508b2,0xbfdd36c6fe,0x226455e99e,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd34f773,0xbfdd34f51d,0x33416081bd0,0x3103a7b5a5
code-creation,LazyCompile,10,214523,0x2264568956,793,Socket node:net:283:16,0xbfdd37c0c0,~
code-source-info,0x
code-creation,LazyCompile,10,214713,0x2264568f66,109,Duplex node:internal/streams/duplex:52:16,0x334252d0908,~
script-source,48,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (const method of ObjectKeys(Writable.prototype)) {\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n  this.allowHalfOpen = true;\x0d\n\x0d\n  if (options) {\x0d\n    if (options.readable === false)\x0d\n      this.readable = false;\x0d\n\x0d\n    if (options.writable === false)\x0d\n      this.writable = false;\x0d\n\x0d\n    if (options.allowHalfOpen === false) {\x0d\n      this.allowHalfOpen = false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable')\x2C\x0d\n  writableHighWaterMark:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark')\x2C\x0d\n  writableObjectMode:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode')\x2C\x0d\n  writableBuffer:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer')\x2C\x0d\n  writableLength:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength')\x2C\x0d\n  writableFinished:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished')\x2C\x0d\n  writableCorked:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked')\x2C\x0d\n  writableEnded:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded')\x2C\x0d\n  writableNeedDrain:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain')\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x2264568f66,48,2002,2430,C0O2017C2O2028C7O2053C12O2060C17O2080C18O2086C23O2095C28O2095C34O2119C39O2128C44O2128C50O2152C51O2171C55O2184C59O2216C65O2225C70O2243C71O2257C75O2285C81O2294C86O2312C87O2326C91O2354C97O2368C102O2388C103O2407C108O2429,,
code-creation,LazyCompile,10,215026,0x226456960e,220,Readable node:internal/streams/readable:181:18,0x334252dbcc0,~
script-source,49,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n >= MAX_HWM) {\x0d\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\x0d\n    n = MAX_HWM;\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    this._read(state.highWaterMark);\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (EE.listenerCount(dest\x2C 'error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      EE.listenerCount(src\x2C 'data')) {\x0d\n      state.flowing = true;\x0d\n      flow(src);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  const opts = {\x0d\n    destroyOnReturn: true\x2C\x0d\n    destroyOnError: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let error = state.errored;\x0d\n  let errorEmitted = state.errorEmitted;\x0d\n  let endEmitted = state.endEmitted;\x0d\n  let closeEmitted = state.closeEmitted;\x0d\n\x0d\n  stream\x0d\n    .on('readable'\x2C next)\x0d\n    .on('error'\x2C function(err) {\x0d\n      error = err;\x0d\n      errorEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('end'\x2C function() {\x0d\n      endEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('close'\x2C function() {\x0d\n      closeEmitted = true;\x0d\n      next.call(this);\x0d\n    });\x0d\n\x0d\n  let errorThrown = false;\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (errorEmitted) {\x0d\n        throw error;\x0d\n      } else if (endEmitted) {\x0d\n        break;\x0d\n      } else if (closeEmitted) {\x0d\n        break;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    if (opts.destroyOnError) {\x0d\n      destroyImpl.destroyer(stream\x2C err);\x0d\n    }\x0d\n    errorThrown = true;\x0d\n    throw err;\x0d\n  } finally {\x0d\n    if (!errorThrown && opts.destroyOnReturn) {\x0d\n      if (state.autoDestroy || !endEmitted) {\x0d\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\x0d\n        destroyImpl.destroyer(stream\x2C null);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errorEmitted && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x226456960e,49,6426,7336,C0O6426C9O6441C16O6452C21O6479C28O6486C33O6508C34O6667C41O6683C44O6690C48O6672C52O6703C71O6725C76O6723C80O6774C84O6813C92O6841C95O6862C99O6852C103O6894C111O6925C114O6949C118O6939C122O6984C130O7017C133O7043C137O7033C141O7071C149O7082C151O7099C158O7132C166O7099C171O7157C178O7164C186O7164C192O7190C199O7202C212O7202C219O7335,,
code-creation,LazyCompile,10,216924,0x226456c3ce,18,Stream node:internal/streams/legacy:10:16,0x334252de520,~
script-source,50,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x226456c3ce,50,136,171,C0O148C5O151C10O151C17O170,,
code-creation,LazyCompile,10,217223,0x226456cc96,354,ReadableState node:internal/streams/readable:78:23,0x334252dbc70,~
code-source-info,0x226456cc
code-creation,LazyCompile,10,217353,0x226456d0a6,98,getHighWaterMark node:internal/streams/state:19:26,0x334252e0fe8,~
script-source,53,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n};\x0d\n
code-source-info,0x226456d0a6,53,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,LazyCompile,10,217441,0x226456d33e,26,highWaterMarkFrom node:internal/streams/state:10:27,0x334252e0e88,~
code-source-info,0x226456d33e,53,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,LazyCompile,10,217469,0x226456d416,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x334252e0f98,~
code-source-info,0x226456d416,53,357,413,C0O375C12O410,,
code-creation,LazyCompile,10,217505,0x226456d4f6,17,BufferList node:internal/streams/buffer_list:14:14,0x334252e0340,~
script-source,52,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while (p = p.next)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while (p = p.next);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while (p = p.next);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x226456d4f6,52,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
code-creation,LazyCompile,10,217852,0x226456dc46,98,construct node:internal/streams/destroy:225:19,0x334252cf5c8,~
script-source,47,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const result = self._destroy(err || null\x2C onDestroy);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onDestroy\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onDestroy\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if ((w && w.emitClose) || (r && r.emitClose)) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = false;\x0d\n    r.endEmitted = false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.ended = false;\x0d\n    w.ending = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.finished = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = stream._construct(onConstruct);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onConstruct\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onConstruct\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onConstruct(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream && stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream) return;\x0d\n  if (isRequest(stream)) return stream.abort();\x0d\n  if (isRequest(stream.req)) return stream.req.abort();\x0d\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\x0d\n  if (typeof stream.close === 'function') return stream.close();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x0d\n};\x0d\n
code-source-info,0x226456dc46,47,4850,5261,C0O4886C8O4920C9O4927C10O4955C15O4991C20O5012C24O5026C25O5040C29O5057C33O5071C34O5085C38O5111C45O5116C48O5111C54O5149C61O5163C64O5149C72O5175C77O5202C78O5209C79O5220C82O5228C90O5228C97O5260,,
code-creation,LazyCompile,10,218317,0x226456e8fe,266,Writable node:internal/streams/writable:219:18,0x334252ea4b0,~
script-source,56,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err || state.finished) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    const result = stream._final(onFinish);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onFinish\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onFinish\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onFinish(stream\x2C state\x2C err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0 && needFinish(state)) {\x0d\n      state.pendingcb++;\x0d\n      if (sync) {\x0d\n        process.nextTick(finish\x2C stream\x2C state);\x0d\n      } else {\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i]();\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n
code-source-info,0x226456e8fe,56,7627,9195,C0O7627C9O8212C16O8229C19O8236C23O8218C27O8250C33O8268C44O8268C51O8325C58O8332C63O8354C64O8360C83O8382C88O8380C92O8431C96O8470C104O8499C107O8521C111O8511C115O8554C123O8584C126O8607C130O8597C134O8641C142O8672C145O8696C149O8686C153O8731C161O8760C164O8782C168O8772C172O8815C180O8848C183O8874C187O8864C191O8902C197O8917C204O8950C212O8917C217O8975C224O8982C232O8982C238O9008C245O9020C258O9020C265O9194,,
code-creation,LazyCompile,10,219532,0x226457094e,341,WritableState node:internal/streams/writable:77:23,0x334252ea350,~
code-source-info,0x226457094e
code-creation,LazyCompile,10,219656,0x2264570d5e,23,resetBuffer node:internal/streams/writable:202:21,0x334252ea3a0,~
code-source-info,0x2264570d5e,56,7206,7323,C0O7219C2O7234C6O7243C7O7263C11O7271C12O7288C16O7299C17O7313C22O7322,,
code-creation,LazyCompile,10,219711,0x2264570e66,21,set node:internal/streams/readable:1175:8,0x334252dcc68,~
code-source-info,0x2264570e66,49,37011,37143,C0O37063C6O37095C13O37123C15O37119C20O37142,,
code-creation,LazyCompile,10,219765,0x2264570fbe,131,createHandle node:net:137:22,0xbfdd37be90,~
code-source-info,0x2264570fbe,120,3733,4109,C0O3754C13O3754C18O3798C23O3798C28O3822C30O3831C35O3850C42O3874C46O3886C49O3900C57O3909C60O3923C67O3857C72O3937C73O3948C75O3957C80O3975C87O3998C91O4010C94O4023C102O4032C105O4045C112O3982C117O4059C118O4070C125O4076C130O4070,,
code-creation,LazyCompile,10,219829,0x226457115e,14,set node:net:1707:6,0xbfdd37ded0,~
code-source-info,0x226457115e,120,47276,47309,C0O47282C2O47294C7O47303C13O47307,,
code-creation,LazyCompile,10,219858,0x226457124e,8,get node:net:1706:6,0xbfdd37de80,~
code-source-info,0x226457124e,120,47240,47268,C0O47245C2O47257C4O47256C7O47266,,
code-creation,LazyCompile,10,219930,0x22645713fe,196,Readable.on node:internal/streams/readable:875:33,0x334252dc5a0,~
code-source-info,0x22645713fe,49,28647,29573,C0O28673C5O28680C10O28690C15O28693C29O28693C35O28735C40O28756C42O28763C47O28948C55O28948C62O28974C65O28941C69O29070C75O29078C80O29101C85O29101C91O29121C93O29128C98O29162C104O29183C110O29211C112O29256C118O29235C122O29271C123O29285C127O29301C128O29323C132O29339C140O29366C145O29380C150O29339C155O29407C161O29426C164O29426C170O29471C176O29491C179O29499C187O29499C193O29559C195O29570,,
code-creation,LazyCompile,10,220016,0x2264571676,135,initSocketHandle node:net:254:26,0xbfdd37c070,~
code-source-info,0x2264571676,120,6574,7174,C0O6591C5O6591C9O6608C10O6623C14O6712C20O6733C27O6741C32O6755C36O6773C43O6790C45O6788C49O6809C51O6814C57O6852C62O6833C66O6831C70O6883C72O6888C74O6887C78O6903C80O6940C82O6945C84O6944C88O6965C90O7007C94O7026C99O7031C105O7065C106O7072C107O7082C109O7087C114O7096C118O7128C123O7136C128O7136C134O7173,,
code-creation,LazyCompile,10,220087,0x22645718a6,120,undestroy node:internal/streams/destroy:160:19,0x334252cf508,~
code-source-info,0x22645718a6,47,3223,3849,C0O3246C5O3280C10O3301C14O3315C15O3329C19O3342C20O3351C24O3365C25O3380C29O3394C30O3406C34O3420C35O3430C39O3443C40O3458C44O3472C45O3482C49O3496C50O3504C54O3518C55O3531C59O3550C63O3564C64O3578C68O3591C69O3603C73O3617C74O3626C78O3640C79O3655C83O3669C84O3679C88O3692C89O3707C93O3721C94O3729C98O3743C99O3752C103O3766C104O3780C108O3794C109O3808C113O3822C114O3833C119O3848,,
code-creation,LazyCompile,10,220167,0x2264571b1e,32,getNewAsyncId node:net:156:23,0xbfdd37bee0,~
code-source-info,0x2264571b1e,120,4137,4256,C0O4151C4O4184C14O4218C17O4218C22O4240C27O4240C31O4253,,
code-creation,LazyCompile,10,220212,0x2264571c1e,5,get node:internal/bootstrap/pre_execution:314:8,0x3341609cb50,~
code-source-info,0x2264571c1e,92,10398,10433,C0O10410C4O10426,,
code-creation,LazyCompile,10,220248,0x2264571cf6,5,get C:\\Users\\Aaron\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:19:10,0x226455e718,~
code-source-info,0x2264571cf6,130,392,404,C0O398C4O404,,
code-creation,Function,11,220781,0x225ca78a5e0,72,isUint32 node:internal/validators:39:18,0x6682e9a730,^
code-source-info,0x225ca78a5e0,17,815,862,,,
code-creation,Function,11,220810,0x225ca78a6a0,216, node:vm:313:27,0xbfdd369318,^
code-source-info,0x225ca78a6a0,85,10064,10115,,,
code-creation,Function,11,220826,0x225ca78a7e0,40,noop node:internal/util/debuglog:47:14,0x2ee4c9fc888,^
code-source-info,0x225ca78a7e0,40,1465,1473,,,
code-creation,Function,11,220851,0x225ca78a880,1020,debuglog node:internal/util/debuglog:71:18,0x2ee4c9fc928,^
code-source-info,0x225ca78a880,40,2302,3390,,,
code-creation,Function,11,220870,0x225ca78ace0,252,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x25aadb0fa00,^
code-source-info,0x225ca78ace0,9,7592,7691,,,
code-creation,Function,11,220886,0x225ca78ae40,72,isInt32 node:internal/validators:35:17,0x6682e9a378,^
code-source-info,0x225ca78ae40,17,749,794,,,
code-creation,Function,11,220915,0x225ca78af00,1148,readPackageScope node:internal/modules/cjs/loader:321:26,0x3341609f9c0,^
code-source-info,0x225ca78af00,99,9239,9772,,,
code-creation,Eval,10,220971,0x2264572506,5, C:\\Users\\Aaron\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x22645723c0,~
script-source,136,C:\\Users\\Aaron\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x2264572506,136,0,85,C0O0C4O85,,
code-creation,Function,10,221005,0x22645725a6,56, C:\\Users\\Aaron\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x2264572480,~
code-source-info,0x22645725a6,136,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
code-creation,LazyCompile,10,221118,0x2264572c06,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:466:36,0x3103a7db58,~
code-source-info,0x2264572c06,92,15481,15709,C0O15489C8O15493C14O15539C17O15547C28O15547C34O15661C40O15661C45O15698C49O15708,,
code-creation,LazyCompile,10,221177,0x2264572d2e,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0xbfdd34e718,~
code-source-info,0x2264572d2e,114,2393,2707,C7O2409C14O2413C22O2444C25O2444C30O2491C33O2491C38O2528C40O2553C45O2564C50O2553C56O2668C61O2675C73O2675C79O2706,,
code-creation,LazyCompile,10,221227,0x226457317e,68,resolveMainPath node:internal/modules/run_main:11:25,0xbfdd34e5b0,~
code-source-info,0x226457317e,114,306,733,C0O482C5O489C12O499C15O504C20O504C30O489C36O535C38O555C39O562C40O597C48O597C53O644C55O676C60O687C65O714C67O730,,
code-creation,Function,11,221539,0x225ca78b3e0,7676,realpathSync node:fs:2408:22,0x3f9d3569ce0,^
code-source-info,0x225ca78b3e0,77,66401,70441,,,
code-creation,LazyCompile,10,221760,0x2264573ce6,109,shouldUseESMLoader node:internal/modules/run_main:26:28,0xbfdd34e600,~
code-source-info,0x2264573ce6,114,764,1339,C0O799C8O799C13O843C15O864C16O876C17O921C25O921C30O979C32O1011C37O1028C38O1040C39O1090C45O1106C51O1106C58O1154C59O1166C60O1170C66O1187C72O1187C79O1235C80O1248C81O1264C86O1264C91O1295C93O1313C98O1318C105O1323C108O1336,,
code-creation,Eval,10,222094,0x226457432e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:1:1,0x22645741b8,~
script-source,137,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js,const express = require("express");\x0d\nconst crypto = require("crypto");\x0d\nconst app = express();\x0d\n\x0d\nconst users = {}\x0d\n\x0d\napp.use(express.static('public'))\x0d\nconst PORT = parseInt(process.argv[2]) || 8080\x0d\n\x0d\napp.get("/getUsers"\x2C (req\x2C res) => {\x0d\n    res.json({\x0d\n        users\x0d\n    })\x0d\n})\x0d\n\x0d\napp.get("/newUser"\x2C (req\x2C res) => {\x0d\n    let username = req.query.username || "";\x0d\n    const password = req.query.password || "";\x0d\n    username = username.replace(/[!@#$%^&*]/g\x2C "");\x0d\n    if (!username || !password || users[username]) {\x0d\n        return res.sendStatus(400);\x0d\n    }\x0d\n    const salt = crypto.randomBytes(128).toString("base64");\x0d\n    const hash = crypto.pbkdf2Sync(password\x2C salt\x2C 10000\x2C 512\x2C "sha512");\x0d\n    users[username] = {\x0d\n        salt\x2C\x0d\n        hash\x0d\n    };\x0d\n    res.sendStatus(200);\x0d\n})\x0d\n\x0d\napp.get("/auth-bloq"\x2C (req\x2C res) => {\x0d\n    let username = req.query.username || "";\x0d\n    const password = req.query.password || "";\x0d\n    username = username.replace(/[!@#$%^&*]/g\x2C "");\x0d\n\x0d\n    if (!username || !password || !users[username]) {\x0d\n        // process.exit(1)\x0d\n        return res.sendStatus(400);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n        salt\x2C\x0d\n        hash\x0d\n    } = users[username];\x0d\n\x0d\n    const encryptHash = crypto.pbkdf2Sync(password\x2C salt\x2C 10000\x2C 512\x2C "sha512");\x0d\n\x0d\n    if (crypto.timingSafeEqual(hash\x2C encryptHash)) {\x0d\n        res.sendStatus(200);\x0d\n    } else {\x0d\n        // process.exit(1)\x0d\n        res.sendStatus(401);\x0d\n    }\x0d\n})\x0d\n\x0d\napp.get("/auth-nobloq"\x2C (req\x2C res) => {\x0d\n    let username = req.query.username || "";\x0d\n    const password = req.query.password || "";\x0d\n    username = username.replace(/[!@#$%^&*]/g\x2C "");\x0d\n\x0d\n    if (!username || !password || !users[username]) {\x0d\n        // process.exit(1)\x0d\n        return res.sendStatus(400);\x0d\n    }\x0d\n\x0d\n    crypto.pbkdf2(password\x2C users[username].salt\x2C 10000\x2C 512\x2C 'sha512'\x2C (err\x2C hash) => {\x0d\n        if (users[username].hash.toString() === hash.toString()) {\x0d\n            res.sendStatus(200);\x0d\n        } else {\x0d\n            // process.exit(1)\x0d\n            res.sendStatus(401);\x0d\n        }\x0d\n    });\x0d\n});\x0d\n\x0d\nconst server = app.listen(PORT\x2C () => {\x0d\n    console.log(`Servidor escuchando en el puerto ${PORT}`);\x0d\n});\x0d\nserver.on("error"\x2C (error) => console.log(`Error en servidor: ${error}`));
code-source-info,0x226457432e,137,0,2243,C0O0C4O2243,,
code-creation,Function,10,222223,0x226457463e,210, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:1:1,0x22645742a8,~
code-source-info,0x226457463e,137,0,2243,C0O0C14O16C17O16C22O52C25O52C29O52C31O84C35O112C36O112C38O122C43O134C51O134C57O122C62O166C66O175C70O183C77O187C81O166C91O166C93O207C106O207C112O290C125O290C131O803C144O803C150O1443C163O1443C169O2080C177O2087C182O2080C189O2176C202O2176C209O2242,,
code-creation,LazyCompile,10,222415,0x2264574e1e,198,resolveExports node:internal/modules/cjs/loader:472:24,0x3341609fc40,~
code-source-info,0x2264574e1e,99,14039,14743,C0O14180C7O14210C10O14180C20O14147C27O14156C38O14237C42O14253C43O14260C44O14280C49O14285C54O14285C61O14323C64O14323C69O14348C74O14355C87O14394C92O14423C97O14455C102O14477C106O14455C116O14501C124O14534C130O14423C144O14401C149O14574C161O14601C164O14607C171O14612C176O14649C183O14693C187O14655C192O14649C193O14720C195O14720C197O14742,,
code-creation,LazyCompile,10,222932,0x2264575c56,329,tryPackage node:internal/modules/cjs/loader:338:20,0x3341609fa10,~
code-source-info,0x2264575c
code-creation,Function,11,223339,0x225ca78d240,3000,basename node:path:749:11,0x2ee4c9e9930,^
code-source-info,0x225ca78d240,35,24017,26837,,,
code-creation,Function,11,223364,0x225ca78de60,164,isUint8Array node:internal/util/types:13:22,0x6682e97658,^
code-source-info,0x225ca78de60,15,269,356,,,
code-creation,Function,11,223389,0x225ca78df80,760,stat node:internal/modules/cjs/loader:151:14,0x3341609f7e0,^
code-source-info,0x225ca78df80,99,4777,5186,,,
code-creation,Eval,10,223567,0x22645767ce,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\index.js:1:1,0x2264576688,~
script-source,138,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\index.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n
code-source-info,0x22645767ce,138,0,224,C0O0C4O224,,
code-creation,Function,10,223607,0x2264576856,13, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\index.js:1:1,0x2264576748,~
code-source-info,0x2264576856,138,0,224,C0O181C3O198C7O196C12O223,,
code-creation,RegExp,3,223732,0x225ca78e2e0,1884,^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$
code-creation,Eval,10,224827,0x22645771be,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\express.js:1:1,0x2264577018,~
script-source,139,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\express.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req\x2C res\x2C next) {\n    app.handle(req\x2C res\x2C next);\n  };\n\n  mixin(app\x2C EventEmitter.prototype\x2C false);\n  mixin(app\x2C proto\x2C false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req\x2C {\n    app: { configurable: true\x2C enumerable: true\x2C writable: true\x2C value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res\x2C {\n    app: { configurable: true\x2C enumerable: true\x2C writable: true\x2C value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.raw = bodyParser.raw\nexports.static = require('serve-static');\nexports.text = bodyParser.text\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser'\x2C\n  'compress'\x2C\n  'cookieSession'\x2C\n  'session'\x2C\n  'logger'\x2C\n  'cookieParser'\x2C\n  'favicon'\x2C\n  'responseTime'\x2C\n  'errorHandler'\x2C\n  'timeout'\x2C\n  'methodOverride'\x2C\n  'vhost'\x2C\n  'csrf'\x2C\n  'directory'\x2C\n  'limit'\x2C\n  'multipart'\x2C\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports\x2C name\x2C {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    }\x2C\n    configurable: true\n  });\n});\n
code-source-info,0x22645771be,139,0,2409,C0O0C4O2409,,
code-creation,Function,10,224943,0x22645774b6,237, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\express.js:1:1,0x2264577138,~
code-source-info,0x22645774b6,139,0,2409,C0O0C14O231C17O231C22O273C25O273C30O290C34O273C36O317C39O317C43O317C45O359C48O359C52O359C54O397C57O397C62O437C65O437C70O468C73O468C77O468C79O500C82O500C86O500C88O566C90O591C96O574C98O1300C103O1320C107O1329C112O1345C116O1352C121O1369C125O1410C130O1424C134O1433C139O1448C143O1489C146O1515C150O1502C154O1520C160O1536C164O1534C168O1567C171O1592C175O1579C179O1596C185O1613C189O1611C193O1638C196O1664C200O1651C204O1669C207O1701C211O1688C215O1812C220O2088C230O2088C236O2408,,
code-creation,LazyCompile,10,225697,0x22645782ae,70,createPool node:buffer:150:20,0x6682ea56c0,~
code-source-info,0x22645782ae,18,3973,4118,C0O3981C3O3999C10O3990C16O4012C23O4043C26O4024C31O4052C38O4022C44O4064C51O4085C54O4064C58O4100C62O4111C69O4117,,
code-creation,LazyCompile,10,225749,0x226457841e,71,createUnsafeBuffer node:internal/buffer:1059:28,0x6682eb2f48,~
code-source-info,0x226457841e,19,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,225799,0x226457854e,40,markAsUntransferable node:internal/buffer:1048:30,0x6682eb2ea8,~
code-source-info,0x226457854e,19,30828,31067,C0O30839C16O30920C17O30927C18O31000C25O31020C33O31000C39O31066,,
code-creation,Eval,10,225981,0x226457894e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\index.js:1:1,0x22645787c8,~
script-source,140,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\index.js,/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser\x2C\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports\x2C 'json'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports\x2C 'raw'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports\x2C 'text'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports\x2C 'urlencoded'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req\x2C res\x2C next) {\n    _json(req\x2C res\x2C function (err) {\n      if (err) return next(err)\n      _urlencoded(req\x2C res\x2C next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n
code-source-info,0x226457894e,140,0,2656,C0O0C4O2656,,
code-creation,Function,10,226132,0x2264578cf6,235, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\index.js:1:1,0x22645788c8,~
code-source-info,0x2264578cf6,140,0,2656,C0O0C29O168C35O168C43O183C48O263C52O270C59O270C64O263C66O538C74O546C81O526C87O509C89O656C93O663C104O678C112O746C120O663C125O812C129O819C140O834C148O901C156O819C161O967C165O974C176O989C184O1057C192O974C197O1131C201O1138C212O1153C220O1227C228O1138C234O2655,,
code-creation,Function,11,226566,0x225ca78eaa0,1652,readPackage node:internal/modules/cjs/loader:290:21,0x3341609f970,^
code-source-info,0x225ca78eaa0,99,8391,9210,,,
code-creation,Function,11,226591,0x225ca78f180,188,isURLInstance node:internal/url:1492:23,0x2ee4c9dc0a8,^
code-source-info,0x225ca78f180,33,42829,42928,,,
code-creation,Function,11,226613,0x225ca78f2a0,568,handleErrorFromBinding node:internal/fs/utils:340:32,0x3f9d3572488,^
code-source-info,0x225ca78f2a0,78,8269,8780,,,
code-creation,Function,11,226632,0x225ca78f540,396, node:internal/fs/utils:686:40,0x3f9d3572f00,^
code-source-info,0x225ca78f540,78,19319,19448,,,
code-creation,Function,11,226651,0x225ca78f740,372,tryExtensions node:internal/modules/cjs/loader:400:23,0x3341609fb00,^
code-source-info,0x225ca78f740,99,11900,12093,,,
code-creation,Function,11,226669,0x225ca78f920,172,toPathIfFileURL node:internal/url:1496:25,0x2ee4c9dc0f8,^
code-source-info,0x225ca78f920,33,42956,43081,,,
code-creation,Function,11,226688,0x225ca78fa40,284,FastBuffer node:internal/buffer:958:14,0x6682eb2d30,^
code-source-info,0x225ca78fa40,19,27321,27412,,,
code-creation,LazyCompile,13,226999,0x225ca78fbc0,1820,normalizeString node:path:66:25,0x2ee4c9e95b8,*
code-source-info,0x225ca78fbcx2ee4c9e90f0
code-creation,Function,11,227283,0x225ca7903e0,676, node:internal/fs/utils:668:38,0x3f9d3572e60,^
code-source-info,0x225ca7903e0,78,18808,19088,,,
code-creation,Function,11,227313,0x225ca790700,936,getOptions node:internal/fs/utils:314:20,0x3f9d3572438,^
code-source-info,0x225ca790700,78,7531,8175,,,
code-creation,Function,11,227334,0x225ca790b20,424,toRealPath node:internal/modules/cjs/loader:393:20,0x3341609fab0,^
code-source-info,0x225ca790b20,99,11684,11800,,,
code-creation,Function,11,227353,0x225ca790d40,628,Module node:internal/modules/cjs/loader:172:16,0x3341609f880,^
code-source-info,0x225ca790d40,99,5455,5701,,,
code-creation,Function,11,227378,0x225ca791020,888, node:internal/fs/utils:357:35,0x3f9d35724d8,^
code-source-info,0x225ca791020,78,8925,9534,,,
code-creation,Eval,10,227740,0x226457b55e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:1:1,0x226457b2d8,~
script-source,141,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js,/*!\n * depd\n * Copyright(c) 2014-2018 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str\x2C namespace) {\n  var vals = str.split(/[ \x2C]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj\x2C prop\x2C message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj\x2C prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj\x2C prop\x2C descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += '\x2C arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + stack[i].toString()\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate\x2C message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if event emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction eehaslisteners (emitter\x2C type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str\x2C namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str\x2C namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message\x2C site) {\n  var haslisteners = eehaslisteners(process\x2C 'deprecation')\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace\x2C msg\x2C stack.slice(i))\n    process.emit('deprecation'\x2C err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this\x2C msg\x2C caller\x2C stack.slice(i))\n  process.stderr.write(output + '\\n'\x2C 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + '\x2C ' + file\n  }\n\n  var site = [file\x2C line\x2C colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg\x2C caller\x2C stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + stack[i].toString()\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg\x2C caller\x2C stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + stack[i].toString() + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath\x2C callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10\x2C limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj\x2C stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn\x2C message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n  // eslint-disable-next-line no-new-func\n  var deprecatedfn = new Function('fn'\x2C 'log'\x2C 'deprecate'\x2C 'message'\x2C 'site'\x2C\n    '"use strict"\\n' +\n    'return function (' + args + ') {' +\n    'log.call(deprecate\x2C message\x2C site)\\n' +\n    'return fn.apply(this\x2C arguments)\\n' +\n    '}')(fn\x2C log\x2C this\x2C message\x2C site)\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj\x2C prop\x2C message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj\x2C prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj\x2C prop\x2C message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate\x2C message\x2C site)\n      return get.apply(this\x2C arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate\x2C message\x2C site)\n      return set.apply(this\x2C arguments)\n    }\n  }\n\n  Object.defineProperty(obj\x2C prop\x2C descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace\x2C message\x2C stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error\x2C 'constructor'\x2C {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error\x2C 'message'\x2C {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: message\x2C\n    writable: true\n  })\n\n  Object.defineProperty(error\x2C 'name'\x2C {\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'DeprecationError'\x2C\n    writable: true\n  })\n\n  Object.defineProperty(error\x2C 'namespace'\x2C {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: namespace\x2C\n    writable: true\n  })\n\n  Object.defineProperty(error\x2C 'stack'\x2C {\n    configurable: true\x2C\n    enumerable: false\x2C\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this\x2C stack))\n    }\x2C\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n
code-source-info,0x226457b55e,141,0,10932,C0O0C4O10932,,
code-creation,Function,10,228145,0x226457bd46,155, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:1:1,0x226457b4d8,~
code-source-info,0x226457bd46,141,0,10932,C0O0C118O134C121O134C126O149C130O134C132O188C134O203C138O269C142O277C147O277C151O269C154O10931,,
code-creation,LazyCompile,10,228278,0x226457d586,158,depd C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:103:15,0x226457b700,~
code-source-info,0x226457d586,141,1744,2308,C0O1744C11O1760C15O1782C24O1788C29O1782C30O1855C35O1855C39O1879C46O1901C50O1879C55O1919C56O1923C60O2028C65O2044C69O2053C77O2074C81O2072C85O2097C90O2118C94O2132C102O2152C106O2150C110O2174C113O2194C117O2201C124O2201C129O2192C133O2217C140O2236C144O2253C151O2272C155O2290C157O2306,,
code-creation,LazyCompile,10,228351,0x226457d7ae,112,getStack C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:381:19,0x226457ba48,~
code-source-info,0x226457d7ae,141,7502,7903,C0O7521C4O7527C9O7555C11O7571C15O7577C20O7598C26O7622C30O7650C34O7674C38O7679C46O7679C52O7672C56O7720C60O7726C65O7726C70O7805C75O7811C83O7811C89O7823C95O7847C99O7856C105O7878C109O7889C111O7901,,
new,MemoryChunk,0x2bdba100000,262144
code-creation,LazyCompile,10,228596,0x226457da96,343,prepareStackTrace node:internal/errors:90:27,0x25aadb23c08,~
script-source,11,node:internal/errors,/* eslint node-core/documented-errors: "error" */\x0d\n/* eslint node-core/alphabetize-errors: "error" */\x0d\n/* eslint node-core/prefer-util-format-errors: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// The whole point behind this internal module is to allow Node.js to no\x0d\n// longer be forced to treat every error message change as a semver-major\x0d\n// change. The NodeError classes here all expose a `code` property whose\x0d\n// value statically and permanently identifies the error. While the error\x0d\n// message may change\x2C the code should not.\x0d\n\x0d\nconst {\x0d\n  AggregateError\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGet\x2C\x0d\n  MathAbs\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectIsExtensible\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RangeError\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kIsNodeError = Symbol('kIsNodeError');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst messages = new SafeMap();\x0d\nconst codes = {};\x0d\n\x0d\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/;\x0d\n// Sorted by a rough estimate on most frequently used entries.\x0d\nconst kTypes = [\x0d\n  'string'\x2C\x0d\n  'function'\x2C\x0d\n  'number'\x2C\x0d\n  'object'\x2C\x0d\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\x0d\n  'Function'\x2C\x0d\n  'Object'\x2C\x0d\n  'boolean'\x2C\x0d\n  'bigint'\x2C\x0d\n  'symbol'\x2C\x0d\n];\x0d\n\x0d\nconst MainContextError = Error;\x0d\nconst overrideStackTrace = new SafeWeakMap();\x0d\nconst kNoOverride = Symbol('kNoOverride');\x0d\nlet userStackTraceLimit;\x0d\nconst nodeInternalPrefix = '__node_internal_';\x0d\nconst prepareStackTrace = (globalThis\x2C error\x2C trace) => {\x0d\n  // API for node internals to override error stack formatting\x0d\n  // without interfering with userland code.\x0d\n  if (overrideStackTrace.has(error)) {\x0d\n    const f = overrideStackTrace.get(error);\x0d\n    overrideStackTrace.delete(error);\x0d\n    return f(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  const firstFrame = trace[0]?.getFunctionName();\x0d\n  if (firstFrame && StringPrototypeStartsWith(firstFrame\x2C nodeInternalPrefix)) {\x0d\n    for (let l = trace.length - 1; l >= 0; l--) {\x0d\n      const fn = trace[l]?.getFunctionName();\x0d\n      if (fn && StringPrototypeStartsWith(fn\x2C nodeInternalPrefix)) {\x0d\n        ArrayPrototypeSplice(trace\x2C 0\x2C l + 1);\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    // `userStackTraceLimit` is the user value for `Error.stackTraceLimit`\x2C\x0d\n    // it is updated at every new exception in `captureLargerStackTrace`.\x0d\n    if (trace.length > userStackTraceLimit)\x0d\n      ArrayPrototypeSplice(trace\x2C userStackTraceLimit);\x0d\n  }\x0d\n\x0d\n  const globalOverride =\x0d\n    maybeOverridePrepareStackTrace(globalThis\x2C error\x2C trace);\x0d\n  if (globalOverride !== kNoOverride) return globalOverride;\x0d\n\x0d\n  // Normal error formatting:\x0d\n  //\x0d\n  // Error: Message\x0d\n  //     at function (file)\x0d\n  //     at file\x0d\n  let errorString;\x0d\n  if (kIsNodeError in error) {\x0d\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\x0d\n  } else {\x0d\n    errorString = ErrorPrototypeToString(error);\x0d\n  }\x0d\n  if (trace.length === 0) {\x0d\n    return errorString;\x0d\n  }\x0d\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\x0d\n};\x0d\n\x0d\nconst maybeOverridePrepareStackTrace = (globalThis\x2C error\x2C trace) => {\x0d\n  // Polyfill of V8's Error.prepareStackTrace API.\x0d\n  // https://crbug.com/v8/7848\x0d\n  // `globalThis` is the global that contains the constructor which\x0d\n  // created `error`.\x0d\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\x0d\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n  // We still have legacy usage that depends on the main context's `Error`\x0d\n  // being used\x2C even when the error is from a different context.\x0d\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\x0d\n  if (typeof MainContextError.prepareStackTrace === 'function') {\x0d\n    return MainContextError.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  return kNoOverride;\x0d\n};\x0d\n\x0d\nconst aggregateTwoErrors = hideStackFrames((innerError\x2C outerError) => {\x0d\n  if (innerError && outerError) {\x0d\n    if (ArrayIsArray(outerError.errors)) {\x0d\n      // If `outerError` is already an `AggregateError`.\x0d\n      ArrayPrototypePush(outerError.errors\x2C innerError);\x0d\n      return outerError;\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new AggregateError(new SafeArrayIterator([\x0d\n      outerError\x2C\x0d\n      innerError\x2C\x0d\n    ])\x2C outerError.message);\x0d\n    err.code = outerError.code;\x0d\n    return err;\x0d\n  }\x0d\n  return innerError || outerError;\x0d\n});\x0d\n\x0d\n// Lazily loaded\x0d\nlet util;\x0d\nlet assert;\x0d\n\x0d\nlet internalUtil = null;\x0d\nfunction lazyInternalUtil() {\x0d\n  if (!internalUtil) {\x0d\n    internalUtil = require('internal/util');\x0d\n  }\x0d\n  return internalUtil;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect = null;\x0d\nfunction lazyInternalUtilInspect() {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect;\x0d\n}\x0d\n\x0d\nlet buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (buffer === undefined)\x0d\n    buffer = require('buffer').Buffer;\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction isErrorStackTraceLimitWritable() {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\x0d\n  if (desc === undefined) {\x0d\n    return ObjectIsExtensible(Error);\x0d\n  }\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\x0d\n    desc.writable :\x0d\n    desc.set !== undefined;\x0d\n}\x0d\n\x0d\n// A specialized Error that includes an additional info property with\x0d\n// additional information about the error condition.\x0d\n// It has the properties present in a UVException but with a custom error\x0d\n// message followed by the uv error code and uv error message.\x0d\n// It also has its own error code with the original uv error context put into\x0d\n// `err.info`.\x0d\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\x0d\n// and may have .path and .dest.\x0d\nclass SystemError extends Error {\x0d\n  constructor(key\x2C context) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    super();\x0d\n    // Reset the limit and setting the name property.\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\x0d\n    const prefix = getMessage(key\x2C []\x2C this);\x0d\n    let message = `${prefix}: ${context.syscall} returned ` +\x0d\n                  `${context.code} (${context.message})`;\x0d\n\x0d\n    if (context.path !== undefined)\x0d\n      message += ` ${context.path}`;\x0d\n    if (context.dest !== undefined)\x0d\n      message += ` => ${context.dest}`;\x0d\n\x0d\n    captureLargerStackTrace(this);\x0d\n\x0d\n    this.code = key;\x0d\n\x0d\n    ObjectDefineProperties(this\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      name: {\x0d\n        value: 'SystemError'\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      info: {\x0d\n        value: context\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        writable: false\x2C\x0d\n      }\x2C\x0d\n      errno: {\x0d\n        get() {\x0d\n          return context.errno;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.errno = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      syscall: {\x0d\n        get() {\x0d\n          return context.syscall;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.syscall = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    if (context.path !== undefined) {\x0d\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\x0d\n      // introduced. The `path` and `dest` properties in the context seem to\x0d\n      // always be of type string. We should probably just remove the\x0d\n      // `.toString()` and `Buffer.from()` operations and set the value on the\x0d\n      // context as the user did.\x0d\n      ObjectDefineProperty(this\x2C 'path'\x2C {\x0d\n        get() {\x0d\n          return context.path != null ?\x0d\n            context.path.toString() : context.path;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.path = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (context.dest !== undefined) {\x0d\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\x0d\n        get() {\x0d\n          return context.dest != null ?\x0d\n            context.dest.toString() : context.dest;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.dest = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    return `${this.name} [${this.code}]: ${this.message}`;\x0d\n  }\x0d\n\x0d\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\x0d\n    return lazyInternalUtilInspect().inspect(this\x2C {\x0d\n      ...ctx\x2C\x0d\n      getters: true\x2C\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeSystemErrorWithCode(key) {\x0d\n  return class NodeError extends SystemError {\x0d\n    constructor(ctx) {\x0d\n      super(key\x2C ctx);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction makeNodeErrorWithCode(Base\x2C key) {\x0d\n  return function NodeError(...args) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    const error = new Base();\x0d\n    // Reset the limit and setting the name property.\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\x0d\n    const message = getMessage(key\x2C args\x2C error);\x0d\n    ObjectDefineProperties(error\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      toString: {\x0d\n        value() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n    captureLargerStackTrace(error);\x0d\n    error.code = key;\x0d\n    return error;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * This function removes unnecessary frames from Node.js core errors.\x0d\n * @template {(...args: any[]) => any} T\x0d\n * @type {(fn: T) => T}\x0d\n */\x0d\nfunction hideStackFrames(fn) {\x0d\n  // We rename the functions that will be hidden to cut off the stacktrace\x0d\n  // at the outermost one\x0d\n  const hidden = nodeInternalPrefix + fn.name;\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { value: hidden });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Utility function for registering the error codes. Only used here. Exported\x0d\n// *only* to allow for testing.\x0d\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\x0d\n  // Special case for SystemError that formats the error message differently\x0d\n  // The SystemErrors only have SystemError as their base classes.\x0d\n  messages.set(sym\x2C val);\x0d\n  if (def === SystemError) {\x0d\n    def = makeSystemErrorWithCode(sym);\x0d\n  } else {\x0d\n    def = makeNodeErrorWithCode(def\x2C sym);\x0d\n  }\x0d\n\x0d\n  if (otherClasses.length !== 0) {\x0d\n    otherClasses.forEach((clazz) => {\x0d\n      def[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\x0d\n    });\x0d\n  }\x0d\n  codes[sym] = def;\x0d\n}\x0d\n\x0d\nfunction getMessage(key\x2C args\x2C self) {\x0d\n  const msg = messages.get(key);\x0d\n\x0d\n  if (assert === undefined) assert = require('internal/assert');\x0d\n\x0d\n  if (typeof msg === 'function') {\x0d\n    assert(\x0d\n      msg.length <= args.length\x2C // Default options do not count.\x0d\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n        `match the required ones (${msg.length}).`\x0d\n    );\x0d\n    return ReflectApply(msg\x2C self\x2C args);\x0d\n  }\x0d\n\x0d\n  const expectedLength =\x0d\n    (StringPrototypeMatch(msg\x2C /%[dfijoOs]/g) || []).length;\x0d\n  assert(\x0d\n    expectedLength === args.length\x2C\x0d\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n      `match the required ones (${expectedLength}).`\x0d\n  );\x0d\n  if (args.length === 0)\x0d\n    return msg;\x0d\n\x0d\n  ArrayPrototypeUnshift(args\x2C msg);\x0d\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  if (!uvBinding) {\x0d\n    uvBinding = internalBinding('uv');\x0d\n  }\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\x0d\n\x0d\nfunction uvErrmapGet(name) {\x0d\n  uvBinding = lazyUv();\x0d\n  if (!uvBinding.errmap) {\x0d\n    uvBinding.errmap = uvBinding.getErrorMap();\x0d\n  }\x0d\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\x0d\n}\x0d\n\x0d\nconst captureLargerStackTrace = hideStackFrames(\x0d\n  function captureLargerStackTrace(err) {\x0d\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\x0d\n    if (stackTraceLimitIsWritable) {\x0d\n      userStackTraceLimit = Error.stackTraceLimit;\x0d\n      Error.stackTraceLimit = Infinity;\x0d\n    }\x0d\n    ErrorCaptureStackTrace(err);\x0d\n    // Reset the limit\x0d\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\x0d\n\x0d\n    return err;\x0d\n  });\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * function UVException using a context object with data assembled in C++.\x0d\n * The goal is to migrate them to ERR_* errors later when compatibility is\x0d\n * not a concern.\x0d\n *\x0d\n * @param {Object} ctx\x0d\n * @returns {Error}\x0d\n */\x0d\nconst uvException = hideStackFrames(function uvException(ctx) {\x0d\n  const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\x0d\n  let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\x0d\n\x0d\n  let path;\x0d\n  let dest;\x0d\n  if (ctx.path) {\x0d\n    path = ctx.path.toString();\x0d\n    message += ` '${path}'`;\x0d\n  }\x0d\n  if (ctx.dest) {\x0d\n    dest = ctx.dest.toString();\x0d\n    message += ` -> '${dest}'`;\x0d\n  }\x0d\n\x0d\n  // Reducing the limit improves the performance significantly. We do not lose\x0d\n  // the stack frames due to the `captureStackTrace()` function that is called\x0d\n  // later.\x0d\n  const tmpLimit = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // Pass the message to the constructor instead of setting it on the object\x0d\n  // to make sure it is the same as the one created in C++\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n\x0d\n  for (const prop of ObjectKeys(ctx)) {\x0d\n    if (prop === 'message' || prop === 'path' || prop === 'dest') {\x0d\n      continue;\x0d\n    }\x0d\n    err[prop] = ctx[prop];\x0d\n  }\x0d\n\x0d\n  err.code = code;\x0d\n  if (path) {\x0d\n    err.path = path;\x0d\n  }\x0d\n  if (dest) {\x0d\n    err.dest = dest;\x0d\n  }\x0d\n\x0d\n  return captureLargerStackTrace(err);\x0d\n});\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * This function should replace the deprecated\x0d\n * `exceptionWithHostPort()` function.\x0d\n *\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst uvExceptionWithHostPort = hideStackFrames(\x0d\n  function uvExceptionWithHostPort(err\x2C syscall\x2C address\x2C port) {\x0d\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\x0d\n    const message = `${syscall} ${code}: ${uvmsg}`;\x0d\n    let details = '';\x0d\n\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n\x0d\n    // Reducing the limit improves the performance significantly. We do not\x0d\n    // lose the stack frames due to the `captureStackTrace()` function that\x0d\n    // is called later.\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(`${message}${details}`);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.code = code;\x0d\n    ex.errno = err;\x0d\n    ex.syscall = syscall;\x0d\n    ex.address = address;\x0d\n    if (port) {\x0d\n      ex.port = port;\x0d\n    }\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * This used to be util._errnoException().\x0d\n *\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} [original]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst errnoException = hideStackFrames(\x0d\n  function errnoException(err\x2C syscall\x2C original) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    if (util === undefined) util = require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    const message = original ?\x0d\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\x0d\n\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(message);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.errno = err;\x0d\n    ex.code = code;\x0d\n    ex.syscall = syscall;\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * Deprecated\x2C new function is `uvExceptionWithHostPort()`\x0d\n * New function added the error description directly\x0d\n * from C++. this method for backwards compatibility\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @param {string} [additional]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst exceptionWithHostPort = hideStackFrames(\x0d\n  function exceptionWithHostPort(err\x2C syscall\x2C address\x2C port\x2C additional) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    if (util === undefined) util = require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    let details = '';\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n    if (additional) {\x0d\n      details += ` - Local (${additional})`;\x0d\n    }\x0d\n\x0d\n    // Reducing the limit improves the performance significantly. We do not\x0d\n    // lose the stack frames due to the `captureStackTrace()` function that\x0d\n    // is called later.\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(`${syscall} ${code}${details}`);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.errno = err;\x0d\n    ex.code = code;\x0d\n    ex.syscall = syscall;\x0d\n    ex.address = address;\x0d\n    if (port) {\x0d\n      ex.port = port;\x0d\n    }\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @param {number|string} code - A libuv error number or a c-ares error code\x0d\n * @param {string} syscall\x0d\n * @param {string} [hostname]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst dnsException = hideStackFrames(function(code\x2C syscall\x2C hostname) {\x0d\n  let errno;\x0d\n  // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\x0d\n  // c-ares error code.\x0d\n  // TODO(joyeecheung): translate c-ares error codes into numeric ones and\x0d\n  // make them available in a property that's not error.errno (since they\x0d\n  // can be in conflict with libuv error codes). Also make sure\x0d\n  // util.getSystemErrorName() can understand them when an being informed that\x0d\n  // the number is a c-ares error code.\x0d\n  if (typeof code === 'number') {\x0d\n    errno = code;\x0d\n    // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\x0d\n    // long enough that it's not practical to remove it.\x0d\n    if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\x0d\n      code = 'ENOTFOUND'; // Fabricated error name.\x0d\n    } else {\x0d\n      code = lazyInternalUtil().getSystemErrorName(code);\x0d\n    }\x0d\n  }\x0d\n  const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ''}`;\x0d\n  // Reducing the limit improves the performance significantly. We do not lose\x0d\n  // the stack frames due to the `captureStackTrace()` function that is called\x0d\n  // later.\x0d\n  const tmpLimit = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const ex = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n  ex.errno = errno;\x0d\n  ex.code = code;\x0d\n  ex.syscall = syscall;\x0d\n  if (hostname) {\x0d\n    ex.hostname = hostname;\x0d\n  }\x0d\n\x0d\n  return captureLargerStackTrace(ex);\x0d\n});\x0d\n\x0d\nfunction connResetException(msg) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const ex = new Error(msg);\x0d\n  ex.code = 'ECONNRESET';\x0d\n  return ex;\x0d\n}\x0d\n\x0d\nlet maxStack_ErrorName;\x0d\nlet maxStack_ErrorMessage;\x0d\n/**\x0d\n * Returns true if `err.name` and `err.message` are equal to engine-specific\x0d\n * values indicating max call stack size has been exceeded.\x0d\n * "Maximum call stack size exceeded" in V8.\x0d\n *\x0d\n * @param {Error} err\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isStackOverflowError(err) {\x0d\n  if (maxStack_ErrorMessage === undefined) {\x0d\n    try {\x0d\n      function overflowStack() { overflowStack(); }\x0d\n      overflowStack();\x0d\n    } catch (err) {\x0d\n      maxStack_ErrorMessage = err.message;\x0d\n      maxStack_ErrorName = err.name;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return err && err.name === maxStack_ErrorName &&\x0d\n         err.message === maxStack_ErrorMessage;\x0d\n}\x0d\n\x0d\n// Only use this for integers! Decimal numbers do not work with this function.\x0d\nfunction addNumericalSeparator(val) {\x0d\n  let res = '';\x0d\n  let i = val.length;\x0d\n  const start = val[0] === '-' ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\x0d\n  }\x0d\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\x0d\n}\x0d\n\x0d\n// Used to enhance the stack that will be picked up by the inspector\x0d\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\x0d\n\x0d\n// These are supposed to be called only on fatal exceptions before\x0d\n// the process exits.\x0d\nconst fatalExceptionStackEnhancers = {\x0d\n  beforeInspector(error) {\x0d\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\x0d\n      return error.stack;\x0d\n    }\x0d\n\x0d\n    try {\x0d\n      // Set the error.stack here so it gets picked up by the\x0d\n      // inspector.\x0d\n      error.stack = error[kEnhanceStackBeforeInspector]();\x0d\n    } catch {\x0d\n      // We are just enhancing the error. If it fails\x2C ignore it.\x0d\n    }\x0d\n    return error.stack;\x0d\n  }\x2C\x0d\n  afterInspector(error) {\x0d\n    const originalStack = error.stack;\x0d\n    let useColors = true;\x0d\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\x0d\n    // rather display them directly to the stdout. On those consoles\x2C\x0d\n    // libuv emulates colors by intercepting stdout stream and calling\x0d\n    // corresponding Windows API functions for setting console colors.\x0d\n    // However\x2C fatal error are handled differently and we cannot easily\x0d\n    // highlight them. On Windows\x2C detecting whether a console supports\x0d\n    // ANSI escape sequences is not reliable.\x0d\n    if (process.platform === 'win32') {\x0d\n      const info = internalBinding('os').getOSInformation();\x0d\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\x0d\n                                    Number);\x0d\n      if (ver[0] !== 10 || ver[2] < 14393) {\x0d\n        useColors = false;\x0d\n      }\x0d\n    }\x0d\n    const {\x0d\n      inspect\x2C\x0d\n      inspectDefaultOptions: {\x0d\n        colors: defaultColors\x0d\n      }\x0d\n    } = lazyInternalUtilInspect();\x0d\n    const colors = useColors &&\x0d\n                   ((internalBinding('util').guessHandleType(2) === 'TTY' &&\x0d\n                   require('internal/tty').hasColors()) ||\x0d\n                   defaultColors);\x0d\n    try {\x0d\n      return inspect(error\x2C {\x0d\n        colors\x2C\x0d\n        customInspect: false\x2C\x0d\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x0d\n      });\x0d\n    } catch {\x0d\n      return originalStack;\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Ensures the printed error line is from user code.\x0d\nlet _kArrowMessagePrivateSymbol\x2C _setHiddenValue;\x0d\nfunction setArrowMessage(err\x2C arrowMessage) {\x0d\n  if (!_kArrowMessagePrivateSymbol) {\x0d\n    ({\x0d\n      arrow_message_private_symbol: _kArrowMessagePrivateSymbol\x2C\x0d\n      setHiddenValue: _setHiddenValue\x2C\x0d\n    } = internalBinding('util'));\x0d\n  }\x0d\n  _setHiddenValue(err\x2C _kArrowMessagePrivateSymbol\x2C arrowMessage);\x0d\n}\x0d\n\x0d\n// Hide stack lines before the first user code line.\x0d\nfunction hideInternalStackFrames(error) {\x0d\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\x0d\n    let frames = stackFrames;\x0d\n    if (typeof stackFrames === 'object') {\x0d\n      frames = ArrayPrototypeFilter(\x0d\n        stackFrames\x2C\x0d\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\x0d\n                                            'node:internal')\x0d\n      );\x0d\n    }\x0d\n    ArrayPrototypeUnshift(frames\x2C error);\x0d\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\x0d\n  });\x0d\n}\x0d\n\x0d\n// Node uses an AbortError that isn't exactly the same as the DOMException\x0d\n// to make usage of the error in userland and readable-stream easier.\x0d\n// It is a regular error with `.code` and `.name`.\x0d\nclass AbortError extends Error {\x0d\n  constructor() {\x0d\n    super('The operation was aborted');\x0d\n    this.code = 'ABORT_ERR';\x0d\n    this.name = 'AbortError';\x0d\n  }\x0d\n}\x0d\nmodule.exports = {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes\x2C\x0d\n  dnsException\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  getMessage\x2C\x0d\n  hideStackFrames\x2C\x0d\n  hideInternalStackFrames\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  isStackOverflowError\x2C\x0d\n  setArrowMessage\x2C\x0d\n  connResetException\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n  SystemError\x2C\x0d\n  AbortError\x2C\x0d\n  // This is exported only to facilitate testing.\x0d\n  E\x2C\x0d\n  kNoOverride\x2C\x0d\n  prepareStackTrace\x2C\x0d\n  maybeOverridePrepareStackTrace\x2C\x0d\n  overrideStackTrace\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  fatalExceptionStackEnhancers\x2C\x0d\n  kIsNodeError\x2C\x0d\n  captureLargerStackTrace\x2C\x0d\n};\x0d\n\x0d\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\x0d\n// must be an upper case string. The val can be either a function or a string.\x0d\n// The def must be an error class.\x0d\n// The return value of the function must be a string.\x0d\n// Examples:\x0d\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\x0d\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\x0d\n//\x0d\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\x0d\n// any given error code must never be reused to identify a different error.\x0d\n//\x0d\n// Any error code added here should also be added to the documentation\x0d\n//\x0d\n// Note: Please try to keep these in alphabetical order\x0d\n//\x0d\n// Note: Node.js specific errors must begin with the prefix ERR_\x0d\n\x0d\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\x0d\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\x0d\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\x0d\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\x0d\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\x0d\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\x0d\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name = undefined) => {\x0d\n    if (name) {\x0d\n      return `"${name}" is outside of buffer bounds`;\x0d\n    }\x0d\n    return 'Attempt to access memory outside buffer bounds';\x0d\n  }\x2C RangeError);\x0d\nE('ERR_BUFFER_TOO_LARGE'\x2C\x0d\n  'Cannot create a Buffer larger than %s bytes'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\x0d\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\x0d\n  'Child closed before reply received'\x2C Error);\x0d\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\x0d\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\x0d\n  Error);\x0d\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\x0d\n  'Console expects a writable stream instance for %s'\x2C TypeError);\x0d\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\x0d\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\x0d\n  'Custom engines not supported by this OpenSSL'\x2C Error);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\x0d\n  'Public key is not valid for specified curve'\x2C Error);\x0d\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\x0d\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\x0d\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\x0d\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\x0d\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\x0d\n// Switch to TypeError. The current implementation does not seem right.\x0d\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\x0d\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\x0d\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\x0d\n  'Cannot do synchronous work on directory handle with concurrent ' +\x0d\n  'asynchronous operations'\x2C Error);\x0d\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\x0d\n  'A callback was registered through ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\x0d\n     'exclusive with using the `domain` module'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\x0d\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\x0d\n  Error);\x0d\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\x0d\n  this.errno = ret;\x0d\n  return `The encoded data was not valid for encoding ${encoding}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\x0d\n  RangeError);\x0d\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\x0d\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\x0d\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\x0d\n  this.reason = reason;\x0d\n  return 'Promise was rejected with falsy value';\x0d\n}\x2C Error);\x0d\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\x0d\n  'The feature %s is unavailable on the current platform' +\x0d\n  '\x2C which is being used to run Node.js'\x2C\x0d\n  TypeError);\x0d\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\x0d\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\x0d\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\x0d\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\x0d\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\x0d\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\x0d\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\x0d\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\x0d\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\x0d\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError);\x0d\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GB'\x2C RangeError);\x0d\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\x0d\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\x0d\n  Error); // Switch to TypeError. The current implementation does not seem right\x0d\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\x0d\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\x0d\n  ':authority header is required for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_PATH'\x2C\x0d\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\x0d\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\x0d\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\x0d\n  'Cannot specify additional headers after response initiated'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\x0d\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\x0d\n  'Header field "%s" must only have a single value'\x2C TypeError);\x0d\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\x0d\n  'Informational status codes cannot be used'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\x0d\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\x0d\n  'Invalid informational status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\x0d\n  'Packed settings length must be a multiple of six'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\x0d\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\x0d\n  // Using default arguments here is important so the arguments are not counted\x0d\n  // towards `Function#length`.\x0d\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\x0d\n    this.actual = actual;\x0d\n    if (min !== undefined) {\x0d\n      this.min = min;\x0d\n      this.max = max;\x0d\n    }\x0d\n    return `Invalid value for setting "${name}": ${actual}`;\x0d\n  }\x2C TypeError\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\x0d\n  'Maximum number of pending settings acknowledgements'\x2C Error);\x0d\nE('ERR_HTTP2_NESTED_PUSH'\x2C\x0d\n  'A push stream cannot initiate another push stream.'\x2C Error);\x0d\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\x0d\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\x0d\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\x0d\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\x0d\n  'No stream ID is available because maximum stream ID has been reached'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\x0d\n  'Responses with %s status must not have a payload'\x2C Error);\x0d\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\x0d\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\x0d\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\x0d\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError);\x0d\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\x0d\n  'Offset or length can only be specified for regular files'\x2C Error);\x0d\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\x0d\n  'The socket is already bound to an Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\x0d\n  'The socket has been disconnected from the Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_101'\x2C\x0d\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\x0d\n  let msg = 'The pending stream has been canceled';\x0d\n  if (error) {\x0d\n    this.cause = error;\x0d\n    if (typeof error.message === 'string')\x0d\n      msg += ` (caused by: ${error.message})`;\x0d\n  }\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\x0d\n  'A stream cannot depend on itself'\x2C Error);\x0d\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\x0d\n  'Trailing headers have already been sent'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\x0d\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\x0d\n  'emitted'\x2C Error);\x0d\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\x0d\nE('ERR_HTTP_HEADERS_SENT'\x2C\x0d\n  'Cannot %s headers after they are sent to the client'\x2C Error);\x0d\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\x0d\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\x0d\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\x0d\nE('ERR_HTTP_TRAILER_INVALID'\x2C\x0d\n  'Trailers are invalid with this transfer encoding'\x2C Error);\x0d\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\x0d\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\x0d\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError);\x0d\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\x0d\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\x0d\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\x0d\n  'Inspector is already activated. Close it with inspector.close() ' +\x0d\n  'before activating it again.'\x2C\x0d\n  Error);\x0d\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\x0d\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\x0d\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\x0d\n  const suffix = 'This is caused by either a bug in Node.js ' +\x0d\n    'or incorrect usage of Node.js internals.\\n' +\x0d\n    'Please open an issue with this stack trace at ' +\x0d\n    'https://github.com/nodejs/node/issues\\n';\x0d\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\x0d\n  this.host = host;\x0d\n  this.port = port;\x0d\n  return `Invalid address family: ${addressType} ${host}:${port}`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_INVALID_ARG_TYPE'\x2C\x0d\n  (name\x2C expected\x2C actual) => {\x0d\n    assert(typeof name === 'string'\x2C "'name' must be a string");\x0d\n    if (!ArrayIsArray(expected)) {\x0d\n      expected = [expected];\x0d\n    }\x0d\n\x0d\n    let msg = 'The ';\x0d\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\x0d\n      // For cases like 'first argument'\x0d\n      msg += `${name} `;\x0d\n    } else {\x0d\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n      msg += `"${name}" ${type} `;\x0d\n    }\x0d\n    msg += 'must be ';\x0d\n\x0d\n    const types = [];\x0d\n    const instances = [];\x0d\n    const other = [];\x0d\n\x0d\n    for (const value of expected) {\x0d\n      assert(typeof value === 'string'\x2C\x0d\n             'All expected entries have to be of type string');\x0d\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\x0d\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\x0d\n      } else if (RegExpPrototypeTest(classRegExp\x2C value)) {\x0d\n        ArrayPrototypePush(instances\x2C value);\x0d\n      } else {\x0d\n        assert(value !== 'object'\x2C\x0d\n               'The value "object" should be written as "Object"');\x0d\n        ArrayPrototypePush(other\x2C value);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Special handle `object` in case other instances are allowed to outline\x0d\n    // the differences between each other.\x0d\n    if (instances.length > 0) {\x0d\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\x0d\n      if (pos !== -1) {\x0d\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\x0d\n        ArrayPrototypePush(instances\x2C 'Object');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (types.length > 0) {\x0d\n      if (types.length > 2) {\x0d\n        const last = ArrayPrototypePop(types);\x0d\n        msg += `one of type ${ArrayPrototypeJoin(types\x2C '\x2C ')}\x2C or ${last}`;\x0d\n      } else if (types.length === 2) {\x0d\n        msg += `one of type ${types[0]} or ${types[1]}`;\x0d\n      } else {\x0d\n        msg += `of type ${types[0]}`;\x0d\n      }\x0d\n      if (instances.length > 0 || other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (instances.length > 0) {\x0d\n      if (instances.length > 2) {\x0d\n        const last = ArrayPrototypePop(instances);\x0d\n        msg +=\x0d\n          `an instance of ${ArrayPrototypeJoin(instances\x2C '\x2C ')}\x2C or ${last}`;\x0d\n      } else {\x0d\n        msg += `an instance of ${instances[0]}`;\x0d\n        if (instances.length === 2) {\x0d\n          msg += ` or ${instances[1]}`;\x0d\n        }\x0d\n      }\x0d\n      if (other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (other.length > 0) {\x0d\n      if (other.length > 2) {\x0d\n        const last = ArrayPrototypePop(other);\x0d\n        msg += `one of ${ArrayPrototypeJoin(other\x2C '\x2C ')}\x2C or ${last}`;\x0d\n      } else if (other.length === 2) {\x0d\n        msg += `one of ${other[0]} or ${other[1]}`;\x0d\n      } else {\x0d\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\x0d\n          msg += 'an ';\x0d\n        msg += `${other[0]}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (actual == null) {\x0d\n      msg += `. Received ${actual}`;\x0d\n    } else if (typeof actual === 'function' && actual.name) {\x0d\n      msg += `. Received function ${actual.name}`;\x0d\n    } else if (typeof actual === 'object') {\x0d\n      if (actual.constructor && actual.constructor.name) {\x0d\n        msg += `. Received an instance of ${actual.constructor.name}`;\x0d\n      } else {\x0d\n        const inspected = lazyInternalUtilInspect()\x0d\n          .inspect(actual\x2C { depth: -1 });\x0d\n        msg += `. Received ${inspected}`;\x0d\n      }\x0d\n    } else {\x0d\n      let inspected = lazyInternalUtilInspect()\x0d\n        .inspect(actual\x2C { colors: false });\x0d\n      if (inspected.length > 25)\x0d\n        inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 25)}...`;\x0d\n      msg += `. Received type ${typeof actual} (${inspected})`;\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\x0d\n  let inspected = lazyInternalUtilInspect().inspect(value);\x0d\n  if (inspected.length > 128) {\x0d\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\x0d\n  }\x0d\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_INVALID_CALLBACK'\x2C\x0d\n  'Callback must be a function. Received %O'\x2C TypeError);\x0d\nE('ERR_INVALID_CHAR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name\x2C field = undefined) => {\x0d\n    let msg = `Invalid character in ${name}`;\x0d\n    if (field !== undefined) {\x0d\n      msg += ` ["${field}"]`;\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_INVALID_CURSOR_POS'\x2C\x0d\n  'Cannot set cursor row without setting its column'\x2C TypeError);\x0d\nE('ERR_INVALID_FD'\x2C\x0d\n  '"fd" must be a positive integer: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_HOST'\x2C\x0d\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\x0d\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\x0d\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError);\x0d\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\x0d\n  return `Invalid module "${request}" ${reason}${base ?\x0d\n    ` imported from ${base}` : ''}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\x0d\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\x0d\n    ''}${message ? `. ${message}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\x0d\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\x0d\n    const relError = typeof target === 'string' && !isImport &&\x0d\n      target.length && !StringPrototypeStartsWith(target\x2C './');\x0d\n    if (key === '.') {\x0d\n      assert(isImport === false);\x0d\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\x0d\n        `in the package config ${pkgPath}package.json${base ?\x0d\n          ` imported from ${base}` : ''}${relError ?\x0d\n          '; targets must start with "./"' : ''}`;\x0d\n    }\x0d\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\x0d\n      JSONStringify(target)} defined for '${key}' in the package config ${\x0d\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\x0d\n      '; targets must start with "./"' : ''}`;\x0d\n  }\x2C Error);\x0d\nE('ERR_INVALID_PROTOCOL'\x2C\x0d\n  'Protocol "%s" not supported. Expected "%s"'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\x0d\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\x0d\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" function but got ${value}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  let type;\x0d\n  if (value && value.constructor && value.constructor.name) {\x0d\n    type = `instance of ${value.constructor.name}`;\x0d\n  } else {\x0d\n    type = `type ${typeof value}`;\x0d\n  }\x0d\n  return `Expected ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" function but got ${type}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\x0d\n  let type;\x0d\n  if (value && value.constructor && value.constructor.name) {\x0d\n    type = `instance of ${value.constructor.name}`;\x0d\n  } else {\x0d\n    type = `type ${typeof value}`;\x0d\n  }\x0d\n  return `Expected ${input} to be returned from the "${name}"` +\x0d\n         ` function but got ${type}.`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\x0d\n  'Asynchronous forks do not support ' +\x0d\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\x0d\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\x0d\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\x0d\nE('ERR_INVALID_URL'\x2C function(input) {\x0d\n  this.input = input;\x0d\n  // Don't include URL in message.\x0d\n  // (See https://github.com/nodejs/node/pull/38614)\x0d\n  return 'Invalid URL';\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_URL_SCHEME'\x2C\x0d\n  (expected) => {\x0d\n    if (typeof expected === 'string')\x0d\n      expected = [expected];\x0d\n    assert(expected.length <= 2);\x0d\n    const res = expected.length === 2 ?\x0d\n      `one of scheme ${expected[0]} or ${expected[1]}` :\x0d\n      `of scheme ${expected[0]}`;\x0d\n    return `The URL must be ${res}`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\x0d\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\x0d\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\x0d\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\x0d\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\x0d\n  (moduleURL\x2C realIntegrities) => {\x0d\n    let msg = `The content of "${\x0d\n      moduleURL\x0d\n    }" does not match the expected integrity.`;\x0d\n    if (realIntegrities.size) {\x0d\n      const sri = ArrayPrototypeJoin(\x0d\n        ArrayFrom(realIntegrities.entries()\x2C\x0d\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\x0d\n        ' '\x0d\n      );\x0d\n      msg += ` Integrities found are: ${sri}`;\x0d\n    } else {\x0d\n      msg += ' The resource was not found in the policy.';\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\x0d\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\x0d\n  'conditions: %s'\x2C\x0d\n  Error);\x0d\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\x0d\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\x0d\n  'Manifest resource %s has invalid property value for %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\x0d\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\x0d\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\x0d\n  'Manifest specified unknown error behavior "%s".'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\x0d\nE('ERR_MISSING_ARGS'\x2C\x0d\n  (...args) => {\x0d\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\x0d\n    let msg = 'The ';\x0d\n    const len = args.length;\x0d\n    const wrap = (a) => `"${a}"`;\x0d\n    args = ArrayPrototypeMap(\x0d\n      args\x2C\x0d\n      (a) => (ArrayIsArray(a) ?\x0d\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\x0d\n        wrap(a))\x0d\n    );\x0d\n    switch (len) {\x0d\n      case 1:\x0d\n        msg += `${args[0]} argument`;\x0d\n        break;\x0d\n      case 2:\x0d\n        msg += `${args[0]} and ${args[1]} arguments`;\x0d\n        break;\x0d\n      default:\x0d\n        msg += ArrayPrototypeJoin(ArrayPrototypeSlice(args\x2C 0\x2C len - 1)\x2C '\x2C ');\x0d\n        msg += `\x2C and ${args[len - 1]} arguments`;\x0d\n        break;\x0d\n    }\x0d\n    return `${msg} must be specified`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\x0d\nE('ERR_MODULE_NOT_FOUND'\x2C (path\x2C base\x2C type = 'package') => {\x0d\n  return `Cannot find ${type} '${path}' imported from ${base}`;\x0d\n}\x2C Error);\x0d\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\x0d\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\x0d\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\x0d\n  'byte_offset + byte_length should be less than or equal to the size in ' +\x0d\n    'bytes of the array passed in'\x2C\x0d\n  RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\x0d\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\x0d\n  'Invalid typed array length'\x2C RangeError);\x0d\nE('ERR_NO_CRYPTO'\x2C\x0d\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\x0d\nE('ERR_NO_ICU'\x2C\x0d\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\x0d\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\x0d\nE('ERR_OUT_OF_RANGE'\x2C\x0d\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\x0d\n    assert(range\x2C 'Missing "range" argument');\x0d\n    let msg = replaceDefaultBoolean ? str :\x0d\n      `The value of "${str}" is out of range.`;\x0d\n    let received;\x0d\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\x0d\n      received = addNumericalSeparator(String(input));\x0d\n    } else if (typeof input === 'bigint') {\x0d\n      received = String(input);\x0d\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\x0d\n        received = addNumericalSeparator(received);\x0d\n      }\x0d\n      received += 'n';\x0d\n    } else {\x0d\n      received = lazyInternalUtilInspect().inspect(input);\x0d\n    }\x0d\n    msg += ` It must be ${range}. Received ${received}`;\x0d\n    return msg;\x0d\n  }\x2C RangeError);\x0d\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\x0d\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\x0d\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\x0d\n  if (subpath === '.')\x0d\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\x0d\n      ` imported from ${base}` : ''}`;\x0d\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\x0d\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\x0d\n  '%d is not a valid timestamp'\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_REQUIRE_ESM'\x2C\x0d\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\x0d\n    hideInternalStackFrames(this);\x0d\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\x0d\n      parentPath}` : ''} not supported.`;\x0d\n    if (!packageJsonPath) {\x0d\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\x0d\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\x0d\n            'import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    const path = require('path');\x0d\n    const basename = parentPath && path.basename(filename) ===\x0d\n      path.basename(parentPath) ? filename : path.basename(filename);\x0d\n    if (hasEsmSyntax) {\x0d\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\x0d\n        ' a dynamic import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\x0d\n      'file whose nearest parent package.json contains "type": "module" ' +\x0d\n      'which declares all .js files in that package scope as ES modules.' +\x0d\n      `\\nInstead rename ${basename} to end in .cjs\x2C change the requiring ` +\x0d\n      'code to use dynamic import() which is available in all CommonJS ' +\x0d\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\x0d\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\x0d\n      'all ES modules instead).\\n';\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\x0d\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\x0d\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\x0d\n  'Listen method has been called more than once without closing.'\x2C Error);\x0d\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\x0d\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\x0d\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a positive integer'\x2C TypeError);\x0d\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\x0d\n  assert(typeof allowZero === 'boolean'\x2C\x0d\n         "The 'allowZero' argument must be of type boolean.");\x0d\n  const operator = allowZero ? '>=' : '>';\x0d\n  return `${name} should be ${operator} 0 and < 65536. Received ${port}.`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_SOCKET_BAD_TYPE'\x2C\x0d\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\x0d\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\x0d\n  'Could not get or set buffer size'\x2C\x0d\n  SystemError);\x0d\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\x0d\nE('ERR_SRI_PARSE'\x2C\x0d\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\x0d\n  'Cannot call %s after a stream was finished'\x2C\x0d\n  Error);\x0d\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\x0d\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\x0d\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\x0d\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\x0d\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\x0d\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\x0d\n  'stream.unshift() after end event'\x2C Error);\x0d\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\x0d\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\x0d\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\x0d\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError);\x0d\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\x0d\n  this.reason = reason;\x0d\n  this.host = host;\x0d\n  this.cert = cert;\x0d\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\x0d\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\x0d\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\x0d\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\x0d\n  Error);\x0d\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\x0d\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\x0d\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\x0d\n  'TLS session renegotiation disabled for this socket'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\x0d\n  '"servername" is required parameter for Server.addContext'\x2C Error);\x0d\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\x0d\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\x0d\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\x0d\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\x0d\n  'At least one category is required'\x2C TypeError);\x0d\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\x0d\n\x0d\n// This should probably be a `RangeError`.\x0d\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\x0d\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\x0d\n  'handler'\x2C Error);\x0d\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\x0d\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\x0d\n    'callback was already active'\x2C\x0d\n  Error);\x0d\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\x0d\nE('ERR_UNHANDLED_ERROR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (err = undefined) => {\x0d\n    const msg = 'Unhandled error.';\x0d\n    if (err === undefined) return msg;\x0d\n    return `${msg} (${err})`;\x0d\n  }\x2C Error);\x0d\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\x0d\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C\x0d\n  'Unknown file extension "%s" for %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s'\x2C RangeError);\x0d\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError);\x0d\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C "Directory import '%s' is not supported " +\x0d\n'resolving ES modules imported from %s'\x2C Error);\x0d\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url) => {\x0d\n  let msg = 'Only file and data URLs are supported by the default ESM loader';\x0d\n  if (isWindows && url.protocol.length === 2) {\x0d\n    msg +=\x0d\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\x0d\n  }\x0d\n  msg += `. Received protocol '${url.protocol}'`;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\x0d\n  'At least one valid performance entry type is required'\x2C Error);\x0d\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\x0d\n  'A dynamic import callback was not specified.'\x2C TypeError);\x0d\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\x0d\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\x0d\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\x0d\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\x0d\n  'Linked modules must use the same context'\x2C Error);\x0d\nE('ERR_VM_MODULE_LINKING_ERRORED'\x2C\x0d\n  'Linking has already failed for the provided module'\x2C Error);\x0d\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\x0d\n  'Provided module is not an instance of Module'\x2C Error);\x0d\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\x0d\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\x0d\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\x0d\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\x0d\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\x0d\n  Error);\x0d\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\x0d\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\x0d\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\x0d\nE('ERR_WORKER_PATH'\x2C (filename) =>\x0d\n  'The worker script or module filename must be an absolute path or a ' +\x0d\n  'relative path starting with \\'./\\' or \\'../\\'.' +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\x0d\n    ' Wrap file:// URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\x0d\n    ' Wrap data: URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  ` Received "${filename}"`\x2C\x0d\n  TypeError);\x0d\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\x0d\n  'Serializing an uncaught exception failed'\x2C Error);\x0d\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\x0d\n  '%s is not supported in workers'\x2C TypeError);\x0d\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\x0d\n
code-source-info,0x226457da
tick,0x7ff6a7858987,231269,0,0x0,3,0x7ff6a7f1e5b0,0x7ff6a82f07a0,0x226457d7f4,0x226457d5a9,0x2264578d21,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x22645774c7,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2264576859,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x226457464f,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x2264572d77,0x3103a7b5c9
code-creation,LazyCompile,10,231342,0x2bdba104496,70,maybeOverridePrepareStackTrace node:internal/errors:135:40,0x25aadb24a88,~
code-source-info,0x2bdba104496,11,3827,4550,C0O4060C7O4065C18O4126C23O4132C28O4132C34O4164C35O4392C40O4420C48O4461C53O4485C58O4485C64O4517C65O4528C69O4547,,
code-creation,LazyCompile,10,231388,0x2bdba1045b6,3,prepareObjectStackTrace C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:405:34,0x226457ba98,~
code-source-info,0x2bdba1045b6,141,7983,8014,C0O8000C2O8012,,
code-creation,LazyCompile,10,231452,0x2bdba10473e,123,callSiteLocation C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:267:27,0x226457b8b8,~
code-source-info,0x2bdba10473e,141,5193,5537,C0O5228C5O5228C14O5281C19O5281C24O5319C29O5319C34O5353C39O5353C45O5385C50O5385C57O5401C63O5408C67O5433C76O5434C85O5440C94O5446C101O5455C103O5469C107O5503C112O5503C116O5492C120O5524C122O5535,,
code-creation,LazyCompile,10,231528,0x2bdba104976,39,isignored C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:153:20,0x226457b7c8,~
code-source-info,0x2bdba104976,141,2884,3095,C0O2900C4O2912C10O2965C11O2976C12O2994C16O3002C21O3006C30O3053C33O3060C38O3093,,
code-creation,LazyCompile,10,231598,0x2bdba104af6,90,containsNamespace C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:29:28,0x226457b590,~
code-source-info,0x2bdba104af6,141,374,666,C0O410C10O410C16O436C20O436C25O453C30O454C35O484C37O496C41O489C46O525C48O529C52O565C56O581C61O596C66O596C73O610C78O627C79O638C80O505C85O471C88O652C89O664,,
code-creation,LazyCompile,10,231703,0x2bdba104d36,39,istraced C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:169:19,0x226457b818,~
code-source-info,0x2bdba104d36,141,3161,3380,C0O3177C4O3189C10O3248C11O3259C12O3277C16O3285C21O3289C30O3338C33O3345C38O3378,,
code-creation,RegExp,3,231802,0x225ca791400,972,[ \x2C]+
code-creation,LazyCompile,10,231864,0x2bdba1050a6,151,wrapfunction C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:413:23,0x226457bae8,~
code-source-info,0x2bdba1050a6,141,8102,8686,C0O8120C6O8156C15O8162C20O8156C21O8228C24O8253C29O8228C34O8275C37O8275C41O8299C46O8321C50O8299C55O8344C59O8339C63O8413C87O8492C93O8518C99O8525C105O8533C111O8578C117O8621C123O8413C144O8631C150O8684,,
code-creation,LazyCompile,10,231923,0x2bdba10527e,49,createArgumentsString C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:71:32,0x226457b660,~
code-source-info,0x2bdba10527e,141,1255,1369,C0O1277C3O1296C5O1301C7O1301C12O1321C17O1336C27O1311C32O1283C35O1358C43O1358C48O1367,,
code-creation,Eval,10,232043,0x2bdba105536,6, :1:1,0x2bdba1053a0,~
script-source,142,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function (arg0) {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0x2bdba105536,142,0,163,C0O0C5O163,,
code-creation,Function,10,232081,0x2bdba10560e,30, :1:20,0x2bdba1054b0,~
code-source-info,0x2bdba10560e,142,19,162,C0O19C25O67C29O160,,
code-creation,LazyCompile,10,232134,0x2bdba105826,14,createParserGetter C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\index.js:121:29,0x2264578a20,~
code-source-info,0x2bdba105826,140,1953,2022,C0O1953C9O1964C13O2020,,
code-creation,LazyCompile,10,232246,0x2bdba105b3e,16,get node:events:98:6,0x25aadb336f8,~
code-source-info,0x2bdba105b3e,13,2991,3046,C0O3001C3O3021C10O3031C12O3030C15O3041,,
code-creation,LazyCompile,10,232277,0x2bdba105c26,5,get node:events:133:16,0x25aadb33838,~
code-source-info,0x2bdba105c26,13,3955,3997,C0O3965C4O3992,,
code-creation,Function,11,232902,0x225ca791840,776,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x3341609fb50,^
code-source-info,0x225ca791840,99,12225,12666,,,
code-creation,Function,11,232930,0x225ca791bc0,100,get node:internal/bootstrap/pre_execution:314:8,0x3341609cb50,^
code-source-info,0x225ca791bc0,92,10398,10433,,,
code-creation,Function,11,232952,0x225ca791ca0,500,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x3341609a238,^
code-source-info,0x225ca791ca0,98,1194,1482,,,
code-creation,Function,11,232981,0x225ca791f00,880,isAbsolute node:path:402:13,0x2ee4c9e9730,^
code-source-info,0x225ca791f00,35,13104,13523,,,
code-creation,Function,11,233001,0x225ca7922e0,228,splitRoot node:fs:2358:33,0x3f9d3569b98,^
code-source-info,0x225ca7922e0,77,65046,65112,,,
code-creation,Function,11,233023,0x225ca792440,456,tryFile node:internal/modules/cjs/loader:384:17,0x3341609fa60,^
code-source-info,0x225ca792440,99,11460,11661,,,
code-creation,Eval,10,233250,0x2bdba106ece,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\merge-descriptors\\index.js:1:1,0x2bdba106d78,~
script-source,143,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\merge-descriptors\\index.js,/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest\x2C src\x2C redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest\x2C name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src\x2C name)\n    Object.defineProperty(dest\x2C name\x2C descriptor)\n  })\n\n  return dest\n}\n
code-source-info,0x2bdba106ece,143,0,1215,C0O0C4O1215,,
code-creation,Function,10,233322,0x2bdba106fee,33, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\merge-descriptors\\index.js:1:1,0x2bdba106e48,~
code-source-info,0x2bdba106fee,143,0,1215,C0O0C10O181C12O196C16O268C20O275C25O285C29O268C32O1214,,
code-creation,Function,11,233754,0x225ca792680,692, node:internal/validators:167:39,0x6682e9aae0,^
code-source-info,0x225ca792680,17,5132,5418,,,
code-creation,Function,11,233780,0x225ca7929a0,308,isEncoding node:buffer:529:40,0x6682ea6010,^
code-source-info,0x225ca7929a0,18,15302,15437,,,
code-creation,Function,11,233798,0x225ca792b40,308, node:internal/fs/utils:680:42,0x3f9d3572eb0,^
code-source-info,0x225ca792b40,78,19135,19274,,,
code-creation,Function,11,233824,0x225ca792ce0,832,openSync node:fs:576:18,0x3f9d3567fa0,^
code-source-info,0x225ca792ce0,77,15001,15391,,,
code-creation,Function,11,233841,0x225ca793080,176,allocUnsafe node:buffer:372:42,0x6682ea5b88,^
code-source-info,0x225ca793080,18,11242,11300,,,
code-creation,Function,11,233862,0x225ca7931a0,396,closeSync node:fs:526:19,0x3f9d3567ec8,^
code-source-info,0x225ca7931a0,77,13820,13948,,,
code-creation,Function,11,233879,0x225ca7933a0,96,slice node:buffer:593:12,0x6682ea6230,^
code-source-info,0x225ca7933a0,18,17194,17240,,,
code-creation,Function,11,233896,0x225ca793460,252,importModuleDynamicallyWrap node:internal/vm/module:435:37,0xbfdd346b70,^
code-source-info,0x225ca793460,113,12139,12597,,,
code-creation,Eval,10,234224,0x2bdba108096,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:1:1,0x2bdba107e00,~
script-source,144,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar finalhandler = require('finalhandler');\nvar Router = require('./router');\nvar methods = require('methods');\nvar middleware = require('./middleware/init');\nvar query = require('./middleware/query');\nvar debug = require('debug')('express:application');\nvar View = require('./view');\nvar http = require('http');\nvar compileETag = require('./utils').compileETag;\nvar compileQueryParser = require('./utils').compileQueryParser;\nvar compileTrust = require('./utils').compileTrust;\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar merge = require('utils-merge');\nvar resolve = require('path').resolve;\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar slice = Array.prototype.slice;\n\n/**\n * Application prototype.\n */\n\nvar app = exports = module.exports = {};\n\n/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n\n/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n\n  this.defaultConfiguration();\n};\n\n/**\n * Initialize application configuration.\n * @private\n */\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development';\n\n  // default settings\n  this.enable('x-powered-by');\n  this.set('etag'\x2C 'weak');\n  this.set('env'\x2C env);\n  this.set('query parser'\x2C 'extended');\n  this.set('subdomain offset'\x2C 2);\n  this.set('trust proxy'\x2C false);\n\n  // trust proxy inherit back-compat\n  Object.defineProperty(this.settings\x2C trustProxyDefaultSymbol\x2C {\n    configurable: true\x2C\n    value: true\n  });\n\n  debug('booting in %s mode'\x2C env);\n\n  this.on('mount'\x2C function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true\n      && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    }\n\n    // inherit protos\n    setPrototypeOf(this.request\x2C parent.request)\n    setPrototypeOf(this.response\x2C parent.response)\n    setPrototypeOf(this.engines\x2C parent.engines)\n    setPrototypeOf(this.settings\x2C parent.settings)\n  });\n\n  // setup locals\n  this.locals = Object.create(null);\n\n  // top-most app is mounted at /\n  this.mountpath = '/';\n\n  // default locals\n  this.locals.settings = this.settings;\n\n  // default configuration\n  this.set('view'\x2C View);\n  this.set('views'\x2C resolve('views'));\n  this.set('jsonp callback name'\x2C 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this\x2C 'router'\x2C {\n    get: function() {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n\n/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing')\x2C\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n    this._router.use(middleware.init(this));\n  }\n};\n\n/**\n * Dispatch a req\x2C res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided\x2C then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */\n\napp.handle = function handle(req\x2C res\x2C callback) {\n  var router = this._router;\n\n  // final handler\n  var done = callback || finalhandler(req\x2C res\x2C {\n    env: this.get('env')\x2C\n    onerror: logerror.bind(this)\n  });\n\n  // no routes\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req\x2C res\x2C done);\n};\n\n/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app\x2C then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate app.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments\x2C offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function')\n  }\n\n  // setup router\n  this.lazyrouter();\n  var router = this._router;\n\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path\x2C fn);\n    }\n\n    debug('.use app under %s'\x2C path);\n    fn.mountpath = path;\n    fn.parent = this;\n\n    // restore .app property on req and res\n    router.use(path\x2C function mounted_app(req\x2C res\x2C next) {\n      var orig = req.app;\n      fn.handle(req\x2C res\x2C function (err) {\n        setPrototypeOf(req\x2C orig.request)\n        setPrototypeOf(res\x2C orig.response)\n        next(err);\n      });\n    });\n\n    // mounted an app\n    fn.emit('mount'\x2C this);\n  }\x2C this);\n\n  return this;\n};\n\n/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n\n/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a "foo.ejs" file Express will invoke the following internally:\n *\n *     app.engine('ejs'\x2C require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box\x2C\n * or if you wish to "map" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * ".html" files:\n *\n *     app.engine('html'\x2C require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path\x2C options\x2C callback)`\x2C\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using ".ejs" extensions you don't need to do anything.\n *\n * Some template engines do not follow this convention\x2C the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention\x2C thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.engine = function engine(ext\x2C fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  }\n\n  // get file extension\n  var extension = ext[0] !== '.'\n    ? '.' + ext\n    : ext;\n\n  // store engine\n  this.engines[extension] = fn;\n\n  return this;\n};\n\n/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.param = function param(name\x2C fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i]\x2C fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name\x2C fn);\n\n  return this;\n};\n\n/**\n * Assign `setting` to `val`\x2C or return `setting`'s value.\n *\n *    app.set('foo'\x2C 'bar');\n *    app.set('foo');\n *    // => "bar"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */\n\napp.set = function set(setting\x2C val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    var settings = this.settings\n\n    while (settings && settings !== Object.prototype) {\n      if (hasOwnProperty.call(settings\x2C setting)) {\n        return settings[setting]\n      }\n\n      settings = Object.getPrototypeOf(settings)\n    }\n\n    return undefined\n  }\n\n  debug('set "%s" to %o'\x2C setting\x2C val);\n\n  // set value\n  this.settings[setting] = val;\n\n  // trigger matched settings\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn'\x2C compileETag(val));\n      break;\n    case 'query parser':\n      this.set('query parser fn'\x2C compileQueryParser(val));\n      break;\n    case 'trust proxy':\n      this.set('trust proxy fn'\x2C compileTrust(val));\n\n      // trust proxy inherit back-compat\n      Object.defineProperty(this.settings\x2C trustProxyDefaultSymbol\x2C {\n        configurable: true\x2C\n        value: false\n      });\n\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as "/admin"\x2C which itself\n * was mounted as "/blog" then the\n * return value would be "/blog/admin".\n *\n * @return {String}\n * @private\n */\n\napp.path = function path() {\n  return this.parent\n    ? this.parent.path() + this.mountpath\n    : '';\n};\n\n/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n\n/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n\n/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.enable = function enable(setting) {\n  return this.set(setting\x2C true);\n};\n\n/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.disable = function disable(setting) {\n  return this.set(setting\x2C false);\n};\n\n/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n    route[method].apply(route\x2C slice.call(arguments\x2C 1));\n    return this;\n  };\n});\n\n/**\n * Special-cased "all" method\x2C applying the given route `path`\x2C\n * middleware\x2C and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n  var args = slice.call(arguments\x2C 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route\x2C args);\n  }\n\n  return this;\n};\n\n// del -> delete alias\n\napp.del = deprecate.function(app.delete\x2C 'app.del: Use app.delete instead');\n\n/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email'\x2C { name: 'Tobi' }\x2C function(err\x2C html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */\n\napp.render = function render(name\x2C options\x2C callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge app.locals\n  merge(renderOptions\x2C this.locals);\n\n  // merge options._locals\n  if (opts._locals) {\n    merge(renderOptions\x2C opts._locals);\n  }\n\n  // merge options\n  merge(renderOptions\x2C opts);\n\n  // set .cache unless explicitly provided\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  }\n\n  // primed cache\n  if (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  // view\n  if (!view) {\n    var View = this.get('view');\n\n    view = new View(name\x2C {\n      defaultEngine: this.get('view engine')\x2C\n      root: this.get('views')\x2C\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n        ? 'directories "' + view.root.slice(0\x2C -1).join('"\x2C "') + '" or "' + view.root[view.root.length - 1] + '"'\n        : 'directory "' + view.root + '"'\n      var err = new Error('Failed to lookup view "' + name + '" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    }\n\n    // prime the cache\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  // render\n  tryRender(view\x2C renderOptions\x2C done);\n};\n\n/**\n * Listen for connections.\n *\n * A node `http.Server` is returned\x2C with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the "http"\n * and "https" modules as shown here:\n *\n *    var http = require('http')\n *      \x2C https = require('https')\n *      \x2C express = require('express')\n *      \x2C app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }\x2C app).listen(443);\n *\n * @return {http.Server}\n * @public\n */\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server\x2C arguments);\n};\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Try rendering a view.\n * @private\n */\n\nfunction tryRender(view\x2C options\x2C callback) {\n  try {\n    view.render(options\x2C callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n
code-source-info,0x2bdba108096,144,0,14593,C0O0C4O14593,,
code-creation,Function,10,234731,0x2bdba108a3e,479, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:1:1,0x2bdba108010,~
code-source-info,0x2bdba108a3e
code-creation,Function,11,235382,0x225ca7935c0,3500,Module._findPath node:internal/modules/cjs/loader:494:28,0x334160a0240,^
code-source-info,0x225ca7935c0,99,14820,17506,,,
code-creation,Function,11,235436,0x225ca7943e0,3796,compileFunction node:vm:308:25,0x1d24e4c7960,^
code-source-info,0x225ca7943e0,85,9869,12202,,,
code-creation,Function,11,235605,0x225ca795320,1384, node:internal/validators:83:3,0x6682e9a840,^
code-source-info,0x225ca795320,17,2318,2913,,,
code-creation,Function,11,235638,0x225ca795900,1144, node:internal/validators:72:3,0x6682e9a7f0,^
code-source-info,0x225ca795900,17,1880,2268,,,
code-creation,Function,11,235672,0x225ca795de0,1712,readSync node:fs:684:18,0x3f9d3568070,^
code-source-info,0x225ca795de0,77,17811,18783,,,
code-creation,Eval,10,235890,0x2bdba10bd8e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\finalhandler\\index.js:1:1,0x2bdba10bb08,~
script-source,145,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\finalhandler\\index.js,/*!\n * finalhandler\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn\x2C arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP\x2C '<br>')\n    .replace(DOUBLE_SPACE_REGEXP\x2C ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang="en">\\n' +\n    '<head>\\n' +\n    '<meta charset="utf-8">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req\x2C res\x2C options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err\x2C status\x2C env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s'\x2C status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror\x2C err\x2C req\x2C res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent'\x2C status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req\x2C res\x2C status\x2C headers\x2C msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object\x2C fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err\x2C status\x2C env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack\x2C which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses.message[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to "resource" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req\x2C res\x2C status\x2C headers\x2C message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses.message[status]\n\n    // remove any content headers\n    res.removeHeader('Content-Encoding')\n    res.removeHeader('Content-Language')\n    res.removeHeader('Content-Range')\n\n    // response headers\n    setHeaders(res\x2C headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy'\x2C "default-src 'none'")\n    res.setHeader('X-Content-Type-Options'\x2C 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type'\x2C 'text/html; charset=utf-8')\n    res.setHeader('Content-Length'\x2C Buffer.byteLength(body\x2C 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body\x2C 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req\x2C write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res\x2C headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key\x2C headers[key])\n  }\n}\n
code-source-info,0x2bdba10bd8e,145,0,6689,C0O0C4O6689,,
code-creation,Function,10,236147,0x2bdba10c28e,182, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\finalhandler\\index.js:1:1,0x2bdba10bd08,~
code-source-info,0x2bdba10c28e,145,0,6689,C0O0C64O165C67O165C75O181C79O165C81O214C84O214C88O214C90O252C93O252C97O252C99O292C102O292C106O292C108O330C111O330C115O330C117O365C120O365C124O365C126O398C129O398C133O398C135O485C139O485C141O517C145O517C147O563C154O602C163O563C165O701C168O712C172O701C174O1250C176O1265C181O6688,,
code-creation,Eval,10,236884,0x2bdba10dde6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\index.js:1:1,0x2bdba10dca0,~
script-source,146,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\index.js,/**\n * Detect Electron renderer process\x2C which is node\x2C but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n
code-source-info,0x2bdba10dde6,146,0,263,C0O0C4O263,,
code-creation,Function,10,236926,0x2bdba10de8e,49, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\index.js:1:1,0x2bdba10dd60,~
code-source-info,0x2bdba10de8e,146,0,263,C0O98C7O136C11O144C18O149C23O169C26O186C30O184C36O222C39O239C43O237C48O262,,
code-creation,Function,11,237310,0x225ca796500,2540,readFileSync node:fs:450:22,0x3f9d3567db8,^
code-source-info,0x225ca796500,77,11804,13230,,,
code-creation,Function,11,237337,0x225ca796f60,416,updateChildren node:internal/modules/cjs/loader:165:24,0x3341609f830,^
code-source-info,0x225ca796f60,99,5213,5390,,,
code-creation,Function,11,237361,0x225ca797160,592,alignPool node:buffer:158:19,0x6682ea5760,^
code-source-info,0x225ca797160,18,4155,4265,,,
code-creation,Function,11,237382,0x225ca797420,608,tryReadSync node:fs:429:21,0x3f9d3567d68,^
code-source-info,0x225ca797420,77,11303,11548,,,
code-creation,Function,11,237408,0x225ca7976e0,1136,allocate node:buffer:397:18,0x6682ea5cd8,^
code-source-info,0x225ca7976e0,18,11969,12297,,,
code-creation,Eval,10,237612,0x2bdba10ec36,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\node.js:1:1,0x2bdba10ea90,~
script-source,147,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\node.js,/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6\x2C 2\x2C 3\x2C 4\x2C 5\x2C 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj\x2C key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g\x2C function (_\x2C k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}\x2C {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD\x2C 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}\x2C 'except for stderr(2) and stdout(1)\x2C any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`\x2C all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v\x2C this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`\x2C allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v\x2C this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util\x2C arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined\x2C it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd\x2C { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd\x2C\n        readable: false\x2C\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n
code-source-info,0x2bdba10ec36,147,0,6015,C0O0C4O6015,,
code-creation,Function,10,237833,0x2bdba10f356,399, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\node.js:1:1,0x2bdba10ebb0,~
code-source-info,0x2bdba10f356,147,0,6015,C0O0C48O43C54O43C58O43C60O70C66O70C70O70C72O187C78O214C83O212C89O195C91O234C96O247C100O255C105O267C109O274C114O293C118O307C123O320C127O328C132O341C136O349C141O367C145O401C152O416C156O607C159O629C163O636C168O641C172O649C177O636C183O653C193O654C199O711C211O712C217O627C221O1375C225O1384C229O1392C234O1396C242O1375C251O1375C253O1417C258O1423C268O1435C273O1447C276O1452C289O1452C296O1646C299O1665C304O1667C309O1676C313O1684C324O1708C329O1717C333O1725C342O1747C346O1665C348O2040C351O2048C360O2061C364O2322C367O2330C376O2343C380O5991C383O5999C388O6006C392O5999C398O6014,,
code-creation,Eval,10,238078,0x2bdba1104c6,5, node:tty:1:1,0x2bdba1102c0,~
script-source,148,node:tty,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst { TTY\x2C isTTY } = internalBinding('tty_wrap');\x0d\nconst errors = require('internal/errors');\x0d\nconst { ERR_INVALID_FD\x2C ERR_TTY_INIT_FAILED } = errors.codes;\x0d\nconst {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x0d\n} = require('internal/tty');\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet readline;\x0d\n\x0d\nfunction isatty(fd) {\x0d\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\x0d\n         isTTY(fd);\x0d\n}\x0d\n\x0d\nfunction ReadStream(fd\x2C options) {\x0d\n  if (!(this instanceof ReadStream))\x0d\n    return new ReadStream(fd\x2C options);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C true\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    highWaterMark: 0\x2C\x0d\n    readable: true\x2C\x0d\n    writable: false\x2C\x0d\n    handle: tty\x2C\x0d\n    ...options\x0d\n  });\x0d\n\x0d\n  this.isRaw = false;\x0d\n  this.isTTY = true;\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ReadStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(ReadStream\x2C net.Socket);\x0d\n\x0d\nReadStream.prototype.setRawMode = function(flag) {\x0d\n  flag = !!flag;\x0d\n  const err = this._handle.setRawMode(flag);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C errors.errnoException(err\x2C 'setRawMode'));\x0d\n    return this;\x0d\n  }\x0d\n  this.isRaw = flag;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction WriteStream(fd) {\x0d\n  if (!(this instanceof WriteStream))\x0d\n    return new WriteStream(fd);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C false\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    handle: tty\x2C\x0d\n    readable: false\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\x0d\n  // As noted in the following reference\x2C local TTYs tend to be quite fast and\x0d\n  // this behavior has become expected due historical functionality on OS X\x2C\x0d\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\x0d\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\x0d\n  this._handle.setBlocking(true);\x0d\n\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (!err) {\x0d\n    this.columns = winSize[0];\x0d\n    this.rows = winSize[1];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(WriteStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(WriteStream\x2C net.Socket);\x0d\n\x0d\nWriteStream.prototype.isTTY = true;\x0d\n\x0d\nWriteStream.prototype.getColorDepth = getColorDepth;\x0d\n\x0d\nWriteStream.prototype.hasColors = hasColors;\x0d\n\x0d\nWriteStream.prototype._refreshSize = function() {\x0d\n  const oldCols = this.columns;\x0d\n  const oldRows = this.rows;\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C errors.errnoException(err\x2C 'getWindowSize'));\x0d\n    return;\x0d\n  }\x0d\n  const { 0: newCols\x2C 1: newRows } = winSize;\x0d\n  if (oldCols !== newCols || oldRows !== newRows) {\x0d\n    this.columns = newCols;\x0d\n    this.rows = newRows;\x0d\n    this.emit('resize');\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards-compat\x0d\nWriteStream.prototype.cursorTo = function(x\x2C y\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.cursorTo(this\x2C x\x2C y\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.moveCursor = function(dx\x2C dy\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.moveCursor(this\x2C dx\x2C dy\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearLine = function(dir\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearLine(this\x2C dir\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearScreenDown = function(callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearScreenDown(this\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.getWindowSize = function() {\x0d\n  return [this.columns\x2C this.rows];\x0d\n};\x0d\n\x0d\nmodule.exports = { isatty\x2C ReadStream\x2C WriteStream };\x0d\n
code-source-info,0x2bdba1104c6,148,0,5230,C0O0C4O5230,,
code-creation,Function,10,238330,0x2bdba110b9e,426, node:tty:1:1,0x2bdba110440,~
code-source-info,0x2bdba110b9e
code-creation,Eval,10,238585,0x2bdba111b8e,5, node:internal/tty:1:1,0x2bdba111938,~
script-source,149,node:internal/tty,// MIT License\x0d\n\x0d\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\x0d\n\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\x0d\n// of this software and associated documentation files (the "Software")\x2C to deal\x0d\n// in the Software without restriction\x2C including without limitation the rights\x0d\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\x0d\n// copies of the Software\x2C and to permit persons to whom the Software is\x0d\n// furnished to do so\x2C subject to the following conditions:\x0d\n\x0d\n// The above copyright notice and this permission notice shall be included in\x0d\n// all copies or substantial portions of the Software.\x0d\n\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\x0d\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\x0d\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\x0d\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\x0d\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\x0d\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\x0d\n// SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSome\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { validateInteger } = require('internal/validators');\x0d\n\x0d\nlet OSRelease;\x0d\n\x0d\nconst COLORS_2 = 1;\x0d\nconst COLORS_16 = 4;\x0d\nconst COLORS_256 = 8;\x0d\nconst COLORS_16m = 24;\x0d\n\x0d\n// Some entries were taken from `dircolors`\x0d\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\x0d\n// support more than 16 colors\x2C but this was not tested for.\x0d\n//\x0d\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\x0d\n// distribution of this file\x2C with or without modification\x2C are permitted\x0d\n// provided the copyright notice and this notice are preserved.\x0d\nconst TERM_ENVS = {\x0d\n  'eterm': COLORS_16\x2C\x0d\n  'cons25': COLORS_16\x2C\x0d\n  'console': COLORS_16\x2C\x0d\n  'cygwin': COLORS_16\x2C\x0d\n  'dtterm': COLORS_16\x2C\x0d\n  'gnome': COLORS_16\x2C\x0d\n  'hurd': COLORS_16\x2C\x0d\n  'jfbterm': COLORS_16\x2C\x0d\n  'konsole': COLORS_16\x2C\x0d\n  'kterm': COLORS_16\x2C\x0d\n  'mlterm': COLORS_16\x2C\x0d\n  'mosh': COLORS_16m\x2C\x0d\n  'putty': COLORS_16\x2C\x0d\n  'st': COLORS_16\x2C\x0d\n  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color\x0d\n  'rxvt-unicode-24bit': COLORS_16m\x2C\x0d\n  // https://gist.github.com/XVilka/8346728#gistcomment-2823421\x0d\n  'terminator': COLORS_16m\x0d\n};\x0d\n\x0d\nconst TERM_ENVS_REG_EXP = [\x0d\n  /ansi/\x2C\x0d\n  /color/\x2C\x0d\n  /linux/\x2C\x0d\n  /^con[0-9]*x[0-9]/\x2C\x0d\n  /^rxvt/\x2C\x0d\n  /^screen/\x2C\x0d\n  /^xterm/\x2C\x0d\n  /^vt100/\x2C\x0d\n];\x0d\n\x0d\nlet warned = false;\x0d\nfunction warnOnDeactivatedColors(env) {\x0d\n  if (warned)\x0d\n    return;\x0d\n  let name = '';\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined)\x0d\n    name = 'NODE_DISABLE_COLORS';\x0d\n  if (env.NO_COLOR !== undefined) {\x0d\n    if (name !== '') {\x0d\n      name += "' and '";\x0d\n    }\x0d\n    name += 'NO_COLOR';\x0d\n  }\x0d\n\x0d\n  if (name !== '') {\x0d\n    process.emitWarning(\x0d\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\x0d\n      'Warning'\x0d\n    );\x0d\n    warned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The `getColorDepth` API got inspired by multiple sources such as\x0d\n// https://github.com/chalk/supports-color\x2C\x0d\n// https://github.com/isaacs/color-support.\x0d\nfunction getColorDepth(env = process.env) {\x0d\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\x0d\n  // consistency throughout the ecosystem.\x0d\n  if (env.FORCE_COLOR !== undefined) {\x0d\n    switch (env.FORCE_COLOR) {\x0d\n      case '':\x0d\n      case '1':\x0d\n      case 'true':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16;\x0d\n      case '2':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_256;\x0d\n      case '3':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16m;\x0d\n      default:\x0d\n        return COLORS_2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined ||\x0d\n      // See https://no-color.org/\x0d\n      env.NO_COLOR !== undefined ||\x0d\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\x0d\n      // ANSI color control codes.\x0d\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\x0d\n      env.TERM === 'dumb') {\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // Lazy load for startup performance.\x0d\n    if (OSRelease === undefined) {\x0d\n      const { release } = require('os');\x0d\n      OSRelease = StringPrototypeSplit(release()\x2C '.');\x0d\n    }\x0d\n    // Windows 10 build 10586 is the first Windows release that supports 256\x0d\n    // colors. Windows 10 build 14931 is the first release that supports\x0d\n    // 16m/TrueColor.\x0d\n    if (+OSRelease[0] >= 10) {\x0d\n      const build = +OSRelease[2];\x0d\n      if (build >= 14931)\x0d\n        return COLORS_16m;\x0d\n      if (build >= 10586)\x0d\n        return COLORS_256;\x0d\n    }\x0d\n\x0d\n    return COLORS_16;\x0d\n  }\x0d\n\x0d\n  if (env.TMUX) {\x0d\n    return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.CI) {\x0d\n    if ([\x0d\n      'APPVEYOR'\x2C\x0d\n      'BUILDKITE'\x2C\x0d\n      'CIRCLECI'\x2C\x0d\n      'DRONE'\x2C\x0d\n      'GITHUB_ACTIONS'\x2C\x0d\n      'GITLAB_CI'\x2C\x0d\n      'TRAVIS'\x2C\x0d\n    ].some((sign) => sign in env) || env.CI_NAME === 'codeship') {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if ('TEAMCITY_VERSION' in env) {\x0d\n    return RegExpPrototypeTest(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) ?\x0d\n      COLORS_16 : COLORS_2;\x0d\n  }\x0d\n\x0d\n  switch (env.TERM_PROGRAM) {\x0d\n    case 'iTerm.app':\x0d\n      if (!env.TERM_PROGRAM_VERSION ||\x0d\n        RegExpPrototypeTest(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION)\x0d\n      ) {\x0d\n        return COLORS_256;\x0d\n      }\x0d\n      return COLORS_16m;\x0d\n    case 'HyperTerm':\x0d\n    case 'MacTerm':\x0d\n      return COLORS_16m;\x0d\n    case 'Apple_Terminal':\x0d\n      return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\x0d\n    return COLORS_16m;\x0d\n  }\x0d\n\x0d\n  if (env.TERM) {\x0d\n    if (RegExpPrototypeTest(/^xterm-256/\x2C env.TERM)) {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n\x0d\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\x0d\n\x0d\n    if (TERM_ENVS[termEnv]) {\x0d\n      return TERM_ENVS[termEnv];\x0d\n    }\x0d\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\x0d\n                           (term) => RegExpPrototypeTest(term\x2C termEnv))) {\x0d\n      return COLORS_16;\x0d\n    }\x0d\n  }\x0d\n  // Move 16 color COLORTERM below 16m and 256\x0d\n  if (env.COLORTERM) {\x0d\n    return COLORS_16;\x0d\n  }\x0d\n  return COLORS_2;\x0d\n}\x0d\n\x0d\nfunction hasColors(count\x2C env) {\x0d\n  if (env === undefined &&\x0d\n      (count === undefined || (typeof count === 'object' && count !== null))) {\x0d\n    env = count;\x0d\n    count = 16;\x0d\n  } else {\x0d\n    validateInteger(count\x2C 'count'\x2C 2);\x0d\n  }\x0d\n\x0d\n  return count <= 2 ** getColorDepth(env);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x0d\n};\x0d\n
code-source-info,0x2bdba111b8e,149,0,6683,C0O0C4O6683,,
code-creation,Function,10,238900,0x2bdba111fee,358, node:internal/tty:1:1,0x2bdba111b08,~
code-source-info,0x2bdba111fee,149,0,6683,C0O0C69O1211C75O1234C81O1258C87O1283C93O1360C99O1360C104O1340C110O1399C111O1399C113O1430C115O1430C117O1452C119O1452C121O1475C123O1475C125O1498C127O1498C129O1924C136O1938C142O1962C148O1987C154O2011C160O2035C166O2058C172O2080C178O2105C184O2130C190O2153C196O2177C202O2199C208O2223C214O2243C220O2350C226O2444C232O1924C234O2488C328O2488C330O2620C331O2620C333O6628C340O6650C346O6668C352O6643C357O6682,,
code-creation,Function,11,239434,0x225ca797bc0,1036,toString node:buffer:782:46,0x6682ea7a10,^
code-source-info,0x225ca797bc0,18,24045,24637,,,
code-creation,Function,11,239458,0x225ca798040,104,require node:internal/modules/cjs/helpers:101:31,0xbfdd36c248,^
code-source-info,0x225ca798040,98,3208,3256,,,
code-creation,Function,11,239489,0x225ca798120,1132,Module.require node:internal/modules/cjs/loader:997:36,0x334160a06c0,^
code-source-info,0x225ca798120,99,32200,32503,,,
code-creation,Function,11,239509,0x225ca798600,416,assertEncoding node:internal/fs/utils:151:24,0x3f9d3571e40,^
code-source-info,0x225ca798600,78,3677,3859,,,
code-creation,Function,11,239533,0x225ca798800,792,tryCreateBuffer node:fs:414:25,0x3f9d3567d18,^
code-source-info,0x225ca798800,77,10979,11279,,,
code-creation,Eval,10,239698,0x2bdba113ace,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js:1:1,0x2bdba113958,~
script-source,150,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js,\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names\x2C and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special "%n" handling functions\x2C for the debug "format" argument.\n *\n * Valid key names are a single\x2C lower or upper-case letter\x2C i.e. "n" and "N".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0\x2C i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g\x2C function(match\x2C format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self\x2C val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index\x2C 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors\x2C etc.)\n    exports.formatArgs.call(self\x2C args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self\x2C args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s\x2C]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g\x2C '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled\x2C false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i\x2C len;\n  for (i = 0\x2C len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0\x2C len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n
code-source-info,0x2bdba113ace,150,0,4394,C0O0C4O4394,,
code-creation,Function,10,239870,0x2bdba113e0e,140, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js:1:1,0x2bdba113a48,~
code-source-info,0x2bdba113e0e,150,0,4394,C0O0C40O146C42O216C48O191C54O171C60O154C62O231C67O246C71O256C76O272C80O283C85O298C89O308C94O324C98O335C104O354C108O352C112O440C117O454C121O460C126O474C130O648C134O667C139O4393,,
new,MemoryChunk,0x22d0c900000,262144
code-creation,Eval,10,240603,0x2bdba1152f6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ms\\index.js:1:1,0x2bdba115120,~
script-source,151,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ms\\index.js,/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val\x2C options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms\x2C d\x2C 'day') ||\n    plural(ms\x2C h\x2C 'hour') ||\n    plural(ms\x2C m\x2C 'minute') ||\n    plural(ms\x2C s\x2C 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms\x2C n\x2C name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n
code-source-info,0x2bdba1152f6,151,0,2764,C0O0C4O2764,,
code-creation,Function,10,240726,0x2bdba115586,76, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ms\\index.js:1:1,0x2bdba115270,~
code-source-info,0x2bdba115586,151,0,2764,C0O0C29O29C33O29C35O43C37O45C40O43C42O59C44O61C47O59C49O75C51O77C54O75C56O91C61O93C64O91C66O390C70O405C75O2763,,
code-creation,LazyCompile,10,240963,0x2bdba115ce6,16, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\node.js:34:64,0x2bdba10ee98,~
code-source-info,0x2bdba115ce6,147,670,710,C0O680C5O698C10O698C15O708,,
code-creation,RegExp,3,241060,0x225ca798b80,896,^debug_
code-creation,LazyCompile,10,241138,0x2bdba115f36,97,getStderr node:internal/bootstrap/switches/is_main_thread:133:19,0x1d24e4d2310,~
script-source,88,node:internal/bootstrap/switches/is_main_thread,'use strict';\x0d\n\x0d\nconst { ObjectDefineProperty } = primordials;\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// TODO(joyeecheung): deprecate and remove these underscore methods\x0d\nprocess._debugProcess = rawMethods._debugProcess;\x0d\nprocess._debugEnd = rawMethods._debugEnd;\x0d\n\x0d\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\x0d\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\x0d\n// Five word summary: they were broken beyond repair.\x0d\nprocess._startProfilerIdleNotifier = () => {};\x0d\nprocess._stopProfilerIdleNotifier = () => {};\x0d\n\x0d\nfunction defineStream(name\x2C getter) {\x0d\n  ObjectDefineProperty(process\x2C name\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: getter\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineStream('stdout'\x2C getStdout);\x0d\ndefineStream('stdin'\x2C getStdin);\x0d\ndefineStream('stderr'\x2C getStderr);\x0d\n\x0d\n// Worker threads don't receive signals.\x0d\nconst {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n} = require('internal/process/signal');\x0d\nprocess.on('newListener'\x2C startListeningIfSignal);\x0d\nprocess.on('removeListener'\x2C stopListeningIfSignal);\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\n\x0d\nfunction createWritableStdioStream(fd) {\x0d\n  let stream;\x0d\n  // Note stream._type is used for test-module-load-list.js\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY':\x0d\n      const tty = require('tty');\x0d\n      stream = new tty.WriteStream(fd);\x0d\n      stream._type = 'tty';\x0d\n      break;\x0d\n\x0d\n    case 'FILE':\x0d\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\x0d\n      stream = new SyncWriteStream(fd\x2C { autoClose: false });\x0d\n      stream._type = 'fs';\x0d\n      break;\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP':\x0d\n      const net = require('net');\x0d\n\x0d\n      // If fd is already being used for the IPC channel\x2C libuv will return\x0d\n      // an error when trying to use it again. In that case\x2C create the socket\x0d\n      // using the existing handle instead of the fd.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        const { kChannelHandle } = require('internal/child_process');\x0d\n        stream = new net.Socket({\x0d\n          handle: process[kChannelHandle]\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x0d\n        });\x0d\n      } else {\x0d\n        stream = new net.Socket({\x0d\n          fd\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x0d\n        });\x0d\n      }\x0d\n\x0d\n      stream._type = 'pipe';\x0d\n      break;\x0d\n\x0d\n    default:\x0d\n      // Provide a dummy black-hole output for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Writable } = require('stream');\x0d\n      stream = new Writable({\x0d\n        write(buf\x2C enc\x2C cb) {\x0d\n          cb();\x0d\n        }\x0d\n      });\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stream.fd = fd;\x0d\n\x0d\n  stream._isStdio = true;\x0d\n\x0d\n  return stream;\x0d\n}\x0d\n\x0d\nfunction dummyDestroy(err\x2C cb) {\x0d\n  cb(err);\x0d\n  this._undestroy();\x0d\n\x0d\n  // We need to emit 'close' anyway so that the closing\x0d\n  // of the stream is observable. We just make sure we\x0d\n  // are not going to do it twice.\x0d\n  // The 'close' event is needed so that finished and\x0d\n  // pipeline work correctly.\x0d\n  if (!this._writableState.emitClose) {\x0d\n    process.nextTick(() => {\x0d\n      this.emit('close');\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nlet stdin;\x0d\nlet stdout;\x0d\nlet stderr;\x0d\n\x0d\nfunction getStdout() {\x0d\n  if (stdout) return stdout;\x0d\n  stdout = createWritableStdioStream(1);\x0d\n  stdout.destroySoon = stdout.destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stdout._destroy = dummyDestroy;\x0d\n  if (stdout.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C () => stdout._refreshSize());\x0d\n  }\x0d\n  return stdout;\x0d\n}\x0d\n\x0d\nfunction getStderr() {\x0d\n  if (stderr) return stderr;\x0d\n  stderr = createWritableStdioStream(2);\x0d\n  stderr.destroySoon = stderr.destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stderr._destroy = dummyDestroy;\x0d\n  if (stderr.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C () => stderr._refreshSize());\x0d\n  }\x0d\n  return stderr;\x0d\n}\x0d\n\x0d\nfunction getStdin() {\x0d\n  if (stdin) return stdin;\x0d\n  const fd = 0;\x0d\n\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY':\x0d\n      const tty = require('tty');\x0d\n      stdin = new tty.ReadStream(fd\x2C {\x0d\n        highWaterMark: 0\x2C\x0d\n        readable: true\x2C\x0d\n        writable: false\x0d\n      });\x0d\n      break;\x0d\n\x0d\n    case 'FILE':\x0d\n      const fs = require('fs');\x0d\n      stdin = new fs.ReadStream(null\x2C { fd: fd\x2C autoClose: false });\x0d\n      break;\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP':\x0d\n      const net = require('net');\x0d\n\x0d\n      // It could be that process has been started with an IPC channel\x0d\n      // sitting on fd=0\x2C in such case the pipe for this fd is already\x0d\n      // present and creating a new one will lead to the assertion failure\x0d\n      // in libuv.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        stdin = new net.Socket({\x0d\n          handle: process.channel\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x0d\n        });\x0d\n      } else {\x0d\n        stdin = new net.Socket({\x0d\n          fd: fd\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x0d\n        });\x0d\n      }\x0d\n      // Make sure the stdin can't be `.end()`-ed\x0d\n      stdin._writableState.ended = true;\x0d\n      break;\x0d\n\x0d\n    default:\x0d\n      // Provide a dummy contentless input for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Readable } = require('stream');\x0d\n      stdin = new Readable({ read() {} });\x0d\n      stdin.push(null);\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stdin.fd = fd;\x0d\n\x0d\n  // `stdin` starts out life in a paused state\x2C but node doesn't\x0d\n  // know yet. Explicitly to readStop() it to put it in the\x0d\n  // not-reading state.\x0d\n  if (stdin._handle && stdin._handle.readStop) {\x0d\n    stdin._handle.reading = false;\x0d\n    stdin._readableState.reading = false;\x0d\n    stdin._handle.readStop();\x0d\n  }\x0d\n\x0d\n  // If the user calls stdin.pause()\x2C then we need to stop reading\x0d\n  // once the stream implementation does so (one nextTick later)\x2C\x0d\n  // so that the process can close down.\x0d\n  stdin.on('pause'\x2C () => {\x0d\n    process.nextTick(onpause);\x0d\n  });\x0d\n\x0d\n  function onpause() {\x0d\n    if (!stdin._handle)\x0d\n      return;\x0d\n    if (stdin._handle.reading && !stdin.readableFlowing) {\x0d\n      stdin._readableState.reading = false;\x0d\n      stdin._handle.reading = false;\x0d\n      stdin._handle.readStop();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return stdin;\x0d\n}\x0d\n\x0d\n// Used by internal tests.\x0d\nrawMethods.resetStdioForTesting = function() {\x0d\n  stdin = undefined;\x0d\n  stdout = undefined;\x0d\n  stderr = undefined;\x0d\n};\x0d\n
code-source-info,0x2bdba115f36,88,3772,4095,C0O3780C6O3792C10O3806C11O3810C17O3819C24O3817C30O3852C37O3873C40O3880C44O3871C48O3957C55O3973C59O3992C64O4003C70O4017C73O4025C86O4025C92O4078C96O4092,,
code-creation,LazyCompile,10,241511,0x2bdba116afe,305,createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:41:35,0x1d24e4d2200,~
code-source-info,0x2bdba116afe,88,1352,2943,C0O1366C4O1446C7O1446C20O1438C53O1505C59O1505C64O1528C66O1545C73O1537C79O1569C81O1582C85O1598C87O1656C93O1656C98O1705C100O1734C110O1714C116O1768C118O1781C122O1796C124O1859C130O1859C135O2096C138O2108C147O2127C152O2135C159O2138C164O2184C170O2184C175O2165C180O2228C184O2245C199O2280C208O2237C216O2390C220O2407C232O2427C238O2399C244O2516C246O2529C250O2546C252O2694C258O2694C263O2681C268O2720C275O2753C285O2729C291O2876C293O2886C297O2897C298O2913C302O2926C304O2940,,
code-creation,LazyCompile,10,241659,0x2bdba116eb6,194,WriteStream node:tty:85:21,0x2bdba110598,~
code-source-info,0x2bdba116eb6,148,2598,3575,C0O2608C2O2619C7O2649C12O2656C17O2676C18O2680C20O2687C26O2692C32O2705C37O2715C44O2721C49O2715C50O2762C52O2781C67O2781C73O2817C79O2844C86O2850C91O2844C92O2890C97O2894C102O2901C114O2927C118O2901C124O3378C129O3386C136O3386C141O3426C151O3426C157O3460C162O3468C167O3468C173O3495C175O3512C176O3534C179O3525C183O3544C185O3563C188O3554C193O3574,,
code-creation,LazyCompile,10,241912,0x2bdba11776e,14,load C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\node.js:156:14,0x2bdba10eda8,~
code-source-info,0x2bdba11776e,147,3628,3662,C0O3635C4O3650C9O3654C13O3660,,
code-creation,LazyCompile,10,241988,0x2bdba1178fe,235,enable C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js:138:16,0x2bdba113bf0,~
code-source-info,0x2bdba1178fe,150,3132,3657,C0O3149C3O3157C8O3157C13O3178C18O3192C22O3200C27O3214C31O3235C44O3286C54O3286C60O3321C65O3345C67O3350C69O3350C74O3368C76O3378C81O3383C83O3421C85O3439C89O3443C102O3443C110O3470C111O3484C117O3488C122O3505C125O3513C130O3519C135O3528C142O3552C150O3552C155O3539C161O3562C167O3524C173O3519C180O3590C183O3598C188O3604C193O3613C202O3624C208O3637C214O3609C220O3604C225O3358C230O3332C234O3656,,
code-creation,LazyCompile,10,242057,0x2bdba117b4e,37,save C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\node.js:139:14,0x2bdba10ed58,~
code-source-info,0x2bdba117b4e,147,3235,3498,C0O3252C5O3420C9O3435C20O3461C24O3469C31O3479C36O3497,,
code-creation,LazyCompile,10,242152,0x2bdba117d7e,113,createDebug C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js:63:21,0x2bdba113b50,~
code-source-info,0x2bdba117d7e,150,1220,2957,C0O1220C11O2650C16O2666C20O2681C28O2705C33O2705C38O2695C42O2727C50O2753C55O2753C59O2743C63O2768C71O2782C75O2780C79O2868C84O2902C92O2914C97O2922C105O2922C110O2942C112O2955,,
code-creation,LazyCompile,10,242226,0x2bdba117f9e,118,enabled C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js:176:17,0x2bdba113c90,~
code-source-info,0x2bdba117f9e,150,3913,4206,C0O3943C5O3964C10O3970C15O3980C17O3980C22O3998C25O4010C32O4015C36O4019C41O4019C48O4039C49O4052C50O3988C55O3938C58O4070C63O4091C68O4097C73O4107C75O4107C80O4125C83O4137C90O4142C94O4146C99O4146C106O4166C107O4178C108O4115C113O4065C116O4191C117O4204,,
code-creation,LazyCompile,10,242286,0x2bdba118146,55,useColors C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\node.js:75:19,0x2bdba10ec68,~
code-source-info,0x2bdba118146,147,1865,1976,C0O1872C6O1899C10O1888C22O1933C27O1945C32O1917C41O1963C49O1963C54O1974,,
code-creation,LazyCompile,10,242325,0x2bdba11826e,38,isatty node:tty:42:16,0x2bdba1104f8,~
code-source-info,0x2bdba11826e,148,1590,1684,C0O1600C5O1607C12O1633C23O1644C30O1671C33O1671C37O1681,,
code-creation,LazyCompile,10,242392,0x2bdba118396,106,selectColor C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js:44:21,0x2bdba113b00,~
code-source-info,0x2bdba118396,150,838,1071,C0O865C2O884C15O879C28O901C30O916C36O922C40O942C45O942C50O930C54O961C58O966C61O874C64O1007C67O1022C72O1029C76O1034C81O1034C90O1054C95O1061C99O1044C102O1028C105O1069,,
code-creation,LazyCompile,10,242467,0x2bdba11854e,80,init C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\node.js:235:15,0x2bdba10ee48,~
code-source-info,0x2bdba11854e,147,5724,5918,C0O5736C1O5754C5O5774C9O5781C17O5794C22O5781C28O5823C30O5835C34O5828C39O5860C46O5876C53O5891C60O5907C63O5902C66O5881C70O5844C75O5810C79O5917,,
code-creation,Function,11,242666,0x225ca798f60,1576,read node:internal/modules/package_json_reader:16:14,0x334160a55f0,^
code-source-info,0x225ca798f60,100,307,992,,,
code-creation,Function,11,242701,0x225ca799600,1576,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x3341609a288,^
code-source-info,0x225ca799600,98,1765,3805,,,
code-creation,Function,11,242727,0x225ca799ca0,552,tryStatSync node:fs:404:21,0x3f9d3567cc8,^
code-source-info,0x225ca799ca0,77,10733,10951,,,
code-creation,Function,11,242749,0x225ca799f40,488, node:buffer:348:36,0x6682ea5ad0,^
code-source-info,0x225ca799f40,18,10516,10676,,,
code-creation,Function,11,242765,0x225ca79a1a0,136, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\node.js:34:64,0x2bdba10ee98,^
code-source-info,0x225ca79a1a0,147,670,710,,,
code-creation,Function,11,242786,0x225ca79a2a0,120,get node:net:1706:6,0xbfdd37de80,^
code-source-info,0x225ca79a2a0,120,47240,47268,,,
code-creation,Eval,10,243274,0x2bdba1193de,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\encodeurl\\index.js:1:1,0x2bdba119268,~
script-source,152,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\encodeurl\\index.js,/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points\x2C *after* encoding (i.e. not including "%")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form\x2C excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the "%" character unless it is\n * not part of a valid sequence (`%20` will be left as-is\x2C but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be "safe" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL\x2C including replacing any raw\x2C\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP\x2C UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP\x2C encodeURI)\n}\n
code-source-info,0x2bdba1193de,152,0,1586,C0O0C4O1586,,
code-creation,Function,10,243357,0x2bdba1194d6,34, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\encodeurl\\index.js:1:1,0x2bdba119358,~
code-source-info,0x2bdba1194d6,152,0,1586,C0O0C10O139C12O154C16O339C20O339C22O551C26O551C28O739C30O739C33O1585,,
new,MemoryChunk,0x45c2dc0000,262144
new,MemoryChunk,0x4b384c0000,262144
new,MemoryChunk,0x32386240000,262144
new,MemoryChunk,0x16c88780000,262144
scavenge,begin,0,250000,1671211992606
scavenge,end,0,250000,1671211992606
code-creation,Eval,10,244436,0x2bdba119e8e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\escape-html\\index.js:1:1,0x2bdba119d38,~
script-source,153,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\escape-html\\index.js,/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng "Timothy" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /["'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // "\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex\x2C index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex\x2C index)\n    : html;\n}\n
code-source-info,0x2bdba119e8e,153,0,1362,C0O0C4O1362,,
code-creation,Function,10,244563,0x2bdba119f76,24, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\escape-html\\index.js:1:1,0x2bdba119e08,~
code-source-info,0x2bdba119f76,153,0,1362,C0O0C10O239C14O239C16O290C18O305C23O1361,,
code-creation,Eval,10,245230,0x2bdba11ae26,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\on-finished\\index.js:1:1,0x2bdba11ac40,~
script-source,154,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\on-finished\\index.js,/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn\x2C arguments)) }\n\n/**\n * Invoke callback when the response has finished\x2C useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished (msg\x2C listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener\x2C null\x2C msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg\x2C wrap(listener))\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished (msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener (msg\x2C callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish (error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg\x2C 'end'\x2C 'finish']]\x2C onFinish)\n\n  function onSocket (socket) {\n    // remove listener\n    msg.removeListener('socket'\x2C onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket\x2C 'error'\x2C 'close']]\x2C onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket'\x2C onSocket)\n\n  if (msg.socket === undefined) {\n    // istanbul ignore next: node.js 0.8 patch\n    patchAssignSocket(msg\x2C onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener (msg\x2C listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg\x2C attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener (msg) {\n  function listener (err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err\x2C msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\n// istanbul ignore next: node.js 0.8 patch\nfunction patchAssignSocket (res\x2C callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket'\x2C callback) is broken in 0.8\n  res.assignSocket = function _assignSocket (socket) {\n    assignSocket.call(this\x2C socket)\n    callback(socket)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource\x2C if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res\x2C fn\x2C null)\n}\n
code-source-info,0x2bdba11ae26,154,0,4430,C0O0C4O4430,,
code-creation,Function,10,245412,0x2bdba11b25e,109, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\on-finished\\index.js:1:1,0x2bdba11ada0,~
code-source-info,0x2bdba11b25e,154,0,4430,C0O0C55O175C57O190C61O210C68O229C72O305C75O305C77O340C83O340C87O340C89O435C96O474C105O435C108O4429,,
code-creation,LazyCompile,10,245474,0x2bdba11bcd6,27,tryRequireAsyncHooks C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\on-finished\\index.js:205:31,0x2bdba11b0b8,~
code-source-info,0x2bdba11bcd6,154,3891,3973,C3O3908C9O3915C13O3937C25O3958C26O3967,,
tick,0x7ff6a7fd6089,246067,1,0x7ff6a7a0c340,2,0x7ff6a82ef2d0,0x225ca794da4,0xbfdd368eaf,0xbfdd3677ed,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x225ca7983c7,0x225ca798095,0x2bdba11b2b1,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x225ca7983c7,0x225ca798095,0x2bdba10c2f4,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2bdba108a52,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x22645774e6,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2264576859,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x226457464f,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x2264572d77,0x3103a7b5c9
code-creation,Eval,10,246118,0x2bdba11c4b6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ee-first\\index.js:1:1,0x2bdba11c360,~
script-source,155,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ee-first\\index.js,/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff\x2C done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee\x2C events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee\x2C events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event\x2C callback)\n\n      // listen to the event\n      ee.on(event\x2C fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee\x2C\n        event: event\x2C\n        fn: fn\x2C\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null\x2C arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event\x2C x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event\x2C done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err\x2C ee\x2C event\x2C args)\n  }\n}\n
code-source-info,0x2bdba11c4b6,155,0,1684,C0O0C4O1684,,
code-creation,Function,10,246246,0x2bdba11c64e,24, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ee-first\\index.js:1:1,0x2bdba11c430,~
code-source-info,0x2bdba11c64e,155,0,1684,C0O0C16O124C18O139C23O1683,,
code-creation,Eval,10,247128,0x2bdba11d20e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:1:1,0x2bdba11d078,~
script-source,156,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js,/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url\x2C parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url\x2C parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0\x2C i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n\n  if (search !== null) {\n    url.query = query\n    url.search = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url\x2C parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n
code-source-info,0x2bdba11d20e,156,0,2809,C0O0C4O2809,,
code-creation,Function,10,247261,0x2bdba11d416,67, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:1:1,0x2bdba11d188,~
code-source-info,0x2bdba11d416,156,0,2809,C0O0C28O193C31O193C36O224C40O220C42O244C46O240C48O288C50O303C54O321C61O338C66O2808,,
code-creation,Function,11,247374,0x225ca79a380,1112,getESMFacade node:internal/bootstrap/loaders:264:15,0x25aadb0faf0,^
code-source-info,0x225ca79a380,9,8494,9140,,,
code-creation,Function,11,247397,0x225ca79a840,260,normalizeEncoding node:internal/util:160:27,0x25aadb2ad20,^
code-source-info,0x225ca79a840,12,4365,4473,,,
code-creation,Function,11,247419,0x225ca79a9c0,444, node:internal/validators:190:40,0x6682e9aba8,^
code-source-info,0x225ca79a9c0,17,5851,6087,,,
code-creation,Function,11,247452,0x225ca79abe0,1772,Module.load node:internal/modules/cjs/loader:969:33,0x334160a0638,^
code-source-info,0x225ca79abe0,99,31233,32069,,,
code-creation,Function,11,247471,0x225ca79b340,320, node:internal/bootstrap/loaders:273:15,0x226455d418,^
code-source-info,0x225ca79b340,9,8867,8975,,,
code-creation,Eval,10,248151,0x2bdba11ed8e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\statuses\\index.js:1:1,0x2bdba11ec18,~
script-source,157,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\statuses\\index.js,/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.message = codes\n\n// status message (lower-case) to code map\nstatus.code = createMessageToStatusCodeMap(codes)\n\n// array of status codes\nstatus.codes = createStatusCodeList(codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true\x2C\n  301: true\x2C\n  302: true\x2C\n  303: true\x2C\n  305: true\x2C\n  307: true\x2C\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true\x2C\n  205: true\x2C\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true\x2C\n  503: true\x2C\n  504: true\n}\n\n/**\n * Create a map of message to status code.\n * @private\n */\n\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code\x2C msg)) {\n    throw new Error('invalid status message: "' + message + '"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message\x2C code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number\x2C this will throw if it is not a known status\n * code\x2C otherwise the code will be returned. Given a string\x2C\n * the string will be parsed for a number and return the code\n * if valid\x2C otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code\x2C 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n
code-source-info,0x2bdba11ed8e,157,0,2610,C0O0C4O2610,,
code-creation,Function,10,248273,0x2bdba11f19e,113, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\statuses\\index.js:1:1,0x2bdba11ed08,~
code-source-info,0x2bdba11f19e,157,0,2610,C0O0C33O190C36O190C41O254C43O269C47O309C52O324C56O376C59O390C63O388C67O452C70O467C74O465C78O526C85O542C89O672C96O685C100O784C107O797C112O2609,,
code-creation,Function,11,248350,0x225ca79b4e0,1224,wrapSafe node:internal/modules/cjs/loader:1017:18,0x3341609fdd0,^
code-source-info,0x225ca79b4e0,99,32708,33600,,,
code-creation,Function,11,248393,0x225ca79ba20,2540,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x334160a03f0,^
code-source-info,0x225ca79ba20,99,20630,21844,,,
code-creation,Function,11,248414,0x225ca79c480,336,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x33416097300,^
code-source-info,0x225ca79c480,96,1460,1610,,,
code-creation,Function,11,248433,0x225ca79c640,276, node:internal/validators:235:42,0x6682e9ad78,^
code-source-info,0x225ca79c640,17,7441,7560,,,
code-creation,LazyCompile,10,248683,0x2bdba11ff06,134,Module._extensions..json node:internal/modules/cjs/loader:1158:39,0x334160a08a0,~
code-source-info,0x2bdba11ff06,99,37597,37967,C0O37637C5O37640C13O37640C20O37677C27O37687C36O37724C41O37724C46O37754C51O37761C56O37770C61O37770C70O37828C72O37845C77O37855C80O37855C85O37845C89O37843C106O37899C111O37922C118O37935C122O37929C125O37911C129O37949C131O37949C133O37966,,
code-creation,LazyCompile,10,248831,0x2bdba12013e,39,stripBOM node:internal/modules/cjs/helpers:135:18,0x3341609a318,~
code-source-info,0x2bdba12013e,98,4014,4157,C0O4029C5O4033C16O4068C21O4087C29O4097C36O4139C38O4154,,
code-creation,LazyCompile,10,248895,0x2bdba12048e,48,createMessageToStatusCodeMap C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\statuses\\index.js:63:39,0x2bdba11edc0,~
code-source-info,0x2bdba12048e,157,944,1170,C0O944C9O966C10O966C12O972C16O979C24O979C30O990C40O991C45O1158C47O1168,,
code-creation,LazyCompile,10,248948,0x2bdba120bbe,39,forEachCode C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\statuses\\index.js:66:51,0x2bdba1203d0,~
code-source-info,0x2bdba120bbe,157,1020,1153,C0O1047C5O1052C9O1076C13O1076C18O1114C21O1126C26O1126C33O1141C38O1152,,
code-creation,LazyCompile,10,249065,0x2bdba121676,31,createStatusCodeList C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\statuses\\index.js:82:31,0x2bdba11ee38,~
code-source-info,0x2bdba121676,157,1261,1359,C0O1273C4O1287C9O1287C15O1298C25O1299C30O1357,,
code-creation,LazyCompile,10,249105,0x2bdba12179e,9,mapCode C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\statuses\\index.js:83:50,0x2bdba1215c0,~
code-source-info,0x2bdba12179e,157,1320,1356,C0O1333C4O1340C8O1352,,
code-creation,Function,11,249209,0x225ca79c7c0,4912,Module._load node:internal/modules/cjs/loader:757:24,0x334160a0520,^
code-source-info,0x225ca79c7c0,99,23964,26971,,,
code-creation,Function,11,249238,0x225ca79db60,812,parseFileMode node:internal/validators:58:23,0x6682e9a780,^
code-source-info,0x225ca79db60,17,1525,1832,,,
code-creation,Function,11,249259,0x225ca79df00,228,forEachCode C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\statuses\\index.js:66:51,0x2bdba1203d0,^
code-source-info,0x225ca79df00,157,1020,1153,,,
code-creation,Function,11,249279,0x225ca79e060,88,mapCode C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\statuses\\index.js:83:50,0x2bdba1215c0,^
code-source-info,0x225ca79e060,157,1320,1356,,,
code-creation,Eval,10,249855,0x2bdba1225a6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\unpipe\\index.js:1:1,0x2bdba122450,~
script-source,158,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\unpipe\\index.js,/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n
code-source-info,0x2bdba1225a6,158,0,1118,C0O0C4O1118,,
code-creation,Function,10,249925,0x2bdba1226de,24, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\unpipe\\index.js:1:1,0x2bdba122520,~
code-source-info,0x2bdba1226de,158,0,1118,C0O0C16O136C18O151C23O1117,,
code-creation,Eval,10,250712,0x2bdba123536,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:1:1,0x2bdba1232a0,~
script-source,159,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req\x2C res\x2C next) {\n    router.handle(req\x2C res\x2C next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router\x2C proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code\x2C\n *\n * The callback uses the same signature as middleware\x2C the only difference\n * being that the value of the placeholder is passed\x2C in this case the _id_\n * of the user. Once the `next()` function is invoked\x2C just like middleware\n * it will continue on to execute the route\x2C or subsequent parameter functions.\n *\n * Just like in middleware\x2C you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id'\x2C function(req\x2C res\x2C next\x2C id){\n *    User.find(id\x2C function(err\x2C user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name\x2C fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + '\x2C fn): Use router.param(' + JSON.stringify(name.slice(1)) + '\x2C fn) instead')\n    name = name.slice(1)\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name\x2C fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + '\x2C got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req\x2C res into the router.\n * @private\n */\n\nproto.handle = function handle(req\x2C res\x2C out) {\n  var self = this;\n\n  debug('dispatching %s %s'\x2C req.method\x2C req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var sync = 0\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out\x2C req\x2C 'baseUrl'\x2C 'next'\x2C 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests\x2C respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done\x2C function(old\x2C err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res\x2C options\x2C old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.slice(1)\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.slice(protohost.length)\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done\x2C null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done\x2C layerError);\n      return;\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next\x2C err)\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer\x2C path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options\x2C route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params\x2C parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer\x2C paramcalled\x2C req\x2C res\x2C function (err) {\n      if (err) {\n        next(layerError || err)\n      } else if (route) {\n        layer.handle_request(req\x2C res\x2C next)\n      } else {\n        trim_prefix(layer\x2C layerError\x2C layerPath\x2C path)\n      }\n\n      sync = 0\n    });\n  }\n\n  function trim_prefix(layer\x2C layerError\x2C layerPath\x2C path) {\n    if (layerPath.length !== 0) {\n      // Validate path is a prefix match\n      if (layerPath !== path.slice(0\x2C layerPath.length)) {\n        next(layerError)\n        return\n      }\n\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s'\x2C layerPath\x2C req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.slice(protohost.length + removed.length)\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0\x2C removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s'\x2C layer.name\x2C layerPath\x2C req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError\x2C req\x2C res\x2C next);\n    } else {\n      layer.handle_request(req\x2C res\x2C next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer\x2C called\x2C req\x2C res\x2C done) {\n  var params = this.params;\n\n  // captured parameters from the layer\x2C keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null\x2C\n      match: paramVal\x2C\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req\x2C res\x2C paramCallback\x2C paramVal\x2C key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function\x2C with optional path\x2C defaulting to "/".\n *\n * Use (like `.all`) will run for any http METHOD\x2C but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the "prefix"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments\x2C offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s'\x2C path\x2C fn.name || '<anonymous>')\n\n    var layer = new Layer(path\x2C {\n      sensitive: this.caseSensitive\x2C\n      strict: false\x2C\n      end: false\n    }\x2C fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path\x2C {\n    sensitive: this.caseSensitive\x2C\n    strict: this.strict\x2C\n    end: true\n  }\x2C route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route\x2C slice.call(arguments\x2C 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list\x2C addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.slice(0\x2C pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substring(0\x2C url.indexOf('/'\x2C 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp\x2C '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer\x2C path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params\x2C parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}\x2C parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj\x2C params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj\x2C params);\n}\n\n// restore obj props after function\nfunction restore(fn\x2C obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this\x2C arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res\x2C options\x2C next) {\n  try {\n    var body = options.join('\x2C');\n    res.set('Allow'\x2C body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old\x2C fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0\x2C len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this\x2C args);\n  };\n}\n
code-source-info,0x2bdba123536,159,0,15124,C0O0C4O15124,,
code-creation,Function,10,251244,0x2bdba123d6e,290, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:1:1,0x2bdba1234b0,~
code-source-info,0x2bdba123d6e,159,0,15124,C0O0C59O238C62O238C66O238C68O270C71O270C75O270C77O304C80O304C85O336C88O336C92O336C94O372C97O372C105O388C109O372C111O424C114O424C122O439C126O424C128O466C131O466C135O466C137O507C140O507C144O507C146O549C149O549C153O549C155O637C159O637C161O671C165O677C170O687C174O671C176O709C180O716C185O726C189O709C191O906C196O921C202O906C204O2456C211O2468C215O3345C222O3358C226O8171C233O8192C237O10421C244O10431C248O11742C255O11754C259O12062C267O12062C273O12075C283O12076C289O15123,,
code-creation,Eval,10,251730,0x2bdba125b1e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:1:1,0x2bdba125978,~
script-source,160,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`\x2C\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o'\x2C path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req\x2C res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req\x2C res\x2C done) {\n  var idx = 0;\n  var stack = this.stack;\n  var sync = 0\n\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    var layer = stack[idx++];\n    if (!layer) {\n      return done(err);\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next\x2C err)\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err\x2C req\x2C res\x2C next);\n    } else {\n      layer.handle_request(req\x2C res\x2C next);\n    }\n\n    sync = 0\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req\x2C res\x2C next){\n *     next();\n *   };\n *\n *   function validate_user(req\x2C res\x2C next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req\x2C res\x2C next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/'\x2C {}\x2C handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o'\x2C method\x2C this.path)\n\n      var layer = Layer('/'\x2C {}\x2C handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n
code-source-info,0x2bdba125b1e,160,0,4269,C0O0C4O4269,,
code-creation,Function,10,251907,0x2bdba125e7e,171, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:1:1,0x2bdba125a98,~
code-source-info,0x2bdba125e7e,160,0,4269,C0O0C11O238C14O238C22O254C26O238C28O294C31O294C35O294C37O332C40O332C44O332C46O366C49O366C54O441C58O447C63O457C67O441C69O479C73O486C78O496C82O479C84O546C86O561C90O891C93O897C102O923C106O1223C109O1229C118O1248C122O1618C125O1624C134O1643C138O3129C141O3135C150O3149C154O3649C164O3649C170O4268,,
code-creation,Eval,10,252788,0x2bdba127516,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\array-flatten\\array-flatten.js:1:1,0x2bdba1273b0,~
script-source,161,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\array-flatten\\array-flatten.js,'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array\x2C result\x2C depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value\x2C result\x2C depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array\x2C result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value\x2C result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array\x2C with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array\x2C depth) {\n  if (depth == null) {\n    return flattenForever(array\x2C [])\n  }\n\n  return flattenWithDepth(array\x2C []\x2C depth)\n}\n
code-source-info,0x2bdba127516,161,0,1195,C0O0C4O1195,,
code-creation,Function,10,252863,0x2bdba1276a6,30, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\array-flatten\\array-flatten.js:1:1,0x2bdba127490,~
code-source-info,0x2bdba1276a6,161,0,1195,C0O0C22O48C24O63C29O1194,,
code-creation,Eval,10,253294,0x2bdba127e5e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\layer.js:1:1,0x2bdba127cc8,~
script-source,162,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\layer.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar pathRegexp = require('path-to-regexp');\nvar debug = require('debug')('express:router:layer');\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path\x2C options\x2C fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path\x2C options\x2C fn);\n  }\n\n  debug('new %o'\x2C path)\n  var opts = options || {};\n\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path\x2C this.keys = []\x2C opts);\n\n  // set fast path flags\n  this.regexp.fast_star = path === '*'\n  this.regexp.fast_slash = path === '/' && opts.end === false\n}\n\n/**\n * Handle the error for the layer.\n *\n * @param {Error} error\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_error = function handle_error(error\x2C req\x2C res\x2C next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error\x2C req\x2C res\x2C next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Handle the request for the layer.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_request = function handle(req\x2C res\x2C next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req\x2C res\x2C next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Check if this route matches `path`\x2C if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nLayer.prototype.match = function match(path) {\n  var match\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {}\n      this.path = ''\n      return true\n    }\n\n    // fast path for * (everything matched in a param)\n    if (this.regexp.fast_star) {\n      this.params = {'0': decode_param(path)}\n      this.path = path\n      return true\n    }\n\n    // match the path\n    match = this.regexp.exec(path)\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n\n  // store values\n  this.params = {};\n  this.path = match[0]\n\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i])\n\n    if (val !== undefined || !(hasOwnProperty.call(params\x2C prop))) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Decode param value.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n
code-source-info,0x2bdba127e5e,162,0,3296,C0O0C4O3296,,
code-creation,Function,10,253440,0x2bdba1280e6,114, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\layer.js:1:1,0x2bdba127dd8,~
code-source-info,0x2bdba1280e6,162,0,3296,C0O0C17O243C20O243C24O243C26O282C29O282C37O298C41O282C43O388C47O395C52O405C56O388C58O461C60O476C64O1115C67O1121C76O1144C80O1528C83O1534C92O1559C96O1919C99O1925C108O1941C113O3295,,
code-creation,Eval,10,254111,0x2bdba1290ce,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\path-to-regexp\\index.js:1:1,0x2bdba128f68,~
script-source,163,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\path-to-regexp\\index.js,/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n\n/**\n * Normalize the given path string\x2C\n * returning a regular expression.\n *\n * An empty array should be passed\x2C\n * which will contain the placeholder\n * key names. For example "/user/:id" will\n * then contain ["id"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path\x2C keys\x2C options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++\x2C\n        optional: false\x2C\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value\x2C keys\x2C options).source;\n    });\n\n    return new RegExp('(?:' + path.join('|') + ')'\x2C flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\n    .replace(/\\/\\(/g\x2C '/(?:')\n    .replace(/([\\/\\.])/g\x2C '\\\\$1')\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g\x2C function (match\x2C slash\x2C format\x2C key\x2C capture\x2C star\x2C optional\x2C offset) {\n      slash = slash || '';\n      format = format || '';\n      capture = capture || '([^\\\\/' + format + ']+?)';\n      optional = optional || '';\n\n      keys.push({\n        name: key\x2C\n        optional: !!optional\x2C\n        offset: offset + extraOffset\n      });\n\n      var result = ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + format + (optional ? slash : '') + capture\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    })\n    .replace(/\\*/g\x2C function (star\x2C index) {\n      var len = keys.length\n\n      while (len-- > keysOffset && keys[len].offset > index) {\n        keys[len].offset += 3; // Replacement length minus asterisk length.\n      }\n\n      return '(.*)';\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    }\n\n    // It's possible to escape the bracket.\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i\x2C 0\x2C {\n        name: name++\x2C // Unnamed matching groups must be consistently linear.\n        optional: false\x2C\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  // If the path is non-ending\x2C match until the end or a slash.\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\n\n  return new RegExp(path\x2C flags);\n};\n
code-source-info,0x2bdba1290ce,163,0,3328,C0O0C4O3328,,
code-creation,Function,10,254259,0x2bdba1291ee,25, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\path-to-regexp\\index.js:1:1,0x2bdba129048,~
code-source-info,0x2bdba1291ee,163,0,3328,C0O0C11O35C13O50C17O153C21O153C24O3327,,
code-creation,Eval,10,254923,0x2bdba12a06e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\methods\\index.js:1:1,0x2bdba129f18,~
script-source,164,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\methods\\index.js,/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the "basic" Node.js methods\x2C a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get'\x2C\n    'post'\x2C\n    'put'\x2C\n    'head'\x2C\n    'delete'\x2C\n    'options'\x2C\n    'trace'\x2C\n    'copy'\x2C\n    'lock'\x2C\n    'mkcol'\x2C\n    'move'\x2C\n    'purge'\x2C\n    'propfind'\x2C\n    'proppatch'\x2C\n    'unlock'\x2C\n    'report'\x2C\n    'mkactivity'\x2C\n    'checkout'\x2C\n    'merge'\x2C\n    'm-search'\x2C\n    'notify'\x2C\n    'subscribe'\x2C\n    'unsubscribe'\x2C\n    'patch'\x2C\n    'search'\x2C\n    'connect'\n  ];\n}\n
code-source-info,0x2bdba12a06e,164,0,1040,C0O0C4O1040,,
code-creation,Function,10,254995,0x2bdba12a1d6,41, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\methods\\index.js:1:1,0x2bdba129fe8,~
code-source-info,0x2bdba12a1d6,164,0,1040,C0O0C15O201C18O201C22O201C24O275C32O302C35O273C40O1039,,
code-creation,Eval,10,255146,0x2bdba12aa66,5, node:http:1:1,0x2bdba12a8c0,~
script-source,165,node:http,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst httpAgent = require('_http_agent');\x0d\nconst { ClientRequest } = require('_http_client');\x0d\nconst { methods } = require('_http_common');\x0d\nconst { IncomingMessage } = require('_http_incoming');\x0d\nconst {\x0d\n  validateHeaderName\x2C\x0d\n  validateHeaderValue\x2C\x0d\n  OutgoingMessage\x0d\n} = require('_http_outgoing');\x0d\nconst {\x0d\n  _connectionListener\x2C\x0d\n  STATUS_CODES\x2C\x0d\n  Server\x2C\x0d\n  ServerResponse\x0d\n} = require('_http_server');\x0d\nlet maxHeaderSize;\x0d\n\x0d\n/**\x0d\n * Returns a new instance of `http.Server`.\x0d\n * @param {{\x0d\n *   IncomingMessage?: IncomingMessage;\x0d\n *   ServerResponse?: ServerResponse;\x0d\n *   insecureHTTPParser?: boolean;\x0d\n *   maxHeaderSize?: number;\x0d\n *   }} [opts]\x0d\n * @param {Function} [requestListener]\x0d\n * @returns {Server}\x0d\n */\x0d\nfunction createServer(opts\x2C requestListener) {\x0d\n  return new Server(opts\x2C requestListener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @typedef {Object} HTTPRequestOptions\x0d\n * @property {httpAgent.Agent | boolean} [agent]\x0d\n * @property {string} [auth]\x0d\n * @property {Function} [createConnection]\x0d\n * @property {number} [defaultPort]\x0d\n * @property {number} [family]\x0d\n * @property {Object} [headers]\x0d\n * @property {number} [hints]\x0d\n * @property {string} [host]\x0d\n * @property {string} [hostname]\x0d\n * @property {boolean} [insecureHTTPParser]\x0d\n * @property {string} [localAddress]\x0d\n * @property {number} [localPort]\x0d\n * @property {Function} [lookup]\x0d\n * @property {number} [maxHeaderSize]\x0d\n * @property {string} [method]\x0d\n * @property {string} [path]\x0d\n * @property {number} [port]\x0d\n * @property {string} [protocol]\x0d\n * @property {boolean} [setHost]\x0d\n * @property {string} [socketPath]\x0d\n * @property {number} [timeout]\x0d\n * @property {AbortSignal} [signal]\x0d\n */\x0d\n\x0d\n/**\x0d\n * Makes an HTTP request.\x0d\n * @param {string | URL} url\x0d\n * @param {HTTPRequestOptions} [options]\x0d\n * @param {Function} [cb]\x0d\n * @returns {ClientRequest}\x0d\n */\x0d\nfunction request(url\x2C options\x2C cb) {\x0d\n  return new ClientRequest(url\x2C options\x2C cb);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Makes a `GET` HTTP request.\x0d\n * @param {string | URL} url\x0d\n * @param {HTTPRequestOptions} [options]\x0d\n * @param {Function} [cb]\x0d\n * @returns {ClientRequest}\x0d\n */\x0d\nfunction get(url\x2C options\x2C cb) {\x0d\n  const req = request(url\x2C options\x2C cb);\x0d\n  req.end();\x0d\n  return req;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _connectionListener\x2C\x0d\n  METHODS: ArrayPrototypeSort(ArrayPrototypeSlice(methods))\x2C\x0d\n  STATUS_CODES\x2C\x0d\n  Agent: httpAgent.Agent\x2C\x0d\n  ClientRequest\x2C\x0d\n  IncomingMessage\x2C\x0d\n  OutgoingMessage\x2C\x0d\n  Server\x2C\x0d\n  ServerResponse\x2C\x0d\n  createServer\x2C\x0d\n  validateHeaderName\x2C\x0d\n  validateHeaderValue\x2C\x0d\n  get\x2C\x0d\n  request\x0d\n};\x0d\n\x0d\nObjectDefineProperty(module.exports\x2C 'maxHeaderSize'\x2C {\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (maxHeaderSize === undefined) {\x0d\n      const { getOptionValue } = require('internal/options');\x0d\n      maxHeaderSize = getOptionValue('--max-http-header-size');\x0d\n    }\x0d\n\x0d\n    return maxHeaderSize;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(module.exports\x2C 'globalAgent'\x2C {\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return httpAgent.globalAgent;\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    httpAgent.globalAgent = value;\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2bdba12aa66,165,0,4333,C0O0C4O4333,,
code-creation,Function,10,255368,0x2bdba12af86,349, node:http:1:1,0x2bdba12a9e0,~
code-source-info,0x2bdba12af86,165,0,4333,C0O0C37O1183C42O1207C47O1230C52O1291C58O1291C62O1291C64O1342C70O1342C75O1324C81O1388C87O1388C92O1376C97O1442C103O1442C108O1422C113O1549C119O1549C124O1481C129O1504C134O1528C139O1660C145O1660C150O1588C155O1612C160O1629C166O1640C171O1690C172O1690C174O3465C181O3487C185O3539C191O3520C201O3573C209O3607C219O3617C225O3635C231O3655C237O3675C243O3686C249O3705C255O3722C261O3745C267O3769C273O3777C279O3480C283O3820C298O3895C306O3792C311O4148C326O4221C334O4273C342O4120C348O4332,,
code-creation,Eval,10,255796,0x2bdba12c0e6,5, node:_http_agent:1:1,0x2bdba12bd50,~
script-source,166,node:_http_agent,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeSubstr\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst EventEmitter = require('events');\x0d\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\nconst { async_id_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { once } = require('internal/util');\x0d\nconst {\x0d\n  validateNumber\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kOnKeylog = Symbol('onkeylog');\x0d\nconst kRequestOptions = Symbol('requestOptions');\x0d\nconst kRequestAsyncResource = Symbol('requestAsyncResource');\x0d\n// New Agent code.\x0d\n\x0d\n// The largest departure from the previous implementation is that\x0d\n// an Agent instance holds connections for a variable number of host:ports.\x0d\n// Surprisingly\x2C this is still API compatible as far as third parties are\x0d\n// concerned. The only code that really notices the difference is the\x0d\n// request object.\x0d\n\x0d\n// Another departure is that all code related to HTTP parsing is in\x0d\n// ClientRequest.onSocket(). The Agent is now *strictly*\x0d\n// concerned with managing a connection pool.\x0d\n\x0d\nclass ReusedHandle {\x0d\n  constructor(type\x2C handle) {\x0d\n    this.type = type;\x0d\n    this.handle = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction freeSocketErrorListener(err) {\x0d\n  const socket = this;\x0d\n  debug('SOCKET ERROR on FREE socket:'\x2C err.message\x2C err.stack);\x0d\n  socket.destroy();\x0d\n  socket.emit('agentRemove');\x0d\n}\x0d\n\x0d\nfunction Agent(options) {\x0d\n  if (!(this instanceof Agent))\x0d\n    return new Agent(options);\x0d\n\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this.defaultPort = 80;\x0d\n  this.protocol = 'http:';\x0d\n\x0d\n  this.options = { __proto__: null\x2C ...options };\x0d\n\x0d\n  // Don't confuse net and make it think that we're connecting to a pipe\x0d\n  this.options.path = null;\x0d\n  this.requests = ObjectCreate(null);\x0d\n  this.sockets = ObjectCreate(null);\x0d\n  this.freeSockets = ObjectCreate(null);\x0d\n  this.keepAliveMsecs = this.options.keepAliveMsecs || 1000;\x0d\n  this.keepAlive = this.options.keepAlive || false;\x0d\n  this.maxSockets = this.options.maxSockets || Agent.defaultMaxSockets;\x0d\n  this.maxFreeSockets = this.options.maxFreeSockets || 256;\x0d\n  this.scheduling = this.options.scheduling || 'lifo';\x0d\n  this.maxTotalSockets = this.options.maxTotalSockets;\x0d\n  this.totalSocketCount = 0;\x0d\n\x0d\n  validateOneOf(this.scheduling\x2C 'scheduling'\x2C ['fifo'\x2C 'lifo']);\x0d\n\x0d\n  if (this.maxTotalSockets !== undefined) {\x0d\n    validateNumber(this.maxTotalSockets\x2C 'maxTotalSockets');\x0d\n    if (this.maxTotalSockets <= 0 || NumberIsNaN(this.maxTotalSockets))\x0d\n      throw new ERR_OUT_OF_RANGE('maxTotalSockets'\x2C '> 0'\x2C\x0d\n                                 this.maxTotalSockets);\x0d\n  } else {\x0d\n    this.maxTotalSockets = Infinity;\x0d\n  }\x0d\n\x0d\n  this.on('free'\x2C (socket\x2C options) => {\x0d\n    const name = this.getName(options);\x0d\n    debug('agent.on(free)'\x2C name);\x0d\n\x0d\n    // TODO(ronag): socket.destroy(err) might have been called\x0d\n    // before coming here and have an 'error' scheduled. In the\x0d\n    // case of socket.destroy() below this 'error' has no handler\x0d\n    // and could cause unhandled exception.\x0d\n\x0d\n    if (!socket.writable) {\x0d\n      socket.destroy();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const requests = this.requests[name];\x0d\n    if (requests && requests.length) {\x0d\n      const req = ArrayPrototypeShift(requests);\x0d\n      const reqAsyncRes = req[kRequestAsyncResource];\x0d\n      if (reqAsyncRes) {\x0d\n        // Run request within the original async context.\x0d\n        reqAsyncRes.runInAsyncScope(() => {\x0d\n          asyncResetHandle(socket);\x0d\n          setRequestSocket(this\x2C req\x2C socket);\x0d\n        });\x0d\n        req[kRequestAsyncResource] = null;\x0d\n      } else {\x0d\n        setRequestSocket(this\x2C req\x2C socket);\x0d\n      }\x0d\n      if (requests.length === 0) {\x0d\n        delete this.requests[name];\x0d\n      }\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // If there are no pending requests\x2C then put it in\x0d\n    // the freeSockets pool\x2C but only if we're allowed to do so.\x0d\n    const req = socket._httpMessage;\x0d\n    if (!req || !req.shouldKeepAlive || !this.keepAlive) {\x0d\n      socket.destroy();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const freeSockets = this.freeSockets[name] || [];\x0d\n    const freeLen = freeSockets.length;\x0d\n    let count = freeLen;\x0d\n    if (this.sockets[name])\x0d\n      count += this.sockets[name].length;\x0d\n\x0d\n    if (this.totalSocketCount > this.maxTotalSockets ||\x0d\n        count > this.maxSockets ||\x0d\n        freeLen >= this.maxFreeSockets ||\x0d\n        !this.keepSocketAlive(socket)) {\x0d\n      socket.destroy();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this.freeSockets[name] = freeSockets;\x0d\n    socket[async_id_symbol] = -1;\x0d\n    socket._httpMessage = null;\x0d\n    this.removeSocket(socket\x2C options);\x0d\n\x0d\n    socket.once('error'\x2C freeSocketErrorListener);\x0d\n    ArrayPrototypePush(freeSockets\x2C socket);\x0d\n  });\x0d\n\x0d\n  // Don't emit keylog events unless there is a listener for them.\x0d\n  this.on('newListener'\x2C maybeEnableKeylog);\x0d\n}\x0d\nObjectSetPrototypeOf(Agent.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Agent\x2C EventEmitter);\x0d\n\x0d\nfunction maybeEnableKeylog(eventName) {\x0d\n  if (eventName === 'keylog') {\x0d\n    this.removeListener('newListener'\x2C maybeEnableKeylog);\x0d\n    // Future sockets will listen on keylog at creation.\x0d\n    const agent = this;\x0d\n    this[kOnKeylog] = function onkeylog(keylog) {\x0d\n      agent.emit('keylog'\x2C keylog\x2C this);\x0d\n    };\x0d\n    // Existing sockets will start listening on keylog now.\x0d\n    const sockets = ObjectValues(this.sockets);\x0d\n    for (let i = 0; i < sockets.length; i++) {\x0d\n      sockets[i].on('keylog'\x2C this[kOnKeylog]);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nAgent.defaultMaxSockets = Infinity;\x0d\n\x0d\nAgent.prototype.createConnection = net.createConnection;\x0d\n\x0d\n// Get the key for a given set of request options\x0d\nAgent.prototype.getName = function getName(options) {\x0d\n  let name = options.host || 'localhost';\x0d\n\x0d\n  name += ':';\x0d\n  if (options.port)\x0d\n    name += options.port;\x0d\n\x0d\n  name += ':';\x0d\n  if (options.localAddress)\x0d\n    name += options.localAddress;\x0d\n\x0d\n  // Pacify parallel/test-http-agent-getname by only appending\x0d\n  // the ':' when options.family is set.\x0d\n  if (options.family === 4 || options.family === 6)\x0d\n    name += `:${options.family}`;\x0d\n\x0d\n  if (options.socketPath)\x0d\n    name += `:${options.socketPath}`;\x0d\n\x0d\n  return name;\x0d\n};\x0d\n\x0d\nAgent.prototype.addRequest = function addRequest(req\x2C options\x2C port/* legacy */\x2C\x0d\n                                                 localAddress/* legacy */) {\x0d\n  // Legacy API: addRequest(req\x2C host\x2C port\x2C localAddress)\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      __proto__: null\x2C\x0d\n      host: options\x2C\x0d\n      port\x2C\x0d\n      localAddress\x0d\n    };\x0d\n  }\x0d\n\x0d\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\x0d\n  if (options.socketPath)\x0d\n    options.path = options.socketPath;\x0d\n\x0d\n  if (!options.servername && options.servername !== '')\x0d\n    options.servername = calculateServerName(options\x2C req);\x0d\n\x0d\n  const name = this.getName(options);\x0d\n  if (!this.sockets[name]) {\x0d\n    this.sockets[name] = [];\x0d\n  }\x0d\n\x0d\n  const freeSockets = this.freeSockets[name];\x0d\n  let socket;\x0d\n  if (freeSockets) {\x0d\n    while (freeSockets.length && freeSockets[0].destroyed) {\x0d\n      ArrayPrototypeShift(freeSockets);\x0d\n    }\x0d\n    socket = this.scheduling === 'fifo' ?\x0d\n      ArrayPrototypeShift(freeSockets) :\x0d\n      ArrayPrototypePop(freeSockets);\x0d\n    if (!freeSockets.length)\x0d\n      delete this.freeSockets[name];\x0d\n  }\x0d\n\x0d\n  const freeLen = freeSockets ? freeSockets.length : 0;\x0d\n  const sockLen = freeLen + this.sockets[name].length;\x0d\n\x0d\n  if (socket) {\x0d\n    asyncResetHandle(socket);\x0d\n    this.reuseSocket(socket\x2C req);\x0d\n    setRequestSocket(this\x2C req\x2C socket);\x0d\n    ArrayPrototypePush(this.sockets[name]\x2C socket);\x0d\n    this.totalSocketCount++;\x0d\n  } else if (sockLen < this.maxSockets &&\x0d\n             this.totalSocketCount < this.maxTotalSockets) {\x0d\n    debug('call onSocket'\x2C sockLen\x2C freeLen);\x0d\n    // If we are under maxSockets create a new one.\x0d\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\x0d\n      if (err)\x0d\n        req.onSocket(socket\x2C err);\x0d\n      else\x0d\n        setRequestSocket(this\x2C req\x2C socket);\x0d\n    });\x0d\n  } else {\x0d\n    debug('wait for socket');\x0d\n    // We are over limit so we'll add it to the queue.\x0d\n    if (!this.requests[name]) {\x0d\n      this.requests[name] = [];\x0d\n    }\x0d\n\x0d\n    // Used to create sockets for pending requests from different origin\x0d\n    req[kRequestOptions] = options;\x0d\n    // Used to capture the original async context.\x0d\n    req[kRequestAsyncResource] = new AsyncResource('QueuedRequest');\x0d\n\x0d\n    ArrayPrototypePush(this.requests[name]\x2C req);\x0d\n  }\x0d\n};\x0d\n\x0d\nAgent.prototype.createSocket = function createSocket(req\x2C options\x2C cb) {\x0d\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\x0d\n  if (options.socketPath)\x0d\n    options.path = options.socketPath;\x0d\n\x0d\n  if (!options.servername && options.servername !== '')\x0d\n    options.servername = calculateServerName(options\x2C req);\x0d\n\x0d\n  const name = this.getName(options);\x0d\n  options._agentKey = name;\x0d\n\x0d\n  debug('createConnection'\x2C name\x2C options);\x0d\n  options.encoding = null;\x0d\n\x0d\n  const oncreate = once((err\x2C s) => {\x0d\n    if (err)\x0d\n      return cb(err);\x0d\n    if (!this.sockets[name]) {\x0d\n      this.sockets[name] = [];\x0d\n    }\x0d\n    ArrayPrototypePush(this.sockets[name]\x2C s);\x0d\n    this.totalSocketCount++;\x0d\n    debug('sockets'\x2C name\x2C this.sockets[name].length\x2C this.totalSocketCount);\x0d\n    installListeners(this\x2C s\x2C options);\x0d\n    cb(null\x2C s);\x0d\n  });\x0d\n\x0d\n  const newSocket = this.createConnection(options\x2C oncreate);\x0d\n  if (newSocket)\x0d\n    oncreate(null\x2C newSocket);\x0d\n};\x0d\n\x0d\nfunction calculateServerName(options\x2C req) {\x0d\n  let servername = options.host;\x0d\n  const hostHeader = req.getHeader('host');\x0d\n  if (hostHeader) {\x0d\n    validateString(hostHeader\x2C 'options.headers.host');\x0d\n\x0d\n    // abc => abc\x0d\n    // abc:123 => abc\x0d\n    // [::1] => ::1\x0d\n    // [::1]:123 => ::1\x0d\n    if (StringPrototypeStartsWith(hostHeader\x2C '[')) {\x0d\n      const index = StringPrototypeIndexOf(hostHeader\x2C ']');\x0d\n      if (index === -1) {\x0d\n        // Leading '['\x2C but no ']'. Need to do something...\x0d\n        servername = hostHeader;\x0d\n      } else {\x0d\n        servername = StringPrototypeSubstr(hostHeader\x2C 1\x2C index - 1);\x0d\n      }\x0d\n    } else {\x0d\n      servername = StringPrototypeSplit(hostHeader\x2C ':'\x2C 1)[0];\x0d\n    }\x0d\n  }\x0d\n  // Don't implicitly set invalid (IP) servernames.\x0d\n  if (net.isIP(servername))\x0d\n    servername = '';\x0d\n  return servername;\x0d\n}\x0d\n\x0d\nfunction installListeners(agent\x2C s\x2C options) {\x0d\n  function onFree() {\x0d\n    debug('CLIENT socket onFree');\x0d\n    agent.emit('free'\x2C s\x2C options);\x0d\n  }\x0d\n  s.on('free'\x2C onFree);\x0d\n\x0d\n  function onClose(err) {\x0d\n    debug('CLIENT socket onClose');\x0d\n    // This is the only place where sockets get removed from the Agent.\x0d\n    // If you want to remove a socket from the pool\x2C just close it.\x0d\n    // All socket errors end in a close event anyway.\x0d\n    agent.removeSocket(s\x2C options);\x0d\n  }\x0d\n  s.on('close'\x2C onClose);\x0d\n\x0d\n  function onTimeout() {\x0d\n    debug('CLIENT socket onTimeout');\x0d\n\x0d\n    // Destroy if in free list.\x0d\n    // TODO(ronag): Always destroy\x2C even if not in free list.\x0d\n    const sockets = agent.freeSockets;\x0d\n    if (ArrayPrototypeSome(ObjectKeys(sockets)\x2C (name) =>\x0d\n      ArrayPrototypeIncludes(sockets[name]\x2C s)\x0d\n    )) {\x0d\n      return s.destroy();\x0d\n    }\x0d\n  }\x0d\n  s.on('timeout'\x2C onTimeout);\x0d\n\x0d\n  function onRemove() {\x0d\n    // We need this function for cases like HTTP 'upgrade'\x0d\n    // (defined by WebSockets) where we need to remove a socket from the\x0d\n    // pool because it'll be locked up indefinitely\x0d\n    debug('CLIENT socket onRemove');\x0d\n    agent.removeSocket(s\x2C options);\x0d\n    s.removeListener('close'\x2C onClose);\x0d\n    s.removeListener('free'\x2C onFree);\x0d\n    s.removeListener('timeout'\x2C onTimeout);\x0d\n    s.removeListener('agentRemove'\x2C onRemove);\x0d\n  }\x0d\n  s.on('agentRemove'\x2C onRemove);\x0d\n\x0d\n  if (agent[kOnKeylog]) {\x0d\n    s.on('keylog'\x2C agent[kOnKeylog]);\x0d\n  }\x0d\n}\x0d\n\x0d\nAgent.prototype.removeSocket = function removeSocket(s\x2C options) {\x0d\n  const name = this.getName(options);\x0d\n  debug('removeSocket'\x2C name\x2C 'writable:'\x2C s.writable);\x0d\n  const sets = [this.sockets];\x0d\n\x0d\n  // If the socket was destroyed\x2C remove it from the free buffers too.\x0d\n  if (!s.writable)\x0d\n    ArrayPrototypePush(sets\x2C this.freeSockets);\x0d\n\x0d\n  for (let sk = 0; sk < sets.length; sk++) {\x0d\n    const sockets = sets[sk];\x0d\n\x0d\n    if (sockets[name]) {\x0d\n      const index = ArrayPrototypeIndexOf(sockets[name]\x2C s);\x0d\n      if (index !== -1) {\x0d\n        ArrayPrototypeSplice(sockets[name]\x2C index\x2C 1);\x0d\n        // Don't leak\x0d\n        if (sockets[name].length === 0)\x0d\n          delete sockets[name];\x0d\n        this.totalSocketCount--;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let req;\x0d\n  if (this.requests[name] && this.requests[name].length) {\x0d\n    debug('removeSocket\x2C have a request\x2C make a socket');\x0d\n    req = this.requests[name][0];\x0d\n  } else {\x0d\n    // TODO(rickyes): this logic will not be FIFO across origins.\x0d\n    // There might be older requests in a different origin\x2C but\x0d\n    // if the origin which releases the socket has pending requests\x0d\n    // that will be prioritized.\x0d\n    const keys = ObjectKeys(this.requests);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const prop = keys[i];\x0d\n      // Check whether this specific origin is already at maxSockets\x0d\n      if (this.sockets[prop] && this.sockets[prop].length) break;\x0d\n      debug('removeSocket\x2C have a request with different origin\x2C' +\x0d\n        ' make a socket');\x0d\n      req = this.requests[prop][0];\x0d\n      options = req[kRequestOptions];\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (req && options) {\x0d\n    req[kRequestOptions] = undefined;\x0d\n    // If we have pending requests and a socket gets closed make a new one\x0d\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\x0d\n      if (err)\x0d\n        req.onSocket(socket\x2C err);\x0d\n      else\x0d\n        socket.emit('free');\x0d\n    });\x0d\n  }\x0d\n\x0d\n};\x0d\n\x0d\nAgent.prototype.keepSocketAlive = function keepSocketAlive(socket) {\x0d\n  socket.setKeepAlive(true\x2C this.keepAliveMsecs);\x0d\n  socket.unref();\x0d\n\x0d\n  const agentTimeout = this.options.timeout || 0;\x0d\n  if (socket.timeout !== agentTimeout) {\x0d\n    socket.setTimeout(agentTimeout);\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nAgent.prototype.reuseSocket = function reuseSocket(socket\x2C req) {\x0d\n  debug('have free socket');\x0d\n  socket.removeListener('error'\x2C freeSocketErrorListener);\x0d\n  req.reusedSocket = true;\x0d\n  socket.ref();\x0d\n};\x0d\n\x0d\nAgent.prototype.destroy = function destroy() {\x0d\n  const sets = [this.freeSockets\x2C this.sockets];\x0d\n  for (let s = 0; s < sets.length; s++) {\x0d\n    const set = sets[s];\x0d\n    const keys = ObjectKeys(set);\x0d\n    for (let v = 0; v < keys.length; v++) {\x0d\n      const setName = set[keys[v]];\x0d\n      for (let n = 0; n < setName.length; n++) {\x0d\n        setName[n].destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction setRequestSocket(agent\x2C req\x2C socket) {\x0d\n  req.onSocket(socket);\x0d\n  const agentTimeout = agent.options.timeout || 0;\x0d\n  if (req.timeout === undefined || req.timeout === agentTimeout) {\x0d\n    return;\x0d\n  }\x0d\n  socket.setTimeout(req.timeout);\x0d\n}\x0d\n\x0d\nfunction asyncResetHandle(socket) {\x0d\n  // Guard against an uninitialized or user supplied Socket.\x0d\n  const handle = socket._handle;\x0d\n  if (handle && typeof handle.asyncReset === 'function') {\x0d\n    // Assign the handle a new asyncId and run any destroy()/init() hooks.\x0d\n    handle.asyncReset(new ReusedHandle(handle.getProviderType()\x2C socket));\x0d\n    socket[async_id_symbol] = handle.getAsyncId();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Agent\x2C\x0d\n  globalAgent: new Agent()\x0d\n};\x0d\n
code-source-info,0x2bdba12c0e6,166,0,16996,C0O0C4O16996,,
code-creation,Function,10,256700,0x2bdba12ca76,636, node:_http_agent:1:1,0x2bdba12c060,~
code-source-info,0x2bdba12ca
code-creation,LazyCompile,10,257014,0x2bdba12e76e,505,Agent node:_http_agent:93:15,0x2bdba12c168,~
code-source-info,0x2bdba12e76e
code-creation,LazyCompile,10,257156,0x2bdba12fd56,75, node:internal/validators:127:39,0x6682e9a9f0,~
code-source-info,0x2bdba12fd56,17,3807,4149,C0O3836C5O3841C12O3902C19O3929C22O3947C27O3929C36O3902C42O4053C47O4072C51O4088C67O4094C72O4088C74O4148,,
code-creation,Function,11,257223,0x225ca79e120,160,checkListener node:events:127:23,0x25aadb33798,^
code-source-info,0x225ca79e120,13,3796,3854,,,
code-creation,Function,11,257250,0x225ca79e220,572,createUnsafeBuffer node:internal/buffer:1059:28,0x6682eb2f48,^
code-source-info,0x225ca79e220,19,31379,31495,,,
code-creation,Function,11,257273,0x225ca79e4c0,756,selectColor C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js:44:21,0x2bdba113b00,^
code-source-info,0x225ca79e4c0,150,838,1071,,,
code-creation,Function,11,257312,0x225ca79e820,1508,resolveExports node:internal/modules/cjs/loader:472:24,0x3341609fc40,^
code-source-info,0x225ca79e820,99,14039,14743,,,
code-creation,Function,11,257362,0x225ca79ee80,184,assert node:internal/assert:11:16,0x6682e98098,^
code-source-info,0x225ca79ee80,16,182,322,,,
code-creation,Eval,10,257871,0x2bdba130fc6,5, node:_http_client:1:1,0x2bdba130a10,~
script-source,167,node:_http_client,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst assert = require('internal/assert');\x0d\nconst { once } = require('internal/util');\x0d\nconst {\x0d\n  _checkIsHttpToken: checkIsHttpToken\x2C\x0d\n  freeParser\x2C\x0d\n  parsers\x2C\x0d\n  HTTPParser\x2C\x0d\n  isLenient\x2C\x0d\n  prepareError\x2C\x0d\n} = require('_http_common');\x0d\nconst { OutgoingMessage } = require('_http_outgoing');\x0d\nconst Agent = require('_http_agent');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { defaultTriggerAsyncIdScope } = require('internal/async_hooks');\x0d\nconst { URL\x2C urlToHttpOptions\x2C searchParamsSymbol } = require('internal/url');\x0d\nconst { kOutHeaders\x2C kNeedDrain } = require('internal/http');\x0d\nconst { connResetException\x2C codes } = require('internal/errors');\x0d\nconst {\x0d\n  ERR_HTTP_HEADERS_SENT\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_HTTP_TOKEN\x2C\x0d\n  ERR_INVALID_PROTOCOL\x2C\x0d\n  ERR_UNESCAPED_CHARACTERS\x0d\n} = codes;\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n} = require('internal/validators');\x0d\nconst { getTimerDuration } = require('internal/timers');\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x0d\n} = require('internal/dtrace');\x0d\n\x0d\nconst { addAbortSignal\x2C finished } = require('stream');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst INVALID_PATH_REGEX = /[^\\u0021-\\u00ff]/;\x0d\nconst kError = Symbol('kError');\x0d\n\x0d\nconst kLenientAll = HTTPParser.kLenientAll | 0;\x0d\nconst kLenientNone = HTTPParser.kLenientNone | 0;\x0d\n\x0d\nfunction validateHost(host\x2C name) {\x0d\n  if (host !== null && host !== undefined && typeof host !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(`options.${name}`\x2C\x0d\n                                   ['string'\x2C 'undefined'\x2C 'null']\x2C\x0d\n                                   host);\x0d\n  }\x0d\n  return host;\x0d\n}\x0d\n\x0d\nclass HTTPClientAsyncResource {\x0d\n  constructor(type\x2C req) {\x0d\n    this.type = type;\x0d\n    this.req = req;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction ClientRequest(input\x2C options\x2C cb) {\x0d\n  FunctionPrototypeCall(OutgoingMessage\x2C this);\x0d\n\x0d\n  if (typeof input === 'string') {\x0d\n    const urlStr = input;\x0d\n    input = urlToHttpOptions(new URL(urlStr));\x0d\n  } else if (input && input[searchParamsSymbol] &&\x0d\n             input[searchParamsSymbol][searchParamsSymbol]) {\x0d\n    // url.URL instance\x0d\n    input = urlToHttpOptions(input);\x0d\n  } else {\x0d\n    cb = options;\x0d\n    options = input;\x0d\n    input = null;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    cb = options;\x0d\n    options = input || {};\x0d\n  } else {\x0d\n    options = ObjectAssign(input || {}\x2C options);\x0d\n  }\x0d\n\x0d\n  let agent = options.agent;\x0d\n  const defaultAgent = options._defaultAgent || Agent.globalAgent;\x0d\n  if (agent === false) {\x0d\n    agent = new defaultAgent.constructor();\x0d\n  } else if (agent === null || agent === undefined) {\x0d\n    if (typeof options.createConnection !== 'function') {\x0d\n      agent = defaultAgent;\x0d\n    }\x0d\n    // Explicitly pass through this statement as agent will not be used\x0d\n    // when createConnection is provided.\x0d\n  } else if (typeof agent.addRequest !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.agent'\x2C\x0d\n                                   ['Agent-like Object'\x2C 'undefined'\x2C 'false']\x2C\x0d\n                                   agent);\x0d\n  }\x0d\n  this.agent = agent;\x0d\n\x0d\n  const protocol = options.protocol || defaultAgent.protocol;\x0d\n  let expectedProtocol = defaultAgent.protocol;\x0d\n  if (this.agent && this.agent.protocol)\x0d\n    expectedProtocol = this.agent.protocol;\x0d\n\x0d\n  if (options.path) {\x0d\n    const path = String(options.path);\x0d\n    if (RegExpPrototypeTest(INVALID_PATH_REGEX\x2C path))\x0d\n      throw new ERR_UNESCAPED_CHARACTERS('Request path');\x0d\n  }\x0d\n\x0d\n  if (protocol !== expectedProtocol) {\x0d\n    throw new ERR_INVALID_PROTOCOL(protocol\x2C expectedProtocol);\x0d\n  }\x0d\n\x0d\n  const defaultPort = options.defaultPort ||\x0d\n                    (this.agent && this.agent.defaultPort);\x0d\n\x0d\n  const port = options.port = options.port || defaultPort || 80;\x0d\n  const host = options.host = validateHost(options.hostname\x2C 'hostname') ||\x0d\n                            validateHost(options.host\x2C 'host') || 'localhost';\x0d\n\x0d\n  const setHost = (options.setHost === undefined || Boolean(options.setHost));\x0d\n\x0d\n  this.socketPath = options.socketPath;\x0d\n\x0d\n  if (options.timeout !== undefined)\x0d\n    this.timeout = getTimerDuration(options.timeout\x2C 'timeout');\x0d\n\x0d\n  const signal = options.signal;\x0d\n  if (signal) {\x0d\n    addAbortSignal(signal\x2C this);\x0d\n  }\x0d\n  let method = options.method;\x0d\n  const methodIsString = (typeof method === 'string');\x0d\n  if (method !== null && method !== undefined && !methodIsString) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.method'\x2C 'string'\x2C method);\x0d\n  }\x0d\n\x0d\n  if (methodIsString && method) {\x0d\n    if (!checkIsHttpToken(method)) {\x0d\n      throw new ERR_INVALID_HTTP_TOKEN('Method'\x2C method);\x0d\n    }\x0d\n    method = this.method = StringPrototypeToUpperCase(method);\x0d\n  } else {\x0d\n    method = this.method = 'GET';\x0d\n  }\x0d\n\x0d\n  const maxHeaderSize = options.maxHeaderSize;\x0d\n  if (maxHeaderSize !== undefined)\x0d\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\x0d\n  this.maxHeaderSize = maxHeaderSize;\x0d\n\x0d\n  const insecureHTTPParser = options.insecureHTTPParser;\x0d\n  if (insecureHTTPParser !== undefined &&\x0d\n      typeof insecureHTTPParser !== 'boolean') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'options.insecureHTTPParser'\x2C 'boolean'\x2C insecureHTTPParser);\x0d\n  }\x0d\n  this.insecureHTTPParser = insecureHTTPParser;\x0d\n\x0d\n  this.path = options.path || '/';\x0d\n  if (cb) {\x0d\n    this.once('response'\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (method === 'GET' ||\x0d\n      method === 'HEAD' ||\x0d\n      method === 'DELETE' ||\x0d\n      method === 'OPTIONS' ||\x0d\n      method === 'TRACE' ||\x0d\n      method === 'CONNECT') {\x0d\n    this.useChunkedEncodingByDefault = false;\x0d\n  } else {\x0d\n    this.useChunkedEncodingByDefault = true;\x0d\n  }\x0d\n\x0d\n  this._ended = false;\x0d\n  this.res = null;\x0d\n  this.aborted = false;\x0d\n  this.timeoutCb = null;\x0d\n  this.upgradeOrConnect = false;\x0d\n  this.parser = null;\x0d\n  this.maxHeadersCount = null;\x0d\n  this.reusedSocket = false;\x0d\n  this.host = host;\x0d\n  this.protocol = protocol;\x0d\n\x0d\n  if (this.agent) {\x0d\n    // If there is an agent we should default to Connection:keep-alive\x2C\x0d\n    // but only if the Agent will actually reuse the connection!\x0d\n    // If it's not a keepAlive agent\x2C and the maxSockets==Infinity\x2C then\x0d\n    // there's never a case where this socket will actually be reused\x0d\n    if (!this.agent.keepAlive && !NumberIsFinite(this.agent.maxSockets)) {\x0d\n      this._last = true;\x0d\n      this.shouldKeepAlive = false;\x0d\n    } else {\x0d\n      this._last = false;\x0d\n      this.shouldKeepAlive = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const headersArray = ArrayIsArray(options.headers);\x0d\n  if (!headersArray) {\x0d\n    if (options.headers) {\x0d\n      const keys = ObjectKeys(options.headers);\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < keys.length; i++) {\x0d\n        const key = keys[i];\x0d\n        this.setHeader(key\x2C options.headers[key]);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (host && !this.getHeader('host') && setHost) {\x0d\n      let hostHeader = host;\x0d\n\x0d\n      // For the Host header\x2C ensure that IPv6 addresses are enclosed\x0d\n      // in square brackets\x2C as defined by URI formatting\x0d\n      // https://tools.ietf.org/html/rfc3986#section-3.2.2\x0d\n      const posColon = StringPrototypeIndexOf(hostHeader\x2C ':');\x0d\n      if (posColon !== -1 &&\x0d\n          StringPrototypeIncludes(hostHeader\x2C ':'\x2C posColon + 1) &&\x0d\n          StringPrototypeCharCodeAt(hostHeader\x2C 0) !== 91/* '[' */) {\x0d\n        hostHeader = `[${hostHeader}]`;\x0d\n      }\x0d\n\x0d\n      if (port && +port !== defaultPort) {\x0d\n        hostHeader += ':' + port;\x0d\n      }\x0d\n      this.setHeader('Host'\x2C hostHeader);\x0d\n    }\x0d\n\x0d\n    if (options.auth && !this.getHeader('Authorization')) {\x0d\n      this.setHeader('Authorization'\x2C 'Basic ' +\x0d\n                     Buffer.from(options.auth).toString('base64'));\x0d\n    }\x0d\n\x0d\n    if (this.getHeader('expect')) {\x0d\n      if (this._header) {\x0d\n        throw new ERR_HTTP_HEADERS_SENT('render');\x0d\n      }\x0d\n\x0d\n      this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\x0d\n                        this[kOutHeaders]);\x0d\n    }\x0d\n  } else {\x0d\n    this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\x0d\n                      options.headers);\x0d\n  }\x0d\n\x0d\n  let optsWithoutSignal = options;\x0d\n  if (optsWithoutSignal.signal) {\x0d\n    optsWithoutSignal = ObjectAssign({}\x2C options);\x0d\n    delete optsWithoutSignal.signal;\x0d\n  }\x0d\n\x0d\n  // initiate connection\x0d\n  if (this.agent) {\x0d\n    this.agent.addRequest(this\x2C optsWithoutSignal);\x0d\n  } else {\x0d\n    // No agent\x2C default to Connection:close.\x0d\n    this._last = true;\x0d\n    this.shouldKeepAlive = false;\x0d\n    if (typeof optsWithoutSignal.createConnection === 'function') {\x0d\n      const oncreate = once((err\x2C socket) => {\x0d\n        if (err) {\x0d\n          process.nextTick(() => this.emit('error'\x2C err));\x0d\n        } else {\x0d\n          this.onSocket(socket);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        const newSocket = optsWithoutSignal.createConnection(optsWithoutSignal\x2C\x0d\n                                                             oncreate);\x0d\n        if (newSocket) {\x0d\n          oncreate(null\x2C newSocket);\x0d\n        }\x0d\n      } catch (err) {\x0d\n        oncreate(err);\x0d\n      }\x0d\n    } else {\x0d\n      debug('CLIENT use net.createConnection'\x2C optsWithoutSignal);\x0d\n      this.onSocket(net.createConnection(optsWithoutSignal));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ClientRequest.prototype\x2C OutgoingMessage.prototype);\x0d\nObjectSetPrototypeOf(ClientRequest\x2C OutgoingMessage);\x0d\n\x0d\nClientRequest.prototype._finish = function _finish() {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST(this\x2C this.socket);\x0d\n  FunctionPrototypeCall(OutgoingMessage.prototype._finish\x2C this);\x0d\n};\x0d\n\x0d\nClientRequest.prototype._implicitHeader = function _implicitHeader() {\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('render');\x0d\n  }\x0d\n  this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\x0d\n                    this[kOutHeaders]);\x0d\n};\x0d\n\x0d\nClientRequest.prototype.abort = function abort() {\x0d\n  if (this.aborted) {\x0d\n    return;\x0d\n  }\x0d\n  this.aborted = true;\x0d\n  process.nextTick(emitAbortNT\x2C this);\x0d\n  this.destroy();\x0d\n};\x0d\n\x0d\nClientRequest.prototype.destroy = function destroy(err) {\x0d\n  if (this.destroyed) {\x0d\n    return this;\x0d\n  }\x0d\n  this.destroyed = true;\x0d\n\x0d\n  // If we're aborting\x2C we don't care about any more response data.\x0d\n  if (this.res) {\x0d\n    this.res._dump();\x0d\n  }\x0d\n\x0d\n  this[kError] = err;\x0d\n  this.socket?.destroy(err);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction emitAbortNT(req) {\x0d\n  req.emit('abort');\x0d\n}\x0d\n\x0d\nfunction ondrain() {\x0d\n  const msg = this._httpMessage;\x0d\n  if (msg && !msg.finished && msg[kNeedDrain]) {\x0d\n    msg[kNeedDrain] = false;\x0d\n    msg.emit('drain');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction socketCloseListener() {\x0d\n  const socket = this;\x0d\n  const req = socket._httpMessage;\x0d\n  debug('HTTP socket close');\x0d\n\x0d\n  // Pull through final chunk\x2C if anything is buffered.\x0d\n  // the ondata function will handle it properly\x2C and this\x0d\n  // is a no-op if no final chunk remains.\x0d\n  socket.read();\x0d\n\x0d\n  // NOTE: It's important to get parser here\x2C because it could be freed by\x0d\n  // the `socketOnData`.\x0d\n  const parser = socket.parser;\x0d\n  const res = req.res;\x0d\n\x0d\n  req.destroyed = true;\x0d\n  if (res) {\x0d\n    // Socket closed before we emitted 'end' below.\x0d\n    if (!res.complete) {\x0d\n      res.destroy(connResetException('aborted'));\x0d\n    }\x0d\n    req._closed = true;\x0d\n    req.emit('close');\x0d\n    if (!res.aborted && res.readable) {\x0d\n      res.push(null);\x0d\n    }\x0d\n  } else {\x0d\n    if (!req.socket._hadError) {\x0d\n      // This socket error fired before we started to\x0d\n      // receive a response. The error needs to\x0d\n      // fire on the request.\x0d\n      req.socket._hadError = true;\x0d\n      req.emit('error'\x2C connResetException('socket hang up'));\x0d\n    }\x0d\n    req._closed = true;\x0d\n    req.emit('close');\x0d\n  }\x0d\n\x0d\n  // Too bad.  That output wasn't getting written.\x0d\n  // This is pretty terrible that it doesn't raise an error.\x0d\n  // Fixed better in v0.10\x0d\n  if (req.outputData)\x0d\n    req.outputData.length = 0;\x0d\n\x0d\n  if (parser) {\x0d\n    parser.finish();\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction socketErrorListener(err) {\x0d\n  const socket = this;\x0d\n  const req = socket._httpMessage;\x0d\n  debug('SOCKET ERROR:'\x2C err.message\x2C err.stack);\x0d\n\x0d\n  if (req) {\x0d\n    // For Safety. Some additional errors might fire later on\x0d\n    // and we need to make sure we don't double-fire the error event.\x0d\n    req.socket._hadError = true;\x0d\n    req.emit('error'\x2C err);\x0d\n  }\x0d\n\x0d\n  const parser = socket.parser;\x0d\n  if (parser) {\x0d\n    parser.finish();\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n  }\x0d\n\x0d\n  // Ensure that no further data will come out of the socket\x0d\n  socket.removeListener('data'\x2C socketOnData);\x0d\n  socket.removeListener('end'\x2C socketOnEnd);\x0d\n  socket.destroy();\x0d\n}\x0d\n\x0d\nfunction socketOnEnd() {\x0d\n  const socket = this;\x0d\n  const req = this._httpMessage;\x0d\n  const parser = this.parser;\x0d\n\x0d\n  if (!req.res && !req.socket._hadError) {\x0d\n    // If we don't have a response then we know that the socket\x0d\n    // ended prematurely and we need to emit an error on the request.\x0d\n    req.socket._hadError = true;\x0d\n    req.emit('error'\x2C connResetException('socket hang up'));\x0d\n  }\x0d\n  if (parser) {\x0d\n    parser.finish();\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n  }\x0d\n  socket.destroy();\x0d\n}\x0d\n\x0d\nfunction socketOnData(d) {\x0d\n  const socket = this;\x0d\n  const req = this._httpMessage;\x0d\n  const parser = this.parser;\x0d\n\x0d\n  assert(parser && parser.socket === socket);\x0d\n\x0d\n  const ret = parser.execute(d);\x0d\n  if (ret instanceof Error) {\x0d\n    prepareError(ret\x2C parser\x2C d);\x0d\n    debug('parse error'\x2C ret);\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n    socket.removeListener('data'\x2C socketOnData);\x0d\n    socket.removeListener('end'\x2C socketOnEnd);\x0d\n    socket.destroy();\x0d\n    req.socket._hadError = true;\x0d\n    req.emit('error'\x2C ret);\x0d\n  } else if (parser.incoming && parser.incoming.upgrade) {\x0d\n    // Upgrade (if status code 101) or CONNECT\x0d\n    const bytesParsed = ret;\x0d\n    const res = parser.incoming;\x0d\n    req.res = res;\x0d\n\x0d\n    socket.removeListener('data'\x2C socketOnData);\x0d\n    socket.removeListener('end'\x2C socketOnEnd);\x0d\n    socket.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C req.timeoutCb);\x0d\n    socket.removeListener('timeout'\x2C responseOnTimeout);\x0d\n\x0d\n    parser.finish();\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n\x0d\n    const bodyHead = TypedArrayPrototypeSlice(d\x2C bytesParsed\x2C d.length);\x0d\n\x0d\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\x0d\n    if (req.listenerCount(eventName) > 0) {\x0d\n      req.upgradeOrConnect = true;\x0d\n\x0d\n      // detach the socket\x0d\n      socket.emit('agentRemove');\x0d\n      socket.removeListener('close'\x2C socketCloseListener);\x0d\n      socket.removeListener('error'\x2C socketErrorListener);\x0d\n\x0d\n      socket._httpMessage = null;\x0d\n      socket.readableFlowing = null;\x0d\n\x0d\n      req.emit(eventName\x2C res\x2C socket\x2C bodyHead);\x0d\n      req.destroyed = true;\x0d\n      req._closed = true;\x0d\n      req.emit('close');\x0d\n    } else {\x0d\n      // Requested Upgrade or used CONNECT method\x2C but have no handler.\x0d\n      socket.destroy();\x0d\n    }\x0d\n  } else if (parser.incoming && parser.incoming.complete &&\x0d\n             // When the status code is informational (100\x2C 102-199)\x2C\x0d\n             // the server will send a final response after this client\x0d\n             // sends a request body\x2C so we must not free the parser.\x0d\n             // 101 (Switching Protocols) and all other status codes\x0d\n             // should be processed normally.\x0d\n             !statusIsInformational(parser.incoming.statusCode)) {\x0d\n    socket.removeListener('data'\x2C socketOnData);\x0d\n    socket.removeListener('end'\x2C socketOnEnd);\x0d\n    socket.removeListener('drain'\x2C ondrain);\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction statusIsInformational(status) {\x0d\n  // 100 (Continue)    RFC7231 Section 6.2.1\x0d\n  // 102 (Processing)  RFC2518\x0d\n  // 103 (Early Hints) RFC8297\x0d\n  // 104-199 (Unassigned)\x0d\n  return (status < 200 && status >= 100 && status !== 101);\x0d\n}\x0d\n\x0d\n// client\x0d\nfunction parserOnIncomingClient(res\x2C shouldKeepAlive) {\x0d\n  const socket = this.socket;\x0d\n  const req = socket._httpMessage;\x0d\n\x0d\n  debug('AGENT incoming response!');\x0d\n\x0d\n  if (req.res) {\x0d\n    // We already have a response object\x2C this means the server\x0d\n    // sent a double response.\x0d\n    socket.destroy();\x0d\n    return 0;  // No special treatment.\x0d\n  }\x0d\n  req.res = res;\x0d\n\x0d\n  // Skip body and treat as Upgrade.\x0d\n  if (res.upgrade)\x0d\n    return 2;\x0d\n\x0d\n  // Responses to CONNECT request is handled as Upgrade.\x0d\n  const method = req.method;\x0d\n  if (method === 'CONNECT') {\x0d\n    res.upgrade = true;\x0d\n    return 2;  // Skip body and treat as Upgrade.\x0d\n  }\x0d\n\x0d\n  if (statusIsInformational(res.statusCode)) {\x0d\n    // Restart the parser\x2C as this is a 1xx informational message.\x0d\n    req.res = null; // Clear res so that we don't hit double-responses.\x0d\n    // Maintain compatibility by sending 100-specific events\x0d\n    if (res.statusCode === 100) {\x0d\n      req.emit('continue');\x0d\n    }\x0d\n    // Send information events to all 1xx responses except 101 Upgrade.\x0d\n    req.emit('information'\x2C {\x0d\n      statusCode: res.statusCode\x2C\x0d\n      statusMessage: res.statusMessage\x2C\x0d\n      httpVersion: res.httpVersion\x2C\x0d\n      httpVersionMajor: res.httpVersionMajor\x2C\x0d\n      httpVersionMinor: res.httpVersionMinor\x2C\x0d\n      headers: res.headers\x2C\x0d\n      rawHeaders: res.rawHeaders\x0d\n    });\x0d\n\x0d\n    return 1;  // Skip body but don't treat as Upgrade.\x0d\n  }\x0d\n\x0d\n  if (req.shouldKeepAlive && !shouldKeepAlive && !req.upgradeOrConnect) {\x0d\n    // Server MUST respond with Connection:keep-alive for us to enable it.\x0d\n    // If we've been upgraded (via WebSockets) we also shouldn't try to\x0d\n    // keep the connection open.\x0d\n    req.shouldKeepAlive = false;\x0d\n  }\x0d\n\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE(socket\x2C req);\x0d\n  req.res = res;\x0d\n  res.req = req;\x0d\n\x0d\n  // Add our listener first\x2C so that we guarantee socket cleanup\x0d\n  res.on('end'\x2C responseOnEnd);\x0d\n  req.on('prefinish'\x2C requestOnPrefinish);\x0d\n  socket.on('timeout'\x2C responseOnTimeout);\x0d\n\x0d\n  // If the user did not listen for the 'response' event\x2C then they\x0d\n  // can't possibly read the data\x2C so we ._dump() it into the void\x0d\n  // so that the socket doesn't hang there in a paused state.\x0d\n  if (req.aborted || !req.emit('response'\x2C res))\x0d\n    res._dump();\x0d\n\x0d\n  if (method === 'HEAD')\x0d\n    return 1;  // Skip body but don't treat as Upgrade.\x0d\n\x0d\n  if (res.statusCode === 304) {\x0d\n    res.complete = true;\x0d\n    return 1; // Skip body as there won't be any\x0d\n  }\x0d\n\x0d\n  return 0;  // No special treatment.\x0d\n}\x0d\n\x0d\n// client\x0d\nfunction responseKeepAlive(req) {\x0d\n  const socket = req.socket;\x0d\n\x0d\n  debug('AGENT socket keep-alive');\x0d\n  if (req.timeoutCb) {\x0d\n    socket.setTimeout(0\x2C req.timeoutCb);\x0d\n    req.timeoutCb = null;\x0d\n  }\x0d\n  socket.removeListener('close'\x2C socketCloseListener);\x0d\n  socket.removeListener('error'\x2C socketErrorListener);\x0d\n  socket.removeListener('data'\x2C socketOnData);\x0d\n  socket.removeListener('end'\x2C socketOnEnd);\x0d\n\x0d\n  // TODO(ronag): Between here and emitFreeNT the socket\x0d\n  // has no 'error' handler.\x0d\n\x0d\n  // There are cases where _handle === null. Avoid those. Passing undefined to\x0d\n  // nextTick() will call getDefaultTriggerAsyncId() to retrieve the id.\x0d\n  const asyncId = socket._handle ? socket._handle.getAsyncId() : undefined;\x0d\n  // Mark this socket as available\x2C AFTER user-added end\x0d\n  // handlers have a chance to run.\x0d\n  defaultTriggerAsyncIdScope(asyncId\x2C process.nextTick\x2C emitFreeNT\x2C req);\x0d\n\x0d\n  req.destroyed = true;\x0d\n  if (req.res) {\x0d\n    // Detach socket from IncomingMessage to avoid destroying the freed\x0d\n    // socket in IncomingMessage.destroy().\x0d\n    req.res.socket = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction responseOnEnd() {\x0d\n  const req = this.req;\x0d\n  const socket = req.socket;\x0d\n\x0d\n  if (socket) {\x0d\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C emitRequestTimeout);\x0d\n    socket.removeListener('timeout'\x2C responseOnTimeout);\x0d\n  }\x0d\n\x0d\n  req._ended = true;\x0d\n\x0d\n  if (!req.shouldKeepAlive) {\x0d\n    if (socket.writable) {\x0d\n      debug('AGENT socket.destroySoon()');\x0d\n      if (typeof socket.destroySoon === 'function')\x0d\n        socket.destroySoon();\x0d\n      else\x0d\n        socket.end();\x0d\n    }\x0d\n    assert(!socket.writable);\x0d\n  } else if (req.finished && !this.aborted) {\x0d\n    // We can assume `req.finished` means all data has been written since:\x0d\n    // - `'responseOnEnd'` means we have been assigned a socket.\x0d\n    // - when we have a socket we write directly to it without buffering.\x0d\n    // - `req.finished` means `end()` has been called and no further data.\x0d\n    //   can be written\x0d\n    responseKeepAlive(req);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction responseOnTimeout() {\x0d\n  const req = this._httpMessage;\x0d\n  if (!req) return;\x0d\n  const res = req.res;\x0d\n  if (!res) return;\x0d\n  res.emit('timeout');\x0d\n}\x0d\n\x0d\nfunction requestOnPrefinish() {\x0d\n  const req = this;\x0d\n\x0d\n  if (req.shouldKeepAlive && req._ended)\x0d\n    responseKeepAlive(req);\x0d\n}\x0d\n\x0d\nfunction emitFreeNT(req) {\x0d\n  req._closed = true;\x0d\n  req.emit('close');\x0d\n  if (req.socket) {\x0d\n    req.socket.emit('free');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction tickOnSocket(req\x2C socket) {\x0d\n  const parser = parsers.alloc();\x0d\n  req.socket = socket;\x0d\n  const lenient = req.insecureHTTPParser === undefined ?\x0d\n    isLenient() : req.insecureHTTPParser;\x0d\n  parser.initialize(HTTPParser.RESPONSE\x2C\x0d\n                    new HTTPClientAsyncResource('HTTPINCOMINGMESSAGE'\x2C req)\x2C\x0d\n                    req.maxHeaderSize || 0\x2C\x0d\n                    lenient ? kLenientAll : kLenientNone\x2C\x0d\n                    0);\x0d\n  parser.socket = socket;\x0d\n  parser.outgoing = req;\x0d\n  req.parser = parser;\x0d\n\x0d\n  socket.parser = parser;\x0d\n  socket._httpMessage = req;\x0d\n\x0d\n  // Propagate headers limit from request object to parser\x0d\n  if (typeof req.maxHeadersCount === 'number') {\x0d\n    parser.maxHeaderPairs = req.maxHeadersCount << 1;\x0d\n  }\x0d\n\x0d\n  parser.onIncoming = parserOnIncomingClient;\x0d\n  socket.on('error'\x2C socketErrorListener);\x0d\n  socket.on('data'\x2C socketOnData);\x0d\n  socket.on('end'\x2C socketOnEnd);\x0d\n  socket.on('close'\x2C socketCloseListener);\x0d\n  socket.on('drain'\x2C ondrain);\x0d\n\x0d\n  if (\x0d\n    req.timeout !== undefined ||\x0d\n    (req.agent && req.agent.options && req.agent.options.timeout)\x0d\n  ) {\x0d\n    listenSocketTimeout(req);\x0d\n  }\x0d\n  req.emit('socket'\x2C socket);\x0d\n}\x0d\n\x0d\nfunction emitRequestTimeout() {\x0d\n  const req = this._httpMessage;\x0d\n  if (req) {\x0d\n    req.emit('timeout');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction listenSocketTimeout(req) {\x0d\n  if (req.timeoutCb) {\x0d\n    return;\x0d\n  }\x0d\n  // Set timeoutCb so it will get cleaned up on request end.\x0d\n  req.timeoutCb = emitRequestTimeout;\x0d\n  // Delegate socket timeout event.\x0d\n  if (req.socket) {\x0d\n    req.socket.once('timeout'\x2C emitRequestTimeout);\x0d\n  } else {\x0d\n    req.on('socket'\x2C (socket) => {\x0d\n      socket.once('timeout'\x2C emitRequestTimeout);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nClientRequest.prototype.onSocket = function onSocket(socket\x2C err) {\x0d\n  // TODO(ronag): Between here and onSocketNT the socket\x0d\n  // has no 'error' handler.\x0d\n  process.nextTick(onSocketNT\x2C this\x2C socket\x2C err);\x0d\n};\x0d\n\x0d\nfunction onSocketNT(req\x2C socket\x2C err) {\x0d\n  if (req.destroyed || err) {\x0d\n    req.destroyed = true;\x0d\n\x0d\n    function _destroy(req\x2C err) {\x0d\n      if (!req.aborted && !err) {\x0d\n        err = connResetException('socket hang up');\x0d\n      }\x0d\n      if (err) {\x0d\n        req.emit('error'\x2C err);\x0d\n      }\x0d\n      req._closed = true;\x0d\n      req.emit('close');\x0d\n    }\x0d\n\x0d\n    if (socket) {\x0d\n      if (!err && req.agent && !socket.destroyed) {\x0d\n        socket.emit('free');\x0d\n      } else {\x0d\n        finished(socket.destroy(err || req[kError])\x2C (er) => {\x0d\n          _destroy(req\x2C er || err);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    _destroy(req\x2C err || req[kError]);\x0d\n  } else {\x0d\n    tickOnSocket(req\x2C socket);\x0d\n    req._flush();\x0d\n  }\x0d\n}\x0d\n\x0d\nClientRequest.prototype._deferToConnect = _deferToConnect;\x0d\nfunction _deferToConnect(method\x2C arguments_) {\x0d\n  // This function is for calls that need to happen once the socket is\x0d\n  // assigned to this request and writable. It's an important promisy\x0d\n  // thing for all the socket calls that happen either now\x0d\n  // (when a socket is assigned) or in the future (when a socket gets\x0d\n  // assigned out of the pool and is eventually writable).\x0d\n\x0d\n  const callSocketMethod = () => {\x0d\n    if (method)\x0d\n      ReflectApply(this.socket[method]\x2C this.socket\x2C arguments_);\x0d\n  };\x0d\n\x0d\n  const onSocket = () => {\x0d\n    if (this.socket.writable) {\x0d\n      callSocketMethod();\x0d\n    } else {\x0d\n      this.socket.once('connect'\x2C callSocketMethod);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  if (!this.socket) {\x0d\n    this.once('socket'\x2C onSocket);\x0d\n  } else {\x0d\n    onSocket();\x0d\n  }\x0d\n}\x0d\n\x0d\nClientRequest.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\x0d\n  if (this._ended) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  listenSocketTimeout(this);\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n  if (callback) this.once('timeout'\x2C callback);\x0d\n\x0d\n  if (this.socket) {\x0d\n    setSocketTimeout(this.socket\x2C msecs);\x0d\n  } else {\x0d\n    this.once('socket'\x2C (sock) => setSocketTimeout(sock\x2C msecs));\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction setSocketTimeout(sock\x2C msecs) {\x0d\n  if (sock.connecting) {\x0d\n    sock.once('connect'\x2C function() {\x0d\n      sock.setTimeout(msecs);\x0d\n    });\x0d\n  } else {\x0d\n    sock.setTimeout(msecs);\x0d\n  }\x0d\n}\x0d\n\x0d\nClientRequest.prototype.setNoDelay = function setNoDelay(noDelay) {\x0d\n  this._deferToConnect('setNoDelay'\x2C [noDelay]);\x0d\n};\x0d\n\x0d\nClientRequest.prototype.setSocketKeepAlive =\x0d\n    function setSocketKeepAlive(enable\x2C initialDelay) {\x0d\n      this._deferToConnect('setKeepAlive'\x2C [enable\x2C initialDelay]);\x0d\n    };\x0d\n\x0d\nClientRequest.prototype.clearTimeout = function clearTimeout(cb) {\x0d\n  this.setTimeout(0\x2C cb);\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  ClientRequest\x0d\n};\x0d\n
code-source-info,0x2bdba130fc6,167,0,26969,C0O0C4O26969,,
code-creation,Function,10,259095,0x2bdba131f86,940, node:_http_client:1:1,0x2bdba130f40,~
code-source-info,0x2bdba131f
code-creation,Eval,10,259482,0x2bdba134efe,5, node:_http_common:1:1,0x2bdba134bc8,~
script-source,168,node:_http_common,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  MathMin\x2C\x0d\n  Symbol\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n} = primordials;\x0d\nconst { setImmediate } = require('timers');\x0d\n\x0d\nconst { methods\x2C HTTPParser } = internalBinding('http_parser');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst insecureHTTPParser = getOptionValue('--insecure-http-parser');\x0d\n\x0d\nconst FreeList = require('internal/freelist');\x0d\nconst incoming = require('_http_incoming');\x0d\nconst {\x0d\n  IncomingMessage\x2C\x0d\n  readStart\x2C\x0d\n  readStop\x0d\n} = incoming;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst kIncomingMessage = Symbol('IncomingMessage');\x0d\nconst kRequestTimeout = Symbol('RequestTimeout');\x0d\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\x0d\nconst kOnHeaders = HTTPParser.kOnHeaders | 0;\x0d\nconst kOnHeadersComplete = HTTPParser.kOnHeadersComplete | 0;\x0d\nconst kOnBody = HTTPParser.kOnBody | 0;\x0d\nconst kOnMessageComplete = HTTPParser.kOnMessageComplete | 0;\x0d\nconst kOnExecute = HTTPParser.kOnExecute | 0;\x0d\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\x0d\n\x0d\nconst MAX_HEADER_PAIRS = 2000;\x0d\n\x0d\n// Only called in the slow case where slow means\x0d\n// that the request headers were either fragmented\x0d\n// across multiple TCP packets or too large to be\x0d\n// processed in a single run. This method is also\x0d\n// called to process trailing HTTP headers.\x0d\nfunction parserOnHeaders(headers\x2C url) {\x0d\n  // Once we exceeded headers limit - stop collecting them\x0d\n  if (this.maxHeaderPairs <= 0 ||\x0d\n      this._headers.length < this.maxHeaderPairs) {\x0d\n    this._headers.push(...headers);\x0d\n  }\x0d\n  this._url += url;\x0d\n}\x0d\n\x0d\n// `headers` and `url` are set only if .onHeaders() has not been called for\x0d\n// this request.\x0d\n// `url` is not set for response parsers but that's not applicable here since\x0d\n// all our parsers are request parsers.\x0d\nfunction parserOnHeadersComplete(versionMajor\x2C versionMinor\x2C headers\x2C method\x2C\x0d\n                                 url\x2C statusCode\x2C statusMessage\x2C upgrade\x2C\x0d\n                                 shouldKeepAlive) {\x0d\n  const parser = this;\x0d\n  const { socket } = parser;\x0d\n\x0d\n  if (headers === undefined) {\x0d\n    headers = parser._headers;\x0d\n    parser._headers = [];\x0d\n  }\x0d\n\x0d\n  if (url === undefined) {\x0d\n    url = parser._url;\x0d\n    parser._url = '';\x0d\n  }\x0d\n\x0d\n  // Parser is also used by http client\x0d\n  const ParserIncomingMessage = (socket && socket.server &&\x0d\n                                 socket.server[kIncomingMessage]) ||\x0d\n                                 IncomingMessage;\x0d\n\x0d\n  const incoming = parser.incoming = new ParserIncomingMessage(socket);\x0d\n  incoming.httpVersionMajor = versionMajor;\x0d\n  incoming.httpVersionMinor = versionMinor;\x0d\n  incoming.httpVersion = `${versionMajor}.${versionMinor}`;\x0d\n  incoming.url = url;\x0d\n  incoming.upgrade = upgrade;\x0d\n\x0d\n  if (socket) {\x0d\n    debug('requestTimeout timer moved to req');\x0d\n    incoming[kRequestTimeout] = incoming.socket[kRequestTimeout];\x0d\n    incoming.socket[kRequestTimeout] = undefined;\x0d\n  }\x0d\n\x0d\n  let n = headers.length;\x0d\n\x0d\n  // If parser.maxHeaderPairs <= 0 assume that there's no limit.\x0d\n  if (parser.maxHeaderPairs > 0)\x0d\n    n = MathMin(n\x2C parser.maxHeaderPairs);\x0d\n\x0d\n  incoming._addHeaderLines(headers\x2C n);\x0d\n\x0d\n  if (typeof method === 'number') {\x0d\n    // server only\x0d\n    incoming.method = methods[method];\x0d\n  } else {\x0d\n    // client only\x0d\n    incoming.statusCode = statusCode;\x0d\n    incoming.statusMessage = statusMessage;\x0d\n  }\x0d\n\x0d\n  return parser.onIncoming(incoming\x2C shouldKeepAlive);\x0d\n}\x0d\n\x0d\nfunction parserOnBody(b\x2C start\x2C len) {\x0d\n  const stream = this.incoming;\x0d\n\x0d\n  // If the stream has already been removed\x2C then drop it.\x0d\n  if (stream === null)\x0d\n    return;\x0d\n\x0d\n  // Pretend this was the result of a stream._read call.\x0d\n  if (len > 0 && !stream._dumped) {\x0d\n    const slice = b.slice(start\x2C start + len);\x0d\n    const ret = stream.push(slice);\x0d\n    if (!ret)\x0d\n      readStop(this.socket);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction parserOnMessageComplete() {\x0d\n  const parser = this;\x0d\n  const stream = parser.incoming;\x0d\n\x0d\n  if (stream !== null) {\x0d\n    stream.complete = true;\x0d\n    // Emit any trailing headers.\x0d\n    const headers = parser._headers;\x0d\n    if (headers.length) {\x0d\n      stream._addHeaderLines(headers\x2C headers.length);\x0d\n      parser._headers = [];\x0d\n      parser._url = '';\x0d\n    }\x0d\n\x0d\n    // For emit end event\x0d\n    stream.push(null);\x0d\n  }\x0d\n\x0d\n  // Force to read the next incoming message\x0d\n  readStart(parser.socket);\x0d\n}\x0d\n\x0d\n\x0d\nconst parsers = new FreeList('parsers'\x2C 1000\x2C function parsersCb() {\x0d\n  const parser = new HTTPParser();\x0d\n\x0d\n  cleanParser(parser);\x0d\n\x0d\n  parser[kOnHeaders] = parserOnHeaders;\x0d\n  parser[kOnHeadersComplete] = parserOnHeadersComplete;\x0d\n  parser[kOnBody] = parserOnBody;\x0d\n  parser[kOnMessageComplete] = parserOnMessageComplete;\x0d\n\x0d\n  return parser;\x0d\n});\x0d\n\x0d\nfunction closeParserInstance(parser) { parser.close(); }\x0d\n\x0d\n// Free the parser and also break any links that it\x0d\n// might have to any other things.\x0d\n// TODO: All parser data should be attached to a\x0d\n// single object\x2C so that it can be easily cleaned\x0d\n// up by doing `parser.data = {}`\x2C which should\x0d\n// be done in FreeList.free.  `parsers.free(parser)`\x0d\n// should be all that is needed.\x0d\nfunction freeParser(parser\x2C req\x2C socket) {\x0d\n  if (parser) {\x0d\n    if (parser._consumed)\x0d\n      parser.unconsume();\x0d\n    cleanParser(parser);\x0d\n    if (parsers.free(parser) === false) {\x0d\n      // Make sure the parser's stack has unwound before deleting the\x0d\n      // corresponding C++ object through .close().\x0d\n      setImmediate(closeParserInstance\x2C parser);\x0d\n    } else {\x0d\n      // Since the Parser destructor isn't going to run the destroy() callbacks\x0d\n      // it needs to be triggered manually.\x0d\n      parser.free();\x0d\n    }\x0d\n  }\x0d\n  if (req) {\x0d\n    req.parser = null;\x0d\n  }\x0d\n  if (socket) {\x0d\n    socket.parser = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$/;\x0d\n/**\x0d\n * Verifies that the given val is a valid HTTP token\x0d\n * per the rules defined in RFC 7230\x0d\n * See https://tools.ietf.org/html/rfc7230#section-3.2.6\x0d\n */\x0d\nfunction checkIsHttpToken(val) {\x0d\n  return RegExpPrototypeTest(tokenRegExp\x2C val);\x0d\n}\x0d\n\x0d\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\x0d\n/**\x0d\n * True if val contains an invalid field-vchar\x0d\n *  field-value    = *( field-content / obs-fold )\x0d\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\x0d\n *  field-vchar    = VCHAR / obs-text\x0d\n */\x0d\nfunction checkInvalidHeaderChar(val) {\x0d\n  return RegExpPrototypeTest(headerCharRegex\x2C val);\x0d\n}\x0d\n\x0d\nfunction cleanParser(parser) {\x0d\n  parser._headers = [];\x0d\n  parser._url = '';\x0d\n  parser.socket = null;\x0d\n  parser.incoming = null;\x0d\n  parser.outgoing = null;\x0d\n  parser.maxHeaderPairs = MAX_HEADER_PAIRS;\x0d\n  parser[kOnMessageBegin] = null;\x0d\n  parser[kOnExecute] = null;\x0d\n  parser[kOnTimeout] = null;\x0d\n  parser._consumed = false;\x0d\n  parser.onIncoming = null;\x0d\n}\x0d\n\x0d\nfunction prepareError(err\x2C parser\x2C rawPacket) {\x0d\n  err.rawPacket = rawPacket || parser.getCurrentBuffer();\x0d\n  if (typeof err.reason === 'string')\x0d\n    err.message = `Parse Error: ${err.reason}`;\x0d\n}\x0d\n\x0d\nlet warnedLenient = false;\x0d\n\x0d\nfunction isLenient() {\x0d\n  if (insecureHTTPParser && !warnedLenient) {\x0d\n    warnedLenient = true;\x0d\n    process.emitWarning('Using insecure HTTP parsing');\x0d\n  }\x0d\n  return insecureHTTPParser;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\x0d\n  _checkIsHttpToken: checkIsHttpToken\x2C\x0d\n  chunkExpression: /(?:^|\\W)chunked(?:$|\\W)/i\x2C\x0d\n  continueExpression: /(?:^|\\W)100-continue(?:$|\\W)/i\x2C\x0d\n  CRLF: '\\r\\n'\x2C // TODO: Deprecate this.\x0d\n  freeParser\x2C\x0d\n  methods\x2C\x0d\n  parsers\x2C\x0d\n  kIncomingMessage\x2C\x0d\n  kRequestTimeout\x2C\x0d\n  HTTPParser\x2C\x0d\n  isLenient\x2C\x0d\n  prepareError\x2C\x0d\n};\x0d\n
code-source-info,0x2bdba134efe,168,0,8746,C0O0C4O8746,,
code-creation,Function,10,259870,0x2bdba135636,512, node:_http_common:1:1,0x2bdba134e78,~
code-source-info,0x2bdba
code-creation,Eval,10,260113,0x2bdba137386,5, node:internal/freelist:1:1,0x2bdba137230,~
script-source,169,node:internal/freelist,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nclass FreeList {\x0d\n  constructor(name\x2C max\x2C ctor) {\x0d\n    this.name = name;\x0d\n    this.ctor = ctor;\x0d\n    this.max = max;\x0d\n    this.list = [];\x0d\n  }\x0d\n\x0d\n  alloc() {\x0d\n    return this.list.length > 0 ?\x0d\n      this.list.pop() :\x0d\n      ReflectApply(this.ctor\x2C this\x2C arguments);\x0d\n  }\x0d\n\x0d\n  free(obj) {\x0d\n    if (this.list.length < this.max) {\x0d\n      this.list.push(obj);\x0d\n      return true;\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = FreeList;\x0d\n
code-source-info,0x2bdba137386,169,0,506,C0O0C4O506,,
code-creation,Function,10,260166,0x2bdba13768e,54, node:internal/freelist:1:1,0x2bdba137300,~
code-source-info,0x2bdba13768e,169,0,506,C0O0C8O28C46O478C48O493C53O505,,
code-creation,Eval,10,260433,0x2bdba137d96,5, node:_http_incoming:1:1,0x2bdba137b90,~
script-source,170,node:_http_incoming,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst { Readable\x2C finished } = require('stream');\x0d\n\x0d\nconst kHeaders = Symbol('kHeaders');\x0d\nconst kHeadersCount = Symbol('kHeadersCount');\x0d\nconst kTrailers = Symbol('kTrailers');\x0d\nconst kTrailersCount = Symbol('kTrailersCount');\x0d\n\x0d\nfunction readStart(socket) {\x0d\n  if (socket && !socket._paused && socket.readable)\x0d\n    socket.resume();\x0d\n}\x0d\n\x0d\nfunction readStop(socket) {\x0d\n  if (socket)\x0d\n    socket.pause();\x0d\n}\x0d\n\x0d\n/* Abstract base class for ServerRequest and ClientResponse. */\x0d\nfunction IncomingMessage(socket) {\x0d\n  let streamOptions;\x0d\n\x0d\n  if (socket) {\x0d\n    streamOptions = {\x0d\n      highWaterMark: socket.readableHighWaterMark\x0d\n    };\x0d\n  }\x0d\n\x0d\n  Readable.call(this\x2C streamOptions);\x0d\n\x0d\n  this._readableState.readingMore = true;\x0d\n\x0d\n  this.socket = socket;\x0d\n\x0d\n  this.httpVersionMajor = null;\x0d\n  this.httpVersionMinor = null;\x0d\n  this.httpVersion = null;\x0d\n  this.complete = false;\x0d\n  this[kHeaders] = null;\x0d\n  this[kHeadersCount] = 0;\x0d\n  this.rawHeaders = [];\x0d\n  this[kTrailers] = null;\x0d\n  this[kTrailersCount] = 0;\x0d\n  this.rawTrailers = [];\x0d\n\x0d\n  this.aborted = false;\x0d\n\x0d\n  this.upgrade = null;\x0d\n\x0d\n  // request (server) only\x0d\n  this.url = '';\x0d\n  this.method = null;\x0d\n\x0d\n  // response (client) only\x0d\n  this.statusCode = null;\x0d\n  this.statusMessage = null;\x0d\n  this.client = socket;\x0d\n\x0d\n  this._consuming = false;\x0d\n  // Flag for when we decide that this message cannot possibly be\x0d\n  // read by the user\x2C so there's no point continuing to handle it.\x0d\n  this._dumped = false;\x0d\n}\x0d\nObjectSetPrototypeOf(IncomingMessage.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(IncomingMessage\x2C Readable);\x0d\n\x0d\nObjectDefineProperty(IncomingMessage.prototype\x2C 'connection'\x2C {\x0d\n  get: function() {\x0d\n    return this.socket;\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    this.socket = val;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(IncomingMessage.prototype\x2C 'headers'\x2C {\x0d\n  get: function() {\x0d\n    if (!this[kHeaders]) {\x0d\n      this[kHeaders] = {};\x0d\n\x0d\n      const src = this.rawHeaders;\x0d\n      const dst = this[kHeaders];\x0d\n\x0d\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\x0d\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\x0d\n      }\x0d\n    }\x0d\n    return this[kHeaders];\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    this[kHeaders] = val;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(IncomingMessage.prototype\x2C 'trailers'\x2C {\x0d\n  get: function() {\x0d\n    if (!this[kTrailers]) {\x0d\n      this[kTrailers] = {};\x0d\n\x0d\n      const src = this.rawTrailers;\x0d\n      const dst = this[kTrailers];\x0d\n\x0d\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\x0d\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\x0d\n      }\x0d\n    }\x0d\n    return this[kTrailers];\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    this[kTrailers] = val;\x0d\n  }\x0d\n});\x0d\n\x0d\nIncomingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\x0d\n  if (callback)\x0d\n    this.on('timeout'\x2C callback);\x0d\n  this.socket.setTimeout(msecs);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Argument n cannot be factored out due to the overhead of\x0d\n// argument adaptor frame creation inside V8 in case that number of actual\x0d\n// arguments is different from expected arguments.\x0d\n// Ref: https://bugs.chromium.org/p/v8/issues/detail?id=10201\x0d\n// NOTE: Argument adapt frame issue might be solved in V8 engine v8.9.\x0d\n// Refactoring `n` out might be possible when V8 is upgraded to that\x0d\n// version.\x0d\n// Ref: https://v8.dev/blog/v8-release-89\x0d\nIncomingMessage.prototype._read = function _read(n) {\x0d\n  if (!this._consuming) {\x0d\n    this._readableState.readingMore = false;\x0d\n    this._consuming = true;\x0d\n  }\x0d\n\x0d\n  // We actually do almost nothing here\x2C because the parserOnBody\x0d\n  // function fills up our internal buffer directly.  However\x2C we\x0d\n  // do need to unpause the underlying socket so that it flows.\x0d\n  if (this.socket.readable)\x0d\n    readStart(this.socket);\x0d\n};\x0d\n\x0d\n// It's possible that the socket will be destroyed\x2C and removed from\x0d\n// any messages\x2C before ever calling this.  In that case\x2C just skip\x0d\n// it\x2C since something else is destroying this connection anyway.\x0d\nIncomingMessage.prototype._destroy = function _destroy(err\x2C cb) {\x0d\n  if (!this.readableEnded || !this.complete) {\x0d\n    this.aborted = true;\x0d\n    this.emit('aborted');\x0d\n  }\x0d\n\x0d\n  // If aborted and the underlying socket is not already destroyed\x2C\x0d\n  // destroy it.\x0d\n  // We have to check if the socket is already destroyed because finished\x0d\n  // does not call the callback when this methdod is invoked from `_http_client`\x0d\n  // in `test/parallel/test-http-client-spurious-aborted.js`\x0d\n  if (this.socket && !this.socket.destroyed && this.aborted) {\x0d\n    this.socket.destroy(err);\x0d\n    const cleanup = finished(this.socket\x2C (e) => {\x0d\n      cleanup();\x0d\n      onError(this\x2C e || err\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    onError(this\x2C err\x2C cb);\x0d\n  }\x0d\n};\x0d\n\x0d\nIncomingMessage.prototype._addHeaderLines = _addHeaderLines;\x0d\nfunction _addHeaderLines(headers\x2C n) {\x0d\n  if (headers && headers.length) {\x0d\n    let dest;\x0d\n    if (this.complete) {\x0d\n      this.rawTrailers = headers;\x0d\n      this[kTrailersCount] = n;\x0d\n      dest = this[kTrailers];\x0d\n    } else {\x0d\n      this.rawHeaders = headers;\x0d\n      this[kHeadersCount] = n;\x0d\n      dest = this[kHeaders];\x0d\n    }\x0d\n\x0d\n    if (dest) {\x0d\n      for (let i = 0; i < n; i += 2) {\x0d\n        this._addHeaderLine(headers[i]\x2C headers[i + 1]\x2C dest);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This function is used to help avoid the lowercasing of a field name if it\x0d\n// matches a 'traditional cased' version of a field name. It then returns the\x0d\n// lowercased name to both avoid calling toLowerCase() a second time and to\x0d\n// indicate whether the field was a 'no duplicates' field. If a field is not a\x0d\n// 'no duplicates' field\x2C a `0` byte is prepended as a flag. The one exception\x0d\n// to this is the Set-Cookie header which is indicated by a `1` byte flag\x2C since\x0d\n// it is an 'array' field and thus is treated differently in _addHeaderLines().\x0d\n// TODO: perhaps http_parser could be returning both raw and lowercased versions\x0d\n// of known header names to avoid us having to call toLowerCase() for those\x0d\n// headers.\x0d\nfunction matchKnownFields(field\x2C lowercased) {\x0d\n  switch (field.length) {\x0d\n    case 3:\x0d\n      if (field === 'Age' || field === 'age') return 'age';\x0d\n      break;\x0d\n    case 4:\x0d\n      if (field === 'Host' || field === 'host') return 'host';\x0d\n      if (field === 'From' || field === 'from') return 'from';\x0d\n      if (field === 'ETag' || field === 'etag') return 'etag';\x0d\n      if (field === 'Date' || field === 'date') return '\\u0000date';\x0d\n      if (field === 'Vary' || field === 'vary') return '\\u0000vary';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (field === 'Server' || field === 'server') return 'server';\x0d\n      if (field === 'Cookie' || field === 'cookie') return '\\u0002cookie';\x0d\n      if (field === 'Origin' || field === 'origin') return '\\u0000origin';\x0d\n      if (field === 'Expect' || field === 'expect') return '\\u0000expect';\x0d\n      if (field === 'Accept' || field === 'accept') return '\\u0000accept';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (field === 'Referer' || field === 'referer') return 'referer';\x0d\n      if (field === 'Expires' || field === 'expires') return 'expires';\x0d\n      if (field === 'Upgrade' || field === 'upgrade') return '\\u0000upgrade';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (field === 'Location' || field === 'location')\x0d\n        return 'location';\x0d\n      if (field === 'If-Match' || field === 'if-match')\x0d\n        return '\\u0000if-match';\x0d\n      break;\x0d\n    case 10:\x0d\n      if (field === 'User-Agent' || field === 'user-agent')\x0d\n        return 'user-agent';\x0d\n      if (field === 'Set-Cookie' || field === 'set-cookie')\x0d\n        return '\\u0001';\x0d\n      if (field === 'Connection' || field === 'connection')\x0d\n        return '\\u0000connection';\x0d\n      break;\x0d\n    case 11:\x0d\n      if (field === 'Retry-After' || field === 'retry-after')\x0d\n        return 'retry-after';\x0d\n      break;\x0d\n    case 12:\x0d\n      if (field === 'Content-Type' || field === 'content-type')\x0d\n        return 'content-type';\x0d\n      if (field === 'Max-Forwards' || field === 'max-forwards')\x0d\n        return 'max-forwards';\x0d\n      break;\x0d\n    case 13:\x0d\n      if (field === 'Authorization' || field === 'authorization')\x0d\n        return 'authorization';\x0d\n      if (field === 'Last-Modified' || field === 'last-modified')\x0d\n        return 'last-modified';\x0d\n      if (field === 'Cache-Control' || field === 'cache-control')\x0d\n        return '\\u0000cache-control';\x0d\n      if (field === 'If-None-Match' || field === 'if-none-match')\x0d\n        return '\\u0000if-none-match';\x0d\n      break;\x0d\n    case 14:\x0d\n      if (field === 'Content-Length' || field === 'content-length')\x0d\n        return 'content-length';\x0d\n      break;\x0d\n    case 15:\x0d\n      if (field === 'Accept-Encoding' || field === 'accept-encoding')\x0d\n        return '\\u0000accept-encoding';\x0d\n      if (field === 'Accept-Language' || field === 'accept-language')\x0d\n        return '\\u0000accept-language';\x0d\n      if (field === 'X-Forwarded-For' || field === 'x-forwarded-for')\x0d\n        return '\\u0000x-forwarded-for';\x0d\n      break;\x0d\n    case 16:\x0d\n      if (field === 'Content-Encoding' || field === 'content-encoding')\x0d\n        return '\\u0000content-encoding';\x0d\n      if (field === 'X-Forwarded-Host' || field === 'x-forwarded-host')\x0d\n        return '\\u0000x-forwarded-host';\x0d\n      break;\x0d\n    case 17:\x0d\n      if (field === 'If-Modified-Since' || field === 'if-modified-since')\x0d\n        return 'if-modified-since';\x0d\n      if (field === 'Transfer-Encoding' || field === 'transfer-encoding')\x0d\n        return '\\u0000transfer-encoding';\x0d\n      if (field === 'X-Forwarded-Proto' || field === 'x-forwarded-proto')\x0d\n        return '\\u0000x-forwarded-proto';\x0d\n      break;\x0d\n    case 19:\x0d\n      if (field === 'Proxy-Authorization' || field === 'proxy-authorization')\x0d\n        return 'proxy-authorization';\x0d\n      if (field === 'If-Unmodified-Since' || field === 'if-unmodified-since')\x0d\n        return 'if-unmodified-since';\x0d\n      break;\x0d\n  }\x0d\n  if (lowercased) {\x0d\n    return '\\u0000' + field;\x0d\n  }\x0d\n  return matchKnownFields(StringPrototypeToLowerCase(field)\x2C true);\x0d\n}\x0d\n// Add the given (field\x2C value) pair to the message\x0d\n//\x0d\n// Per RFC2616\x2C section 4.2 it is acceptable to join multiple instances of the\x0d\n// same header with a '\x2C ' if the header in question supports specification of\x0d\n// multiple values this way. The one exception to this is the Cookie header\x2C\x0d\n// which has multiple values joined with a '; ' instead. If a header's values\x0d\n// cannot be joined in either of these ways\x2C we declare the first instance the\x0d\n// winner and drop the second. Extended header fields (those beginning with\x0d\n// 'x-') are always joined.\x0d\nIncomingMessage.prototype._addHeaderLine = _addHeaderLine;\x0d\nfunction _addHeaderLine(field\x2C value\x2C dest) {\x0d\n  field = matchKnownFields(field);\x0d\n  const flag = StringPrototypeCharCodeAt(field\x2C 0);\x0d\n  if (flag === 0 || flag === 2) {\x0d\n    field = StringPrototypeSlice(field\x2C 1);\x0d\n    // Make a delimited list\x0d\n    if (typeof dest[field] === 'string') {\x0d\n      dest[field] += (flag === 0 ? '\x2C ' : '; ') + value;\x0d\n    } else {\x0d\n      dest[field] = value;\x0d\n    }\x0d\n  } else if (flag === 1) {\x0d\n    // Array header -- only Set-Cookie at the moment\x0d\n    if (dest['set-cookie'] !== undefined) {\x0d\n      dest['set-cookie'].push(value);\x0d\n    } else {\x0d\n      dest['set-cookie'] = [value];\x0d\n    }\x0d\n  } else if (dest[field] === undefined) {\x0d\n    // Drop duplicates\x0d\n    dest[field] = value;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// Call this instead of resume() if we want to just\x0d\n// dump all the data to /dev/null\x0d\nIncomingMessage.prototype._dump = function _dump() {\x0d\n  if (!this._dumped) {\x0d\n    this._dumped = true;\x0d\n    // If there is buffered data\x2C it may trigger 'data' events.\x0d\n    // Remove 'data' event listeners explicitly.\x0d\n    this.removeAllListeners('data');\x0d\n    this.resume();\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction onError(self\x2C error\x2C cb) {\x0d\n  // This is to keep backward compatible behavior.\x0d\n  // An error is emitted only if there are listeners attached to the event.\x0d\n  if (self.listenerCount('error') === 0) {\x0d\n    cb();\x0d\n  } else {\x0d\n    cb(error);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  IncomingMessage\x2C\x0d\n  readStart\x2C\x0d\n  readStop\x0d\n};\x0d\n
code-source-info,0x2bdba137d96,170,0,13339,C0O0C4O13339,,
code-creation,Function,10,260995,0x2bdba138736,392, node:_http_incoming:1:1,0x2bdba137d10,~
code-source-info,0x2bdba
code-creation,LazyCompile,10,261152,0x2bdba139dae,26,FreeList node:internal/freelist:8:14,0x2bdba1373b8,~
code-source-info,0x2bdba139dae,169,94,206,C0O119C2O129C6O142C8O152C12O165C14O174C18O186C20O196C25O205,,
code-creation,Eval,10,261796,0x2bdba13ad6e,5, node:_http_outgoing:1:1,0x2bdba13a8b8,~
script-source,171,node:_http_outgoing,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  MathFloor\x2C\x0d\n  NumberPrototypeToString\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\x0d\nconst assert = require('internal/assert');\x0d\nconst EE = require('events');\x0d\nconst Stream = require('stream');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst { kOutHeaders\x2C utcDate\x2C kNeedDrain } = require('internal/http');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  _checkIsHttpToken: checkIsHttpToken\x2C\x0d\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\x0d\n  chunkExpression: RE_TE_CHUNKED\x2C\x0d\n} = require('_http_common');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_HTTP_HEADERS_SENT\x2C\x0d\n    ERR_HTTP_INVALID_HEADER_VALUE\x2C\x0d\n    ERR_HTTP_TRAILER_INVALID\x2C\x0d\n    ERR_INVALID_HTTP_TOKEN\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_CHAR\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n    ERR_STREAM_CANNOT_PIPE\x2C\x0d\n    ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n    ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n    ERR_STREAM_NULL_VALUES\x2C\x0d\n    ERR_STREAM_DESTROYED\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst HIGH_WATER_MARK = getDefaultHighWaterMark();\x0d\n\x0d\nconst kCorked = Symbol('corked');\x0d\n\x0d\nconst nop = () => {};\x0d\n\x0d\nconst RE_CONN_CLOSE = /(?:^|\\W)close(?:$|\\W)/i;\x0d\n\x0d\n// isCookieField performs a case-insensitive comparison of a provided string\x0d\n// against the word "cookie." As of V8 6.6 this is faster than handrolling or\x0d\n// using a case-insensitive RegExp.\x0d\nfunction isCookieField(s) {\x0d\n  return s.length === 6 && StringPrototypeToLowerCase(s) === 'cookie';\x0d\n}\x0d\n\x0d\nfunction OutgoingMessage() {\x0d\n  Stream.call(this);\x0d\n\x0d\n  // Queue that holds all currently pending data\x2C until the response will be\x0d\n  // assigned to the socket (until it will its turn in the HTTP pipeline).\x0d\n  this.outputData = [];\x0d\n\x0d\n  // `outputSize` is an approximate measure of how much data is queued on this\x0d\n  // response. `_onPendingData` will be invoked to update similar global\x0d\n  // per-connection counter. That counter will be used to pause/unpause the\x0d\n  // TCP socket and HTTP Parser and thus handle the backpressure.\x0d\n  this.outputSize = 0;\x0d\n\x0d\n  this.writable = true;\x0d\n  this.destroyed = false;\x0d\n\x0d\n  this._last = false;\x0d\n  this.chunkedEncoding = false;\x0d\n  this.shouldKeepAlive = true;\x0d\n  this.maxRequestsOnConnectionReached = false;\x0d\n  this._defaultKeepAlive = true;\x0d\n  this.useChunkedEncodingByDefault = true;\x0d\n  this.sendDate = false;\x0d\n  this._removedConnection = false;\x0d\n  this._removedContLen = false;\x0d\n  this._removedTE = false;\x0d\n\x0d\n  this._contentLength = null;\x0d\n  this._hasBody = true;\x0d\n  this._trailer = '';\x0d\n  this[kNeedDrain] = false;\x0d\n\x0d\n  this.finished = false;\x0d\n  this._headerSent = false;\x0d\n  this[kCorked] = 0;\x0d\n  this._closed = false;\x0d\n\x0d\n  this.socket = null;\x0d\n  this._header = null;\x0d\n  this[kOutHeaders] = null;\x0d\n\x0d\n  this._keepAliveTimeout = 0;\x0d\n\x0d\n  this._onPendingData = nop;\x0d\n}\x0d\nObjectSetPrototypeOf(OutgoingMessage.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(OutgoingMessage\x2C Stream);\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableFinished'\x2C {\x0d\n  get() {\x0d\n    return (\x0d\n      this.finished &&\x0d\n      this.outputSize === 0 &&\x0d\n      (!this.socket || this.socket.writableLength === 0)\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableObjectMode'\x2C {\x0d\n  get() {\x0d\n    return false;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableLength'\x2C {\x0d\n  get() {\x0d\n    return this.outputSize + (this.socket ? this.socket.writableLength : 0);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableHighWaterMark'\x2C {\x0d\n  get() {\x0d\n    return this.socket ? this.socket.writableHighWaterMark : HIGH_WATER_MARK;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableCorked'\x2C {\x0d\n  get() {\x0d\n    const corked = this.socket ? this.socket.writableCorked : 0;\x0d\n    return corked + this[kCorked];\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headers'\x2C {\x0d\n  get: internalUtil.deprecate(function() {\x0d\n    return this.getHeaders();\x0d\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\x2C\x0d\n  set: internalUtil.deprecate(function(val) {\x0d\n    if (val == null) {\x0d\n      this[kOutHeaders] = null;\x0d\n    } else if (typeof val === 'object') {\x0d\n      const headers = this[kOutHeaders] = ObjectCreate(null);\x0d\n      const keys = ObjectKeys(val);\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < keys.length; ++i) {\x0d\n        const name = keys[i];\x0d\n        headers[StringPrototypeToLowerCase(name)] = [name\x2C val[name]];\x0d\n      }\x0d\n    }\x0d\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'connection'\x2C {\x0d\n  get: function() {\x0d\n    return this.socket;\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    this.socket = val;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headerNames'\x2C {\x0d\n  get: internalUtil.deprecate(function() {\x0d\n    const headers = this[kOutHeaders];\x0d\n    if (headers !== null) {\x0d\n      const out = ObjectCreate(null);\x0d\n      const keys = ObjectKeys(headers);\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < keys.length; ++i) {\x0d\n        const key = keys[i];\x0d\n        const val = headers[key][0];\x0d\n        out[key] = val;\x0d\n      }\x0d\n      return out;\x0d\n    }\x0d\n    return null;\x0d\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\x2C\x0d\n  set: internalUtil.deprecate(function(val) {\x0d\n    if (typeof val === 'object' && val !== null) {\x0d\n      const headers = this[kOutHeaders];\x0d\n      if (!headers)\x0d\n        return;\x0d\n      const keys = ObjectKeys(val);\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < keys.length; ++i) {\x0d\n        const header = headers[keys[i]];\x0d\n        if (header)\x0d\n          header[0] = val[keys[i]];\x0d\n      }\x0d\n    }\x0d\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\x0d\n});\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype._renderHeaders = function _renderHeaders() {\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('render');\x0d\n  }\x0d\n\x0d\n  const headersMap = this[kOutHeaders];\x0d\n  const headers = {};\x0d\n\x0d\n  if (headersMap !== null) {\x0d\n    const keys = ObjectKeys(headersMap);\x0d\n    // Retain for(;;) loop for performance reasons\x0d\n    // Refs: https://github.com/nodejs/node/pull/30958\x0d\n    for (let i = 0\x2C l = keys.length; i < l; i++) {\x0d\n      const key = keys[i];\x0d\n      headers[headersMap[key][0]] = headersMap[key][1];\x0d\n    }\x0d\n  }\x0d\n  return headers;\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype.cork = function() {\x0d\n  if (this.socket) {\x0d\n    this.socket.cork();\x0d\n  } else {\x0d\n    this[kCorked]++;\x0d\n  }\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype.uncork = function() {\x0d\n  if (this.socket) {\x0d\n    this.socket.uncork();\x0d\n  } else if (this[kCorked]) {\x0d\n    this[kCorked]--;\x0d\n  }\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\x0d\n\x0d\n  if (callback) {\x0d\n    this.on('timeout'\x2C callback);\x0d\n  }\x0d\n\x0d\n  if (!this.socket) {\x0d\n    this.once('socket'\x2C function socketSetTimeoutOnConnect(socket) {\x0d\n      socket.setTimeout(msecs);\x0d\n    });\x0d\n  } else {\x0d\n    this.socket.setTimeout(msecs);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\n// It's possible that the socket will be destroyed\x2C and removed from\x0d\n// any messages\x2C before ever calling this.  In that case\x2C just skip\x0d\n// it\x2C since something else is destroying this connection anyway.\x0d\nOutgoingMessage.prototype.destroy = function destroy(error) {\x0d\n  if (this.destroyed) {\x0d\n    return this;\x0d\n  }\x0d\n  this.destroyed = true;\x0d\n\x0d\n  if (this.socket) {\x0d\n    this.socket.destroy(error);\x0d\n  } else {\x0d\n    this.once('socket'\x2C function socketDestroyOnConnect(socket) {\x0d\n      socket.destroy(error);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\n// This abstract either writing directly to the socket or buffering it.\x0d\nOutgoingMessage.prototype._send = function _send(data\x2C encoding\x2C callback) {\x0d\n  // This is a shameful hack to get the headers and first body chunk onto\x0d\n  // the same packet. Future versions of Node are going to take care of\x0d\n  // this at a lower level and in a more general way.\x0d\n  if (!this._headerSent) {\x0d\n    if (typeof data === 'string' &&\x0d\n        (encoding === 'utf8' || encoding === 'latin1' || !encoding)) {\x0d\n      data = this._header + data;\x0d\n    } else {\x0d\n      const header = this._header;\x0d\n      this.outputData.unshift({\x0d\n        data: header\x2C\x0d\n        encoding: 'latin1'\x2C\x0d\n        callback: null\x0d\n      });\x0d\n      this.outputSize += header.length;\x0d\n      this._onPendingData(header.length);\x0d\n    }\x0d\n    this._headerSent = true;\x0d\n  }\x0d\n  return this._writeRaw(data\x2C encoding\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype._writeRaw = _writeRaw;\x0d\nfunction _writeRaw(data\x2C encoding\x2C callback) {\x0d\n  const conn = this.socket;\x0d\n  if (conn && conn.destroyed) {\x0d\n    // The socket was destroyed. If we're still trying to write to it\x2C\x0d\n    // then we haven't gotten the 'close' event yet.\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    callback = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  if (conn && conn._httpMessage === this && conn.writable) {\x0d\n    // There might be pending data in the this.output buffer.\x0d\n    if (this.outputData.length) {\x0d\n      this._flushOutput(conn);\x0d\n    }\x0d\n    // Directly write to socket.\x0d\n    return conn.write(data\x2C encoding\x2C callback);\x0d\n  }\x0d\n  // Buffer\x2C as long as we're not destroyed.\x0d\n  this.outputData.push({ data\x2C encoding\x2C callback });\x0d\n  this.outputSize += data.length;\x0d\n  this._onPendingData(data.length);\x0d\n  return this.outputSize < HIGH_WATER_MARK;\x0d\n}\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype._storeHeader = _storeHeader;\x0d\nfunction _storeHeader(firstLine\x2C headers) {\x0d\n  // firstLine in the case of request is: 'GET /index.html HTTP/1.1\\r\\n'\x0d\n  // in the case of response it is: 'HTTP/1.1 200 OK\\r\\n'\x0d\n  const state = {\x0d\n    connection: false\x2C\x0d\n    contLen: false\x2C\x0d\n    te: false\x2C\x0d\n    date: false\x2C\x0d\n    expect: false\x2C\x0d\n    trailer: false\x2C\x0d\n    header: firstLine\x0d\n  };\x0d\n\x0d\n  if (headers) {\x0d\n    if (headers === this[kOutHeaders]) {\x0d\n      for (const key in headers) {\x0d\n        const entry = headers[key];\x0d\n        processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C false);\x0d\n      }\x0d\n    } else if (ArrayIsArray(headers)) {\x0d\n      if (headers.length && ArrayIsArray(headers[0])) {\x0d\n        for (let i = 0; i < headers.length; i++) {\x0d\n          const entry = headers[i];\x0d\n          processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C true);\x0d\n        }\x0d\n      } else {\x0d\n        if (headers.length % 2 !== 0) {\x0d\n          throw new ERR_INVALID_ARG_VALUE('headers'\x2C headers);\x0d\n        }\x0d\n\x0d\n        for (let n = 0; n < headers.length; n += 2) {\x0d\n          processHeader(this\x2C state\x2C headers[n + 0]\x2C headers[n + 1]\x2C true);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      for (const key in headers) {\x0d\n        if (ObjectPrototypeHasOwnProperty(headers\x2C key)) {\x0d\n          processHeader(this\x2C state\x2C key\x2C headers[key]\x2C true);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let { header } = state;\x0d\n\x0d\n  // Date header\x0d\n  if (this.sendDate && !state.date) {\x0d\n    header += 'Date: ' + utcDate() + '\\r\\n';\x0d\n  }\x0d\n\x0d\n  // Force the connection to close when the response is a 204 No Content or\x0d\n  // a 304 Not Modified and the user has set a "Transfer-Encoding: chunked"\x0d\n  // header.\x0d\n  //\x0d\n  // RFC 2616 mandates that 204 and 304 responses MUST NOT have a body but\x0d\n  // node.js used to send out a zero chunk anyway to accommodate clients\x0d\n  // that don't have special handling for those responses.\x0d\n  //\x0d\n  // It was pointed out that this might confuse reverse proxies to the point\x0d\n  // of creating security liabilities\x2C so suppress the zero chunk and force\x0d\n  // the connection to close.\x0d\n  if (this.chunkedEncoding && (this.statusCode === 204 ||\x0d\n                               this.statusCode === 304)) {\x0d\n    debug(this.statusCode + ' response should not use chunked encoding\x2C' +\x0d\n          ' closing connection.');\x0d\n    this.chunkedEncoding = false;\x0d\n    this.shouldKeepAlive = false;\x0d\n  }\x0d\n\x0d\n  // keep-alive logic\x0d\n  if (this._removedConnection) {\x0d\n    this._last = true;\x0d\n    this.shouldKeepAlive = false;\x0d\n  } else if (!state.connection) {\x0d\n    const shouldSendKeepAlive = this.shouldKeepAlive &&\x0d\n        (state.contLen || this.useChunkedEncodingByDefault || this.agent);\x0d\n    if (shouldSendKeepAlive && this.maxRequestsOnConnectionReached) {\x0d\n      header += 'Connection: close\\r\\n';\x0d\n    } else if (shouldSendKeepAlive) {\x0d\n      header += 'Connection: keep-alive\\r\\n';\x0d\n      if (this._keepAliveTimeout && this._defaultKeepAlive) {\x0d\n        const timeoutSeconds = MathFloor(this._keepAliveTimeout / 1000);\x0d\n        header += `Keep-Alive: timeout=${timeoutSeconds}\\r\\n`;\x0d\n      }\x0d\n    } else {\x0d\n      this._last = true;\x0d\n      header += 'Connection: close\\r\\n';\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!state.contLen && !state.te) {\x0d\n    if (!this._hasBody) {\x0d\n      // Make sure we don't end the 0\\r\\n\\r\\n at the end of the message.\x0d\n      this.chunkedEncoding = false;\x0d\n    } else if (!this.useChunkedEncodingByDefault) {\x0d\n      this._last = true;\x0d\n    } else if (!state.trailer &&\x0d\n               !this._removedContLen &&\x0d\n               typeof this._contentLength === 'number') {\x0d\n      header += 'Content-Length: ' + this._contentLength + '\\r\\n';\x0d\n    } else if (!this._removedTE) {\x0d\n      header += 'Transfer-Encoding: chunked\\r\\n';\x0d\n      this.chunkedEncoding = true;\x0d\n    } else {\x0d\n      // We should only be able to get here if both Content-Length and\x0d\n      // Transfer-Encoding are removed by the user.\x0d\n      // See: test/parallel/test-http-remove-header-stays-removed.js\x0d\n      debug('Both Content-Length and Transfer-Encoding are removed');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Test non-chunked message does not have trailer header set\x2C\x0d\n  // message will be terminated by the first empty line after the\x0d\n  // header fields\x2C regardless of the header fields present in the\x0d\n  // message\x2C and thus cannot contain a message body or 'trailers'.\x0d\n  if (this.chunkedEncoding !== true && state.trailer) {\x0d\n    throw new ERR_HTTP_TRAILER_INVALID();\x0d\n  }\x0d\n\x0d\n  this._header = header + '\\r\\n';\x0d\n  this._headerSent = false;\x0d\n\x0d\n  // Wait until the first body chunk\x2C or close()\x2C is sent to flush\x2C\x0d\n  // UNLESS we're sending Expect: 100-continue.\x0d\n  if (state.expect) this._send('');\x0d\n}\x0d\n\x0d\nfunction processHeader(self\x2C state\x2C key\x2C value\x2C validate) {\x0d\n  if (validate)\x0d\n    validateHeaderName(key);\x0d\n  if (ArrayIsArray(value)) {\x0d\n    if (value.length < 2 || !isCookieField(key)) {\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < value.length; i++)\x0d\n        storeHeader(self\x2C state\x2C key\x2C value[i]\x2C validate);\x0d\n      return;\x0d\n    }\x0d\n    value = ArrayPrototypeJoin(value\x2C '; ');\x0d\n  }\x0d\n  storeHeader(self\x2C state\x2C key\x2C value\x2C validate);\x0d\n}\x0d\n\x0d\nfunction storeHeader(self\x2C state\x2C key\x2C value\x2C validate) {\x0d\n  if (validate)\x0d\n    validateHeaderValue(key\x2C value);\x0d\n  state.header += key + ': ' + value + '\\r\\n';\x0d\n  matchHeader(self\x2C state\x2C key\x2C value);\x0d\n}\x0d\n\x0d\nfunction matchHeader(self\x2C state\x2C field\x2C value) {\x0d\n  if (field.length < 4 || field.length > 17)\x0d\n    return;\x0d\n  field = StringPrototypeToLowerCase(field);\x0d\n  switch (field) {\x0d\n    case 'connection':\x0d\n      state.connection = true;\x0d\n      self._removedConnection = false;\x0d\n      if (RegExpPrototypeTest(RE_CONN_CLOSE\x2C value))\x0d\n        self._last = true;\x0d\n      else\x0d\n        self.shouldKeepAlive = true;\x0d\n      break;\x0d\n    case 'transfer-encoding':\x0d\n      state.te = true;\x0d\n      self._removedTE = false;\x0d\n      if (RegExpPrototypeTest(RE_TE_CHUNKED\x2C value))\x0d\n        self.chunkedEncoding = true;\x0d\n      break;\x0d\n    case 'content-length':\x0d\n      state.contLen = true;\x0d\n      self._removedContLen = false;\x0d\n      break;\x0d\n    case 'date':\x0d\n    case 'expect':\x0d\n    case 'trailer':\x0d\n      state[field] = true;\x0d\n      break;\x0d\n    case 'keep-alive':\x0d\n      self._defaultKeepAlive = false;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateHeaderName = hideStackFrames((name) => {\x0d\n  if (typeof name !== 'string' || !name || !checkIsHttpToken(name)) {\x0d\n    throw new ERR_INVALID_HTTP_TOKEN('Header name'\x2C name);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateHeaderValue = hideStackFrames((name\x2C value) => {\x0d\n  if (value === undefined) {\x0d\n    throw new ERR_HTTP_INVALID_HEADER_VALUE(value\x2C name);\x0d\n  }\x0d\n  if (checkInvalidHeaderChar(value)) {\x0d\n    debug('Header "%s" contains invalid characters'\x2C name);\x0d\n    throw new ERR_INVALID_CHAR('header content'\x2C name);\x0d\n  }\x0d\n});\x0d\n\x0d\nOutgoingMessage.prototype.setHeader = function setHeader(name\x2C value) {\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('set');\x0d\n  }\x0d\n  validateHeaderName(name);\x0d\n  validateHeaderValue(name\x2C value);\x0d\n\x0d\n  let headers = this[kOutHeaders];\x0d\n  if (headers === null)\x0d\n    this[kOutHeaders] = headers = ObjectCreate(null);\x0d\n\x0d\n  headers[StringPrototypeToLowerCase(name)] = [name\x2C value];\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype.getHeader = function getHeader(name) {\x0d\n  validateString(name\x2C 'name');\x0d\n\x0d\n  const headers = this[kOutHeaders];\x0d\n  if (headers === null)\x0d\n    return;\x0d\n\x0d\n  const entry = headers[StringPrototypeToLowerCase(name)];\x0d\n  return entry && entry[1];\x0d\n};\x0d\n\x0d\n\x0d\n// Returns an array of the names of the current outgoing headers.\x0d\nOutgoingMessage.prototype.getHeaderNames = function getHeaderNames() {\x0d\n  return this[kOutHeaders] !== null ? ObjectKeys(this[kOutHeaders]) : [];\x0d\n};\x0d\n\x0d\n\x0d\n// Returns an array of the names of the current outgoing raw headers.\x0d\nOutgoingMessage.prototype.getRawHeaderNames = function getRawHeaderNames() {\x0d\n  const headersMap = this[kOutHeaders];\x0d\n  if (headersMap === null) return [];\x0d\n\x0d\n  const values = ObjectValues(headersMap);\x0d\n  const headers = Array(values.length);\x0d\n  // Retain for(;;) loop for performance reasons\x0d\n  // Refs: https://github.com/nodejs/node/pull/30958\x0d\n  for (let i = 0\x2C l = values.length; i < l; i++) {\x0d\n    headers[i] = values[i][0];\x0d\n  }\x0d\n\x0d\n  return headers;\x0d\n};\x0d\n\x0d\n\x0d\n// Returns a shallow copy of the current outgoing headers.\x0d\nOutgoingMessage.prototype.getHeaders = function getHeaders() {\x0d\n  const headers = this[kOutHeaders];\x0d\n  const ret = ObjectCreate(null);\x0d\n  if (headers) {\x0d\n    const keys = ObjectKeys(headers);\x0d\n    // Retain for(;;) loop for performance reasons\x0d\n    // Refs: https://github.com/nodejs/node/pull/30958\x0d\n    for (let i = 0; i < keys.length; ++i) {\x0d\n      const key = keys[i];\x0d\n      const val = headers[key][1];\x0d\n      ret[key] = val;\x0d\n    }\x0d\n  }\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype.hasHeader = function hasHeader(name) {\x0d\n  validateString(name\x2C 'name');\x0d\n  return this[kOutHeaders] !== null &&\x0d\n    !!this[kOutHeaders][StringPrototypeToLowerCase(name)];\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype.removeHeader = function removeHeader(name) {\x0d\n  validateString(name\x2C 'name');\x0d\n\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('remove');\x0d\n  }\x0d\n\x0d\n  const key = StringPrototypeToLowerCase(name);\x0d\n\x0d\n  switch (key) {\x0d\n    case 'connection':\x0d\n      this._removedConnection = true;\x0d\n      break;\x0d\n    case 'content-length':\x0d\n      this._removedContLen = true;\x0d\n      break;\x0d\n    case 'transfer-encoding':\x0d\n      this._removedTE = true;\x0d\n      break;\x0d\n    case 'date':\x0d\n      this.sendDate = false;\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  if (this[kOutHeaders] !== null) {\x0d\n    delete this[kOutHeaders][key];\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype._implicitHeader = function _implicitHeader() {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_implicitHeader()');\x0d\n};\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'headersSent'\x2C {\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() { return !!this._header; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableEnded'\x2C {\x0d\n  get: function() { return this.finished; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableNeedDrain'\x2C {\x0d\n  get: function() {\x0d\n    return !this.destroyed && !this.finished && this[kNeedDrain];\x0d\n  }\x0d\n});\x0d\n\x0d\nconst crlf_buf = Buffer.from('\\r\\n');\x0d\nOutgoingMessage.prototype.write = function write(chunk\x2C encoding\x2C callback) {\x0d\n  if (typeof encoding === 'function') {\x0d\n    callback = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const ret = write_(this\x2C chunk\x2C encoding\x2C callback\x2C false);\x0d\n  if (!ret)\x0d\n    this[kNeedDrain] = true;\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onError(msg\x2C err\x2C callback) {\x0d\n  const triggerAsyncId = msg.socket ? msg.socket[async_id_symbol] : undefined;\x0d\n  defaultTriggerAsyncIdScope(triggerAsyncId\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitErrorNt\x2C\x0d\n                             msg\x2C\x0d\n                             err\x2C\x0d\n                             callback);\x0d\n}\x0d\n\x0d\nfunction emitErrorNt(msg\x2C err\x2C callback) {\x0d\n  callback(err);\x0d\n  if (typeof msg.emit === 'function' && !msg._closed) {\x0d\n    msg.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction write_(msg\x2C chunk\x2C encoding\x2C callback\x2C fromEnd) {\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = nop;\x0d\n\x0d\n  let len;\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (typeof chunk === 'string') {\x0d\n    len = Buffer.byteLength(chunk\x2C encoding);\x0d\n  } else if (isUint8Array(chunk)) {\x0d\n    len = chunk.length;\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (msg.finished) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (msg.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    if (!msg.destroyed) {\x0d\n      onError(msg\x2C err\x2C callback);\x0d\n    } else {\x0d\n      process.nextTick(callback\x2C err);\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (!msg._header) {\x0d\n    if (fromEnd) {\x0d\n      msg._contentLength = len;\x0d\n    }\x0d\n    msg._implicitHeader();\x0d\n  }\x0d\n\x0d\n  if (!msg._hasBody) {\x0d\n    debug('This type of response MUST NOT have a body. ' +\x0d\n          'Ignoring write() calls.');\x0d\n    process.nextTick(callback);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (!fromEnd && msg.socket && !msg.socket.writableCorked) {\x0d\n    msg.socket.cork();\x0d\n    process.nextTick(connectionCorkNT\x2C msg.socket);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (msg.chunkedEncoding && chunk.length !== 0) {\x0d\n    msg._send(NumberPrototypeToString(len\x2C 16)\x2C 'latin1'\x2C null);\x0d\n    msg._send(crlf_buf\x2C null\x2C null);\x0d\n    msg._send(chunk\x2C encoding\x2C null);\x0d\n    ret = msg._send(crlf_buf\x2C null\x2C callback);\x0d\n  } else {\x0d\n    ret = msg._send(chunk\x2C encoding\x2C callback);\x0d\n  }\x0d\n\x0d\n  debug('write ret = ' + ret);\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectionCorkNT(conn) {\x0d\n  conn.uncork();\x0d\n}\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype.addTrailers = function addTrailers(headers) {\x0d\n  this._trailer = '';\x0d\n  const keys = ObjectKeys(headers);\x0d\n  const isArray = ArrayIsArray(headers);\x0d\n  // Retain for(;;) loop for performance reasons\x0d\n  // Refs: https://github.com/nodejs/node/pull/30958\x0d\n  for (let i = 0\x2C l = keys.length; i < l; i++) {\x0d\n    let field\x2C value;\x0d\n    const key = keys[i];\x0d\n    if (isArray) {\x0d\n      field = headers[key][0];\x0d\n      value = headers[key][1];\x0d\n    } else {\x0d\n      field = key;\x0d\n      value = headers[key];\x0d\n    }\x0d\n    if (typeof field !== 'string' || !field || !checkIsHttpToken(field)) {\x0d\n      throw new ERR_INVALID_HTTP_TOKEN('Trailer name'\x2C field);\x0d\n    }\x0d\n    if (checkInvalidHeaderChar(value)) {\x0d\n      debug('Trailer "%s" contains invalid characters'\x2C field);\x0d\n      throw new ERR_INVALID_CHAR('trailer content'\x2C field);\x0d\n    }\x0d\n    this._trailer += field + ': ' + value + '\\r\\n';\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction onFinish(outmsg) {\x0d\n  if (outmsg && outmsg.socket && outmsg.socket._hadError) return;\x0d\n  outmsg.emit('finish');\x0d\n}\x0d\n\x0d\nOutgoingMessage.prototype.end = function end(chunk\x2C encoding\x2C callback) {\x0d\n  if (typeof chunk === 'function') {\x0d\n    callback = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    callback = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  if (chunk) {\x0d\n    if (this.finished) {\x0d\n      onError(this\x2C\x0d\n              new ERR_STREAM_WRITE_AFTER_END()\x2C\x0d\n              typeof callback !== 'function' ? nop : callback);\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    if (this.socket) {\x0d\n      this.socket.cork();\x0d\n    }\x0d\n\x0d\n    write_(this\x2C chunk\x2C encoding\x2C null\x2C true);\x0d\n  } else if (this.finished) {\x0d\n    if (typeof callback === 'function') {\x0d\n      if (!this.writableFinished) {\x0d\n        this.on('finish'\x2C callback);\x0d\n      } else {\x0d\n        callback(new ERR_STREAM_ALREADY_FINISHED('end'));\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  } else if (!this._header) {\x0d\n    if (this.socket) {\x0d\n      this.socket.cork();\x0d\n    }\x0d\n\x0d\n    this._contentLength = 0;\x0d\n    this._implicitHeader();\x0d\n  }\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.once('finish'\x2C callback);\x0d\n\x0d\n  const finish = onFinish.bind(undefined\x2C this);\x0d\n\x0d\n  if (this._hasBody && this.chunkedEncoding) {\x0d\n    this._send('0\\r\\n' + this._trailer + '\\r\\n'\x2C 'latin1'\x2C finish);\x0d\n  } else {\x0d\n    // Force a flush\x2C HACK.\x0d\n    this._send(''\x2C 'latin1'\x2C finish);\x0d\n  }\x0d\n\x0d\n  if (this.socket) {\x0d\n    // Fully uncork connection on end().\x0d\n    this.socket._writableState.corked = 1;\x0d\n    this.socket.uncork();\x0d\n  }\x0d\n  this[kCorked] = 0;\x0d\n\x0d\n  this.finished = true;\x0d\n\x0d\n  // There is the first message on the outgoing queue\x2C and we've sent\x0d\n  // everything to the socket.\x0d\n  debug('outgoing message end.');\x0d\n  if (this.outputData.length === 0 &&\x0d\n      this.socket &&\x0d\n      this.socket._httpMessage === this) {\x0d\n    this._finish();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype._finish = function _finish() {\x0d\n  assert(this.socket);\x0d\n  this.emit('prefinish');\x0d\n};\x0d\n\x0d\n\x0d\n// This logic is probably a bit confusing. Let me explain a bit:\x0d\n//\x0d\n// In both HTTP servers and clients it is possible to queue up several\x0d\n// outgoing messages. This is easiest to imagine in the case of a client.\x0d\n// Take the following situation:\x0d\n//\x0d\n//    req1 = client.request('GET'\x2C '/');\x0d\n//    req2 = client.request('POST'\x2C '/');\x0d\n//\x0d\n// When the user does\x0d\n//\x0d\n//   req2.write('hello world\\n');\x0d\n//\x0d\n// it's possible that the first request has not been completely flushed to\x0d\n// the socket yet. Thus the outgoing messages need to be prepared to queue\x0d\n// up data internally before sending it on further to the socket's queue.\x0d\n//\x0d\n// This function\x2C outgoingFlush()\x2C is called by both the Server and Client\x0d\n// to attempt to flush any pending messages out to the socket.\x0d\nOutgoingMessage.prototype._flush = function _flush() {\x0d\n  const socket = this.socket;\x0d\n\x0d\n  if (socket && socket.writable) {\x0d\n    // There might be remaining data in this.output; write it out\x0d\n    const ret = this._flushOutput(socket);\x0d\n\x0d\n    if (this.finished) {\x0d\n      // This is a queue to the server or client to bring in the next this.\x0d\n      this._finish();\x0d\n    } else if (ret && this[kNeedDrain]) {\x0d\n      this[kNeedDrain] = false;\x0d\n      this.emit('drain');\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype._flushOutput = function _flushOutput(socket) {\x0d\n  while (this[kCorked]) {\x0d\n    this[kCorked]--;\x0d\n    socket.cork();\x0d\n  }\x0d\n\x0d\n  const outputLength = this.outputData.length;\x0d\n  if (outputLength <= 0)\x0d\n    return undefined;\x0d\n\x0d\n  const outputData = this.outputData;\x0d\n  socket.cork();\x0d\n  let ret;\x0d\n  // Retain for(;;) loop for performance reasons\x0d\n  // Refs: https://github.com/nodejs/node/pull/30958\x0d\n  for (let i = 0; i < outputLength; i++) {\x0d\n    const { data\x2C encoding\x2C callback } = outputData[i];\x0d\n    ret = socket.write(data\x2C encoding\x2C callback);\x0d\n  }\x0d\n  socket.uncork();\x0d\n\x0d\n  this.outputData = [];\x0d\n  this._onPendingData(-this.outputSize);\x0d\n  this.outputSize = 0;\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype.flushHeaders = function flushHeaders() {\x0d\n  if (!this._header) {\x0d\n    this._implicitHeader();\x0d\n  }\x0d\n\x0d\n  // Force-flush the headers.\x0d\n  this._send('');\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype.pipe = function pipe() {\x0d\n  // OutgoingMessage should be write-only. Piping from it is disabled.\x0d\n  this.emit('error'\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype[EE.captureRejectionSymbol] =\x0d\nfunction(err\x2C event) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  validateHeaderName\x2C\x0d\n  validateHeaderValue\x2C\x0d\n  OutgoingMessage\x0d\n};\x0d\n
code-source-info,0x2bdba13ad6e,171,0,29697,C0O0C4O29697,,
code-creation,Function,10,263325,0x2bdba13c84e,1459, node:_http_outgoing:1:1,0x2bdba13ace8,~
code-source-info,0x2bdba13c84e
tick,0x7ff6a7858a50,263491,1,0x7ff6a79aa4a0,3,0x7ff6a82ef2d0,0x225ca7847fb,0x225ca784545,0x2bdba132157,0x225ca7848c3,0x225ca784545,0x2bdba12afcc,0x225ca7848c3,0xbfdd36c9da,0x225ca791e63,0x225ca79d19f,0x225ca7983c7,0x225ca798095,0x2bdba12a1e8,0xbfdd367951,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2bdba125eaf,0xbfdd367951,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2bdba123dac,0xbfdd367951,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2bdba108a5b,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x22645774e6,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2264576859,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x226457464f,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x2264572d77,0x3103a7b5c9
code-creation,Eval,10,263675,0x2bdba13fabe,5, node:internal/http:1:1,0x2bdba13f8c8,~
script-source,172,node:internal/http,'use strict';\x0d\n\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n  Date\x2C\x0d\n  DatePrototypeGetMilliseconds\x2C\x0d\n  DatePrototypeToUTCString\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { setUnrefTimeout } = require('internal/timers');\x0d\n\x0d\nconst { InternalPerformanceEntry } = require('internal/perf/performance_entry');\x0d\n\x0d\nconst {\x0d\n  enqueue\x2C\x0d\n  hasObserver\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nlet utcCache;\x0d\n\x0d\nfunction utcDate() {\x0d\n  if (!utcCache) cache();\x0d\n  return utcCache;\x0d\n}\x0d\n\x0d\nfunction cache() {\x0d\n  const d = new Date();\x0d\n  utcCache = DatePrototypeToUTCString(d);\x0d\n  setUnrefTimeout(resetCache\x2C 1000 - DatePrototypeGetMilliseconds(d));\x0d\n}\x0d\n\x0d\nfunction resetCache() {\x0d\n  utcCache = undefined;\x0d\n}\x0d\n\x0d\nfunction emitStatistics(statistics) {\x0d\n  if (!hasObserver('http') || statistics == null) return;\x0d\n  const startTime = statistics.startTime;\x0d\n  const diff = process.hrtime(startTime);\x0d\n  const entry = new InternalPerformanceEntry(\x0d\n    'HttpRequest'\x2C\x0d\n    'http'\x2C\x0d\n    startTime[0] * 1000 + startTime[1] / 1e6\x2C\x0d\n    diff[0] * 1000 + diff[1] / 1e6\x2C\x0d\n    undefined\x2C\x0d\n  );\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  kOutHeaders: Symbol('kOutHeaders')\x2C\x0d\n  kNeedDrain: Symbol('kNeedDrain')\x2C\x0d\n  utcDate\x2C\x0d\n  emitStatistics\x2C\x0d\n};\x0d\n
code-source-info,0x2bdba13fabe,172,0,1185,C0O0C4O1185,,
code-creation,Function,10,263757,0x2bdba13fd7e,176, node:internal/http:1:1,0x2bdba13fa38,~
code-source-info,0x2bdba13fd7e,172,0,1185,C0O0C55O28C60O39C66O48C72O81C78O156C81O156C86O136C92O224C95O224C100O195C106O312C109O312C114O282C120O294C126O353C127O353C129O1054C137O1089C148O1127C158O1152C164O1164C170O1069C175O1184,,
code-creation,LazyCompile,10,263913,0x226457e5ee,43,hideStackFrames node:internal/errors:382:25,0x25aadb24fb8,~
code-source-info,0x226457e5ee,11,11007,11237,C0O11135C5O11159C9O11154C13O11168C21O11189C28O11210C35O11168C40O11224C42O11234,,
new,MemoryChunk,0x2f65a700000,262144
code-creation,Eval,10,264615,0x334160bfef6,5, node:_http_server:1:1,0x334160bf850,~
script-source,173,node:_http_server,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Error\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst EE = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  parsers\x2C\x0d\n  freeParser\x2C\x0d\n  continueExpression\x2C\x0d\n  chunkExpression\x2C\x0d\n  kIncomingMessage\x2C\x0d\n  kRequestTimeout\x2C\x0d\n  HTTPParser\x2C\x0d\n  isLenient\x2C\x0d\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\x0d\n  prepareError\x2C\x0d\n} = require('_http_common');\x0d\nconst { OutgoingMessage } = require('_http_outgoing');\x0d\nconst {\x0d\n  kOutHeaders\x2C\x0d\n  kNeedDrain\x2C\x0d\n  emitStatistics\x0d\n} = require('internal/http');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  getOrSetAsyncId\x0d\n} = require('internal/async_hooks');\x0d\nconst { IncomingMessage } = require('_http_incoming');\x0d\nconst {\x0d\n  connResetException\x2C\x0d\n  codes\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_HTTP_REQUEST_TIMEOUT\x2C\x0d\n  ERR_HTTP_HEADERS_SENT\x2C\x0d\n  ERR_HTTP_INVALID_STATUS_CODE\x2C\x0d\n  ERR_HTTP_SOCKET_ENCODING\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_CHAR\x0d\n} = codes;\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n  validateBoolean\x0d\n} = require('internal/validators');\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x0d\n} = require('internal/dtrace');\x0d\nconst { setTimeout\x2C clearTimeout } = require('timers');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst onRequestStartChannel = dc.channel('http.server.request.start');\x0d\nconst onResponseFinishChannel = dc.channel('http.server.response.finish');\x0d\n\x0d\nconst kServerResponse = Symbol('ServerResponse');\x0d\nconst kServerResponseStatistics = Symbol('ServerResponseStatistics');\x0d\n\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst STATUS_CODES = {\x0d\n  100: 'Continue'\x2C                   // RFC 7231 6.2.1\x0d\n  101: 'Switching Protocols'\x2C        // RFC 7231 6.2.2\x0d\n  102: 'Processing'\x2C                 // RFC 2518 10.1 (obsoleted by RFC 4918)\x0d\n  103: 'Early Hints'\x2C                // RFC 8297 2\x0d\n  200: 'OK'\x2C                         // RFC 7231 6.3.1\x0d\n  201: 'Created'\x2C                    // RFC 7231 6.3.2\x0d\n  202: 'Accepted'\x2C                   // RFC 7231 6.3.3\x0d\n  203: 'Non-Authoritative Information'\x2C // RFC 7231 6.3.4\x0d\n  204: 'No Content'\x2C                 // RFC 7231 6.3.5\x0d\n  205: 'Reset Content'\x2C              // RFC 7231 6.3.6\x0d\n  206: 'Partial Content'\x2C            // RFC 7233 4.1\x0d\n  207: 'Multi-Status'\x2C               // RFC 4918 11.1\x0d\n  208: 'Already Reported'\x2C           // RFC 5842 7.1\x0d\n  226: 'IM Used'\x2C                    // RFC 3229 10.4.1\x0d\n  300: 'Multiple Choices'\x2C           // RFC 7231 6.4.1\x0d\n  301: 'Moved Permanently'\x2C          // RFC 7231 6.4.2\x0d\n  302: 'Found'\x2C                      // RFC 7231 6.4.3\x0d\n  303: 'See Other'\x2C                  // RFC 7231 6.4.4\x0d\n  304: 'Not Modified'\x2C               // RFC 7232 4.1\x0d\n  305: 'Use Proxy'\x2C                  // RFC 7231 6.4.5\x0d\n  307: 'Temporary Redirect'\x2C         // RFC 7231 6.4.7\x0d\n  308: 'Permanent Redirect'\x2C         // RFC 7238 3\x0d\n  400: 'Bad Request'\x2C                // RFC 7231 6.5.1\x0d\n  401: 'Unauthorized'\x2C               // RFC 7235 3.1\x0d\n  402: 'Payment Required'\x2C           // RFC 7231 6.5.2\x0d\n  403: 'Forbidden'\x2C                  // RFC 7231 6.5.3\x0d\n  404: 'Not Found'\x2C                  // RFC 7231 6.5.4\x0d\n  405: 'Method Not Allowed'\x2C         // RFC 7231 6.5.5\x0d\n  406: 'Not Acceptable'\x2C             // RFC 7231 6.5.6\x0d\n  407: 'Proxy Authentication Required'\x2C // RFC 7235 3.2\x0d\n  408: 'Request Timeout'\x2C            // RFC 7231 6.5.7\x0d\n  409: 'Conflict'\x2C                   // RFC 7231 6.5.8\x0d\n  410: 'Gone'\x2C                       // RFC 7231 6.5.9\x0d\n  411: 'Length Required'\x2C            // RFC 7231 6.5.10\x0d\n  412: 'Precondition Failed'\x2C        // RFC 7232 4.2\x0d\n  413: 'Payload Too Large'\x2C          // RFC 7231 6.5.11\x0d\n  414: 'URI Too Long'\x2C               // RFC 7231 6.5.12\x0d\n  415: 'Unsupported Media Type'\x2C     // RFC 7231 6.5.13\x0d\n  416: 'Range Not Satisfiable'\x2C      // RFC 7233 4.4\x0d\n  417: 'Expectation Failed'\x2C         // RFC 7231 6.5.14\x0d\n  418: 'I\\'m a Teapot'\x2C              // RFC 7168 2.3.3\x0d\n  421: 'Misdirected Request'\x2C        // RFC 7540 9.1.2\x0d\n  422: 'Unprocessable Entity'\x2C       // RFC 4918 11.2\x0d\n  423: 'Locked'\x2C                     // RFC 4918 11.3\x0d\n  424: 'Failed Dependency'\x2C          // RFC 4918 11.4\x0d\n  425: 'Too Early'\x2C                  // RFC 8470 5.2\x0d\n  426: 'Upgrade Required'\x2C           // RFC 2817 and RFC 7231 6.5.15\x0d\n  428: 'Precondition Required'\x2C      // RFC 6585 3\x0d\n  429: 'Too Many Requests'\x2C          // RFC 6585 4\x0d\n  431: 'Request Header Fields Too Large'\x2C // RFC 6585 5\x0d\n  451: 'Unavailable For Legal Reasons'\x2C // RFC 7725 3\x0d\n  500: 'Internal Server Error'\x2C      // RFC 7231 6.6.1\x0d\n  501: 'Not Implemented'\x2C            // RFC 7231 6.6.2\x0d\n  502: 'Bad Gateway'\x2C                // RFC 7231 6.6.3\x0d\n  503: 'Service Unavailable'\x2C        // RFC 7231 6.6.4\x0d\n  504: 'Gateway Timeout'\x2C            // RFC 7231 6.6.5\x0d\n  505: 'HTTP Version Not Supported'\x2C // RFC 7231 6.6.6\x0d\n  506: 'Variant Also Negotiates'\x2C    // RFC 2295 8.1\x0d\n  507: 'Insufficient Storage'\x2C       // RFC 4918 11.5\x0d\n  508: 'Loop Detected'\x2C              // RFC 5842 7.2\x0d\n  509: 'Bandwidth Limit Exceeded'\x2C\x0d\n  510: 'Not Extended'\x2C               // RFC 2774 7\x0d\n  511: 'Network Authentication Required' // RFC 6585 6\x0d\n};\x0d\n\x0d\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\x0d\nconst kOnExecute = HTTPParser.kOnExecute | 0;\x0d\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\x0d\nconst kLenientAll = HTTPParser.kLenientAll | 0;\x0d\nconst kLenientNone = HTTPParser.kLenientNone | 0;\x0d\n\x0d\nclass HTTPServerAsyncResource {\x0d\n  constructor(type\x2C socket) {\x0d\n    this.type = type;\x0d\n    this.socket = socket;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction ServerResponse(req) {\x0d\n  OutgoingMessage.call(this);\x0d\n\x0d\n  if (req.method === 'HEAD') this._hasBody = false;\x0d\n\x0d\n  this.req = req;\x0d\n  this.sendDate = true;\x0d\n  this._sent100 = false;\x0d\n  this._expect_continue = false;\x0d\n\x0d\n  if (req.httpVersionMajor < 1 || req.httpVersionMinor < 1) {\x0d\n    this.useChunkedEncodingByDefault = RegExpPrototypeTest(chunkExpression\x2C\x0d\n                                                           req.headers.te);\x0d\n    this.shouldKeepAlive = false;\x0d\n  }\x0d\n\x0d\n  if (hasObserver('http')) {\x0d\n    this[kServerResponseStatistics] = {\x0d\n      startTime: process.hrtime()\x0d\n    };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ServerResponse.prototype\x2C OutgoingMessage.prototype);\x0d\nObjectSetPrototypeOf(ServerResponse\x2C OutgoingMessage);\x0d\n\x0d\nServerResponse.prototype._finish = function _finish() {\x0d\n  DTRACE_HTTP_SERVER_RESPONSE(this.socket);\x0d\n  emitStatistics(this[kServerResponseStatistics]);\x0d\n  OutgoingMessage.prototype._finish.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nServerResponse.prototype.statusCode = 200;\x0d\nServerResponse.prototype.statusMessage = undefined;\x0d\n\x0d\nfunction onServerResponseClose() {\x0d\n  // EventEmitter.emit makes a copy of the 'close' listeners array before\x0d\n  // calling the listeners. detachSocket() unregisters onServerResponseClose\x0d\n  // but if detachSocket() is called\x2C directly or indirectly\x2C by a 'close'\x0d\n  // listener\x2C onServerResponseClose is still in that copy of the listeners\x0d\n  // array. That is\x2C in the example below\x2C b still gets called even though\x0d\n  // it's been removed by a:\x0d\n  //\x0d\n  //   var EventEmitter = require('events');\x0d\n  //   var obj = new EventEmitter();\x0d\n  //   obj.on('event'\x2C a);\x0d\n  //   obj.on('event'\x2C b);\x0d\n  //   function a() { obj.removeListener('event'\x2C b) }\x0d\n  //   function b() { throw "BAM!" }\x0d\n  //   obj.emit('event');  // throws\x0d\n  //\x0d\n  // Ergo\x2C we need to deal with stale 'close' events and handle the case\x0d\n  // where the ServerResponse object has already been deconstructed.\x0d\n  // Fortunately\x2C that requires only a single if check. :-)\x0d\n  if (this._httpMessage) {\x0d\n    this._httpMessage.destroyed = true;\x0d\n    this._httpMessage._closed = true;\x0d\n    this._httpMessage.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nServerResponse.prototype.assignSocket = function assignSocket(socket) {\x0d\n  assert(!socket._httpMessage);\x0d\n  socket._httpMessage = this;\x0d\n  socket.on('close'\x2C onServerResponseClose);\x0d\n  this.socket = socket;\x0d\n  this.emit('socket'\x2C socket);\x0d\n  this._flush();\x0d\n};\x0d\n\x0d\nServerResponse.prototype.detachSocket = function detachSocket(socket) {\x0d\n  assert(socket._httpMessage === this);\x0d\n  socket.removeListener('close'\x2C onServerResponseClose);\x0d\n  socket._httpMessage = null;\x0d\n  this.socket = null;\x0d\n};\x0d\n\x0d\nServerResponse.prototype.writeContinue = function writeContinue(cb) {\x0d\n  this._writeRaw('HTTP/1.1 100 Continue\\r\\n\\r\\n'\x2C 'ascii'\x2C cb);\x0d\n  this._sent100 = true;\x0d\n};\x0d\n\x0d\nServerResponse.prototype.writeProcessing = function writeProcessing(cb) {\x0d\n  this._writeRaw('HTTP/1.1 102 Processing\\r\\n\\r\\n'\x2C 'ascii'\x2C cb);\x0d\n};\x0d\n\x0d\nServerResponse.prototype._implicitHeader = function _implicitHeader() {\x0d\n  this.writeHead(this.statusCode);\x0d\n};\x0d\n\x0d\nServerResponse.prototype.writeHead = writeHead;\x0d\nfunction writeHead(statusCode\x2C reason\x2C obj) {\x0d\n  const originalStatusCode = statusCode;\x0d\n\x0d\n  statusCode |= 0;\x0d\n  if (statusCode < 100 || statusCode > 999) {\x0d\n    throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof reason === 'string') {\x0d\n    // writeHead(statusCode\x2C reasonPhrase[\x2C headers])\x0d\n    this.statusMessage = reason;\x0d\n  } else {\x0d\n    // writeHead(statusCode[\x2C headers])\x0d\n    if (!this.statusMessage)\x0d\n      this.statusMessage = STATUS_CODES[statusCode] || 'unknown';\x0d\n    obj = reason;\x0d\n  }\x0d\n  this.statusCode = statusCode;\x0d\n\x0d\n  let headers;\x0d\n  if (this[kOutHeaders]) {\x0d\n    // Slow-case: when progressive API and header fields are passed.\x0d\n    let k;\x0d\n    if (ArrayIsArray(obj)) {\x0d\n      if (obj.length % 2 !== 0) {\x0d\n        throw new ERR_INVALID_ARG_VALUE('headers'\x2C obj);\x0d\n      }\x0d\n\x0d\n      for (let n = 0; n < obj.length; n += 2) {\x0d\n        k = obj[n + 0];\x0d\n        if (k) this.setHeader(k\x2C obj[n + 1]);\x0d\n      }\x0d\n    } else if (obj) {\x0d\n      const keys = ObjectKeys(obj);\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < keys.length; i++) {\x0d\n        k = keys[i];\x0d\n        if (k) this.setHeader(k\x2C obj[k]);\x0d\n      }\x0d\n    }\x0d\n    if (k === undefined && this._header) {\x0d\n      throw new ERR_HTTP_HEADERS_SENT('render');\x0d\n    }\x0d\n    // Only progressive api is used\x0d\n    headers = this[kOutHeaders];\x0d\n  } else {\x0d\n    // Only writeHead() called\x0d\n    headers = obj;\x0d\n  }\x0d\n\x0d\n  if (checkInvalidHeaderChar(this.statusMessage))\x0d\n    throw new ERR_INVALID_CHAR('statusMessage');\x0d\n\x0d\n  const statusLine = `HTTP/1.1 ${statusCode} ${this.statusMessage}\\r\\n`;\x0d\n\x0d\n  if (statusCode === 204 || statusCode === 304 ||\x0d\n      (statusCode >= 100 && statusCode <= 199)) {\x0d\n    // RFC 2616\x2C 10.2.5:\x0d\n    // The 204 response MUST NOT include a message-body\x2C and thus is always\x0d\n    // terminated by the first empty line after the header fields.\x0d\n    // RFC 2616\x2C 10.3.5:\x0d\n    // The 304 response MUST NOT contain a message-body\x2C and thus is always\x0d\n    // terminated by the first empty line after the header fields.\x0d\n    // RFC 2616\x2C 10.1 Informational 1xx:\x0d\n    // This class of status code indicates a provisional response\x2C\x0d\n    // consisting only of the Status-Line and optional headers\x2C and is\x0d\n    // terminated by an empty line.\x0d\n    this._hasBody = false;\x0d\n  }\x0d\n\x0d\n  // Don't keep alive connections where the client expects 100 Continue\x0d\n  // but we sent a final status; they may put extra bytes on the wire.\x0d\n  if (this._expect_continue && !this._sent100) {\x0d\n    this.shouldKeepAlive = false;\x0d\n  }\x0d\n\x0d\n  this._storeHeader(statusLine\x2C headers);\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\n// Docs-only deprecated: DEP0063\x0d\nServerResponse.prototype.writeHeader = ServerResponse.prototype.writeHead;\x0d\n\x0d\nfunction storeHTTPOptions(options) {\x0d\n  this[kIncomingMessage] = options.IncomingMessage || IncomingMessage;\x0d\n  this[kServerResponse] = options.ServerResponse || ServerResponse;\x0d\n\x0d\n  const maxHeaderSize = options.maxHeaderSize;\x0d\n  if (maxHeaderSize !== undefined)\x0d\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\x0d\n  this.maxHeaderSize = maxHeaderSize;\x0d\n\x0d\n  const insecureHTTPParser = options.insecureHTTPParser;\x0d\n  if (insecureHTTPParser !== undefined)\x0d\n    validateBoolean(insecureHTTPParser\x2C 'options.insecureHTTPParser');\x0d\n  this.insecureHTTPParser = insecureHTTPParser;\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C requestListener) {\x0d\n  if (!(this instanceof Server)) return new Server(options\x2C requestListener);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    requestListener = options;\x0d\n    options = {};\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'object'\x2C options);\x0d\n  }\x0d\n\x0d\n  storeHTTPOptions.call(this\x2C options);\x0d\n  net.Server.call(this\x2C { allowHalfOpen: true });\x0d\n\x0d\n  if (requestListener) {\x0d\n    this.on('request'\x2C requestListener);\x0d\n  }\x0d\n\x0d\n  // Similar option to this. Too lazy to write my own docs.\x0d\n  // http://www.squid-cache.org/Doc/config/half_closed_clients/\x0d\n  // https://wiki.squid-cache.org/SquidFaq/InnerWorkings#What_is_a_half-closed_filedescriptor.3F\x0d\n  this.httpAllowHalfOpen = false;\x0d\n\x0d\n  this.on('connection'\x2C connectionListener);\x0d\n\x0d\n  this.timeout = 0;\x0d\n  this.keepAliveTimeout = 5000;\x0d\n  this.maxHeadersCount = null;\x0d\n  this.maxRequestsPerSocket = 0;\x0d\n  this.headersTimeout = 60 * 1000; // 60 seconds\x0d\n  this.requestTimeout = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C net.Server.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C net.Server);\x0d\n\x0d\n\x0d\nServer.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\x0d\n  this.timeout = msecs;\x0d\n  if (callback)\x0d\n    this.on('timeout'\x2C callback);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype[EE.captureRejectionSymbol] = function(err\x2C event\x2C ...args) {\x0d\n  switch (event) {\x0d\n    case 'request':\x0d\n      const { 1: res } = args;\x0d\n      if (!res.headersSent && !res.writableEnded) {\x0d\n        // Don't leak headers.\x0d\n        const names = res.getHeaderNames();\x0d\n        for (let i = 0; i < names.length; i++) {\x0d\n          res.removeHeader(names[i]);\x0d\n        }\x0d\n        res.statusCode = 500;\x0d\n        res.end(STATUS_CODES[500]);\x0d\n      } else {\x0d\n        res.destroy();\x0d\n      }\x0d\n      break;\x0d\n    default:\x0d\n      net.Server.prototype[SymbolFor('nodejs.rejection')]\x0d\n        .apply(this\x2C arguments);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction connectionListener(socket) {\x0d\n  defaultTriggerAsyncIdScope(\x0d\n    getOrSetAsyncId(socket)\x2C connectionListenerInternal\x2C this\x2C socket\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction connectionListenerInternal(server\x2C socket) {\x0d\n  debug('SERVER new http connection');\x0d\n\x0d\n  // Ensure that the server property of the socket is correctly set.\x0d\n  // See https://github.com/nodejs/node/issues/13435\x0d\n  socket.server = server;\x0d\n\x0d\n  // If the user has added a listener to the server\x2C\x0d\n  // request\x2C or response\x2C then it's their responsibility.\x0d\n  // otherwise\x2C destroy on timeout by default\x0d\n  if (server.timeout && typeof socket.setTimeout === 'function')\x0d\n    socket.setTimeout(server.timeout);\x0d\n  socket.on('timeout'\x2C socketOnTimeout);\x0d\n\x0d\n  const parser = parsers.alloc();\x0d\n\x0d\n  const lenient = server.insecureHTTPParser === undefined ?\x0d\n    isLenient() : server.insecureHTTPParser;\x0d\n\x0d\n  // TODO(addaleax): This doesn't play well with the\x0d\n  // `async_hooks.currentResource()` proposal\x2C see\x0d\n  // https://github.com/nodejs/node/pull/21313\x0d\n  parser.initialize(\x0d\n    HTTPParser.REQUEST\x2C\x0d\n    new HTTPServerAsyncResource('HTTPINCOMINGMESSAGE'\x2C socket)\x2C\x0d\n    server.maxHeaderSize || 0\x2C\x0d\n    lenient ? kLenientAll : kLenientNone\x2C\x0d\n    server.headersTimeout || 0\x2C\x0d\n  );\x0d\n  parser.socket = socket;\x0d\n  socket.parser = parser;\x0d\n\x0d\n  // Propagate headers limit from server instance to parser\x0d\n  if (typeof server.maxHeadersCount === 'number') {\x0d\n    parser.maxHeaderPairs = server.maxHeadersCount << 1;\x0d\n  }\x0d\n\x0d\n  const state = {\x0d\n    onData: null\x2C\x0d\n    onEnd: null\x2C\x0d\n    onClose: null\x2C\x0d\n    onDrain: null\x2C\x0d\n    outgoing: []\x2C\x0d\n    incoming: []\x2C\x0d\n    // `outgoingData` is an approximate amount of bytes queued through all\x0d\n    // inactive responses. If more data than the high watermark is queued - we\x0d\n    // need to pause TCP socket/HTTP parser\x2C and wait until the data will be\x0d\n    // sent to the client.\x0d\n    outgoingData: 0\x2C\x0d\n    requestsCount: 0\x2C\x0d\n    keepAliveTimeoutSet: false\x0d\n  };\x0d\n  state.onData = socketOnData.bind(undefined\x2C\x0d\n                                   server\x2C socket\x2C parser\x2C state);\x0d\n  state.onEnd = socketOnEnd.bind(undefined\x2C\x0d\n                                 server\x2C socket\x2C parser\x2C state);\x0d\n  state.onClose = socketOnClose.bind(undefined\x2C\x0d\n                                     socket\x2C state);\x0d\n  state.onDrain = socketOnDrain.bind(undefined\x2C\x0d\n                                     socket\x2C state);\x0d\n  socket.on('data'\x2C state.onData);\x0d\n  socket.on('error'\x2C socketOnError);\x0d\n  socket.on('end'\x2C state.onEnd);\x0d\n  socket.on('close'\x2C state.onClose);\x0d\n  socket.on('drain'\x2C state.onDrain);\x0d\n  parser.onIncoming = parserOnIncoming.bind(undefined\x2C\x0d\n                                            server\x2C socket\x2C state);\x0d\n\x0d\n  // We are consuming socket\x2C so it won't get any actual data\x0d\n  socket.on('resume'\x2C onSocketResume);\x0d\n  socket.on('pause'\x2C onSocketPause);\x0d\n\x0d\n  // Overrides to unconsume on `data`\x2C `readable` listeners\x0d\n  socket.on = generateSocketListenerWrapper('on');\x0d\n  socket.addListener = generateSocketListenerWrapper('addListener');\x0d\n  socket.prependListener = generateSocketListenerWrapper('prependListener');\x0d\n  socket.setEncoding = socketSetEncoding;\x0d\n\x0d\n  // We only consume the socket if it has never been consumed before.\x0d\n  if (socket._handle && socket._handle.isStreamBase &&\x0d\n      !socket._handle._consumed) {\x0d\n    parser._consumed = true;\x0d\n    socket._handle._consumed = true;\x0d\n    parser.consume(socket._handle);\x0d\n  }\x0d\n  parser[kOnExecute] =\x0d\n    onParserExecute.bind(undefined\x2C\x0d\n                         server\x2C socket\x2C parser\x2C state);\x0d\n\x0d\n  parser[kOnTimeout] =\x0d\n    onParserTimeout.bind(undefined\x2C\x0d\n                         server\x2C socket);\x0d\n\x0d\n  // When receiving new requests on the same socket (pipelining or keep alive)\x0d\n  // make sure the requestTimeout is active.\x0d\n  parser[kOnMessageBegin] =\x0d\n    setRequestTimeout.bind(undefined\x2C\x0d\n                           server\x2C socket);\x0d\n\x0d\n  // This protects from DOS attack where an attacker establish the connection\x0d\n  // without sending any data on applications where server.timeout is left to\x0d\n  // the default value of zero.\x0d\n  setRequestTimeout(server\x2C socket);\x0d\n\x0d\n  socket._paused = false;\x0d\n}\x0d\n\x0d\nfunction socketSetEncoding() {\x0d\n  throw new ERR_HTTP_SOCKET_ENCODING();\x0d\n}\x0d\n\x0d\nfunction updateOutgoingData(socket\x2C state\x2C delta) {\x0d\n  state.outgoingData += delta;\x0d\n  socketOnDrain(socket\x2C state);\x0d\n}\x0d\n\x0d\nfunction socketOnDrain(socket\x2C state) {\x0d\n  const needPause = state.outgoingData > socket.writableHighWaterMark;\x0d\n\x0d\n  // If we previously paused\x2C then start reading again.\x0d\n  if (socket._paused && !needPause) {\x0d\n    socket._paused = false;\x0d\n    if (socket.parser)\x0d\n      socket.parser.resume();\x0d\n    socket.resume();\x0d\n  }\x0d\n\x0d\n  const msg = socket._httpMessage;\x0d\n  if (msg && !msg.finished && msg[kNeedDrain]) {\x0d\n    msg[kNeedDrain] = false;\x0d\n    msg.emit('drain');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction socketOnTimeout() {\x0d\n  const req = this.parser && this.parser.incoming;\x0d\n  const reqTimeout = req && !req.complete && req.emit('timeout'\x2C this);\x0d\n  const res = this._httpMessage;\x0d\n  const resTimeout = res && res.emit('timeout'\x2C this);\x0d\n  const serverTimeout = this.server.emit('timeout'\x2C this);\x0d\n\x0d\n  if (!reqTimeout && !resTimeout && !serverTimeout)\x0d\n    this.destroy();\x0d\n}\x0d\n\x0d\nfunction socketOnClose(socket\x2C state) {\x0d\n  debug('server socket close');\x0d\n  freeParser(socket.parser\x2C null\x2C socket);\x0d\n  abortIncoming(state.incoming);\x0d\n}\x0d\n\x0d\nfunction abortIncoming(incoming) {\x0d\n  while (incoming.length) {\x0d\n    const req = incoming.shift();\x0d\n    req.destroy(connResetException('aborted'));\x0d\n  }\x0d\n  // Abort socket._httpMessage ?\x0d\n}\x0d\n\x0d\nfunction socketOnEnd(server\x2C socket\x2C parser\x2C state) {\x0d\n  const ret = parser.finish();\x0d\n\x0d\n  if (ret instanceof Error) {\x0d\n    debug('parse error');\x0d\n    // socketOnError has additional logic and will call socket.destroy(err).\x0d\n    socketOnError.call(socket\x2C ret);\x0d\n  } else if (!server.httpAllowHalfOpen) {\x0d\n    socket.end();\x0d\n  } else if (state.outgoing.length) {\x0d\n    state.outgoing[state.outgoing.length - 1]._last = true;\x0d\n  } else if (socket._httpMessage) {\x0d\n    socket._httpMessage._last = true;\x0d\n  } else {\x0d\n    socket.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction socketOnData(server\x2C socket\x2C parser\x2C state\x2C d) {\x0d\n  assert(!socket._paused);\x0d\n  debug('SERVER socketOnData %d'\x2C d.length);\x0d\n\x0d\n  const ret = parser.execute(d);\x0d\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d);\x0d\n}\x0d\n\x0d\nfunction onRequestTimeout(socket) {\x0d\n  socket[kRequestTimeout] = undefined;\x0d\n  // socketOnError has additional logic and will call socket.destroy(err).\x0d\n  socketOnError.call(socket\x2C new ERR_HTTP_REQUEST_TIMEOUT());\x0d\n}\x0d\n\x0d\nfunction onParserExecute(server\x2C socket\x2C parser\x2C state\x2C ret) {\x0d\n  // When underlying `net.Socket` instance is consumed - no\x0d\n  // `data` events are emitted\x2C and thus `socket.setTimeout` fires the\x0d\n  // callback even if the data is constantly flowing into the socket.\x0d\n  // See\x2C https://github.com/nodejs/node/commit/ec2822adaad76b126b5cccdeaa1addf2376c9aa6\x0d\n  socket._unrefTimer();\x0d\n  debug('SERVER socketOnParserExecute %d'\x2C ret);\x0d\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction onParserTimeout(server\x2C socket) {\x0d\n  const serverTimeout = server.emit('timeout'\x2C socket);\x0d\n\x0d\n  if (!serverTimeout)\x0d\n    socket.destroy();\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\nconst badRequestResponse = Buffer.from(\x0d\n  `HTTP/1.1 400 ${STATUS_CODES[400]}\\r\\n` +\x0d\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\x0d\n);\x0d\nconst requestTimeoutResponse = Buffer.from(\x0d\n  `HTTP/1.1 408 ${STATUS_CODES[408]}\\r\\n` +\x0d\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\x0d\n);\x0d\nconst requestHeaderFieldsTooLargeResponse = Buffer.from(\x0d\n  `HTTP/1.1 431 ${STATUS_CODES[431]}\\r\\n` +\x0d\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\x0d\n);\x0d\nfunction socketOnError(e) {\x0d\n  // Ignore further errors\x0d\n  this.removeListener('error'\x2C socketOnError);\x0d\n  this.on('error'\x2C noop);\x0d\n\x0d\n  if (!this.server.emit('clientError'\x2C e\x2C this)) {\x0d\n    if (this.writable && this.bytesWritten === 0) {\x0d\n      let response;\x0d\n\x0d\n      switch (e.code) {\x0d\n        case 'HPE_HEADER_OVERFLOW':\x0d\n          response = requestHeaderFieldsTooLargeResponse;\x0d\n          break;\x0d\n        case 'ERR_HTTP_REQUEST_TIMEOUT':\x0d\n          response = requestTimeoutResponse;\x0d\n          break;\x0d\n        default:\x0d\n          response = badRequestResponse;\x0d\n          break;\x0d\n      }\x0d\n\x0d\n      this.write(response);\x0d\n    }\x0d\n    this.destroy(e);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d) {\x0d\n  resetSocketTimeout(server\x2C socket\x2C state);\x0d\n\x0d\n  if (ret instanceof Error) {\x0d\n    prepareError(ret\x2C parser\x2C d);\x0d\n    ret.rawPacket = d || parser.getCurrentBuffer();\x0d\n    debug('parse error'\x2C ret);\x0d\n    socketOnError.call(socket\x2C ret);\x0d\n  } else if (parser.incoming && parser.incoming.upgrade) {\x0d\n    // Upgrade or CONNECT\x0d\n    const req = parser.incoming;\x0d\n    debug('SERVER upgrade or connect'\x2C req.method);\x0d\n\x0d\n    if (!d)\x0d\n      d = parser.getCurrentBuffer();\x0d\n\x0d\n    socket.removeListener('data'\x2C state.onData);\x0d\n    socket.removeListener('end'\x2C state.onEnd);\x0d\n    socket.removeListener('close'\x2C state.onClose);\x0d\n    socket.removeListener('drain'\x2C state.onDrain);\x0d\n    socket.removeListener('error'\x2C socketOnError);\x0d\n    socket.removeListener('timeout'\x2C socketOnTimeout);\x0d\n    unconsume(parser\x2C socket);\x0d\n    parser.finish();\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n    parser = null;\x0d\n\x0d\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\x0d\n    if (eventName === 'upgrade' || server.listenerCount(eventName) > 0) {\x0d\n      debug('SERVER have listener for %s'\x2C eventName);\x0d\n      const bodyHead = d.slice(ret\x2C d.length);\x0d\n\x0d\n      socket.readableFlowing = null;\x0d\n\x0d\n      // Clear the requestTimeout after upgrading the connection.\x0d\n      clearRequestTimeout(req);\x0d\n\x0d\n      server.emit(eventName\x2C req\x2C socket\x2C bodyHead);\x0d\n    } else {\x0d\n      // Got CONNECT method\x2C but have no handler.\x0d\n      socket.destroy();\x0d\n    }\x0d\n  } else if (parser.incoming && parser.incoming.method === 'PRI') {\x0d\n    debug('SERVER got PRI request');\x0d\n    socket.destroy();\x0d\n  } else {\x0d\n    // When receiving new requests on the same socket (pipelining or keep alive)\x0d\n    // make sure the requestTimeout is active.\x0d\n    parser[kOnMessageBegin] =\x0d\n      setRequestTimeout.bind(undefined\x2C server\x2C socket);\x0d\n  }\x0d\n\x0d\n  if (socket._paused && socket.parser) {\x0d\n    // onIncoming paused the socket\x2C we should pause the parser as well\x0d\n    debug('pause parser');\x0d\n    socket.parser.pause();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction clearIncoming(req) {\x0d\n  req = req || this;\x0d\n  const parser = req.socket && req.socket.parser;\x0d\n  // Reset the .incoming property so that the request object can be gc'ed.\x0d\n  if (parser && parser.incoming === req) {\x0d\n    if (req.readableEnded) {\x0d\n      parser.incoming = null;\x0d\n    } else {\x0d\n      req.on('end'\x2C clearIncoming);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setRequestTimeout(server\x2C socket) {\x0d\n  // Set the request timeout handler.\x0d\n  if (\x0d\n    !socket[kRequestTimeout] &&\x0d\n    server.requestTimeout && server.requestTimeout > 0\x0d\n  ) {\x0d\n    debug('requestTimeout timer set');\x0d\n    socket[kRequestTimeout] =\x0d\n      setTimeout(onRequestTimeout\x2C server.requestTimeout\x2C socket).unref();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction clearRequestTimeout(req) {\x0d\n  if (!req) {\x0d\n    req = this;\x0d\n  }\x0d\n\x0d\n  if (!req[kRequestTimeout]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('requestTimeout timer cleared');\x0d\n  clearTimeout(req[kRequestTimeout]);\x0d\n  req[kRequestTimeout] = undefined;\x0d\n}\x0d\n\x0d\nfunction resOnFinish(req\x2C res\x2C socket\x2C state\x2C server) {\x0d\n  if (onResponseFinishChannel.hasSubscribers) {\x0d\n    onResponseFinishChannel.publish({\x0d\n      request: req\x2C\x0d\n      response: res\x2C\x0d\n      socket\x2C\x0d\n      server\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Usually the first incoming element should be our request.  it may\x0d\n  // be that in the case abortIncoming() was called that the incoming\x0d\n  // array will be empty.\x0d\n  assert(state.incoming.length === 0 || state.incoming[0] === req);\x0d\n\x0d\n  state.incoming.shift();\x0d\n\x0d\n  // If the user never called req.read()\x2C and didn't pipe() or\x0d\n  // .resume() or .on('data')\x2C then we call req._dump() so that the\x0d\n  // bytes will be pulled off the wire.\x0d\n  if (!req._consuming && !req._readableState.resumeScheduled)\x0d\n    req._dump();\x0d\n\x0d\n  // Make sure the requestTimeout is cleared before finishing.\x0d\n  // This might occur if the application has sent a response\x0d\n  // without consuming the request body\x2C which would have already\x0d\n  // cleared the timer.\x0d\n  // clearRequestTimeout can be executed even if the timer is not active\x2C\x0d\n  // so this is safe.\x0d\n  clearRequestTimeout(req);\x0d\n\x0d\n  res.detachSocket(socket);\x0d\n  clearIncoming(req);\x0d\n  process.nextTick(emitCloseNT\x2C res);\x0d\n\x0d\n  if (res._last) {\x0d\n    if (typeof socket.destroySoon === 'function') {\x0d\n      socket.destroySoon();\x0d\n    } else {\x0d\n      socket.end();\x0d\n    }\x0d\n  } else if (state.outgoing.length === 0) {\x0d\n    if (server.keepAliveTimeout && typeof socket.setTimeout === 'function') {\x0d\n      socket.setTimeout(server.keepAliveTimeout);\x0d\n      state.keepAliveTimeoutSet = true;\x0d\n    }\x0d\n  } else {\x0d\n    // Start sending the next message\x0d\n    const m = state.outgoing.shift();\x0d\n    if (m) {\x0d\n      m.assignSocket(socket);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  self.destroyed = true;\x0d\n  self._closed = true;\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n// The following callback is issued after the headers have been read on a\x0d\n// new message. In this callback we setup the response object and pass it\x0d\n// to the user.\x0d\nfunction parserOnIncoming(server\x2C socket\x2C state\x2C req\x2C keepAlive) {\x0d\n  resetSocketTimeout(server\x2C socket\x2C state);\x0d\n\x0d\n  if (req.upgrade) {\x0d\n    req.upgrade = req.method === 'CONNECT' ||\x0d\n                  server.listenerCount('upgrade') > 0;\x0d\n    if (req.upgrade)\x0d\n      return 2;\x0d\n  }\x0d\n\x0d\n  state.incoming.push(req);\x0d\n\x0d\n  // If the writable end isn't consuming\x2C then stop reading\x0d\n  // so that we don't become overwhelmed by a flood of\x0d\n  // pipelined requests that may never be resolved.\x0d\n  if (!socket._paused) {\x0d\n    const ws = socket._writableState;\x0d\n    if (ws.needDrain || state.outgoingData >= socket.writableHighWaterMark) {\x0d\n      socket._paused = true;\x0d\n      // We also need to pause the parser\x2C but don't do that until after\x0d\n      // the call to execute\x2C because we may still be processing the last\x0d\n      // chunk.\x0d\n      socket.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const res = new server[kServerResponse](req);\x0d\n  res._keepAliveTimeout = server.keepAliveTimeout;\x0d\n  res._onPendingData = updateOutgoingData.bind(undefined\x2C\x0d\n                                               socket\x2C state);\x0d\n\x0d\n  res.shouldKeepAlive = keepAlive;\x0d\n  DTRACE_HTTP_SERVER_REQUEST(req\x2C socket);\x0d\n\x0d\n  if (onRequestStartChannel.hasSubscribers) {\x0d\n    onRequestStartChannel.publish({\x0d\n      request: req\x2C\x0d\n      response: res\x2C\x0d\n      socket\x2C\x0d\n      server\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (socket._httpMessage) {\x0d\n    // There are already pending outgoing res\x2C append.\x0d\n    state.outgoing.push(res);\x0d\n  } else {\x0d\n    res.assignSocket(socket);\x0d\n  }\x0d\n\x0d\n  // When we're finished writing the response\x2C check if this is the last\x0d\n  // response\x2C if so destroy the socket.\x0d\n  res.on('finish'\x2C\x0d\n         resOnFinish.bind(undefined\x2C\x0d\n                          req\x2C res\x2C socket\x2C state\x2C server));\x0d\n\x0d\n  let handled = false;\x0d\n\x0d\n  if (req.httpVersionMajor === 1 && req.httpVersionMinor === 1) {\x0d\n    const isRequestsLimitSet = (\x0d\n      typeof server.maxRequestsPerSocket === 'number' &&\x0d\n      server.maxRequestsPerSocket > 0\x0d\n    );\x0d\n\x0d\n    if (isRequestsLimitSet) {\x0d\n      state.requestsCount++;\x0d\n      res.maxRequestsOnConnectionReached = (\x0d\n        server.maxRequestsPerSocket <= state.requestsCount);\x0d\n    }\x0d\n\x0d\n    if (isRequestsLimitSet &&\x0d\n      (server.maxRequestsPerSocket < state.requestsCount)) {\x0d\n      handled = true;\x0d\n\x0d\n      res.writeHead(503);\x0d\n      res.end();\x0d\n    } else if (req.headers.expect !== undefined) {\x0d\n      handled = true;\x0d\n\x0d\n      if (RegExpPrototypeTest(continueExpression\x2C req.headers.expect)) {\x0d\n        res._expect_continue = true;\x0d\n\x0d\n        if (server.listenerCount('checkContinue') > 0) {\x0d\n          server.emit('checkContinue'\x2C req\x2C res);\x0d\n        } else {\x0d\n          res.writeContinue();\x0d\n          server.emit('request'\x2C req\x2C res);\x0d\n        }\x0d\n      } else if (server.listenerCount('checkExpectation') > 0) {\x0d\n        server.emit('checkExpectation'\x2C req\x2C res);\x0d\n      } else {\x0d\n        res.writeHead(417);\x0d\n        res.end();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!handled) {\x0d\n    req.on('end'\x2C clearRequestTimeout);\x0d\n    server.emit('request'\x2C req\x2C res);\x0d\n  }\x0d\n\x0d\n  return 0;  // No special treatment.\x0d\n}\x0d\n\x0d\nfunction resetSocketTimeout(server\x2C socket\x2C state) {\x0d\n  if (!state.keepAliveTimeoutSet)\x0d\n    return;\x0d\n\x0d\n  socket.setTimeout(server.timeout || 0);\x0d\n  state.keepAliveTimeoutSet = false;\x0d\n}\x0d\n\x0d\nfunction onSocketResume() {\x0d\n  // It may seem that the socket is resumed\x2C but this is an enemy's trick to\x0d\n  // deceive us! `resume` is emitted asynchronously\x2C and may be called from\x0d\n  // `incoming.readStart()`. Stop the socket again here\x2C just to preserve the\x0d\n  // state.\x0d\n  //\x0d\n  // We don't care about stream semantics for the consumed socket anyway.\x0d\n  if (this._paused) {\x0d\n    this.pause();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (this._handle && !this._handle.reading) {\x0d\n    this._handle.reading = true;\x0d\n    this._handle.readStart();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onSocketPause() {\x0d\n  if (this._handle && this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    this._handle.readStop();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction unconsume(parser\x2C socket) {\x0d\n  if (socket._handle) {\x0d\n    if (parser._consumed)\x0d\n      parser.unconsume();\x0d\n    parser._consumed = false;\x0d\n    socket.removeListener('pause'\x2C onSocketPause);\x0d\n    socket.removeListener('resume'\x2C onSocketResume);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction generateSocketListenerWrapper(originalFnName) {\x0d\n  return function socketListenerWrap(ev\x2C fn) {\x0d\n    const res = net.Socket.prototype[originalFnName].call(this\x2C\x0d\n                                                          ev\x2C fn);\x0d\n    if (!this.parser) {\x0d\n      this.on = net.Socket.prototype.on;\x0d\n      this.addListener = net.Socket.prototype.addListener;\x0d\n      this.prependListener = net.Socket.prototype.prependListener;\x0d\n      return res;\x0d\n    }\x0d\n\x0d\n    if (ev === 'data' || ev === 'readable')\x0d\n      unconsume(this.parser\x2C this);\x0d\n\x0d\n    return res;\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  STATUS_CODES\x2C\x0d\n  Server\x2C\x0d\n  ServerResponse\x2C\x0d\n  storeHTTPOptions\x2C\x0d\n  _connectionListener: connectionListener\x2C\x0d\n  kServerResponse\x0d\n};\x0d\n
code-source-info,0x334160bfef6,173,0,33716,C0O0C4O33716,,
code-creation,Function,10,266184,0x2f65a7021d6,1356, node:_http_server:1:1,0x334160bfe70,~
code-source-info,0x2f65a7021d6,173,0,33716,C0O0C359O1183C365O1200C371O1210C377O1225C382O1250C388O1274C393O1285C399O1329C402O1329C406O1329C408O1357C411O1357C416O1392C419O1392C423O1392C425O1643C428O1643C433O1432C439O1444C445O1459C451O1482C457O1502C463O1523C469O1543C475O1558C481O1597C487O1624C493O1697C496O1697C501O1677C507O1787C510O1787C515O1736C521O1752C527O1767C533O1877C536O1877C541O1825C547O1856C553O1939C556O1939C561O1919C567O2012C570O2012C575O1978C581O2001C586O2052C592O2081C598O2107C604O2140C610O2169C616O2194C622O2220C628O2302C631O2302C636O2261C642O2281C648O2350C651O2350C656O2367C661O2452C664O2452C669O2388C675O2419C681O2518C684O2518C689O2489C695O2501C701O2552C704O2552C709O2585C722O2586C728O2552C730O2647C733O2647C738O2713C746O2713C751O2710C753O2787C761O2787C766O2784C768O2854C771O2854C775O2854C777O2915C780O2915C784O2915C786O2983C789O2983C794O2965C800O3041C804O3041C806O6586C809O6597C813O6613C816O6586C818O6638C821O6649C825O6660C828O6638C830O6685C833O6696C837O6707C840O6685C842O6733C845O6744C849O6756C852O6733C854O6783C857O6794C861O6807C864O6783C887O6815C889O7546C892O7582C900O7609C905O7546C910O7622C916O7622C921O7680C924O7695C933O7713C937O7891C940O7906C949O7927C953O7935C956O7950C962O7974C966O9083C969O9098C978O9121C982O9347C985O9362C994O9385C998O9579C1001O9594C1010O9618C1014O9746C1017O9761C1026O9787C1030O9894C1033O9909C1042O9935C1046O10009C1049O10024C1056O10044C1060O12772C1063O12787C1071O12826C1076O12836C1080O12809C1084O14515C1087O14543C1095O14558C1100O14565C1105O14515C1110O14578C1116O14611C1121O14578C1126O14625C1129O14632C1138O14653C1142O14794C1145O14801C1150O14814C1159O14838C1163O22665C1167O22665C1169O22710C1184O22747C1200O22759C1207O22710C1213O22703C1215O22844C1230O22881C1246O22893C1253O22844C1259O22837C1261O22991C1276O23028C1292O23040C1299O22991C1305O22984C1307O33561C1314O33583C1320O33600C1326O33611C1332O33630C1338O33672C1344O33695C1350O33576C1355O33715,,
code-creation,Eval,10,266596,0x2f65a7053ae,5, node:diagnostics_channel:1:1,0x2f65a705160,~
script-source,174,node:diagnostics_channel,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { triggerUncaughtException } = internalBinding('errors');\x0d\n\x0d\nconst { WeakReference } = internalBinding('util');\x0d\n\x0d\n// TODO(qard): should there be a C++ channel interface?\x0d\nclass ActiveChannel {\x0d\n  subscribe(subscription) {\x0d\n    validateFunction(subscription\x2C 'subscription');\x0d\n    ArrayPrototypePush(this._subscribers\x2C subscription);\x0d\n  }\x0d\n\x0d\n  unsubscribe(subscription) {\x0d\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\x0d\n    if (index >= 0) {\x0d\n      ArrayPrototypeSplice(this._subscribers\x2C index\x2C 1);\x0d\n\x0d\n      // When there are no more active subscribers\x2C restore to fast prototype.\x0d\n      if (!this._subscribers.length) {\x0d\n        // eslint-disable-next-line no-use-before-define\x0d\n        ObjectSetPrototypeOf(this\x2C Channel.prototype);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get hasSubscribers() {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  publish(data) {\x0d\n    for (let i = 0; i < this._subscribers.length; i++) {\x0d\n      try {\x0d\n        const onMessage = this._subscribers[i];\x0d\n        onMessage(data\x2C this.name);\x0d\n      } catch (err) {\x0d\n        process.nextTick(() => {\x0d\n          triggerUncaughtException(err\x2C false);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Channel {\x0d\n  constructor(name) {\x0d\n    this._subscribers = undefined;\x0d\n    this.name = name;\x0d\n  }\x0d\n\x0d\n  static [SymbolHasInstance](instance) {\x0d\n    const prototype = ObjectGetPrototypeOf(instance);\x0d\n    return prototype === Channel.prototype ||\x0d\n           prototype === ActiveChannel.prototype;\x0d\n  }\x0d\n\x0d\n  subscribe(subscription) {\x0d\n    ObjectSetPrototypeOf(this\x2C ActiveChannel.prototype);\x0d\n    this._subscribers = [];\x0d\n    this.subscribe(subscription);\x0d\n  }\x0d\n\x0d\n  get hasSubscribers() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  publish() {}\x0d\n}\x0d\n\x0d\nconst channels = ObjectCreate(null);\x0d\n\x0d\nfunction channel(name) {\x0d\n  let channel;\x0d\n  const ref = channels[name];\x0d\n  if (ref) channel = ref.get();\x0d\n  if (channel) return channel;\x0d\n\x0d\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\x0d\n  }\x0d\n\x0d\n  channel = new Channel(name);\x0d\n  channels[name] = new WeakReference(channel);\x0d\n  return channel;\x0d\n}\x0d\n\x0d\nfunction hasSubscribers(name) {\x0d\n  let channel;\x0d\n  const ref = channels[name];\x0d\n  if (ref) channel = ref.get();\x0d\n  if (!channel) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return channel.hasSubscribers;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  channel\x2C\x0d\n  hasSubscribers\x2C\x0d\n  Channel\x0d\n};\x0d\n
code-source-info,0x2f65a7053ae,174,0,2762,C0O0C4O2762,,
code-creation,Function,10,266750,0x2f65a705eae,308, node:diagnostics_channel:1:1,0x2f65a705328,~
code-source-info,0x2f65a705eae,174,0,2762,C0O0C55O28C61O54C67O77C73O102C78O119C84O144C90O169C95O266C98O266C103O266C108O234C114O329C117O329C122O306C128O401C131O401C136O372C142O457C145O457C150O439C197O542C215O1646C267O1530C269O2086C271O2086C275O2086C277O2696C284O2718C290O2730C296O2749C302O2711C307O2761,,
code-creation,LazyCompile,10,266893,0x2f65a706736,105,channel node:diagnostics_channel:91:17,0x2f65a7053e0,~
code-source-info,0x2f65a706736,174,2125,2495,C0O2141C2O2165C9O2173C13O2184C15O2207C20O2207C25O2217C29O2230C31O2245C32O2251C44O2316C62O2322C67O2316C68O2397C75O2407C81O2429C88O2450C93O2446C98O2444C102O2477C104O2492,,
code-creation,LazyCompile,10,266939,0x2f65a706cae,13,Channel node:diagnostics_channel:65:14,0x2f65a705638,~
code-source-info,0x2f65a706cae,174,1560,1632,C0O1574C1O1592C5O1610C7O1620C12O1631,,
code-creation,LazyCompile,10,267033,0x2f65a70700e,5,byteLength node:buffer:627:17,0x6682ea6ca8,~
code-source-info,0x2f65a70700e,18,18602,18627,C0O18621C4O18627,,
code-creation,LazyCompile,10,267064,0x2f65a7070e6,23,write node:buffer:628:12,0x6682ea6d90,~
code-source-info,0x2f65a7070e6,18,18641,18706,C0O18675C17O18675C22O18706,,
scavenge,begin,0,250000,1671211992629
new,MemoryChunk,0x5b69ac0000,262144
new,MemoryChunk,0x23ad5900000,262144
scavenge,end,0,250000,1671211992630
code-creation,LazyCompile,10,267719,0x2f65a7075ae,43,get node:http:132:6,0x2bdba12ab88,~
code-source-info,0x2f65a7075ae,165,3898,4111,C0O3908C6O3977C12O3977C17O3958C22O4013C25O4029C32O4027C38O4085C42O4106,,
code-creation,LazyCompile,10,267758,0x2f65a707b96,10,get node:http:145:6,0x2bdba12abd8,~
code-source-info,0x2f65a707b96,165,4224,4268,C0O4234C5O4251C9O4263,,
code-creation,LazyCompile,10,267805,0x2f65a707cf6,33,getCurrentNodeMethods C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\methods\\index.js:29:31,0x2bdba12a0a0,~
code-source-info,0x2f65a707cf6,164,413,535,C0O420C3O432C12O448C17O456C27O456C32O533,,
code-creation,LazyCompile,10,267838,0x2f65a707e1e,10,lowerCaseMethod C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\methods\\index.js:30:67,0x2f65a707c48,~
code-source-info,0x2f65a707e1e,164,484,531,C0O513C5O513C9O527,,
code-creation,LazyCompile,10,267892,0x2f65a708126,32, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:201:25,0x2bdba125d08,~
code-source-info,0x2f65a708126,160,3665,4266,C0O3665C9O3677C14O3683C22O3693C26O3701C31O4265,,
code-creation,Eval,10,268618,0x2f65a7093e6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\utils-merge\\index.js:1:1,0x2f65a7092a0,~
script-source,175,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\utils-merge\\index.js,/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       \x2C b = { bar: 'baz' };\n *\n *     merge(a\x2C b);\n *     // => { foo: 'bar'\x2C bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\nexports = module.exports = function(a\x2C b){\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n
code-source-info,0x2f65a7093e6,175,0,381,C0O0C4O381,,
code-creation,Function,10,268664,0x2f65a7094f6,14, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\utils-merge\\index.js:1:1,0x2f65a709360,~
code-source-info,0x2f65a7094f6,175,0,381,C0O249C5O274C13O380,,
code-creation,Function,11,269678,0x225ca79efa0,268,validateBoolean node:internal/validators:138:25,0x6682e9aa40,^
code-source-info,0x225ca79efa0,17,4179,4293,,,
code-creation,Function,11,269703,0x225ca79f120,128,addListener node:events:486:58,0x25aadb33ed8,^
code-source-info,0x225ca79f120,13,14677,14751,,,
code-creation,Function,11,269719,0x225ca79f200,88,lowerCaseMethod C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\methods\\index.js:30:67,0x2f65a707c48,^
code-source-info,0x225ca79f200,164,484,531,,,
code-creation,Function,11,269741,0x225ca79f2c0,284, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:201:25,0x2bdba125d08,^
code-source-info,0x225ca79f2c0,160,3665,4266,,,
code-creation,Function,11,269764,0x225ca79f440,612,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x3341609fba0,^
code-source-info,0x225ca79f440,99,12696,12971,,,
code-creation,Function,11,269782,0x225ca79f720,272,validateNumber node:internal/validators:122:24,0x6682e9a980,^
code-source-info,0x225ca79f720,17,3653,3765,,,
code-creation,Function,11,269804,0x225ca79f8a0,768, node:internal/fs/utils:636:3,0x3f9d3572dc0,^
code-source-info,0x225ca79f8a0,78,17893,18283,,,
code-creation,Eval,10,269876,0x2f65a70b74e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\setprototypeof\\index.js:1:1,0x2f65a70b608,~
script-source,176,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\setprototypeof\\index.js,'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj\x2C proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj\x2C proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj\x2C prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n
code-source-info,0x2f65a70b74e,176,0,407,C0O0C4O407,,
code-creation,Function,10,269918,0x2f65a70b89e,59, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\setprototypeof\\index.js:1:1,0x2f65a70b6c8,~
code-source-info,0x2f65a70b89e,176,0,407,C0O0C10O55C14O62C28O94C39O110C42O99C53O53C58O406,,
code-creation,LazyCompile,10,269995,0x2f65a70bcee,27, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:518:39,0x2bdba123b58,~
code-source-info,0x2f65a70bcee,159,12092,12250,C0O12092C9O12104C17O12110C21O12118C26O12249,,
code-creation,Function,11,270107,0x225ca79fc00,4324,Module._compile node:internal/modules/cjs/loader:1055:37,0x334160a0748,^
code-source-info,0x225ca79fc00,99,33814,35707,,,
code-creation,Function,11,270129,0x225ca7a0d60,256, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:518:39,0x2bdba123b58,^
code-source-info,0x225ca7a0d60,159,12092,12250,,,
code-creation,Eval,10,270679,0x2f65a70d11e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\init.js:1:1,0x2f65a70cfc8,~
script-source,177,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\init.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Initialization middleware\x2C exposing the\n * request and response to each other\x2C as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nexports.init = function(app){\n  return function expressInit(req\x2C res\x2C next){\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By'\x2C 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n\n    setPrototypeOf(req\x2C app.request)\n    setPrototypeOf(res\x2C app.response)\n\n    res.locals = res.locals || Object.create(null);\n\n    next();\n  };\n};\n\n
code-source-info,0x2f65a70d11e,177,0,853,C0O0C4O853,,
code-creation,Function,10,270741,0x2f65a70d266,24, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\init.js:1:1,0x2f65a70d098,~
code-source-info,0x2f65a70d266,177,0,853,C0O0C5O247C8O247C12O247C14O487C18O500C23O852,,
code-creation,Eval,10,271286,0x2f65a70e07e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\query.js:1:1,0x2f65a70df08,~
script-source,178,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\query.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}\x2C options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req\x2C res\x2C next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val\x2C opts);\n    }\n\n    next();\n  };\n};\n
code-source-info,0x2f65a70e07e,178,0,885,C0O0C4O885,,
code-creation,Function,10,271356,0x2f65a70e19e,42, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\query.js:1:1,0x2f65a70dff8,~
code-source-info,0x2f65a70e19e,178,0,885,C0O0C5O226C8O226C12O226C14O264C17O264C21O264C23O294C26O294C30O294C32O383C36O398C41O884,,
code-creation,Eval,10,272337,0x2f65a70f56e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\index.js:1:1,0x2f65a70f428,~
script-source,179,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\index.js,'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats\x2C\n    parse: parse\x2C\n    stringify: stringify\n};\n
code-source-info,0x2f65a70f56e,179,0,211,C0O0C4O211,,
code-creation,Function,10,272381,0x2f65a70f66e,55, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\index.js:1:1,0x2f65a70f4e8,~
code-source-info,0x2f65a70f66e,179,0,211,C0O31C3O31C8O67C11O67C16O101C19O101C24O124C31O156C37O176C43O198C49O139C54O210,,
code-creation,Function,11,272679,0x225ca7a0ec0,6080,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x334160a05a8,^
code-source-info,0x225ca7a0ec0,99,27010,30096,,,
code-creation,Eval,10,273045,0x2f65a710696,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\stringify.js:1:1,0x2f65a710460,~
script-source,180,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\stringify.js,'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    }\x2C\n    comma: 'comma'\x2C\n    indices: function indices(prefix\x2C key) {\n        return prefix + '[' + key + ']';\n    }\x2C\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr\x2C valueOrArray) {\n    push.apply(arr\x2C isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false\x2C\n    allowDots: false\x2C\n    charset: 'utf-8'\x2C\n    charsetSentinel: false\x2C\n    delimiter: '&'\x2C\n    encode: true\x2C\n    encoder: utils.encode\x2C\n    encodeValuesOnly: false\x2C\n    format: defaultFormat\x2C\n    formatter: formats.formatters[defaultFormat]\x2C\n    // deprecated\n    indices: false\x2C\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    }\x2C\n    skipNulls: false\x2C\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object\x2C\n    prefix\x2C\n    generateArrayPrefix\x2C\n    strictNullHandling\x2C\n    skipNulls\x2C\n    encoder\x2C\n    filter\x2C\n    sort\x2C\n    allowDots\x2C\n    serializeDate\x2C\n    format\x2C\n    formatter\x2C\n    encodeValuesOnly\x2C\n    charset\x2C\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix\x2C obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj\x2C function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix\x2C defaults.encoder\x2C charset\x2C 'key'\x2C format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix\x2C defaults.encoder\x2C charset\x2C 'key'\x2C format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj)\x2C '\x2C');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : '\x2C') + formatter(encoder(valuesArray[i]\x2C defaults.encoder\x2C charset\x2C 'value'\x2C format));\n                }\n                return [formatter(keyValue) + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj\x2C defaults.encoder\x2C charset\x2C 'value'\x2C format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join('\x2C') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix\x2C key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object\x2C step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel\x2C sideChannel);\n        pushToArray(values\x2C stringify(\n            value\x2C\n            keyPrefix\x2C\n            generateArrayPrefix\x2C\n            strictNullHandling\x2C\n            skipNulls\x2C\n            encoder\x2C\n            filter\x2C\n            sort\x2C\n            allowDots\x2C\n            serializeDate\x2C\n            format\x2C\n            formatter\x2C\n            encodeValuesOnly\x2C\n            charset\x2C\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8\x2C iso-8859-1\x2C or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters\x2C opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix\x2C\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots\x2C\n        charset: charset\x2C\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel\x2C\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter\x2C\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode\x2C\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder\x2C\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly\x2C\n        filter: filter\x2C\n        format: format\x2C\n        formatter: formatter\x2C\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate\x2C\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls\x2C\n        sort: typeof opts.sort === 'function' ? opts.sort : null\x2C\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object\x2C opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter(''\x2C obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys\x2C stringify(\n            obj[key]\x2C\n            key\x2C\n            generateArrayPrefix\x2C\n            options.strictNullHandling\x2C\n            options.skipNulls\x2C\n            options.encode ? options.encoder : null\x2C\n            options.filter\x2C\n            options.sort\x2C\n            options.allowDots\x2C\n            options.serializeDate\x2C\n            options.format\x2C\n            options.formatter\x2C\n            options.encodeValuesOnly\x2C\n            options.charset\x2C\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;')\x2C the "numeric entity" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n
code-source-info,0x2f65a710696,180,0,9817,C0O0C4O9817,,
code-creation,Function,10,273397,0x2f65a710cb6,231, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\stringify.js:1:1,0x2f65a710610,~
code-source-info,0x2f65a710cb6,180,0,9817,C0O0C5O36C8O36C12O36C14O73C17O73C21O73C23O107C26O107C30O107C32O139C36O146C41O156C45O139C47O201C52O217C60O315C68O407C78O201C80O480C84O486C88O480C90O507C94O514C99O524C103O507C105O542C109O548C114O558C118O542C120O582C124O582C126O705C130O710C135O720C139O705C141O754C144O761C149O789C157O947C167O996C174O1034C181O1044C188O1118C198O789C200O1273C204O1273C206O1495C207O1495C209O1516C213O1516C215O5417C219O5417C221O7642C225O7657C230O9816,,
code-creation,LazyCompile,10,273710,0x2f65a712216,283,pathToFileURL node:internal/url:1455:23,0x2ee4c9dc038,~
code-source-info,0x2f65a
code-creation,LazyCompile,10,273808,0x2f65a7124e6,117,URL node:internal/url:620:14,0x2ee4c9dae50,~
code-source-info,0x2f65a7124e6,33,17608,17965,C13O17676C17O17705C19O17724C23O17757C30O17772C40O17786C42O17785C46O17808C50O17813C57O17828C60O17824C65O17822C69O17847C85O17900C93O17900C110O17847C116O17964,,
code-creation,LazyCompile,10,273854,0x2f65a7126b6,51,URLContext node:internal/url:160:14,0x2ee4c9da5d8,~
code-source-info,0x2f65a7126b6,33,3859,4081,C0O3869C1O3880C5O3890C7O3902C11O3914C13O3928C17O3939C19O3953C23O3964C24O3974C28O3987C29O3997C33O4010C35O4020C39O4031C40O4042C44O4055C45O4069C50O4080,,
code-creation,LazyCompile,10,273943,0x2f65a7128fe,190,onParseComplete node:internal/url:532:25,0x2ee4c9dab80,~
code-source-info,0x2f65a7128fe,33,14726,15412,C0O14842C2O14847C4O14846C8O14860C10O14870C14O14882C16O14893C20O14908C22O14932C24O14930C29O14956C43O14921C47O14982C49O15006C51O15004C56O15030C70O14995C74O15056C76O15065C80O15076C82O15096C84O15094C89O15116C101O15124C103O15085C107O15138C109O15148C113O15160C115O15173C119O15188C121O15197C125O15208C127O15218C129O15217C134O15272C136O15277C141O15297C144O15293C149O15291C153O15321C155O15326C157O15325C163O15340C168O15349C172O15365C177O15387C179O15386C183O15365C189O15411,,
code-creation,LazyCompile,10,274113,0x2f65a712d6e,889,URLSearchParams node:internal/url:182:14,0x2ee4c9da678,~
code-source-info,0x2f65a712d6e
code-creation,LazyCompile,10,274236,0x2f65a71334e,35,initSearchParams node:internal/url:1016:26,0x2ee4c9dbb98,~
code-source-info,0x2f65a71334e,33,28064,28185,C0O28081C4O28099C6O28103C11O28117C15O28128C16O28135C17O28144C19O28148C25O28164C29O28162C34O28184,,
code-creation,LazyCompile,10,274300,0x2f65a7134fe,199,encodePathChars node:internal/url:1440:25,0x2ee4c9dbfe8,~
code-source-info,0x2f65a7134fe,33,40808,41513,C0O40824C8O40828C15O40873C22O40917C31O40884C38O40999C46O41017C52O41017C59O41063C66O41107C75O41074C82O41134C90O41138C97O41184C104O41228C113O41195C120O41253C128O41257C135O41303C142O41347C151O41314C158O41379C166O41383C173O41429C180O41473C189O41440C196O41494C198O41510,,
code-creation,LazyCompile,10,274365,0x2f65a71372e,70,set pathname node:internal/url:884:15,0x2ee4c9db788,~
code-source-info,0x2f65a71372e,33,24508,24717,C0O24557C5O24580C9O24589C11O24588C16O24611C17O24618C18O24624C29O24636C38O24659C40O24658C49O24700C54O24700C63O24624C69O24716,,
code-creation,LazyCompile,10,274403,0x2f65a71387e,31, node:internal/url:636:21,0x2ee4c9daf28,~
code-source-info,0x2f65a71387e,33,18078,18155,C0O18088C4O18101C6O18100C10O18110C19O18118C21O18116C26O18144C30O18150,,
code-creation,LazyCompile,10,274459,0x2f65a7139ae,108,onParsePathComplete node:internal/url:591:29,0x2ee4c9dad60,~
code-source-info,0x2f65a7139ae,33,16744,17226,C0O16864C2O16869C4O16868C8O16882C10O16895C12O16893C17O16915C22O16929C24O16938C28O16951C35O16964C40O16961C46O17001C48O17010C52O17021C59O17035C61O17034C66O17031C70O17117C72O17130C74O17128C79O17150C84O17164C86O17173C90O17186C97O17199C102O17196C107O17225,,
code-creation,LazyCompile,10,274661,0x2f65a713c5e,615,packageExportsResolve node:internal/modules/esm/resolve:631:31,0x334160ad7f0,~
code-source-info,0x2f65a713c5e
code-creation,LazyCompile,10,274793,0x2f65a71643e,161,isConditionalExportsMainSugar node:internal/modules/esm/resolve:600:39,0x334160ad7a0,~
code-source-info,0x2f65a71643e,105,19733,20651,C0O19770C8O19805C11O19805C17O19828C18O19840C19O19844C29O19897C30O19910C31O19929C36O19929C41O19993C43O20011C45O20030C47O20042C51O20035C56O20074C58O20078C62O20118C64O20122C70O20135C76O20139C81O20153C90O20161C95O20177C102O20233C104O20256C109O20292C116O20339C119O20339C129O20456C135O20538C144O20298C149O20292C150O20051C155O20017C158O20622C160O20648,,
code-creation,LazyCompile,10,274918,0x2f65a71670e,403,resolvePackageTarget node:internal/modules/esm/resolve:528:30,0x334160ad750,~
code-source-info,0x2f65a71670e
code-creation,LazyCompile,10,275017,0x2f65a716a7e,28,isArrayIndex node:internal/modules/esm/resolve:522:22,0x334160ad700,~
code-source-info,0x2f65a716a7e,105,17238,17361,C0O17264C2O17264C5O17273C9O17289C14O17298C15O17311C16O17315C17O17329C24O17344C27O17358,,
new,MemoryChunk,0x2e025c40000,270336
code-creation,LazyCompile,10,275214,0x2f65a716cee,521,resolvePackageTargetString node:internal/modules/esm/resolve:474:36,0x334160ad6b0,~
code-source-info,0x2f65a716cee
code-creation,LazyCompile,10,275389,0x2f65a717176,18,toString node:internal/url:730:11,0x2ee4c9db068,~
code-source-info,0x2f65a717176,33,20787,20827,C0O20797C4O20809C6O20808C12O20817C17O20822,,
code-creation,LazyCompile,10,275478,0x2f65a71742e,393, node:internal/url:682:12,0x2ee4c9db018,~
code-source-info,0x2f65a71742e
code-creation,LazyCompile,10,275571,0x2f65a7177c6,99, node:internal/validators:153:3,0x6682e9aa90,~
code-source-info,0x2f65a7177c6,17,4517,5088,C0O4576C4O4617C9O4653C14O4692C21O4728C26O4765C33O4801C38O4816C46O4864C50O4878C53O4878C67O4955C75O5022C91O5028C96O5022C98O5087,,
code-creation,LazyCompile,10,275650,0x2f65a71798e,78,get pathname node:internal/url:875:15,0x2ee4c9db718,~
code-source-info,0x2f65a71798e,33,24290,24490,C0O24312C4O24317C6O24316C10O24332C14O24341C16O24340C21O24374C27O24378C30O24382C31O24396C36O24401C42O24408C47O24422C49O24432C50O24438C57O24449C60O24472C68O24449C77O24485,,
code-creation,LazyCompile,10,275748,0x2f65a717b76,168,finalizeEsmResolution node:internal/modules/cjs/loader:939:31,0x3341609fd30,~
code-source-info,0x2f65a717b76,99,30131,30831,C0O30182C5O30192C10O30212C17O30236C20O30216C27O30269C43O30275C48O30269C49O30410C54O30410C59O30451C62O30451C67O30473C73O30488C75O30516C83O30534C88O30516C93O30553C104O30562C125O30609C131O30661C135O30678C137O30692C138O30708C143O30775C146O30780C154O30780C161O30708C167O30818,,
code-creation,LazyCompile,10,275846,0x2f65a717e46,106,fileURLToPath node:internal/url:1413:23,0x2ee4c9dbf98,~
code-source-info,0x2f65a717e46,33,39672,40005,C0O39684C6O39719C13O39726C22O39749C25O39754C31O39780C49O39786C54O39780C55O39857C62O39866C67O39884C77O39890C82O39884C83O39929C92O39948C101O39976C105O40002,,
code-creation,LazyCompile,10,275893,0x2f65a717fee,18,get href node:internal/url:734:11,0x2ee4c9db0b8,~
code-source-info,0x2f65a717fee,33,20841,20881,C0O20851C4O20863C6O20862C12O20871C17O20876,,
code-creation,LazyCompile,10,275948,0x2f65a7181c6,150,get origin node:internal/url:746:13,0x2ee4c9db188,~
code-source-info,0x2f65a7181c6,33,21116,21696,C0O21200C4O21205C6O21204C10O21232C59O21280C64O21285C70O21292C78O21329C83O21349C89O21353C95O21337C101O21359C105O21366C110O21464C116O21485C117O21597C122O21629C127O21641C132O21651C137O21604C142O21657C143O21670C149O21691,,
code-creation,LazyCompile,10,275991,0x2f65a71839e,15,get protocol node:internal/url:769:15,0x2ee4c9db1f8,~
code-source-info,0x2f65a71839e,33,21714,21757,C0O21724C4O21736C6O21735C10O21745C14O21752,,
code-creation,LazyCompile,10,276063,0x2f65a7185ae,261,getPathFromURLWin32 node:internal/url:1360:29,0x2ee4c9dbef8,~
code-source-info,0x2f65a7185ae
code-creation,LazyCompile,10,276132,0x2f65a718856,19,get hostname node:internal/url:841:15,0x2ee4c9db568,~
code-source-info,0x2f65a718856,33,23466,23513,C0O23476C4O23488C6O23487C10O23497C18O23508,,
code-creation,Eval,10,276545,0x2f65a7191c6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\side-channel\\index.js:1:1,0x2f65a718fa0,~
script-source,181,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\side-channel\\index.js,'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%'\x2C true);\nvar $Map = GetIntrinsic('%Map%'\x2C true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get'\x2C true);\nvar $weakMapSet = callBound('WeakMap.prototype.set'\x2C true);\nvar $weakMapHas = callBound('WeakMap.prototype.has'\x2C true);\nvar $mapGet = callBound('Map.prototype.get'\x2C true);\nvar $mapSet = callBound('Map.prototype.set'\x2C true);\nvar $mapHas = callBound('Map.prototype.has'\x2C true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list\x2C so that if it's accessed\n * again we don't need to traverse the whole list. By doing so\x2C all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list\x2C key) { // eslint-disable-line consistent-return\n\x09for (var prev = list\x2C curr; (curr = prev.next) !== null; prev = curr) {\n\x09\x09if (curr.key === key) {\n\x09\x09\x09prev.next = curr.next;\n\x09\x09\x09curr.next = list.next;\n\x09\x09\x09list.next = curr; // eslint-disable-line no-param-reassign\n\x09\x09\x09return curr;\n\x09\x09}\n\x09}\n};\n\nvar listGet = function (objects\x2C key) {\n\x09var node = listGetNode(objects\x2C key);\n\x09return node && node.value;\n};\nvar listSet = function (objects\x2C key\x2C value) {\n\x09var node = listGetNode(objects\x2C key);\n\x09if (node) {\n\x09\x09node.value = value;\n\x09} else {\n\x09\x09// Prepend the new node to the beginning of the list\n\x09\x09objects.next = { // eslint-disable-line no-param-reassign\n\x09\x09\x09key: key\x2C\n\x09\x09\x09next: objects.next\x2C\n\x09\x09\x09value: value\n\x09\x09};\n\x09}\n};\nvar listHas = function (objects\x2C key) {\n\x09return !!listGetNode(objects\x2C key);\n};\n\nmodule.exports = function getSideChannel() {\n\x09var $wm;\n\x09var $m;\n\x09var $o;\n\x09var channel = {\n\x09\x09assert: function (key) {\n\x09\x09\x09if (!channel.has(key)) {\n\x09\x09\x09\x09throw new $TypeError('Side channel does not contain ' + inspect(key));\n\x09\x09\x09}\n\x09\x09}\x2C\n\x09\x09get: function (key) { // eslint-disable-line consistent-return\n\x09\x09\x09if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\x09\x09\x09\x09if ($wm) {\n\x09\x09\x09\x09\x09return $weakMapGet($wm\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09} else if ($Map) {\n\x09\x09\x09\x09if ($m) {\n\x09\x09\x09\x09\x09return $mapGet($m\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09} else {\n\x09\x09\x09\x09if ($o) { // eslint-disable-line no-lonely-if\n\x09\x09\x09\x09\x09return listGet($o\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09}\n\x09\x09}\x2C\n\x09\x09has: function (key) {\n\x09\x09\x09if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\x09\x09\x09\x09if ($wm) {\n\x09\x09\x09\x09\x09return $weakMapHas($wm\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09} else if ($Map) {\n\x09\x09\x09\x09if ($m) {\n\x09\x09\x09\x09\x09return $mapHas($m\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09} else {\n\x09\x09\x09\x09if ($o) { // eslint-disable-line no-lonely-if\n\x09\x09\x09\x09\x09return listHas($o\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09}\n\x09\x09\x09return false;\n\x09\x09}\x2C\n\x09\x09set: function (key\x2C value) {\n\x09\x09\x09if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\x09\x09\x09\x09if (!$wm) {\n\x09\x09\x09\x09\x09$wm = new $WeakMap();\n\x09\x09\x09\x09}\n\x09\x09\x09\x09$weakMapSet($wm\x2C key\x2C value);\n\x09\x09\x09} else if ($Map) {\n\x09\x09\x09\x09if (!$m) {\n\x09\x09\x09\x09\x09$m = new $Map();\n\x09\x09\x09\x09}\n\x09\x09\x09\x09$mapSet($m\x2C key\x2C value);\n\x09\x09\x09} else {\n\x09\x09\x09\x09if (!$o) {\n\x09\x09\x09\x09\x09/*\n\x09\x09\x09\x09\x09 * Initialize the linked list as an empty node\x2C so that we don't have\n\x09\x09\x09\x09\x09 * to special-case handling of the first node: we can always refer to\n\x09\x09\x09\x09\x09 * it as (previous node).next\x2C instead of something like (list).head\n\x09\x09\x09\x09\x09 */\n\x09\x09\x09\x09\x09$o = { key: {}\x2C next: null };\n\x09\x09\x09\x09}\n\x09\x09\x09\x09listSet($o\x2C key\x2C value);\n\x09\x09\x09}\n\x09\x09}\n\x09};\n\x09return channel;\n};\n
code-source-info,0x2f65a7191c6,181,0,3391,C0O0C4O3391,,
code-creation,Function,10,276774,0x2f65a71949e,169, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\side-channel\\index.js:1:1,0x2f65a719140,~
code-source-info,0x2f65a71949e,181,0,3391,C0O0C5O34C8O34C13O76C16O76C21O122C24O122C28O122C30O167C33O167C37O167C39O211C44O211C49O211C51O255C56O255C61O255C63O303C68O303C73O303C75O363C80O363C85O363C87O423C92O423C97O423C99O479C104O479C109O479C111O531C116O531C121O531C123O583C128O583C133O583C135O948C139O948C141O1266C145O1266C147O1376C151O1376C153O1685C157O1685C159O1752C163O1767C168O3390,,
tick,0x7ff6a7f3eb4f,277109,0,0x0,0,0x7ff6a7f02870,0x7ff6a841cf1f,0x2f65a716df8,0x2f65a71672f,0x2f65a71686b,0x2f65a716780,0x2f65a713cd2,0x225ca79ec5c,0x225ca793bec,0x225ca7a2238,0x225ca79cc1e,0x225ca7983c7,0x225ca798095,0x2f65a7194a6,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2f65a710cbe,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2f65a70f671,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2f65a70e1b8,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2bdba108a76,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x22645774e6,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2264576859,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x226457464f,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x2264572d77,0x3103a7b5c9
code-creation,RegExp,3,277164,0x225ca7a26e0,4576,(^|\\\\|\\/)(\\.\\.?|node_modules)(\\\\|\\/|$)
code-creation,Function,11,277252,0x225ca7a3920,1468,onParseComplete node:internal/url:532:25,0x2ee4c9dab80,^
code-source-info,0x225ca7a3920,33,14726,15412,,,
code-creation,Function,11,277291,0x225ca7a3f40,1916,getPathFromURLWin32 node:internal/url:1360:29,0x2ee4c9dbef8,^
code-source-info,0x225ca7a3f40,33,37724,39122,,,
code-creation,Function,11,277310,0x225ca7a4720,280, node:internal/url:636:21,0x2ee4c9daf28,^
code-source-info,0x225ca7a4720,33,18078,18155,,,
code-creation,Function,11,277326,0x225ca7a48a0,340,URLContext node:internal/url:160:14,0x2ee4c9da5d8,^
code-source-info,0x225ca7a48a0,33,3859,4081,,,
code-creation,RegExp,3,277426,0x225ca7a4a60,972,%2F|%5C
code-creation,Eval,10,278118,0x2f65a71c29e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js:1:1,0x2f65a71bf00,~
script-source,182,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js,'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\x09try {\n\x09\x09return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();\n\x09} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\x09try {\n\x09\x09$gOPD({}\x2C '');\n\x09} catch (e) {\n\x09\x09$gOPD = null; // this is IE 8\x2C which has a broken gOPD\n\x09}\n}\n\nvar throwTypeError = function () {\n\x09throw new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\x09? (function () {\n\x09\x09try {\n\x09\x09\x09// eslint-disable-next-line no-unused-expressions\x2C no-caller\x2C no-restricted-properties\n\x09\x09\x09arguments.callee; // IE 8 does not throw here\n\x09\x09\x09return throwTypeError;\n\x09\x09} catch (calleeThrows) {\n\x09\x09\x09try {\n\x09\x09\x09\x09// IE 8 throws on Object.getOwnPropertyDescriptor(arguments\x2C '')\n\x09\x09\x09\x09return $gOPD(arguments\x2C 'callee').get;\n\x09\x09\x09} catch (gOPDthrows) {\n\x09\x09\x09\x09return throwTypeError;\n\x09\x09\x09}\n\x09\x09}\n\x09}())\n\x09: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\x09'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError\x2C\n\x09'%Array%': Array\x2C\n\x09'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer\x2C\n\x09'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined\x2C\n\x09'%AsyncFromSyncIteratorPrototype%': undefined\x2C\n\x09'%AsyncFunction%': needsEval\x2C\n\x09'%AsyncGenerator%': needsEval\x2C\n\x09'%AsyncGeneratorFunction%': needsEval\x2C\n\x09'%AsyncIteratorPrototype%': needsEval\x2C\n\x09'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics\x2C\n\x09'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt\x2C\n\x09'%Boolean%': Boolean\x2C\n\x09'%DataView%': typeof DataView === 'undefined' ? undefined : DataView\x2C\n\x09'%Date%': Date\x2C\n\x09'%decodeURI%': decodeURI\x2C\n\x09'%decodeURIComponent%': decodeURIComponent\x2C\n\x09'%encodeURI%': encodeURI\x2C\n\x09'%encodeURIComponent%': encodeURIComponent\x2C\n\x09'%Error%': Error\x2C\n\x09'%eval%': eval\x2C // eslint-disable-line no-eval\n\x09'%EvalError%': EvalError\x2C\n\x09'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array\x2C\n\x09'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array\x2C\n\x09'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry\x2C\n\x09'%Function%': $Function\x2C\n\x09'%GeneratorFunction%': needsEval\x2C\n\x09'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array\x2C\n\x09'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array\x2C\n\x09'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array\x2C\n\x09'%isFinite%': isFinite\x2C\n\x09'%isNaN%': isNaN\x2C\n\x09'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined\x2C\n\x09'%JSON%': typeof JSON === 'object' ? JSON : undefined\x2C\n\x09'%Map%': typeof Map === 'undefined' ? undefined : Map\x2C\n\x09'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]())\x2C\n\x09'%Math%': Math\x2C\n\x09'%Number%': Number\x2C\n\x09'%Object%': Object\x2C\n\x09'%parseFloat%': parseFloat\x2C\n\x09'%parseInt%': parseInt\x2C\n\x09'%Promise%': typeof Promise === 'undefined' ? undefined : Promise\x2C\n\x09'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy\x2C\n\x09'%RangeError%': RangeError\x2C\n\x09'%ReferenceError%': ReferenceError\x2C\n\x09'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect\x2C\n\x09'%RegExp%': RegExp\x2C\n\x09'%Set%': typeof Set === 'undefined' ? undefined : Set\x2C\n\x09'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]())\x2C\n\x09'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer\x2C\n\x09'%String%': String\x2C\n\x09'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined\x2C\n\x09'%Symbol%': hasSymbols ? Symbol : undefined\x2C\n\x09'%SyntaxError%': $SyntaxError\x2C\n\x09'%ThrowTypeError%': ThrowTypeError\x2C\n\x09'%TypedArray%': TypedArray\x2C\n\x09'%TypeError%': $TypeError\x2C\n\x09'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array\x2C\n\x09'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray\x2C\n\x09'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array\x2C\n\x09'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array\x2C\n\x09'%URIError%': URIError\x2C\n\x09'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap\x2C\n\x09'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef\x2C\n\x09'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\x09var value;\n\x09if (name === '%AsyncFunction%') {\n\x09\x09value = getEvalledConstructor('async function () {}');\n\x09} else if (name === '%GeneratorFunction%') {\n\x09\x09value = getEvalledConstructor('function* () {}');\n\x09} else if (name === '%AsyncGeneratorFunction%') {\n\x09\x09value = getEvalledConstructor('async function* () {}');\n\x09} else if (name === '%AsyncGenerator%') {\n\x09\x09var fn = doEval('%AsyncGeneratorFunction%');\n\x09\x09if (fn) {\n\x09\x09\x09value = fn.prototype;\n\x09\x09}\n\x09} else if (name === '%AsyncIteratorPrototype%') {\n\x09\x09var gen = doEval('%AsyncGenerator%');\n\x09\x09if (gen) {\n\x09\x09\x09value = getProto(gen.prototype);\n\x09\x09}\n\x09}\n\n\x09INTRINSICS[name] = value;\n\n\x09return value;\n};\n\nvar LEGACY_ALIASES = {\n\x09'%ArrayBufferPrototype%': ['ArrayBuffer'\x2C 'prototype']\x2C\n\x09'%ArrayPrototype%': ['Array'\x2C 'prototype']\x2C\n\x09'%ArrayProto_entries%': ['Array'\x2C 'prototype'\x2C 'entries']\x2C\n\x09'%ArrayProto_forEach%': ['Array'\x2C 'prototype'\x2C 'forEach']\x2C\n\x09'%ArrayProto_keys%': ['Array'\x2C 'prototype'\x2C 'keys']\x2C\n\x09'%ArrayProto_values%': ['Array'\x2C 'prototype'\x2C 'values']\x2C\n\x09'%AsyncFunctionPrototype%': ['AsyncFunction'\x2C 'prototype']\x2C\n\x09'%AsyncGenerator%': ['AsyncGeneratorFunction'\x2C 'prototype']\x2C\n\x09'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction'\x2C 'prototype'\x2C 'prototype']\x2C\n\x09'%BooleanPrototype%': ['Boolean'\x2C 'prototype']\x2C\n\x09'%DataViewPrototype%': ['DataView'\x2C 'prototype']\x2C\n\x09'%DatePrototype%': ['Date'\x2C 'prototype']\x2C\n\x09'%ErrorPrototype%': ['Error'\x2C 'prototype']\x2C\n\x09'%EvalErrorPrototype%': ['EvalError'\x2C 'prototype']\x2C\n\x09'%Float32ArrayPrototype%': ['Float32Array'\x2C 'prototype']\x2C\n\x09'%Float64ArrayPrototype%': ['Float64Array'\x2C 'prototype']\x2C\n\x09'%FunctionPrototype%': ['Function'\x2C 'prototype']\x2C\n\x09'%Generator%': ['GeneratorFunction'\x2C 'prototype']\x2C\n\x09'%GeneratorPrototype%': ['GeneratorFunction'\x2C 'prototype'\x2C 'prototype']\x2C\n\x09'%Int8ArrayPrototype%': ['Int8Array'\x2C 'prototype']\x2C\n\x09'%Int16ArrayPrototype%': ['Int16Array'\x2C 'prototype']\x2C\n\x09'%Int32ArrayPrototype%': ['Int32Array'\x2C 'prototype']\x2C\n\x09'%JSONParse%': ['JSON'\x2C 'parse']\x2C\n\x09'%JSONStringify%': ['JSON'\x2C 'stringify']\x2C\n\x09'%MapPrototype%': ['Map'\x2C 'prototype']\x2C\n\x09'%NumberPrototype%': ['Number'\x2C 'prototype']\x2C\n\x09'%ObjectPrototype%': ['Object'\x2C 'prototype']\x2C\n\x09'%ObjProto_toString%': ['Object'\x2C 'prototype'\x2C 'toString']\x2C\n\x09'%ObjProto_valueOf%': ['Object'\x2C 'prototype'\x2C 'valueOf']\x2C\n\x09'%PromisePrototype%': ['Promise'\x2C 'prototype']\x2C\n\x09'%PromiseProto_then%': ['Promise'\x2C 'prototype'\x2C 'then']\x2C\n\x09'%Promise_all%': ['Promise'\x2C 'all']\x2C\n\x09'%Promise_reject%': ['Promise'\x2C 'reject']\x2C\n\x09'%Promise_resolve%': ['Promise'\x2C 'resolve']\x2C\n\x09'%RangeErrorPrototype%': ['RangeError'\x2C 'prototype']\x2C\n\x09'%ReferenceErrorPrototype%': ['ReferenceError'\x2C 'prototype']\x2C\n\x09'%RegExpPrototype%': ['RegExp'\x2C 'prototype']\x2C\n\x09'%SetPrototype%': ['Set'\x2C 'prototype']\x2C\n\x09'%SharedArrayBufferPrototype%': ['SharedArrayBuffer'\x2C 'prototype']\x2C\n\x09'%StringPrototype%': ['String'\x2C 'prototype']\x2C\n\x09'%SymbolPrototype%': ['Symbol'\x2C 'prototype']\x2C\n\x09'%SyntaxErrorPrototype%': ['SyntaxError'\x2C 'prototype']\x2C\n\x09'%TypedArrayPrototype%': ['TypedArray'\x2C 'prototype']\x2C\n\x09'%TypeErrorPrototype%': ['TypeError'\x2C 'prototype']\x2C\n\x09'%Uint8ArrayPrototype%': ['Uint8Array'\x2C 'prototype']\x2C\n\x09'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray'\x2C 'prototype']\x2C\n\x09'%Uint16ArrayPrototype%': ['Uint16Array'\x2C 'prototype']\x2C\n\x09'%Uint32ArrayPrototype%': ['Uint32Array'\x2C 'prototype']\x2C\n\x09'%URIErrorPrototype%': ['URIError'\x2C 'prototype']\x2C\n\x09'%WeakMapPrototype%': ['WeakMap'\x2C 'prototype']\x2C\n\x09'%WeakSetPrototype%': ['WeakSet'\x2C 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call\x2C Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply\x2C Array.prototype.splice);\nvar $replace = bind.call(Function.call\x2C String.prototype.replace);\nvar $strSlice = bind.call(Function.call\x2C String.prototype.slice);\nvar $exec = bind.call(Function.call\x2C RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|(["'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\x09var first = $strSlice(string\x2C 0\x2C 1);\n\x09var last = $strSlice(string\x2C -1);\n\x09if (first === '%' && last !== '%') {\n\x09\x09throw new $SyntaxError('invalid intrinsic syntax\x2C expected closing `%`');\n\x09} else if (last === '%' && first !== '%') {\n\x09\x09throw new $SyntaxError('invalid intrinsic syntax\x2C expected opening `%`');\n\x09}\n\x09var result = [];\n\x09$replace(string\x2C rePropName\x2C function (match\x2C number\x2C quote\x2C subString) {\n\x09\x09result[result.length] = quote ? $replace(subString\x2C reEscapeChar\x2C '$1') : number || match;\n\x09});\n\x09return result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name\x2C allowMissing) {\n\x09var intrinsicName = name;\n\x09var alias;\n\x09if (hasOwn(LEGACY_ALIASES\x2C intrinsicName)) {\n\x09\x09alias = LEGACY_ALIASES[intrinsicName];\n\x09\x09intrinsicName = '%' + alias[0] + '%';\n\x09}\n\n\x09if (hasOwn(INTRINSICS\x2C intrinsicName)) {\n\x09\x09var value = INTRINSICS[intrinsicName];\n\x09\x09if (value === needsEval) {\n\x09\x09\x09value = doEval(intrinsicName);\n\x09\x09}\n\x09\x09if (typeof value === 'undefined' && !allowMissing) {\n\x09\x09\x09throw new $TypeError('intrinsic ' + name + ' exists\x2C but is not available. Please file an issue!');\n\x09\x09}\n\n\x09\x09return {\n\x09\x09\x09alias: alias\x2C\n\x09\x09\x09name: intrinsicName\x2C\n\x09\x09\x09value: value\n\x09\x09};\n\x09}\n\n\x09throw new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name\x2C allowMissing) {\n\x09if (typeof name !== 'string' || name.length === 0) {\n\x09\x09throw new $TypeError('intrinsic name must be a non-empty string');\n\x09}\n\x09if (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\x09\x09throw new $TypeError('"allowMissing" argument must be a boolean');\n\x09}\n\n\x09if ($exec(/^%?[^%]*%?$/\x2C name) === null) {\n\x09\x09throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\x09}\n\x09var parts = stringToPath(name);\n\x09var intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\x09var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%'\x2C allowMissing);\n\x09var intrinsicRealName = intrinsic.name;\n\x09var value = intrinsic.value;\n\x09var skipFurtherCaching = false;\n\n\x09var alias = intrinsic.alias;\n\x09if (alias) {\n\x09\x09intrinsicBaseName = alias[0];\n\x09\x09$spliceApply(parts\x2C $concat([0\x2C 1]\x2C alias));\n\x09}\n\n\x09for (var i = 1\x2C isOwn = true; i < parts.length; i += 1) {\n\x09\x09var part = parts[i];\n\x09\x09var first = $strSlice(part\x2C 0\x2C 1);\n\x09\x09var last = $strSlice(part\x2C -1);\n\x09\x09if (\n\x09\x09\x09(\n\x09\x09\x09\x09(first === '"' || first === "'" || first === '`')\n\x09\x09\x09\x09|| (last === '"' || last === "'" || last === '`')\n\x09\x09\x09)\n\x09\x09\x09&& first !== last\n\x09\x09) {\n\x09\x09\x09throw new $SyntaxError('property names with quotes must have matching quotes');\n\x09\x09}\n\x09\x09if (part === 'constructor' || !isOwn) {\n\x09\x09\x09skipFurtherCaching = true;\n\x09\x09}\n\n\x09\x09intrinsicBaseName += '.' + part;\n\x09\x09intrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\x09\x09if (hasOwn(INTRINSICS\x2C intrinsicRealName)) {\n\x09\x09\x09value = INTRINSICS[intrinsicRealName];\n\x09\x09} else if (value != null) {\n\x09\x09\x09if (!(part in value)) {\n\x09\x09\x09\x09if (!allowMissing) {\n\x09\x09\x09\x09\x09throw new $TypeError('base intrinsic for ' + name + ' exists\x2C but the property is not available.');\n\x09\x09\x09\x09}\n\x09\x09\x09\x09return void undefined;\n\x09\x09\x09}\n\x09\x09\x09if ($gOPD && (i + 1) >= parts.length) {\n\x09\x09\x09\x09var desc = $gOPD(value\x2C part);\n\x09\x09\x09\x09isOwn = !!desc;\n\n\x09\x09\x09\x09// By convention\x2C when a data property is converted to an accessor\n\x09\x09\x09\x09// property to emulate a data property that does not suffer from\n\x09\x09\x09\x09// the override mistake\x2C that accessor's getter is marked with\n\x09\x09\x09\x09// an `originalValue` property. Here\x2C when we detect this\x2C we\n\x09\x09\x09\x09// uphold the illusion by pretending to see that original data\n\x09\x09\x09\x09// property\x2C i.e.\x2C returning the value rather than the getter\n\x09\x09\x09\x09// itself.\n\x09\x09\x09\x09if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\x09\x09\x09\x09\x09value = desc.get;\n\x09\x09\x09\x09} else {\n\x09\x09\x09\x09\x09value = value[part];\n\x09\x09\x09\x09}\n\x09\x09\x09} else {\n\x09\x09\x09\x09isOwn = hasOwn(value\x2C part);\n\x09\x09\x09\x09value = value[part];\n\x09\x09\x09}\n\n\x09\x09\x09if (isOwn && !skipFurtherCaching) {\n\x09\x09\x09\x09INTRINSICS[intrinsicRealName] = value;\n\x09\x09\x09}\n\x09\x09}\n\x09}\n\x09return value;\n};\n
code-source-info,0x2f65a71c29e,182,0,12719,C0O0C4O12719,,
code-creation,Function,10,278693,0x2f65a71dd1e,1596, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js:1:1,0x2f65a71c218,~
code-source-info,0x2f65a71dd1e
code-creation,Function,10,278875,0x2f65a71e72e,61, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js:29:14,0x2f65a71c370,~
code-source-info,0x2f65a71e72e,182,598,988,C0O598C5O714C9O753C11O775C26O885C34O892C40O918C44O923C56O954C60O976,,
code-creation,Eval,10,279487,0x2f65a71ff26,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has-symbols\\index.js:1:1,0x2f65a71fdc0,~
script-source,183,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has-symbols\\index.js,'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\x09if (typeof origSymbol !== 'function') { return false; }\n\x09if (typeof Symbol !== 'function') { return false; }\n\x09if (typeof origSymbol('foo') !== 'symbol') { return false; }\n\x09if (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\x09return hasSymbolSham();\n};\n
code-source-info,0x2f65a71ff26,183,0,420,C0O0C4O420,,
code-creation,Function,10,279534,0x2f65a720016,37, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has-symbols\\index.js:1:1,0x2f65a71fea0,~
code-source-info,0x2f65a720016,183,0,420,C0O0C5O32C10O46C13O65C16O32C18O93C21O93C25O93C27O114C31O129C36O419,,
code-creation,Eval,10,279893,0x2f65a7204f6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has-symbols\\shams.js:1:1,0x2f65a7203b0,~
script-source,184,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has-symbols\\shams.js,'use strict';\n\n/* eslint complexity: [2\x2C 18]\x2C max-statements: [2\x2C 33] */\nmodule.exports = function hasSymbols() {\n\x09if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\x09if (typeof Symbol.iterator === 'symbol') { return true; }\n\n\x09var obj = {};\n\x09var sym = Symbol('test');\n\x09var symObj = Object(sym);\n\x09if (typeof sym === 'string') { return false; }\n\n\x09if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\x09if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\x09// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\x09// if (sym instanceof Symbol) { return false; }\n\x09// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\x09// if (!(symObj instanceof Symbol)) { return false; }\n\n\x09// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\x09// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\x09var symVal = 42;\n\x09obj[sym] = symVal;\n\x09for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\x2C no-unreachable-loop\n\x09if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\x09if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\x09var syms = Object.getOwnPropertySymbols(obj);\n\x09if (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\x09if (!Object.prototype.propertyIsEnumerable.call(obj\x2C sym)) { return false; }\n\n\x09if (typeof Object.getOwnPropertyDescriptor === 'function') {\n\x09\x09var descriptor = Object.getOwnPropertyDescriptor(obj\x2C sym);\n\x09\x09if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\x09}\n\n\x09return true;\n};\n
code-source-info,0x2f65a7204f6,184,0,1761,C0O0C4O1761,,
code-creation,Function,10,279984,0x2f65a7205ce,10, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has-symbols\\shams.js:1:1,0x2f65a720470,~
code-source-info,0x2f65a7205ce,184,0,1761,C0O73C4O88C9O1760,,
code-creation,LazyCompile,10,280041,0x2f65a72091e,57,hasNativeSymbols C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has-symbols\\index.js:6:43,0x2f65a71ff58,~
code-source-info,0x2f65a72091e,183,156,418,C0O162C6O202C7O215C8O219C15O255C16O268C17O272C23O283C31O317C32O330C33O334C40O345C48O375C49O388C50O393C53O400C56O416,,
code-creation,LazyCompile,10,280138,0x2f65a720b06,382,hasSymbols C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has-symbols\\shams.js:4:37,0x2f65a720528,~
code-source-info,0x2f65a720b06,184,109,1759,C0O115C7O158C11O165C19O205C20O218C21O222C25O240C33O265C34O277C35O292C37O307C44O307C49O337C53O337C58O351C64O382C65O395C66O400C70O411C75O421C80O430C85O430C93O440C98O465C99O478C100O482C104O493C109O503C114O512C119O512C127O525C132O550C133O563C134O1002C137O1007C139O1016C143O1039C156O1032C169O1046C170O1059C174O1027C177O1128C181O1146C189O1169C193O1176C198O1176C204O1185C210O1193C215O1202C216O1215C217O1220C221O1238C229O1276C233O1283C238O1283C244O1307C250O1315C255O1324C256O1337C257O1353C261O1360C266O1360C272O1398C279O1405C285O1418C291O1422C296O1433C297O1446C298O1451C302O1463C307O1473C312O1494C317O1494C325O1512C326O1525C327O1530C331O1548C339O1610C343O1617C348O1617C355O1670C362O1676C367O1701C373O1712C378O1724C379O1737C380O1745C381O1757,,
code-creation,Eval,10,280906,0x2f65a7216be,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\function-bind\\index.js:1:1,0x2f65a721578,~
script-source,185,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\function-bind\\index.js,'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n
code-source-info,0x2f65a7216be,185,0,126,C0O0C4O126,,
code-creation,Function,10,280942,0x2f65a72175e,34, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\function-bind\\index.js:1:1,0x2f65a721638,~
code-source-info,0x2f65a72175e,185,0,126,C0O36C3O36C8O83C12O92C17O102C28O81C33O125,,
code-creation,Function,11,281265,0x225ca7a4ea0,1156, node:internal/validators:100:40,0x6682e9a890,^
code-source-info,0x225ca7a4ea0,17,2960,3485,,,
code-creation,Function,11,281295,0x225ca7a53a0,828,URL node:internal/url:620:14,0x2ee4c9dae50,^
code-source-info,0x225ca7a53a0,33,17608,17965,,,
code-creation,Function,11,281325,0x225ca7a5740,1784,trySelf node:internal/modules/cjs/loader:441:17,0x3341609fbf0,^
code-source-info,0x225ca7a5740,99,12991,13849,,,
code-creation,Eval,10,281423,0x2f65a722126,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\function-bind\\implementation.js:1:1,0x2f65a721fa0,~
script-source,186,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\function-bind\\implementation.js,'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments\x2C 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this\x2C\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that\x2C\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0\x2C target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder'\x2C 'return function (' + boundArgs.join('\x2C') + '){ return binder.apply(this\x2Carguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n
code-source-info,0x2f65a722126,186,0,1463,C0O0C4O1463,,
code-creation,Function,10,281500,0x2f65a72226e,53, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\function-bind\\implementation.js:1:1,0x2f65a7220a0,~
code-source-info,0x2f65a72226e,186,0,1463,C0O0C5O68C7O68C9O131C13O137C18O147C22O131C24O166C28O173C33O183C37O166C39O208C41O208C43O230C47O245C52O1462,,
code-creation,Eval,10,282179,0x2f65a722bd6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has\\src\\index.js:1:1,0x2f65a722a90,~
script-source,187,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has\\src\\index.js,'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call\x2C Object.prototype.hasOwnProperty);\n
code-source-info,0x2f65a722bd6,187,0,129,C0O0C4O129,,
code-creation,Function,10,282216,0x2f65a722c86,48, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\has\\src\\index.js:1:1,0x2f65a722b50,~
code-source-info,0x2f65a722c86,187,0,129,C0O26C3O26C8O75C13O80C17O89C22O95C26O102C31O112C36O75C42O68C47O128,,
code-creation,Eval,10,282918,0x2f65a723a06,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\call-bind\\callBound.js:1:1,0x2f65a723890,~
script-source,188,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\call-bind\\callBound.js,'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name\x2C allowMissing) {\n\x09var intrinsic = GetIntrinsic(name\x2C !!allowMissing);\n\x09if (typeof intrinsic === 'function' && $indexOf(name\x2C '.prototype.') > -1) {\n\x09\x09return callBind(intrinsic);\n\x09}\n\x09return intrinsic;\n};\n
code-source-info,0x2f65a723a06,188,0,413,C0O0C4O413,,
code-creation,Function,10,282966,0x2f65a723afe,53, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\call-bind\\callBound.js:1:1,0x2f65a723980,~
code-source-info,0x2f65a723afe,188,0,413,C0O0C5O34C8O34C12O34C14O76C17O76C21O76C23O107C32O116C37O107C41O107C43O160C47O175C52O412,,
code-creation,Function,11,283163,0x225ca7a5ea0,2568, node:internal/url:682:12,0x2ee4c9db018,^
code-source-info,0x225ca7a5ea0,33,19424,20719,,,
code-creation,Function,11,283186,0x225ca7a6920,168,toString node:internal/url:730:11,0x2ee4c9db068,^
code-source-info,0x225ca7a6920,33,20787,20827,,,
code-creation,Function,11,283204,0x225ca7a6a40,336,initSearchParams node:internal/url:1016:26,0x2ee4c9dbb98,^
code-source-info,0x225ca7a6a40,33,28064,28185,,,
code-creation,Function,11,283223,0x225ca7a6c00,620,get pathname node:internal/url:875:15,0x2ee4c9db718,^
code-source-info,0x225ca7a6c00,33,24290,24490,,,
code-creation,Function,11,283247,0x225ca7a6ee0,876, node:internal/validators:153:3,0x6682e9aa90,^
code-source-info,0x225ca7a6ee0,17,4517,5088,,,
code-creation,Eval,10,283657,0x2f65a724bbe,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\call-bind\\index.js:1:1,0x2f65a7249d0,~
script-source,189,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\call-bind\\index.js,'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%'\x2C true) || bind.call($call\x2C $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%'\x2C true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%'\x2C true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\x09try {\n\x09\x09$defineProperty({}\x2C 'a'\x2C { value: 1 });\n\x09} catch (e) {\n\x09\x09// IE 8 has a broken defineProperty\n\x09\x09$defineProperty = null;\n\x09}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\x09var func = $reflectApply(bind\x2C $call\x2C arguments);\n\x09if ($gOPD && $defineProperty) {\n\x09\x09var desc = $gOPD(func\x2C 'length');\n\x09\x09if (desc.configurable) {\n\x09\x09\x09// original length\x2C plus the receiver\x2C minus any additional arguments (after the receiver)\n\x09\x09\x09$defineProperty(\n\x09\x09\x09\x09func\x2C\n\x09\x09\x09\x09'length'\x2C\n\x09\x09\x09\x09{ value: 1 + $max(0\x2C originalFunction.length - (arguments.length - 1)) }\n\x09\x09\x09);\n\x09\x09}\n\x09}\n\x09return func;\n};\n\nvar applyBind = function applyBind() {\n\x09return $reflectApply(bind\x2C $apply\x2C arguments);\n};\n\nif ($defineProperty) {\n\x09$defineProperty(module.exports\x2C 'apply'\x2C { value: applyBind });\n} else {\n\x09module.exports.apply = applyBind;\n}\n
code-source-info,0x2f65a724bbe,189,0,1306,C0O0C4O1306,,
code-creation,Function,10,283748,0x2f65a724dde,211, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\call-bind\\index.js:1:1,0x2f65a724b38,~
code-source-info,0x2f65a724dde,189,0,1306,C0O0C5O26C8O26C12O26C14O71C17O71C22O111C25O111C29O111C31O167C34O167C38O167C40O230C45O230C55O276C66O276C72O230C74O310C79O310C84O310C86O389C91O389C96O389C98O447C101O447C105O447C107O476C114O508C127O508C145O603C146O619C152O633C156O648C160O1097C165O1172C169O1196C172O1219C187O1246C191O1196C198O1277C205O1291C210O1305,,
scavenge,begin,0,250000,1671211992646
new,MemoryChunk,0x20cab780000,262144
scavenge,end,0,250000,1671211992646
code-creation,LazyCompile,10,284501,0x2f65a72576e,538,GetIntrinsic C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js:253:39,0x2f65a71c510,~
code-source-info,0x2f65a72576e
code-creation,LazyCompile,10,284667,0x2f65a725c7e,128,stringToPath C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js:210:41,0x2f65a71c448,~
code-source-info,0x2f65a725c7e,182,8857,9387,C0O8857C5O8881C18O8881C24O8918C32O8918C38O8942C40O8952C47O8968C52O8981C62O8987C67O8981C68O9063C70O9072C77O9089C82O9102C92O9108C97O9102C98O9193C100O9193C102O9198C112O9215C120O9198C125O9371C127O9385,,
code-creation,RegExp,3,284776,0x225ca7a72c0,3420,[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|(["'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))
code-creation,LazyCompile,10,284815,0x2f65a725e76,50, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js:219:40,0x2f65a725bc0,~
code-source-info,0x2f65a725e76,182,9236,9367,C0O9274C6O9288C13O9298C31O9306C40O9348C44O9296C49O9366,,
code-creation,LazyCompile,10,284883,0x2f65a72608e,167,getBaseIntrinsic C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js:226:49,0x2f65a71c4c0,~
code-source-info,0x2f65a72608e,182,9459,10110,C0O9503C3O9522C9O9526C16O9569C21O9591C25O9610C29O9637C32O9630C38O9641C42O9653C48O9657C55O9708C60O9718C64O9737C66O9747C71O9767C74O9775C79O9804C87O9841C89O9860C97O9894C103O9901C109O9866C114O9860C115O9967C122O9986C128O10002C134O10027C140O10037C141O10043C149O10079C155O10086C161O10049C166O10043,,
code-creation,RegExp,3,284992,0x225ca7a8080,1104,^%?[^%]*%?$
code-creation,LazyCompile,10,285114,0x2f65a726416,104,callBind C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\call-bind\\index.js:23:35,0x2f65a724bf0,~
code-source-info,0x2f65a726416,189,667,1078,C0O667C2O700C14O700C20O740C26O753C28O785C34O785C40O819C46O932C52O953C65O1015C70O1035C74O1042C77O1022C81O990C86O988C96O932C101O1064C103O1076,,
code-creation,Eval,10,286099,0x2f65a727c06,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\object-inspect\\index.js:1:1,0x2f65a7276f0,~
script-source,190,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\object-inspect\\index.js,var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype\x2C 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype\x2C 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie\x2C `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num\x2C str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/\x2C str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str\x2C intStr.length + 1);\n            return $replace.call(intStr\x2C sepRegex\x2C '$&_') + '.' + $replace.call($replace.call(dec\x2C /([0-9]{3})/g\x2C '$&_')\x2C /_$/\x2C '');\n        }\n    }\n    return $replace.call(str\x2C sepRegex\x2C '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj\x2C options\x2C depth\x2C seen) {\n    var opts = options || {};\n\n    if (has(opts\x2C 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option "quoteStyle" must be "single" or "double"');\n    }\n    if (\n        has(opts\x2C 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option "maxStringLength"\x2C if provided\x2C must be a positive integer\x2C Infinity\x2C or `null`');\n    }\n    var customInspect = has(opts\x2C 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option "customInspect"\x2C if provided\x2C must be `true`\x2C `false`\x2C or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts\x2C 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent\x2C 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option "indent" must be "\\\\t"\x2C an integer > 0\x2C or `null`');\n    }\n    if (has(opts\x2C 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option "numericSeparator"\x2C if provided\x2C must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj\x2C opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj\x2C str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj\x2C bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts\x2C depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen\x2C obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value\x2C from\x2C noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts\x2C 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value\x2C newOpts\x2C depth + 1\x2C seen);\n        }\n        return inspect_(value\x2C opts\x2C depth + 1\x2C seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines\x2C regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj\x2C inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys\x2C '\x2C ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj)\x2C /^(Symbol\\(.*\\))_[^)]*$/\x2C '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value)\x2C 'double'\x2C opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj\x2C inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs\x2C indent) + ']';\n        }\n        return '[ ' + $join.call(xs\x2C '\x2C ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj\x2C inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj\x2C 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause)\x2C parts)\x2C '\x2C ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts\x2C '\x2C ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj\x2C { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        mapForEach.call(obj\x2C function (value\x2C key) {\n            mapParts.push(inspect(key\x2C obj\x2C true) + ' => ' + inspect(value\x2C obj));\n        });\n        return collectionOf('Map'\x2C mapSize.call(obj)\x2C mapParts\x2C indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        setForEach.call(obj\x2C function (value) {\n            setParts.push(inspect(value\x2C obj));\n        });\n        return collectionOf('Set'\x2C setSize.call(obj)\x2C setParts\x2C indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj\x2C inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj)\x2C 8\x2C -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([]\x2C stringTag || []\x2C protoTag || [])\x2C ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys\x2C indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys\x2C '\x2C ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s\x2C defaultStyle\x2C opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s)\x2C /"/g\x2C '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec\x2C so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj\x2C key) {\n    return hasOwn.call(obj\x2C key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f)\x2C /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs\x2C x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0\x2C l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround\x2C pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x\x2C weakMapHas);\n        try {\n            weakSetHas.call(x\x2C weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround\x2C pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround\x2C pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x\x2C weakSetHas);\n        try {\n            weakMapHas.call(x\x2C weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround\x2C pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str\x2C opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str\x2C 0\x2C opts.maxStringLength)\x2C opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str\x2C /(['\\\\])/g\x2C '\\\\$1')\x2C /[\\x00-\\x1f]/g\x2C lowbyte);\n    return wrapQuotes(s\x2C 'single'\x2C opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b'\x2C\n        9: 't'\x2C\n        10: 'n'\x2C\n        12: 'f'\x2C\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type\x2C size\x2C entries\x2C indent) {\n    var joinedEntries = indent ? indentedJoin(entries\x2C indent) : $join.call(entries\x2C '\x2C ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i]\x2C '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts\x2C depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1)\x2C ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent\x2C\n        prev: $join.call(Array(depth + 1)\x2C baseIndent)\n    };\n}\n\nfunction indentedJoin(xs\x2C indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs\x2C '\x2C' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj\x2C inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj\x2C i) ? inspect(obj[i]\x2C obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj\x2C key)) { continue; } // eslint-disable-line no-restricted-syntax\x2C no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax\x2C no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols\x2C which are stored as strings\x2C from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax\x2C no-continue\n        } else if ($test.call(/[^\\w$]/\x2C key)) {\n            xs.push(inspect(key\x2C obj) + ': ' + inspect(obj[key]\x2C obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key]\x2C obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj\x2C syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]]\x2C obj));\n            }\n        }\n    }\n    return xs;\n}\n
code-source-info,0x2f65a727c06,190,0,18486,C0O0C4O18486,,
code-creation,Function,10,286701,0x2f65a7289d6,981, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\object-inspect\\index.js:1:1,0x2f65a727b80,~
code-source-info,0x2f65a7289d
code-creation,Eval,10,287237,0x2f65a72a7f6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\object-inspect\\util.inspect.js:1:1,0x2f65a72a6b0,~
script-source,191,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\object-inspect\\util.inspect.js,module.exports = require('util').inspect;\n
code-source-info,0x2f65a72a7f6,191,0,42,C0O0C4O42,,
code-creation,Function,10,287272,0x2f65a72a886,18, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\object-inspect\\util.inspect.js:1:1,0x2f65a72a770,~
code-source-info,0x2f65a72a886,191,0,42,C0O0C3O17C8O32C12O15C17O41,,
code-creation,LazyCompile,10,287358,0x2f65a72aa76,78,isSymbol C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\object-inspect\\index.js:272:18,0x2f65a727f58,~
code-source-info,0x2f65a72aa76,190,11948,12312,C0O11960C4O11993C14O12049C17O12038C20O12056C21O12067C27O12106C28O12118C29O12129C41O12169C43O12192C44O12205C48O12230C51O12242C56O12242C61O12261C62O12273C76O12297C77O12310,,
code-creation,LazyCompile,10,287454,0x2f65a72ac56,48,callBoundIntrinsic C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\call-bind\\callBound.js:9:45,0x2f65a723a38,~
code-source-info,0x2f65a72ac56,188,204,411,C0O244C5O265C8O244C14O281C24O320C32O350C37O360C40O367C44O387C45O392C47O409,,
code-creation,Function,11,287574,0x225ca7a8540,3704,GetIntrinsic C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js:253:39,0x2f65a71c510,^
code-source-info,0x225ca7a8540,182,10151,12717,,,
code-creation,Function,11,287600,0x225ca7a9420,304, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js:219:40,0x2f65a725bc0,^
code-source-info,0x225ca7a9420,182,9236,9367,,,
code-creation,Function,11,287621,0x225ca7a95c0,540,encodeRealpathResult node:fs:2371:30,0x3f9d3569c40,^
code-source-info,0x225ca7a95c0,77,65392,65658,,,
code-creation,Function,11,287644,0x225ca7a9840,800,stringToPath C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\get-intrinsic\\index.js:210:41,0x2f65a71c448,^
code-source-info,0x225ca7a9840,182,8857,9387,,,
code-creation,Eval,10,289066,0x2f65a72bb66,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:1:1,0x2f65a72b970,~
script-source,192,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js,'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source\x2C options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target\x2C source\x2C options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype\x2C source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target\x2C source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target\x2C options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item\x2C i) {\n            if (has.call(target\x2C i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem\x2C item\x2C options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc\x2C key) {\n        var value = source[key];\n\n        if (has.call(acc\x2C key)) {\n            acc[key] = merge(acc[key]\x2C value\x2C options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }\x2C mergeTarget);\n};\n\nvar assign = function assignSingleSource(target\x2C source) {\n    return Object.keys(source).reduce(function (acc\x2C key) {\n        acc[key] = source[key];\n        return acc;\n    }\x2C target);\n};\n\nvar decode = function (str\x2C decoder\x2C charset) {\n    var strWithoutPlus = str.replace(/\\+/g\x2C ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws\x2C no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi\x2C unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str\x2C defaultEncoder\x2C charset\x2C kind\x2C format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi\x2C function ($0) {\n            return '%26%23' + parseInt($0.slice(2)\x2C 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2\x2C "before"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }\x2C prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj\x2C prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a\x2C b) {\n    return [].concat(a\x2C b);\n};\n\nvar maybeMap = function maybeMap(val\x2C fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject\x2C\n    assign: assign\x2C\n    combine: combine\x2C\n    compact: compact\x2C\n    decode: decode\x2C\n    encode: encode\x2C\n    isBuffer: isBuffer\x2C\n    isRegExp: isRegExp\x2C\n    maybeMap: maybeMap\x2C\n    merge: merge\n};\n
code-source-info,0x2f65a72bb66,192,0,6823,C0O0C4O6823,,
code-creation,Function,10,289375,0x2f65a72c1b6,179, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:1:1,0x2f65a72bae0,~
code-source-info,0x2f65a72c1b6,192,0,6823,C0O0C5O29C8O29C12O29C14O62C18O69C23O79C27O62C29O109C33O115C37O109C39O140C44O317C47O140C49O342C53O342C55O803C59O803C61O1094C66O2722C71O2913C76O3310C81O5326C86O5952C91O6066C96O6274C101O6346C106O6574C113O6612C119O6639C125O6660C131O6682C137O6703C143O6723C149O6745C155O6769C161O6793C167O6814C173O6589C178O6822,,
code-creation,Function,10,289424,0x2f65a72c38e,85, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:8:26,0x2f65a72bb98,~
code-source-info,0x2f65a72c38e,192,150,317,C0O171C3O192C5O197C9O197C14O225C24O240C39O261C47O261C52O257C56O275C61O275C65O234C69O225C74O206C79O179C82O302C84O315,,
code-creation,Eval,10,289795,0x2f65a72d1ce,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\formats.js:1:1,0x2f65a72d068,~
script-source,193,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\formats.js,'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738'\x2C\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986\x2C\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value\x2C percentTwenties\x2C '+');\n        }\x2C\n        RFC3986: function (value) {\n            return String(value);\n        }\n    }\x2C\n    RFC1738: Format.RFC1738\x2C\n    RFC3986: Format.RFC3986\n};\n
code-source-info,0x2f65a72d1ce,193,0,476,C0O0C4O476,,
code-creation,Function,10,289847,0x2f65a72d596,95, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\formats.js:1:1,0x2f65a72d148,~
code-source-info,0x2f65a72d596,193,0,476,C0O0C5O29C9O36C14O46C18O29C20O77C24O77C26O99C31O152C36O193C44O218C49O237C57O346C71O436C79O465C89O167C94O475,,
code-creation,Function,11,290326,0x225ca7a9bc0,4384,getEncodingOps node:buffer:678:24,0x6682ea7868,^
code-source-info,0x225ca7a9bc0,18,20608,22457,,,
code-creation,Function,11,290354,0x225ca7aad40,560, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:8:26,0x2f65a72bb98,^
code-source-info,0x225ca7aad40,192,150,317,,,
code-creation,Eval,10,290613,0x2f65a72e65e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:1:1,0x2f65a72e458,~
script-source,194,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js,'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false\x2C\n    allowPrototypes: false\x2C\n    allowSparse: false\x2C\n    arrayLimit: 20\x2C\n    charset: 'utf-8'\x2C\n    charsetSentinel: false\x2C\n    comma: false\x2C\n    decoder: utils.decode\x2C\n    delimiter: '&'\x2C\n    depth: 5\x2C\n    ignoreQueryPrefix: false\x2C\n    interpretNumericEntities: false\x2C\n    parameterLimit: 1000\x2C\n    parseArrays: true\x2C\n    plainObjects: false\x2C\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g\x2C function ($0\x2C numberStr) {\n        return String.fromCharCode(parseInt(numberStr\x2C 10));\n    });\n};\n\nvar parseArrayValue = function (val\x2C options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf('\x2C') > -1) {\n        return val.split('\x2C');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1\x2C or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character\x2C such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark\x2C indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str\x2C options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/\x2C '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter\x2C limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key\x2C val;\n        if (pos === -1) {\n            key = options.decoder(part\x2C defaults.decoder\x2C charset\x2C 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0\x2C pos)\x2C defaults.decoder\x2C charset\x2C 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1)\x2C options)\x2C\n                function (encodedVal) {\n                    return options.decoder(encodedVal\x2C defaults.decoder\x2C charset\x2C 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj\x2C key)) {\n            obj[key] = utils.combine(obj[key]\x2C val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain\x2C val\x2C options\x2C valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val\x2C options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1\x2C -1) : root;\n            var index = parseInt(cleanRoot\x2C 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey\x2C val\x2C options\x2C valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g\x2C '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0\x2C segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects\x2C optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype\x2C parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype\x2C segment[1].slice(1\x2C -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder\x2C just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys\x2C val\x2C options\x2C valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8\x2C iso-8859-1\x2C or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots\x2C\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes\x2C\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse\x2C\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit\x2C\n        charset: charset\x2C\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel\x2C\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma\x2C\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder\x2C\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter\x2C\n        // eslint-disable-next-line no-implicit-coercion\x2C no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth\x2C\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true\x2C\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities\x2C\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit\x2C\n        parseArrays: opts.parseArrays !== false\x2C\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects\x2C\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str\x2C opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str\x2C options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key\x2C tempObj[key]\x2C options\x2C typeof str === 'string');\n        obj = utils.merge(obj\x2C newObj\x2C options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n
code-source-info,0x2f65a72e65e,194,0,9374,C0O0C4O9374,,
code-creation,Function,10,290938,0x2f65a72eb46,113, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:1:1,0x2f65a72e5d8,~
code-source-info,0x2f65a72eb46,194,0,9374,C0O0C5O27C8O27C12O27C14O58C18O65C23O75C27O58C29O105C33O111C37O105C39O136C47O319C57O136C59O567C63O567C65O742C69O742C71O1279C73O1279C75O1486C77O1486C79O1550C83O1550C85O3700C89O3700C91O4844C95O4844C97O6377C101O6377C103O8601C107O8616C112O9373,,
code-creation,Eval,10,291601,0x2f65a72fe8e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\view.js:1:1,0x2f65a72fcb8,~
script-source,195,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\view.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name\x2C options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.slice(1)\n    debug('require "%s"'\x2C mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module "' + mod + '" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup "%s"'\x2C name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root\x2C name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir\x2C file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options\x2C callback) {\n  debug('render "%s"'\x2C this.path);\n  this.engine(this.path\x2C options\x2C callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir\x2C file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir\x2C file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir\x2C basename(file\x2C ext)\x2C 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat\x2C maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat "%s"'\x2C path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n
code-source-info,0x2f65a72fe8e,195,0,3325,C0O0C4O3325,,
code-creation,Function,10,291744,0x2f65a73012e,140, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\view.js:1:1,0x2f65a72fe08,~
code-source-info,0x2f65a73012e,195,0,3325,C0O0C20O238C26O238C34O254C38O238C40O283C46O283C51O309C57O309C61O309C63O386C67O381C69O415C73O410C75O444C79O439C81O469C85O464C87O494C91O489C93O543C95O558C99O1943C108O1960C112O2466C121O2483C125O2730C134O2748C139O3324,,
code-creation,LazyCompile,10,291922,0x2f65a731106,11,get ReadStream node:fs:2984:17,0x3f9d356a280,~
code-source-info,0x2f65a731106,77,81919,81976,C0O81929C3O81929C6O81953C10O81971,,
code-creation,LazyCompile,10,291965,0x2f65a731236,71,lazyLoadStreams node:fs:2841:25,0x3f9d356a148,~
code-source-info,0x2f65a731236,77,79381,79554,C0O79389C6O79413C12O79444C17O79416C30O79428C43O79482C50O79497C56O79516C63O79532C70O79553,,
code-creation,Eval,10,292321,0x2f65a731a16,5, node:internal/fs/streams:1:1,0x2f65a731690,~
script-source,196,node:internal/fs/streams,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n} = require('internal/validators');\x0d\nconst { errorOrDestroy } = require('internal/streams/destroy');\x0d\nconst fs = require('fs');\x0d\nconst { kRef\x2C kUnref\x2C FileHandle } = require('internal/fs/promises');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  copyObject\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  validatePath\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { Readable\x2C Writable\x2C finished } = require('stream');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst kIoDone = Symbol('kIoDone');\x0d\nconst kIsPerformingIO = Symbol('kIsPerformingIO');\x0d\n\x0d\nconst kFs = Symbol('kFs');\x0d\nconst kHandle = Symbol('kHandle');\x0d\n\x0d\nfunction _construct(callback) {\x0d\n  const stream = this;\x0d\n  if (typeof stream.fd === 'number') {\x0d\n    callback();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (stream.open !== openWriteFs && stream.open !== openReadFs) {\x0d\n    // Backwards compat for monkey patching open().\x0d\n    const orgEmit = stream.emit;\x0d\n    stream.emit = function(...args) {\x0d\n      if (args[0] === 'open') {\x0d\n        this.emit = orgEmit;\x0d\n        callback();\x0d\n        ReflectApply(orgEmit\x2C this\x2C args);\x0d\n      } else if (args[0] === 'error') {\x0d\n        this.emit = orgEmit;\x0d\n        callback(args[1]);\x0d\n      } else {\x0d\n        ReflectApply(orgEmit\x2C this\x2C args);\x0d\n      }\x0d\n    };\x0d\n    stream.open();\x0d\n  } else {\x0d\n    stream[kFs].open(stream.path\x2C stream.flags\x2C stream.mode\x2C (er\x2C fd) => {\x0d\n      if (er) {\x0d\n        callback(er);\x0d\n      } else {\x0d\n        stream.fd = fd;\x0d\n        callback();\x0d\n        stream.emit('open'\x2C stream.fd);\x0d\n        stream.emit('ready');\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// This generates an fs operations structure for a FileHandle\x0d\nconst FileHandleOperations = (handle) => {\x0d\n  return {\x0d\n    open: (path\x2C flags\x2C mode\x2C cb) => {\x0d\n      throw new ERR_METHOD_NOT_IMPLEMENTED('open()');\x0d\n    }\x2C\x0d\n    close: (fd\x2C cb) => {\x0d\n      handle[kUnref]();\x0d\n      PromisePrototypeThen(handle.close()\x2C\x0d\n                           () => cb()\x2C cb);\x0d\n    }\x2C\x0d\n    read: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\x0d\n      PromisePrototypeThen(handle.read(buf\x2C offset\x2C length\x2C pos)\x2C\x0d\n                           (r) => cb(null\x2C r.bytesRead\x2C r.buffer)\x2C\x0d\n                           (err) => cb(err\x2C 0\x2C buf));\x0d\n    }\x2C\x0d\n    write: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\x0d\n      PromisePrototypeThen(handle.write(buf\x2C offset\x2C length\x2C pos)\x2C\x0d\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffer)\x2C\x0d\n                           (err) => cb(err\x2C 0\x2C buf));\x0d\n    }\x2C\x0d\n    writev: (fd\x2C buffers\x2C pos\x2C cb) => {\x0d\n      PromisePrototypeThen(handle.writev(buffers\x2C pos)\x2C\x0d\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffers)\x2C\x0d\n                           (err) => cb(err\x2C 0\x2C buffers));\x0d\n    }\x0d\n  };\x0d\n};\x0d\n\x0d\nfunction close(stream\x2C err\x2C cb) {\x0d\n  if (!stream.fd) {\x0d\n    // TODO(ronag)\x0d\n    // stream.closed = true;\x0d\n    cb(err);\x0d\n  } else {\x0d\n    stream[kFs].close(stream.fd\x2C (er) => {\x0d\n      stream.closed = true;\x0d\n      cb(er || err);\x0d\n    });\x0d\n    stream.fd = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importFd(stream\x2C options) {\x0d\n  if (typeof options.fd === 'number') {\x0d\n    // When fd is a raw descriptor\x2C we must keep our fingers crossed\x0d\n    // that the descriptor won't get closed\x2C or worse\x2C replaced with\x0d\n    // another one\x0d\n    // https://github.com/nodejs/node/issues/35862\x0d\n    stream[kFs] = options.fs || fs;\x0d\n    return options.fd;\x0d\n  } else if (typeof options.fd === 'object' &&\x0d\n             options.fd instanceof FileHandle) {\x0d\n    // When fd is a FileHandle we can listen for 'close' events\x0d\n    if (options.fs) {\x0d\n      // FileHandle is not supported with custom fs operations\x0d\n      throw new ERR_METHOD_NOT_IMPLEMENTED('FileHandle with fs');\x0d\n    }\x0d\n    stream[kHandle] = options.fd;\x0d\n    stream[kFs] = FileHandleOperations(stream[kHandle]);\x0d\n    stream[kHandle][kRef]();\x0d\n    options.fd.on('close'\x2C FunctionPrototypeBind(stream.close\x2C stream));\x0d\n    return options.fd.fd;\x0d\n  }\x0d\n\x0d\n  throw ERR_INVALID_ARG_TYPE('options.fd'\x2C\x0d\n                             ['number'\x2C 'FileHandle']\x2C options.fd);\x0d\n}\x0d\n\x0d\nfunction ReadStream(path\x2C options) {\x0d\n  if (!(this instanceof ReadStream))\x0d\n    return new ReadStream(path\x2C options);\x0d\n\x0d\n  // A little bit bigger buffer and water marks by default\x0d\n  options = copyObject(getOptions(options\x2C {}));\x0d\n  if (options.highWaterMark === undefined)\x0d\n    options.highWaterMark = 64 * 1024;\x0d\n\x0d\n  if (options.autoDestroy === undefined) {\x0d\n    options.autoDestroy = false;\x0d\n  }\x0d\n\x0d\n  if (options.fd == null) {\x0d\n    this.fd = null;\x0d\n    this[kFs] = options.fs || fs;\x0d\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\x0d\n\x0d\n    // Path will be ignored when fd is specified\x2C so it can be falsy\x0d\n    this.path = toPathIfFileURL(path);\x0d\n    this.flags = options.flags === undefined ? 'r' : options.flags;\x0d\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\x0d\n\x0d\n    validatePath(this.path);\x0d\n  } else {\x0d\n    this.fd = getValidatedFd(importFd(this\x2C options));\x0d\n  }\x0d\n\x0d\n  options.autoDestroy = options.autoClose === undefined ?\x0d\n    true : options.autoClose;\x0d\n\x0d\n  validateFunction(this[kFs].read\x2C 'options.fs.read');\x0d\n\x0d\n  if (options.autoDestroy) {\x0d\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\x0d\n  }\x0d\n\x0d\n  this.start = options.start;\x0d\n  this.end = options.end;\x0d\n  this.pos = undefined;\x0d\n  this.bytesRead = 0;\x0d\n  this.closed = false;\x0d\n  this[kIsPerformingIO] = false;\x0d\n\x0d\n  if (this.start !== undefined) {\x0d\n    validateInteger(this.start\x2C 'start'\x2C 0);\x0d\n\x0d\n    this.pos = this.start;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (this.end === undefined) {\x0d\n    this.end = Infinity;\x0d\n  } else if (this.end !== Infinity) {\x0d\n    validateInteger(this.end\x2C 'end'\x2C 0);\x0d\n\x0d\n    if (this.start !== undefined && this.start > this.end) {\x0d\n      throw new ERR_OUT_OF_RANGE(\x0d\n        'start'\x2C\x0d\n        `<= "end" (here: ${this.end})`\x2C\x0d\n        this.start\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ReflectApply(Readable\x2C this\x2C [options]);\x0d\n}\x0d\nObjectSetPrototypeOf(ReadStream.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(ReadStream\x2C Readable);\x0d\n\x0d\nObjectDefineProperty(ReadStream.prototype\x2C 'autoClose'\x2C {\x0d\n  get() {\x0d\n    return this._readableState.autoDestroy;\x0d\n  }\x2C\x0d\n  set(val) {\x0d\n    this._readableState.autoDestroy = val;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst openReadFs = deprecate(function() {\x0d\n  // Noop.\x0d\n}\x2C 'ReadStream.prototype.open() is deprecated'\x2C 'DEP0135');\x0d\nReadStream.prototype.open = openReadFs;\x0d\n\x0d\nReadStream.prototype._construct = _construct;\x0d\n\x0d\nReadStream.prototype._read = function(n) {\x0d\n  n = this.pos !== undefined ?\x0d\n    MathMin(this.end - this.pos + 1\x2C n) :\x0d\n    MathMin(this.end - this.bytesRead + 1\x2C n);\x0d\n\x0d\n  if (n <= 0) {\x0d\n    this.push(null);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const buf = Buffer.allocUnsafeSlow(n);\x0d\n\x0d\n  this[kIsPerformingIO] = true;\x0d\n  this[kFs]\x0d\n    .read(this.fd\x2C buf\x2C 0\x2C n\x2C this.pos\x2C (er\x2C bytesRead\x2C buf) => {\x0d\n      this[kIsPerformingIO] = false;\x0d\n\x0d\n      // Tell ._destroy() that it's safe to close the fd now.\x0d\n      if (this.destroyed) {\x0d\n        this.emit(kIoDone\x2C er);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (er) {\x0d\n        errorOrDestroy(this\x2C er);\x0d\n      } else if (bytesRead > 0) {\x0d\n        if (this.pos !== undefined) {\x0d\n          this.pos += bytesRead;\x0d\n        }\x0d\n\x0d\n        this.bytesRead += bytesRead;\x0d\n\x0d\n        if (bytesRead !== buf.length) {\x0d\n          // Slow path. Shrink to fit.\x0d\n          // Copy instead of slice so that we don't retain\x0d\n          // large backing buffer for small reads.\x0d\n          const dst = Buffer.allocUnsafeSlow(bytesRead);\x0d\n          buf.copy(dst\x2C 0\x2C 0\x2C bytesRead);\x0d\n          buf = dst;\x0d\n        }\x0d\n\x0d\n        this.push(buf);\x0d\n      } else {\x0d\n        this.push(null);\x0d\n      }\x0d\n    });\x0d\n};\x0d\n\x0d\nReadStream.prototype._destroy = function(err\x2C cb) {\x0d\n  // Usually for async IO it is safe to close a file descriptor\x0d\n  // even when there are pending operations. However\x2C due to platform\x0d\n  // differences file IO is implemented using synchronous operations\x0d\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\x0d\n  // to close while used in a pending read or write operation. Wait for\x0d\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\x0d\n  if (this[kIsPerformingIO]) {\x0d\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\x0d\n  } else {\x0d\n    close(this\x2C err\x2C cb);\x0d\n  }\x0d\n};\x0d\n\x0d\nReadStream.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') finished(this\x2C cb);\x0d\n  this.destroy();\x0d\n};\x0d\n\x0d\nObjectDefineProperty(ReadStream.prototype\x2C 'pending'\x2C {\x0d\n  get() { return this.fd === null; }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\nfunction WriteStream(path\x2C options) {\x0d\n  if (!(this instanceof WriteStream))\x0d\n    return new WriteStream(path\x2C options);\x0d\n\x0d\n  options = copyObject(getOptions(options\x2C {}));\x0d\n\x0d\n  // Only buffers are supported.\x0d\n  options.decodeStrings = true;\x0d\n\x0d\n  if (options.fd == null) {\x0d\n    this.fd = null;\x0d\n    this[kFs] = options.fs || fs;\x0d\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\x0d\n\x0d\n    // Path will be ignored when fd is specified\x2C so it can be falsy\x0d\n    this.path = toPathIfFileURL(path);\x0d\n    this.flags = options.flags === undefined ? 'w' : options.flags;\x0d\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\x0d\n\x0d\n    validatePath(this.path);\x0d\n  } else {\x0d\n    this.fd = getValidatedFd(importFd(this\x2C options));\x0d\n  }\x0d\n\x0d\n  options.autoDestroy = options.autoClose === undefined ?\x0d\n    true : options.autoClose;\x0d\n\x0d\n  if (!this[kFs].write && !this[kFs].writev) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.fs.write'\x2C 'function'\x2C\x0d\n                                   this[kFs].write);\x0d\n  }\x0d\n\x0d\n  if (this[kFs].write) {\x0d\n    validateFunction(this[kFs].write\x2C 'options.fs.write');\x0d\n  }\x0d\n\x0d\n  if (this[kFs].writev) {\x0d\n    validateFunction(this[kFs].writev\x2C 'options.fs.writev');\x0d\n  }\x0d\n\x0d\n  if (options.autoDestroy) {\x0d\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\x0d\n  }\x0d\n\x0d\n  // It's enough to override either\x2C in which case only one will be used.\x0d\n  if (!this[kFs].write) {\x0d\n    this._write = null;\x0d\n  }\x0d\n  if (!this[kFs].writev) {\x0d\n    this._writev = null;\x0d\n  }\x0d\n\x0d\n  this.start = options.start;\x0d\n  this.pos = undefined;\x0d\n  this.bytesWritten = 0;\x0d\n  this.closed = false;\x0d\n  this[kIsPerformingIO] = false;\x0d\n\x0d\n\x0d\n  if (this.start !== undefined) {\x0d\n    validateInteger(this.start\x2C 'start'\x2C 0);\x0d\n\x0d\n    this.pos = this.start;\x0d\n  }\x0d\n\x0d\n  ReflectApply(Writable\x2C this\x2C [options]);\x0d\n\x0d\n  if (options.encoding)\x0d\n    this.setDefaultEncoding(options.encoding);\x0d\n}\x0d\nObjectSetPrototypeOf(WriteStream.prototype\x2C Writable.prototype);\x0d\nObjectSetPrototypeOf(WriteStream\x2C Writable);\x0d\n\x0d\nObjectDefineProperty(WriteStream.prototype\x2C 'autoClose'\x2C {\x0d\n  get() {\x0d\n    return this._writableState.autoDestroy;\x0d\n  }\x2C\x0d\n  set(val) {\x0d\n    this._writableState.autoDestroy = val;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst openWriteFs = deprecate(function() {\x0d\n  // Noop.\x0d\n}\x2C 'WriteStream.prototype.open() is deprecated'\x2C 'DEP0135');\x0d\nWriteStream.prototype.open = openWriteFs;\x0d\n\x0d\nWriteStream.prototype._construct = _construct;\x0d\n\x0d\nWriteStream.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this[kIsPerformingIO] = true;\x0d\n  this[kFs].write(this.fd\x2C data\x2C 0\x2C data.length\x2C this.pos\x2C (er\x2C bytes) => {\x0d\n    this[kIsPerformingIO] = false;\x0d\n    if (this.destroyed) {\x0d\n      // Tell ._destroy() that it's safe to close the fd now.\x0d\n      cb(er);\x0d\n      return this.emit(kIoDone\x2C er);\x0d\n    }\x0d\n\x0d\n    if (er) {\x0d\n      return cb(er);\x0d\n    }\x0d\n\x0d\n    this.bytesWritten += bytes;\x0d\n    cb();\x0d\n  });\x0d\n\x0d\n  if (this.pos !== undefined)\x0d\n    this.pos += data.length;\x0d\n};\x0d\n\x0d\nWriteStream.prototype._writev = function(data\x2C cb) {\x0d\n  const len = data.length;\x0d\n  const chunks = new Array(len);\x0d\n  let size = 0;\x0d\n\x0d\n  for (let i = 0; i < len; i++) {\x0d\n    const chunk = data[i].chunk;\x0d\n\x0d\n    chunks[i] = chunk;\x0d\n    size += chunk.length;\x0d\n  }\x0d\n\x0d\n  this[kIsPerformingIO] = true;\x0d\n  this[kFs].writev(this.fd\x2C chunks\x2C this.pos\x2C (er\x2C bytes) => {\x0d\n    this[kIsPerformingIO] = false;\x0d\n    if (this.destroyed) {\x0d\n      // Tell ._destroy() that it's safe to close the fd now.\x0d\n      cb(er);\x0d\n      return this.emit(kIoDone\x2C er);\x0d\n    }\x0d\n\x0d\n    if (er) {\x0d\n      return cb(er);\x0d\n    }\x0d\n\x0d\n    this.bytesWritten += bytes;\x0d\n    cb();\x0d\n  });\x0d\n\x0d\n  if (this.pos !== undefined)\x0d\n    this.pos += size;\x0d\n};\x0d\n\x0d\nWriteStream.prototype._destroy = function(err\x2C cb) {\x0d\n  // Usually for async IO it is safe to close a file descriptor\x0d\n  // even when there are pending operations. However\x2C due to platform\x0d\n  // differences file IO is implemented using synchronous operations\x0d\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\x0d\n  // to close while used in a pending read or write operation. Wait for\x0d\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\x0d\n  if (this[kIsPerformingIO]) {\x0d\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\x0d\n  } else {\x0d\n    close(this\x2C err\x2C cb);\x0d\n  }\x0d\n};\x0d\n\x0d\nWriteStream.prototype.close = function(cb) {\x0d\n  if (cb) {\x0d\n    if (this.closed) {\x0d\n      process.nextTick(cb);\x0d\n      return;\x0d\n    }\x0d\n    this.on('close'\x2C cb);\x0d\n  }\x0d\n\x0d\n  // If we are not autoClosing\x2C we should call\x0d\n  // destroy on 'finish'.\x0d\n  if (!this.autoClose) {\x0d\n    this.on('finish'\x2C this.destroy);\x0d\n  }\x0d\n\x0d\n  // We use end() instead of destroy() because of\x0d\n  // https://github.com/nodejs/node/issues/2006\x0d\n  this.end();\x0d\n};\x0d\n\x0d\n// There is no shutdown() for files.\x0d\nWriteStream.prototype.destroySoon = WriteStream.prototype.end;\x0d\n\x0d\nObjectDefineProperty(WriteStream.prototype\x2C 'pending'\x2C {\x0d\n  get() { return this.fd === null; }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  ReadStream\x2C\x0d\n  WriteStream\x0d\n};\x0d\n
code-source-info,0x2f65a731a16,196,0,13761,C0O0C4O13761,,
code-creation,Function,10,292963,0x2f65a7326be,866, node:internal/fs/streams:1:1,0x2f65a731990,~
code-source-info,0x2f65a7326be
tick,0x7ff6a88c33a0,293145,1,0x7ff6a79aa4a0,3,0x7ff6a82ef2d0,0x225ca7847fb,0x225ca784545,0x2f65a731242,0x2f65a731109,0x7ff6a840fd63,0x225ca78a247,0x225ca78a4e1,0x225ca79b3cb,0x7ff6a7a3a660,0x225ca79a7ae,0xbfdd36ca1d,0x225ca791e63,0x225ca79d19f,0x225ca7983c7,0x225ca798095,0x2f65a730167,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2bdba108a90,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x22645774e6,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2264576859,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x226457464f,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x2264572d77,0x3103a7b5c9
code-creation,LazyCompile,13,294207,0x225ca7aafe0,3936,resolve node:path:158:10,0x2ee4c9e9670,*
code-source-info,0x225ca7aafex2ee4c9e90f0S0x2ee4c9e9568S0x6682e9a8e0S0x2ee4c9e95b8
code-creation,LazyCompile,10,294398,0x2f65a7353de,11,get WriteStream node:fs:2993:18,0x3f9d356a360,~
code-source-info,0x2f65a7353de,77,82054,82112,C0O82064C3O82064C6O82088C10O82107,,
code-creation,LazyCompile,10,294429,0x2f65a7354ee,11,get FileReadStream node:fs:3004:21,0x3f9d356a440,~
code-source-info,0x2f65a7354ee,77,82330,82391,C0O82340C3O82340C6O82364C10O82386,,
code-creation,LazyCompile,10,294459,0x2f65a7355fe,11,get FileWriteStream node:fs:3013:22,0x3f9d356a530,~
code-source-info,0x2f65a7355fe,77,82481,82543,C0O82491C3O82491C6O82515C10O82538,,
code-creation,LazyCompile,10,294492,0x2f65a7356f6,35,get node:fs:3039:8,0x3f9d356a620,~
code-source-info,0x2f65a7356f6,77,83062,83188,C0O83074C6O83106C12O83117C17O83148C24O83115C30O83165C34O83181,,
code-creation,Eval,10,295002,0x2f65a7360e6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:1:1,0x2f65a735ef0,~
script-source,197,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0\x2C 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten\x2C\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`\x2C for example "html" becomes "text/html".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type)\x2C params: {} };\n};\n\n/**\n * Normalize `types`\x2C for example "html" becomes "text/html".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition\x2C\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`\x2C `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @param {Number} index\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str\x2C index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0]\x2C quality: 1\x2C params: {}\x2C originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile "etag" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile "query parser" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile "proxy trust" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a\x2C i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split('\x2C')\n      .map(function (v) { return v.trim() })\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type\x2C charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function\x2C generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body\x2C encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body\x2C encoding)\n      : body\n\n    return etag(buf\x2C options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str\x2C {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n
code-source-info,0x2f65a7360e6,197,0,5955,C0O0C4O5955,,
code-creation,Function,10,295233,0x2f65a7367f6,290, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:1:1,0x2f65a736060,~
code-source-info,0x2f65a7367f6,197,0,5955,C0O0C32O207C35O207C40O229C44O207C46O262C49O262C54O312C57O312C61O312C63O353C66O353C74O368C79O395C82O395C87O432C90O432C95O447C99O432C101O465C104O465C108O465C110O498C113O498C117O498C119O530C122O530C126O530C128O563C131O563C135O563C137O731C140O746C145O746C149O744C153O925C156O941C161O941C165O939C169O1086C176O1105C180O1445C183O1473C191O1481C197O1461C201O1693C208O1715C212O1971C219O1994C223O2361C226O2400C234O2408C240O2388C244O3249C251O3269C255O3760C262O3787C266O4367C273O4388C277O5004C284O5023C289O5954,,
code-creation,Eval,10,295893,0x2f65a737bee,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\safe-buffer\\index.js:1:1,0x2f65a737a88,~
script-source,198,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\safe-buffer\\index.js,/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src\x2C dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer\x2C exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg\x2C encodingOrOffset\x2C length) {\n  return Buffer(arg\x2C encodingOrOffset\x2C length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer\x2C SafeBuffer)\n\nSafeBuffer.from = function (arg\x2C encodingOrOffset\x2C length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg\x2C encodingOrOffset\x2C length)\n}\n\nSafeBuffer.alloc = function (size\x2C fill\x2C encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill\x2C encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n
code-source-info,0x2f65a737bee,198,0,1670,C0O0C4O1670,,
code-creation,Function,10,295982,0x2f65a737fbe,159, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\safe-buffer\\index.js:1:1,0x2f65a737b68,~
code-source-info,0x2f65a737fbe,198,0,1670,C0O0C15O142C18O142C22O142C24O173C27O180C31O173C33O328C36O339C45O354C54O370C63O392C69O413C71O428C77O492C80O492C85O521C87O536C91O679C95O686C103O700C108O686C113O677C117O747C120O747C125O778C129O794C133O983C137O1000C141O1338C145O1361C149O1497C153O1524C158O1669,,
code-creation,LazyCompile,10,296077,0x2f65a738626,5,get node:buffer:1263:8,0x6682ea8228,~
code-source-info,0x2f65a738626,18,38379,38411,C0O38384C4O38409,,
code-creation,LazyCompile,10,296126,0x2f65a7386ce,44,copyProps C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\safe-buffer\\index.js:7:20,0x2f65a737c20,~
code-source-info,0x2f65a7386ce,198,260,327,C0O291C13O284C26O284C27O302C29O316C32O311C39O275C43O326,,
code-creation,Eval,10,296824,0x2f65a7398a6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-disposition\\index.js:1:1,0x2f65a739600,~
script-source,199,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-disposition\\index.js,/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar basename = require('path').basename\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * RegExp to match non attr-char\x2C *after* encodeURIComponent (i.e. not including "%")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20"'()*\x2C/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = "\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token "=" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = "(" | ")" | "<" | ">" | "@"\n *               | "\x2C" | ";" | ":" | "\\" | <">\n *               | "/" | "[" | "]" | "?" | "="\n *               | "{" | "}" | SP | HT\n * quoted-string = ( <"> *(qdtext | quoted-pair ) <"> )\n * qdtext        = <any TEXT except <">>\n * quoted-pair   = "\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs\x2C but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR\x2C carriage return (13)>\n * LF            = <US-ASCII LF\x2C linefeed (10)>\n * SP            = <US-ASCII SP\x2C space (32)>\n * HT            = <US-ASCII HT\x2C horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*("(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  "'" [ language ] "'" value-chars\n * charset       = "UTF-8" / "ISO-8859-1" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / "!" / "#" / "$" / "%" / "&"\n *               / "+" / "-" / "^" / "_" / "`"\n *               / "{" / "}" / "~"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( "-" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = "%" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / "!" / "#" / "$" / "&" / "+" / "-" / "."\n *               / "^" / "_" / "`" / "|" / "~"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2\x2C3}(?:-[A-Za-z]{3}){0\x2C3}|[A-Za-z]{4\x2C8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = "inline" | "attachment" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = "filename" "=" value\n *                  | "filename*" "=" ext-value\n * disp-ext-parm    = token "=" value\n *                  | ext-token "=" ext-value\n * ext-token        = <the characters in token\x2C followed by "*">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @public\n */\n\nfunction contentDisposition (filename\x2C options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename\x2C opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type\x2C params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */\n\nfunction createparams (filename\x2C fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 5987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP\x2C pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = Buffer.from(binary\x2C 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP\x2C '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0\x2C -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1\x2C value.length - 2)\n        .replace(QESC_REGEXP\x2C '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type\x2C params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str\x2C hex) {\n  return String.fromCharCode(parseInt(hex\x2C 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '"' + str.replace(QUOTE_REGEXP\x2C '\\\\$1') + '"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP\x2C pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\n\nfunction ContentDisposition (type\x2C parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n
code-source-info,0x2f65a7398a6,199,0,10594,C0O0C4O10594,,
code-creation,Function,10,297199,0x2f65a739d76,182, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-disposition\\index.js:1:1,0x2f65a739820,~
code-source-info,0x2f65a739d76,199,0,10594,C0O0C69O154C71O169C75O197C82O211C86O280C89O280C94O295C98O280C100O318C103O318C108O340C112O318C114O490C118O490C120O660C124O660C126O710C130O710C132O819C136O819C138O1015C142O1015C144O1181C148O1181C150O2212C154O2212C156O2434C160O2434C162O2479C166O2479C168O3271C172O3271C174O3881C178O3881C181O10593,,
code-creation,Eval,10,297965,0x2f65a73baae,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:1:1,0x2f65a73b8d8,~
script-source,200,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js,/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( ";" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token "=" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = "!" / "#" / "$" / "%" / "&" / "'" / "*"\n *               / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~"\n *               / DIGIT / ALPHA\n *               ; any VCHAR\x2C except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = "\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = "\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type "/" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0\x2C index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1\x2C value.length - 2)\n          .replace(QESC_REGEXP\x2C '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '"' + str.replace(QUOTE_REGEXP\x2C '\\\\$1') + '"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n
code-source-info,0x2f65a73baae,200,0,4809,C0O0C4O4809,,
code-creation,Function,10,298155,0x2f65a73bd26,83, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:1:1,0x2f65a73ba28,~
code-source-info,0x2f65a73bd26,200,0,4809,C0O0C33O691C37O691C39O872C43O872C45O931C49O931C51O1125C55O1125C57O1254C61O1254C63O1420C67O1420C69O1521C71O1536C75O1545C77O1559C82O4808,,
code-creation,Eval,10,299504,0x2f65a73dafe,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:1:1,0x2f65a73d758,~
script-source,201,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js,/*!\n * send\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar debug = require('debug')('send')\nvar deprecate = require('depd')('send')\nvar destroy = require('destroy')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar etag = require('etag')\nvar fresh = require('fresh')\nvar fs = require('fs')\nvar mime = require('mime')\nvar ms = require('ms')\nvar onFinished = require('on-finished')\nvar parseRange = require('range-parser')\nvar path = require('path')\nvar statuses = require('statuses')\nvar Stream = require('stream')\nvar util = require('util')\n\n/**\n * Path function references.\n * @private\n */\n\nvar extname = path.extname\nvar join = path.join\nvar normalize = path.normalize\nvar resolve = path.resolve\nvar sep = path.sep\n\n/**\n * Regular expression for identifying a bytes Range header.\n * @private\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\n\n/**\n * Maximum value allowed for the max age.\n * @private\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\n\n/**\n * Regular expression to match a path with a directory up component.\n * @private\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = send\nmodule.exports.mime = mime\n\n/**\n * Return a `SendStream` for `req` and `path`.\n *\n * @param {object} req\n * @param {string} path\n * @param {object} [options]\n * @return {SendStream}\n * @public\n */\n\nfunction send (req\x2C path\x2C options) {\n  return new SendStream(req\x2C path\x2C options)\n}\n\n/**\n * Initialize a `SendStream` with the given `path`.\n *\n * @param {Request} req\n * @param {String} path\n * @param {object} [options]\n * @private\n */\n\nfunction SendStream (req\x2C path\x2C options) {\n  Stream.call(this)\n\n  var opts = options || {}\n\n  this.options = opts\n  this.path = path\n  this.req = req\n\n  this._acceptRanges = opts.acceptRanges !== undefined\n    ? Boolean(opts.acceptRanges)\n    : true\n\n  this._cacheControl = opts.cacheControl !== undefined\n    ? Boolean(opts.cacheControl)\n    : true\n\n  this._etag = opts.etag !== undefined\n    ? Boolean(opts.etag)\n    : true\n\n  this._dotfiles = opts.dotfiles !== undefined\n    ? opts.dotfiles\n    : 'ignore'\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be "allow"\x2C "deny"\x2C or "ignore"')\n  }\n\n  this._hidden = Boolean(opts.hidden)\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\n  }\n\n  // legacy support\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined\n  }\n\n  this._extensions = opts.extensions !== undefined\n    ? normalizeList(opts.extensions\x2C 'extensions option')\n    : []\n\n  this._immutable = opts.immutable !== undefined\n    ? Boolean(opts.immutable)\n    : false\n\n  this._index = opts.index !== undefined\n    ? normalizeList(opts.index\x2C 'index option')\n    : ['index.html']\n\n  this._lastModified = opts.lastModified !== undefined\n    ? Boolean(opts.lastModified)\n    : true\n\n  this._maxage = opts.maxAge || opts.maxage\n  this._maxage = typeof this._maxage === 'string'\n    ? ms(this._maxage)\n    : Number(this._maxage)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0\x2C this._maxage)\x2C MAX_MAXAGE)\n    : 0\n\n  this._root = opts.root\n    ? resolve(opts.root)\n    : null\n\n  if (!this._root && opts.from) {\n    this.from(opts.from)\n  }\n}\n\n/**\n * Inherits from `Stream`.\n */\n\nutil.inherits(SendStream\x2C Stream)\n\n/**\n * Enable or disable etag generation.\n *\n * @param {Boolean} val\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.etag = deprecate.function(function etag (val) {\n  this._etag = Boolean(val)\n  debug('etag %s'\x2C this._etag)\n  return this\n}\x2C 'send.etag: pass etag as option')\n\n/**\n * Enable or disable "hidden" (dot) files.\n *\n * @param {Boolean} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\n  this._hidden = Boolean(val)\n  this._dotfiles = undefined\n  debug('hidden %s'\x2C this._hidden)\n  return this\n}\x2C 'send.hidden: use dotfiles option')\n\n/**\n * Set index `paths`\x2C set to a falsy\n * value to disable index support.\n *\n * @param {String|Boolean|Array} paths\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.index = deprecate.function(function index (paths) {\n  var index = !paths ? [] : normalizeList(paths\x2C 'paths argument')\n  debug('index %o'\x2C paths)\n  this._index = index\n  return this\n}\x2C 'send.index: pass index as option')\n\n/**\n * Set root `path`.\n *\n * @param {String} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.root = function root (path) {\n  this._root = resolve(String(path))\n  debug('root %s'\x2C this._root)\n  return this\n}\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root\x2C\n  'send.from: pass root as option')\n\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root\x2C\n  'send.root: pass root as option')\n\n/**\n * Set max-age to `maxAge`.\n *\n * @param {Number} maxAge\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\n  this._maxage = typeof maxAge === 'string'\n    ? ms(maxAge)\n    : Number(maxAge)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0\x2C this._maxage)\x2C MAX_MAXAGE)\n    : 0\n  debug('max-age %d'\x2C this._maxage)\n  return this\n}\x2C 'send.maxage: pass maxAge as option')\n\n/**\n * Emit error with `status`.\n *\n * @param {number} status\n * @param {Error} [err]\n * @private\n */\n\nSendStream.prototype.error = function error (status\x2C err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this\x2C 'error')) {\n    return this.emit('error'\x2C createHttpError(status\x2C err))\n  }\n\n  var res = this.res\n  var msg = statuses.message[status] || String(status)\n  var doc = createHtmlDocument('Error'\x2C escapeHtml(msg))\n\n  // clear existing headers\n  clearHeaders(res)\n\n  // add error headers\n  if (err && err.headers) {\n    setHeaders(res\x2C err.headers)\n  }\n\n  // send basic response\n  res.statusCode = status\n  res.setHeader('Content-Type'\x2C 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length'\x2C Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy'\x2C "default-src 'none'")\n  res.setHeader('X-Content-Type-Options'\x2C 'nosniff')\n  res.end(doc)\n}\n\n/**\n * Check if the pathname ends with "/".\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\n  return this.path[this.path.length - 1] === '/'\n}\n\n/**\n * Check if this is a conditional GET request.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\n  return this.req.headers['if-match'] ||\n    this.req.headers['if-unmodified-since'] ||\n    this.req.headers['if-none-match'] ||\n    this.req.headers['if-modified-since']\n}\n\n/**\n * Check if the request preconditions failed.\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\n  var req = this.req\n  var res = this.res\n\n  // if-match\n  var match = req.headers['if-match']\n  if (match) {\n    var etag = res.getHeader('ETag')\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\n    }))\n  }\n\n  // if-unmodified-since\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\n    return isNaN(lastModified) || lastModified > unmodifiedSince\n  }\n\n  return false\n}\n\n/**\n * Strip various content header fields for a change in entity.\n *\n * @private\n */\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\n  var res = this.res\n\n  res.removeHeader('Content-Encoding')\n  res.removeHeader('Content-Language')\n  res.removeHeader('Content-Length')\n  res.removeHeader('Content-Range')\n  res.removeHeader('Content-Type')\n}\n\n/**\n * Respond with 304 not modified.\n *\n * @api private\n */\n\nSendStream.prototype.notModified = function notModified () {\n  var res = this.res\n  debug('not modified')\n  this.removeContentHeaderFields()\n  res.statusCode = 304\n  res.end()\n}\n\n/**\n * Raise error that headers already sent.\n *\n * @api private\n */\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\n  var err = new Error('Can\\'t set headers after they are sent.')\n  debug('headers already sent')\n  this.error(500\x2C err)\n}\n\n/**\n * Check if the request is cacheable\x2C aka\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5\x2C6}).\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isCachable = function isCachable () {\n  var statusCode = this.res.statusCode\n  return (statusCode >= 200 && statusCode < 300) ||\n    statusCode === 304\n}\n\n/**\n * Handle stat() error.\n *\n * @param {Error} error\n * @private\n */\n\nSendStream.prototype.onStatError = function onStatError (error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404\x2C error)\n      break\n    default:\n      this.error(500\x2C error)\n      break\n  }\n}\n\n/**\n * Check if the cache is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isFresh = function isFresh () {\n  return fresh(this.req.headers\x2C {\n    etag: this.res.getHeader('ETag')\x2C\n    'last-modified': this.res.getHeader('Last-Modified')\n  })\n}\n\n/**\n * Check if the range is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\n  var ifRange = this.req.headers['if-range']\n\n  if (!ifRange) {\n    return true\n  }\n\n  // if-range as etag\n  if (ifRange.indexOf('"') !== -1) {\n    var etag = this.res.getHeader('ETag')\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\n  }\n\n  // if-range as modified date\n  var lastModified = this.res.getHeader('Last-Modified')\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\n}\n\n/**\n * Redirect to path.\n *\n * @param {string} path\n * @private\n */\n\nSendStream.prototype.redirect = function redirect (path) {\n  var res = this.res\n\n  if (hasListeners(this\x2C 'directory')) {\n    this.emit('directory'\x2C res\x2C path)\n    return\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403)\n    return\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\n  var doc = createHtmlDocument('Redirecting'\x2C 'Redirecting to <a href="' + escapeHtml(loc) + '">' +\n    escapeHtml(loc) + '</a>')\n\n  // redirect\n  res.statusCode = 301\n  res.setHeader('Content-Type'\x2C 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length'\x2C Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy'\x2C "default-src 'none'")\n  res.setHeader('X-Content-Type-Options'\x2C 'nosniff')\n  res.setHeader('Location'\x2C loc)\n  res.end(doc)\n}\n\n/**\n * Pipe to `res.\n *\n * @param {Stream} res\n * @return {Stream} res\n * @api public\n */\n\nSendStream.prototype.pipe = function pipe (res) {\n  // root path\n  var root = this._root\n\n  // references\n  this.res = res\n\n  // decode the path\n  var path = decode(this.path)\n  if (path === -1) {\n    this.error(400)\n    return res\n  }\n\n  // null byte(s)\n  if (~path.indexOf('\\0')) {\n    this.error(400)\n    return res\n  }\n\n  var parts\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path)\n    }\n\n    // malicious path\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path "%s"'\x2C path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = path.split(sep)\n\n    // join / normalize from optional root dir\n    path = normalize(join(root\x2C path))\n  } else {\n    // ".." is malicious without "root"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path "%s"'\x2C path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = normalize(path).split(sep)\n\n    // resolve the path\n    path = resolve(path)\n  }\n\n  // dotfile handling\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles\n\n    // legacy support\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.'\n        ? (this._hidden ? 'allow' : 'ignore')\n        : 'allow'\n    }\n\n    debug('%s dotfile "%s"'\x2C access\x2C path)\n    switch (access) {\n      case 'allow':\n        break\n      case 'deny':\n        this.error(403)\n        return res\n      case 'ignore':\n      default:\n        this.error(404)\n        return res\n    }\n  }\n\n  // index file support\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path)\n    return res\n  }\n\n  this.sendFile(path)\n  return res\n}\n\n/**\n * Transfer `path`.\n *\n * @param {String} path\n * @api public\n */\n\nSendStream.prototype.send = function send (path\x2C stat) {\n  var len = stat.size\n  var options = this.options\n  var opts = {}\n  var res = this.res\n  var req = this.req\n  var ranges = req.headers.range\n  var offset = options.start || 0\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent()\n    return\n  }\n\n  debug('pipe "%s"'\x2C path)\n\n  // set header fields\n  this.setHeader(path\x2C stat)\n\n  // set content-type\n  this.type(path)\n\n  // conditional GET support\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412)\n      return\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified()\n      return\n    }\n  }\n\n  // adjust len to start/end options\n  len = Math.max(0\x2C len - offset)\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1\n    if (len > bytes) len = bytes\n  }\n\n  // Range support\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len\x2C ranges\x2C {\n      combine: true\n    })\n\n    // If-Range support\n    if (!this.isRangeFresh()) {\n      debug('range stale')\n      ranges = -2\n    }\n\n    // unsatisfiable\n    if (ranges === -1) {\n      debug('range unsatisfiable')\n\n      // Content-Range\n      res.setHeader('Content-Range'\x2C contentRange('bytes'\x2C len))\n\n      // 416 Requested Range Not Satisfiable\n      return this.error(416\x2C {\n        headers: { 'Content-Range': res.getHeader('Content-Range') }\n      })\n    }\n\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j'\x2C ranges)\n\n      // Content-Range\n      res.statusCode = 206\n      res.setHeader('Content-Range'\x2C contentRange('bytes'\x2C len\x2C ranges[0]))\n\n      // adjust for requested range\n      offset += ranges[0].start\n      len = ranges[0].end - ranges[0].start + 1\n    }\n  }\n\n  // clone options\n  for (var prop in options) {\n    opts[prop] = options[prop]\n  }\n\n  // set read options\n  opts.start = offset\n  opts.end = Math.max(offset\x2C offset + len - 1)\n\n  // content-length\n  res.setHeader('Content-Length'\x2C len)\n\n  // HEAD support\n  if (req.method === 'HEAD') {\n    res.end()\n    return\n  }\n\n  this.stream(path\x2C opts)\n}\n\n/**\n * Transfer file for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendFile = function sendFile (path) {\n  var i = 0\n  var self = this\n\n  debug('stat "%s"'\x2C path)\n  fs.stat(path\x2C function onstat (err\x2C stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found\x2C check extensions\n      return next(err)\n    }\n    if (err) return self.onStatError(err)\n    if (stat.isDirectory()) return self.redirect(path)\n    self.emit('file'\x2C path\x2C stat)\n    self.send(path\x2C stat)\n  })\n\n  function next (err) {\n    if (self._extensions.length <= i) {\n      return err\n        ? self.onStatError(err)\n        : self.error(404)\n    }\n\n    var p = path + '.' + self._extensions[i++]\n\n    debug('stat "%s"'\x2C p)\n    fs.stat(p\x2C function (err\x2C stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file'\x2C p\x2C stat)\n      self.send(p\x2C stat)\n    })\n  }\n}\n\n/**\n * Transfer index for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendIndex = function sendIndex (path) {\n  var i = -1\n  var self = this\n\n  function next (err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err)\n      return self.error(404)\n    }\n\n    var p = join(path\x2C self._index[i])\n\n    debug('stat "%s"'\x2C p)\n    fs.stat(p\x2C function (err\x2C stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file'\x2C p\x2C stat)\n      self.send(p\x2C stat)\n    })\n  }\n\n  next()\n}\n\n/**\n * Stream `path` to the response.\n *\n * @param {String} path\n * @param {Object} options\n * @api private\n */\n\nSendStream.prototype.stream = function stream (path\x2C options) {\n  var self = this\n  var res = this.res\n\n  // pipe\n  var stream = fs.createReadStream(path\x2C options)\n  this.emit('stream'\x2C stream)\n  stream.pipe(res)\n\n  // cleanup\n  function cleanup () {\n    destroy(stream\x2C true)\n  }\n\n  // response finished\x2C cleanup\n  onFinished(res\x2C cleanup)\n\n  // error handling\n  stream.on('error'\x2C function onerror (err) {\n    // clean up stream early\n    cleanup()\n\n    // error\n    self.onStatError(err)\n  })\n\n  // end\n  stream.on('end'\x2C function onend () {\n    self.emit('end')\n  })\n}\n\n/**\n * Set content-type based on `path`\n * if it hasn't been explicitly set.\n *\n * @param {String} path\n * @api private\n */\n\nSendStream.prototype.type = function type (path) {\n  var res = this.res\n\n  if (res.getHeader('Content-Type')) return\n\n  var type = mime.lookup(path)\n\n  if (!type) {\n    debug('no content-type')\n    return\n  }\n\n  var charset = mime.charsets.lookup(type)\n\n  debug('content-type %s'\x2C type)\n  res.setHeader('Content-Type'\x2C type + (charset ? '; charset=' + charset : ''))\n}\n\n/**\n * Set response header fields\x2C most\n * fields may be pre-defined.\n *\n * @param {String} path\n * @param {Object} stat\n * @api private\n */\n\nSendStream.prototype.setHeader = function setHeader (path\x2C stat) {\n  var res = this.res\n\n  this.emit('headers'\x2C res\x2C path\x2C stat)\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges')\n    res.setHeader('Accept-Ranges'\x2C 'bytes')\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public\x2C max-age=' + Math.floor(this._maxage / 1000)\n\n    if (this._immutable) {\n      cacheControl += '\x2C immutable'\n    }\n\n    debug('cache-control %s'\x2C cacheControl)\n    res.setHeader('Cache-Control'\x2C cacheControl)\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString()\n    debug('modified %s'\x2C modified)\n    res.setHeader('Last-Modified'\x2C modified)\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat)\n    debug('etag %s'\x2C val)\n    res.setHeader('ETag'\x2C val)\n  }\n}\n\n/**\n * Clear all headers from a response.\n *\n * @param {object} res\n * @private\n */\n\nfunction clearHeaders (res) {\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i])\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n *\n * @param {string} str\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Determine if path parts contain a dotfile.\n *\n * @api private\n */\n\nfunction containsDotFile (parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i]\n    if (part.length > 1 && part[0] === '.') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a Content-Range header.\n *\n * @param {string} type\n * @param {number} size\n * @param {array} [range]\n */\n\nfunction contentRange (type\x2C size\x2C range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title\x2C body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang="en">\\n' +\n    '<head>\\n' +\n    '<meta charset="utf-8">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a HttpError object from simple arguments.\n *\n * @param {number} status\n * @param {Error|object} err\n * @private\n */\n\nfunction createHttpError (status\x2C err) {\n  if (!err) {\n    return createError(status)\n  }\n\n  return err instanceof Error\n    ? createError(status\x2C err\x2C { expose: false })\n    : createError(status\x2C err)\n}\n\n/**\n * decodeURIComponent.\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {String} path\n * @api private\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * Get the header names on a respnse.\n *\n * @param {object} res\n * @returns {array[string]}\n * @private\n */\n\nfunction getHeaderNames (res) {\n  return typeof res.getHeaderNames !== 'function'\n    ? Object.keys(res._headers || {})\n    : res.getHeaderNames()\n}\n\n/**\n * Determine if emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction hasListeners (emitter\x2C type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Normalize the index option into an array.\n *\n * @param {boolean|string|array} val\n * @param {string} name\n * @private\n */\n\nfunction normalizeList (val\x2C name) {\n  var list = [].concat(val || [])\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false')\n    }\n  }\n\n  return list\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0\x2C len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* \x2C */\n        if (start !== end) {\n          list.push(str.substring(start\x2C end))\n        }\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  if (start !== end) {\n    list.push(str.substring(start\x2C end))\n  }\n\n  return list\n}\n\n/**\n * Set an object of headers on a response.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res\x2C headers) {\n  var keys = Object.keys(headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key\x2C headers[key])\n  }\n}\n
code-source-info,0x2f65a73dafe,201,0,23502,C0O0C4O23502,,
code-creation,Function,10,300320,0x2f65a73ec26,889, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:1:1,0x2f65a73da78,~
code-source-info,0x2f65a73ec
code-creation,Eval,10,301205,0x23ad5936c26,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:1:1,0x23ad5936a30,~
script-source,202,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js,/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports\x2C statuses.codes\x2C module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    var type = typeof arg\n    if (type === 'object' && arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n    } else if (type === 'number' && i === 0) {\n      status = arg\n    } else if (type === 'string') {\n      msg = arg\n    } else if (type === 'object') {\n      props = arg\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses.message[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses.message[status])\n    Error.captureStackTrace(err\x2C createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError\x2C Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError\x2C name\x2C code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err\x2C ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err\x2C ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err\x2C 'message'\x2C {\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: msg\x2C\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err\x2C 'name'\x2C {\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: className\x2C\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError\x2C HttpError)\n  nameFunc(ClientError\x2C className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError\x2C name\x2C code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err\x2C ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err\x2C ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err\x2C 'message'\x2C {\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: msg\x2C\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err\x2C 'name'\x2C {\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: className\x2C\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError\x2C HttpError)\n  nameFunc(ServerError\x2C className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function\x2C if possible.\n * @private\n */\n\nfunction nameFunc (func\x2C name) {\n  var desc = Object.getOwnPropertyDescriptor(func\x2C 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func\x2C 'name'\x2C desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports\x2C codes\x2C HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses.message[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError\x2C name\x2C code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError\x2C name\x2C code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n
code-source-info,0x23ad5936c26,202,0,6391,C0O0C4O6391,,
code-creation,Function,10,301468,0x23ad59370d6,180, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:1:1,0x23ad5936ba0,~
code-source-info,0x23ad59370d6,202,0,6391,C0O0C56O197C59O197C67O212C71O197C73O249C76O249C80O249C82O290C85O290C89O290C91O325C94O325C98O325C100O364C103O364C107O364C109O428C111O443C115O464C120O484C123O482C127O520C132O575C137O583C142O542C146O540C150O670C158O688C163O702C168O710C173O636C179O6390,,
code-creation,Function,11,301718,0x225ca7ac0e0,2088,tryPackage node:internal/modules/cjs/loader:338:20,0x3341609fa10,^
code-source-info,0x225ca7ac0e0,99,9795,11088,,,
code-creation,Function,11,301747,0x225ca7ac980,928,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0x25aadb0fa78,^
code-source-info,0x225ca7ac980,9,7788,8476,,,
code-creation,Function,11,301775,0x225ca7acd80,1096, node:internal/fs/utils:886:42,0x3f9d3573220,^
code-source-info,0x225ca7acd80,78,24850,25422,,,
code-creation,Eval,10,302553,0x23ad5938d76,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\inherits\\inherits.js:1:1,0x23ad5938c00,~
script-source,203,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\inherits\\inherits.js,try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n
code-source-info,0x23ad5938d76,203,0,250,C0O0C4O250,,
code-creation,Function,10,302593,0x23ad5938e3e,58, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\inherits\\inherits.js:1:1,0x23ad5938cf0,~
code-source-info,0x23ad5938e3e,203,0,250,C3O19C6O19C11O83C19O108C21O108C22O142C26O135C43O197C46O214C50O212C57O249,,
code-creation,Eval,10,303135,0x23ad59395a6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\toidentifier\\index.js:1:1,0x23ad5939460,~
script-source,204,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\toidentifier\\index.js,/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0\x2C 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi\x2C '')\n}\n
code-source-info,0x23ad59395a6,204,0,504,C0O0C4O504,,
code-creation,Function,10,303188,0x23ad59396a6,13, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\toidentifier\\index.js:1:1,0x23ad5939520,~
code-source-info,0x23ad59396a6,204,0,504,C0O0C5O142C7O157C12O503,,
code-creation,LazyCompile,10,303240,0x23ad5939946,20,createHttpErrorConstructor C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:112:37,0x23ad5936cf8,~
code-source-info,0x23ad5939946,202,2523,2668,C0O2523C5O2620C8O2640C12O2620C17O2650C19O2666,,
code-creation,LazyCompile,10,303317,0x23ad5939b66,139,inherits node:util:233:18,0x2ee4c9fb3e8,~
script-source,39,node:util,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  Date\x2C\x0d\n  DatePrototypeGetDate\x2C\x0d\n  DatePrototypeGetHours\x2C\x0d\n  DatePrototypeGetMinutes\x2C\x0d\n  DatePrototypeGetMonth\x2C\x0d\n  DatePrototypeGetSeconds\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FALSY_VALUE_REJECTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  inspect\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst { debuglog } = require('internal/util/debuglog');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateNumber\x2C\x0d\n} = require('internal/validators');\x0d\nconst { TextDecoder\x2C TextEncoder } = require('internal/encoding');\x0d\nconst { isBuffer } = require('buffer').Buffer;\x0d\nconst types = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  deprecate\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName: internalErrorName\x2C\x0d\n  promisify\x2C\x0d\n  toUSVString\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nlet internalDeepEqual;\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is boolean}\x0d\n */\x0d\nfunction isBoolean(arg) {\x0d\n  return typeof arg === 'boolean';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is null}\x0d\n */\x0d\nfunction isNull(arg) {\x0d\n  return arg === null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is (null | undefined)}\x0d\n */\x0d\nfunction isNullOrUndefined(arg) {\x0d\n  return arg === null || arg === undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is number}\x0d\n */\x0d\nfunction isNumber(arg) {\x0d\n  return typeof arg === 'number';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {any} arg\x0d\n * @returns {arg is string}\x0d\n */\x0d\nfunction isString(arg) {\x0d\n  return typeof arg === 'string';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is symbol}\x0d\n */\x0d\nfunction isSymbol(arg) {\x0d\n  return typeof arg === 'symbol';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is undefined}\x0d\n */\x0d\nfunction isUndefined(arg) {\x0d\n  return arg === undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {a is NonNullable<object>}\x0d\n */\x0d\nfunction isObject(arg) {\x0d\n  return arg !== null && typeof arg === 'object';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} e\x0d\n * @returns {arg is Error}\x0d\n */\x0d\nfunction isError(e) {\x0d\n  return ObjectPrototypeToString(e) === '[object Error]' || e instanceof Error;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is Function}\x0d\n */\x0d\nfunction isFunction(arg) {\x0d\n  return typeof arg === 'function';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is (boolean | null | number | string | symbol | undefined)}\x0d\n */\x0d\nfunction isPrimitive(arg) {\x0d\n  return arg === null ||\x0d\n         (typeof arg !== 'object' && typeof arg !== 'function');\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} n\x0d\n * @returns {string}\x0d\n */\x0d\nfunction pad(n) {\x0d\n  return StringPrototypePadStart(n.toString()\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nconst months = ['Jan'\x2C 'Feb'\x2C 'Mar'\x2C 'Apr'\x2C 'May'\x2C 'Jun'\x2C 'Jul'\x2C 'Aug'\x2C 'Sep'\x2C\x0d\n                'Oct'\x2C 'Nov'\x2C 'Dec'];\x0d\n\x0d\n/**\x0d\n * @returns {string}  26 Feb 16:19:34\x0d\n */\x0d\nfunction timestamp() {\x0d\n  const d = new Date();\x0d\n  const t = ArrayPrototypeJoin([\x0d\n    pad(DatePrototypeGetHours(d))\x2C\x0d\n    pad(DatePrototypeGetMinutes(d))\x2C\x0d\n    pad(DatePrototypeGetSeconds(d))\x2C\x0d\n  ]\x2C ':');\x0d\n  return `${DatePrototypeGetDate(d)} ${months[DatePrototypeGetMonth(d)]} ${t}`;\x0d\n}\x0d\n\x0d\nlet console;\x0d\n/**\x0d\n * Log is just a thin wrapper to console.log that prepends a timestamp\x0d\n * @deprecated since v6.0.0\x0d\n * @type {(...args: any[]) => void}\x0d\n */\x0d\nfunction log(...args) {\x0d\n  if (!console) {\x0d\n    console = require('internal/console/global');\x0d\n  }\x0d\n  console.log('%s - %s'\x2C timestamp()\x2C format(...args));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Inherit the prototype methods from one constructor into another.\x0d\n *\x0d\n * The Function.prototype.inherits from lang.js rewritten as a standalone\x0d\n * function (not on Function.prototype). NOTE: If this file is to be loaded\x0d\n * during bootstrapping this function needs to be rewritten using some native\x0d\n * functions as prototype setup using normal JavaScript does not work as\x0d\n * expected during bootstrapping (see mirror.js in r114903).\x0d\n *\x0d\n * @param {Function} ctor Constructor function which needs to inherit the\x0d\n *     prototype.\x0d\n * @param {Function} superCtor Constructor function to inherit prototype from.\x0d\n * @throws {TypeError} Will error if either constructor is null\x2C or if\x0d\n *     the super constructor lacks a prototype.\x0d\n */\x0d\nfunction inherits(ctor\x2C superCtor) {\x0d\n\x0d\n  if (ctor === undefined || ctor === null)\x0d\n    throw new ERR_INVALID_ARG_TYPE('ctor'\x2C 'Function'\x2C ctor);\x0d\n\x0d\n  if (superCtor === undefined || superCtor === null)\x0d\n    throw new ERR_INVALID_ARG_TYPE('superCtor'\x2C 'Function'\x2C superCtor);\x0d\n\x0d\n  if (superCtor.prototype === undefined) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('superCtor.prototype'\x2C\x0d\n                                   'Object'\x2C superCtor.prototype);\x0d\n  }\x0d\n  ObjectDefineProperty(ctor\x2C 'super_'\x2C {\x0d\n    value: superCtor\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n  ObjectSetPrototypeOf(ctor.prototype\x2C superCtor.prototype);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v6.0.0\x0d\n * @template T\x0d\n * @template S\x0d\n * @param {T} target\x0d\n * @param {S} source\x0d\n * @returns {S extends null ? T : (T & S)}\x0d\n */\x0d\nfunction _extend(target\x2C source) {\x0d\n  // Don't do anything if source isn't an object\x0d\n  if (source === null || typeof source !== 'object') return target;\x0d\n\x0d\n  const keys = ObjectKeys(source);\x0d\n  let i = keys.length;\x0d\n  while (i--) {\x0d\n    target[keys[i]] = source[keys[i]];\x0d\n  }\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst callbackifyOnRejected = hideStackFrames((reason\x2C cb) => {\x0d\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\x0d\n  // Because `null` is a special error value in callbacks which means "no error\x0d\n  // occurred"\x2C we error-wrap so the callback consumer can distinguish between\x0d\n  // "the promise rejected with null" or "the promise fulfilled with undefined".\x0d\n  if (!reason) {\x0d\n    reason = new ERR_FALSY_VALUE_REJECTION(reason);\x0d\n  }\x0d\n  return cb(reason);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @template {(...args: any[]) => Promise<any>} T\x0d\n * @param {T} original\x0d\n * @returns {T extends (...args: infer TArgs) => Promise<infer TReturn> ?\x0d\n *   ((...params: [...TArgs\x2C ((err: Error\x2C ret: TReturn) => any)]) => void) :\x0d\n *   never\x0d\n * }\x0d\n */\x0d\nfunction callbackify(original) {\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  // We DO NOT return the promise as it gives the user a false sense that\x0d\n  // the promise is actually somehow related to the callback's execution\x0d\n  // and that the callback throwing will reject the promise.\x0d\n  function callbackified(...args) {\x0d\n    const maybeCb = ArrayPrototypePop(args);\x0d\n    validateFunction(maybeCb\x2C 'last argument');\x0d\n    const cb = FunctionPrototypeBind(maybeCb\x2C this);\x0d\n    // In true node style we process the callback on `nextTick` with all the\x0d\n    // implications (stack\x2C `uncaughtException`\x2C `async_hooks`)\x0d\n    ReflectApply(original\x2C this\x2C args)\x0d\n      .then((ret) => process.nextTick(cb\x2C null\x2C ret)\x2C\x0d\n            (rej) => process.nextTick(callbackifyOnRejected\x2C rej\x2C cb));\x0d\n  }\x0d\n\x0d\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\x0d\n  // It is possible to manipulate a functions `length` or `name` property. This\x0d\n  // guards against the manipulation.\x0d\n  if (typeof descriptors.length.value === 'number') {\x0d\n    descriptors.length.value++;\x0d\n  }\x0d\n  if (typeof descriptors.name.value === 'string') {\x0d\n    descriptors.name.value += 'Callbackified';\x0d\n  }\x0d\n  ObjectDefineProperties(callbackified\x2C descriptors);\x0d\n  return callbackified;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} err\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getSystemErrorName(err) {\x0d\n  validateNumber(err\x2C 'err');\x0d\n  if (err >= 0 || !NumberIsSafeInteger(err)) {\x0d\n    throw new ERR_OUT_OF_RANGE('err'\x2C 'a negative integer'\x2C err);\x0d\n  }\x0d\n  return internalErrorName(err);\x0d\n}\x0d\n\x0d\n// Keep the `exports =` so that various functions can still be monkeypatched\x0d\nmodule.exports = {\x0d\n  _errnoException: errnoException\x2C\x0d\n  _exceptionWithHostPort: exceptionWithHostPort\x2C\x0d\n  _extend\x2C\x0d\n  callbackify\x2C\x0d\n  debug: debuglog\x2C\x0d\n  debuglog\x2C\x0d\n  deprecate\x2C\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  inherits\x2C\x0d\n  inspect\x2C\x0d\n  isArray: ArrayIsArray\x2C\x0d\n  isBoolean\x2C\x0d\n  isBuffer\x2C\x0d\n  isDeepStrictEqual(a\x2C b) {\x0d\n    if (internalDeepEqual === undefined) {\x0d\n      internalDeepEqual = require('internal/util/comparisons')\x0d\n        .isDeepStrictEqual;\x0d\n    }\x0d\n    return internalDeepEqual(a\x2C b);\x0d\n  }\x2C\x0d\n  isNull\x2C\x0d\n  isNullOrUndefined\x2C\x0d\n  isNumber\x2C\x0d\n  isString\x2C\x0d\n  isSymbol\x2C\x0d\n  isUndefined\x2C\x0d\n  isRegExp: types.isRegExp\x2C\x0d\n  isObject\x2C\x0d\n  isDate: types.isDate\x2C\x0d\n  isError\x2C\x0d\n  isFunction\x2C\x0d\n  isPrimitive\x2C\x0d\n  log\x2C\x0d\n  promisify\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n  toUSVString\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x2C\x0d\n  types\x0d\n};\x0d\n
code-source-info,0x23ad5939b66,39,6042,6659,C0O6067C8O6113C24O6119C29O6113C30O6176C38O6232C54O6238C59O6232C60O6319C66O6351C77O6461C84O6357C89O6351C90O6481C98O6502C105O6532C112O6481C117O6598C122O6624C127O6645C132O6598C138O6658,,
code-creation,LazyCompile,10,303840,0x23ad593ab36,14,createIsHttpErrorFunction C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:175:36,0x23ad5936de8,~
code-source-info,0x23ad593ab36,202,3874,4211,C0O3874C9O3890C13O4209,,
code-creation,LazyCompile,10,303879,0x23ad593acc6,30,populateConstructorExports C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:258:37,0x23ad5936f28,~
code-source-info,0x23ad593acc6,202,5705,6223,C0O5705C13O5743C23O5743C29O6222,,
code-creation,LazyCompile,10,303929,0x23ad593adee,124,forEachCode C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:259:38,0x23ad593ac18,~
code-source-info,0x23ad593adee,202,5772,6220,C0O5814C10O5836C17O5843C21O5814C26O5856C31O5864C56O5907C70O5919C76O5979C78O6009C92O6021C98O6081C100O6098C104O6153C109O6167C113O6185C118O6199C123O6219,,
code-creation,LazyCompile,10,303978,0x23ad593b00e,64,toIdentifier C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\toidentifier\\index.js:24:23,0x23ad59395d8,~
code-source-info,0x23ad593b00e,204,320,503,C0O346C8O346C14O361C24O362C30O458C38O459C44O472C57O473C63O501,,
code-creation,LazyCompile,10,304020,0x23ad593b166,44, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\toidentifier\\index.js:27:19,0x23ad593af38,~
code-source-info,0x23ad593b166,204,375,452,C0O404C10O404C17O415C22O416C27O438C35O438C40O430C43O446,,
code-creation,LazyCompile,10,304099,0x23ad593b336,37,codeClass C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:38:20,0x23ad5936c58,~
code-source-info,0x23ad593b336,202,802,863,C0O815C8O829C13O843C20O844C28O854C32O822C36O861,,
code-creation,RegExp,3,304180,0x225ca7ad240,840,[^ _0-9a-z]
code-creation,LazyCompile,10,304288,0x23ad593baa6,99,createClientErrorConstructor C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:127:39,0x23ad5936d70,~
code-source-info,0x23ad593baa6,202,2773,3762,C0O2773C15O2817C20O2817C24O2817C26O3552C34O3552C39O3587C50O3587C55O3623C58O3635C65O3652C69O3661C72O3673C79O3694C83O3703C86O3715C92O3732C96O3742C98O3760,,
code-creation,LazyCompile,10,304338,0x23ad593bc46,31,toClassName C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:285:22,0x23ad5936fa0,~
code-source-info,0x23ad593bc46,202,6311,6390,C0O6334C8O6334C16O6345C23O6368C30O6388,,
code-creation,LazyCompile,10,304396,0x23ad593bd66,58,nameFunc C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:244:19,0x23ad5936ed8,~
code-source-info,0x23ad593bd66,202,5391,5574,C0O5419C4O5426C12O5426C19O5468C21O5485C27O5505C29O5516C33O5527C37O5534C51O5534C57O5573,,
code-creation,Function,11,304552,0x225ca7ad600,376,nameFunc C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:244:19,0x23ad5936ed8,^
code-source-info,0x225ca7ad600,202,5391,5574,,,
code-creation,Function,11,304579,0x225ca7ad7e0,256, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\toidentifier\\index.js:27:19,0x23ad593af38,^
code-source-info,0x225ca7ad7e0,204,375,452,,,
code-creation,Function,11,304644,0x225ca7ad940,388,toIdentifier C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\toidentifier\\index.js:24:23,0x23ad59395d8,^
code-source-info,0x225ca7ad940,204,320,503,,,
code-creation,Function,11,304665,0x225ca7adb40,236,codeClass C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:38:20,0x23ad5936c58,^
code-source-info,0x225ca7adb40,202,802,863,,,
code-creation,Function,11,304688,0x225ca7adca0,612,forEachCode C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:259:38,0x23ad593ac18,^
code-source-info,0x225ca7adca0,202,5772,6220,,,
code-creation,Function,11,304710,0x225ca7adf80,212,toClassName C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:285:22,0x23ad5936fa0,^
code-source-info,0x225ca7adf80,202,6311,6390,,,
code-creation,LazyCompile,10,304973,0x23ad593cf46,99,createServerErrorConstructor C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:196:39,0x23ad5936e60,~
code-source-info,0x23ad593cf46,202,4316,5306,C0O4316C15O4360C20O4360C24O4360C26O5095C34O5095C39O5130C50O5130C55O5166C58O5178C65O5195C69O5204C72O5216C79O5237C83O5246C86O5258C92O5275C96O5286C98O5304,,
new,MemoryChunk,0x34052480000,262144
new,MemoryChunk,0x19870f00000,262144
new,MemoryChunk,0x350ffbc0000,262144
new,MemoryChunk,0x335a6c80000,262144
new,MemoryChunk,0x14d7db00000,262144
new,MemoryChunk,0x5446b80000,262144
new,MemoryChunk,0x37f48880000,262144
new,MemoryChunk,0x10a7ddc0000,262144
scavenge,begin,0,281250,1671211992667
new,MemoryChunk,0xe6a6180000,262144
new,MemoryChunk,0x96d3200000,262144
scavenge,end,0,281250,1671211992668
code-creation,Function,11,306071,0x225ca7ae0c0,656,containsNamespace C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:29:28,0x226457b590,^
code-source-info,0x225ca7ae0c0,141,374,666,,,
code-creation,Function,11,306102,0x225ca7ae3c0,688,createClientErrorConstructor C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:127:39,0x23ad5936d70,^
code-source-info,0x225ca7ae3c0,202,2773,3762,,,
code-creation,Function,11,306130,0x225ca7ae6e0,1088,inherits node:util:233:18,0x2ee4c9fb3e8,^
code-source-info,0x225ca7ae6e0,39,6042,6659,,,
code-creation,Function,11,306150,0x225ca7aeb80,688,createServerErrorConstructor C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:196:39,0x23ad5936e60,^
code-source-info,0x225ca7aeb80,202,4316,5306,,,
code-creation,Eval,10,306807,0x23ad593e3ae,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\destroy\\index.js:1:1,0x23ad593e188,~
script-source,205,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\destroy\\index.js,/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\nvar Zlib = require('zlib')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy the given stream\x2C and optionally suppress any future `error` events.\n *\n * @param {object} stream\n * @param {boolean} suppress\n * @public\n */\n\nfunction destroy (stream\x2C suppress) {\n  if (isFsReadStream(stream)) {\n    destroyReadStream(stream)\n  } else if (isZlibStream(stream)) {\n    destroyZlibStream(stream)\n  } else if (hasDestroy(stream)) {\n    stream.destroy()\n  }\n\n  if (isEventEmitter(stream) && suppress) {\n    stream.removeAllListeners('error')\n    stream.addListener('error'\x2C noop)\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream (stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open'\x2C onOpenClose)\n  }\n}\n\n/**\n * Close a Zlib stream.\n *\n * Zlib streams below Node.js 4.5.5 have a buggy implementation\n * of .close() when zlib encountered an error.\n *\n * @param {object} stream\n * @private\n */\n\nfunction closeZlibStream (stream) {\n  if (stream._hadError === true) {\n    var prop = stream._binding === null\n      ? '_binding'\n      : '_handle'\n\n    stream[prop] = {\n      close: function () { this[prop] = null }\n    }\n  }\n\n  stream.close()\n}\n\n/**\n * Destroy a Zlib stream.\n *\n * Zlib streams don't have a destroy function in Node.js 6. On top of that\n * simply calling destroy on a zlib stream in Node.js 8+ will result in a\n * memory leak. So until that is fixed\x2C we need to call both close AND destroy.\n *\n * PR to fix memory leak: https://github.com/nodejs/node/pull/23734\n *\n * In Node.js 6+8\x2C it's important that destroy is called before close as the\n * stream would otherwise emit the error 'zlib binding closed'.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyZlibStream (stream) {\n  if (typeof stream.destroy === 'function') {\n    // node.js core bug work-around\n    // istanbul ignore if: node.js 0.8\n    if (stream._binding) {\n      // node.js < 0.10.0\n      stream.destroy()\n      if (stream._processing) {\n        stream._needDrain = true\n        stream.once('drain'\x2C onDrainClearBinding)\n      } else {\n        stream._binding.clear()\n      }\n    } else if (stream._destroy && stream._destroy !== Stream.Transform.prototype._destroy) {\n      // node.js >= 12\x2C ^11.1.0\x2C ^10.15.1\n      stream.destroy()\n    } else if (stream._destroy && typeof stream.close === 'function') {\n      // node.js 7\x2C 8\n      stream.destroyed = true\n      stream.close()\n    } else {\n      // fallback\n      // istanbul ignore next\n      stream.destroy()\n    }\n  } else if (typeof stream.close === 'function') {\n    // node.js < 8 fallback\n    closeZlibStream(stream)\n  }\n}\n\n/**\n * Determine if stream has destroy.\n * @private\n */\n\nfunction hasDestroy (stream) {\n  return stream instanceof Stream &&\n    typeof stream.destroy === 'function'\n}\n\n/**\n * Determine if val is EventEmitter.\n * @private\n */\n\nfunction isEventEmitter (val) {\n  return val instanceof EventEmitter\n}\n\n/**\n * Determine if stream is fs.ReadStream stream.\n * @private\n */\n\nfunction isFsReadStream (stream) {\n  return stream instanceof ReadStream\n}\n\n/**\n * Determine if stream is Zlib stream.\n * @private\n */\n\nfunction isZlibStream (stream) {\n  return stream instanceof Zlib.Gzip ||\n    stream instanceof Zlib.Gunzip ||\n    stream instanceof Zlib.Deflate ||\n    stream instanceof Zlib.DeflateRaw ||\n    stream instanceof Zlib.Inflate ||\n    stream instanceof Zlib.InflateRaw ||\n    stream instanceof Zlib.Unzip\n}\n\n/**\n * No-op function.\n * @private\n */\n\nfunction noop () {}\n\n/**\n * On drain handler to clear binding.\n * @private\n */\n\n// istanbul ignore next: node.js 0.8\nfunction onDrainClearBinding () {\n  this._binding.clear()\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose () {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n
code-source-info,0x23ad593e3ae,205,0,4258,C0O0C4O4258,,
code-creation,Function,10,307014,0x23ad593e856,124, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\destroy\\index.js:1:1,0x23ad593e328,~
code-source-info,0x23ad593e856,205,0,4258,C0O0C70O201C73O201C78O218C82O201C84O249C87O249C92O262C96O249C98O287C101O287C105O287C107O316C110O316C114O316C116O372C118O387C123O4257,,
code-creation,LazyCompile,10,307146,0x23ad593f486,5,get node:stream:57:6,0x334252c6f28,~
script-source,43,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify: { custom: customPromisify }\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst compose = require('internal/streams/compose');\x0d\nconst { pipeline } = require('internal/streams/pipeline');\x0d\nconst { destroyer } = require('internal/streams/destroy');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst internalBuffer = require('internal/buffer');\x0d\n\x0d\nconst promises = require('stream/promises');\x0d\n\x0d\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\x0d\nStream.isDisturbed = require('internal/streams/utils').isDisturbed;\x0d\nStream.Readable = require('internal/streams/readable');\x0d\nStream.Writable = require('internal/streams/writable');\x0d\nStream.Duplex = require('internal/streams/duplex');\x0d\nStream.Transform = require('internal/streams/transform');\x0d\nStream.PassThrough = require('internal/streams/passthrough');\x0d\nStream.pipeline = pipeline;\x0d\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\x0d\nStream.addAbortSignal = addAbortSignal;\x0d\nStream.finished = eos;\x0d\nStream.destroy = destroyer;\x0d\nStream.compose = compose;\x0d\n\x0d\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises.pipeline;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(eos\x2C customPromisify\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises.finished;\x0d\n  }\x0d\n});\x0d\n\x0d\n// Backwards-compat with node 0.4.x\x0d\nStream.Stream = Stream;\x0d\n\x0d\nStream._isUint8Array = require('internal/util/types').isUint8Array;\x0d\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\x0d\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\x0d\n                                       chunk.byteOffset\x2C\x0d\n                                       chunk.byteLength);\x0d\n};\x0d\n
code-source-info,0x23ad593f486,43,2396,2427,C0O2406C4O2422,,
code-creation,Eval,10,308025,0x20cab79d41e,5, node:zlib:1:1,0x20cab79cd38,~
script-source,206,node:zlib,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBuffer\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathMaxApply\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BROTLI_INVALID_PARAM\x2C\x0d\n    ERR_BUFFER_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_ZLIB_INITIALIZATION_FAILED\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst { Transform\x2C finished } = require('stream');\x0d\nconst {\x0d\n  deprecate\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isUint8Array\x2C\x0d\n} = require('internal/util/types');\x0d\nconst binding = internalBinding('zlib');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  Buffer\x2C\x0d\n  kMaxLength\x0d\n} = require('buffer');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateNumber\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kFlushFlag = Symbol('kFlushFlag');\x0d\nconst kError = Symbol('kError');\x0d\n\x0d\nconst constants = internalBinding('constants').zlib;\x0d\nconst {\x0d\n  // Zlib flush levels\x0d\n  Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH\x2C\x0d\n  // Zlib option values\x0d\n  Z_MIN_CHUNK\x2C Z_MIN_WINDOWBITS\x2C Z_MAX_WINDOWBITS\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C\x0d\n  Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_CHUNK\x2C Z_DEFAULT_COMPRESSION\x2C\x0d\n  Z_DEFAULT_STRATEGY\x2C Z_DEFAULT_WINDOWBITS\x2C Z_DEFAULT_MEMLEVEL\x2C Z_FIXED\x2C\x0d\n  // Node's compression stream modes (node_zlib_mode)\x0d\n  DEFLATE\x2C DEFLATERAW\x2C INFLATE\x2C INFLATERAW\x2C GZIP\x2C GUNZIP\x2C UNZIP\x2C\x0d\n  BROTLI_DECODE\x2C BROTLI_ENCODE\x2C\x0d\n  // Brotli operations (~flush levels)\x0d\n  BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_FLUSH\x2C\x0d\n  BROTLI_OPERATION_FINISH\x2C BROTLI_OPERATION_EMIT_METADATA\x2C\x0d\n} = constants;\x0d\n\x0d\n// Translation table for return codes.\x0d\nconst codes = {\x0d\n  Z_OK: constants.Z_OK\x2C\x0d\n  Z_STREAM_END: constants.Z_STREAM_END\x2C\x0d\n  Z_NEED_DICT: constants.Z_NEED_DICT\x2C\x0d\n  Z_ERRNO: constants.Z_ERRNO\x2C\x0d\n  Z_STREAM_ERROR: constants.Z_STREAM_ERROR\x2C\x0d\n  Z_DATA_ERROR: constants.Z_DATA_ERROR\x2C\x0d\n  Z_MEM_ERROR: constants.Z_MEM_ERROR\x2C\x0d\n  Z_BUF_ERROR: constants.Z_BUF_ERROR\x2C\x0d\n  Z_VERSION_ERROR: constants.Z_VERSION_ERROR\x0d\n};\x0d\n\x0d\nfor (const ckey of ObjectKeys(codes)) {\x0d\n  codes[codes[ckey]] = ckey;\x0d\n}\x0d\n\x0d\nfunction zlibBuffer(engine\x2C buffer\x2C callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  // Streams do not support non-Uint8Array ArrayBufferViews yet. Convert it to a\x0d\n  // Buffer without copying.\x0d\n  if (isArrayBufferView(buffer) && !isUint8Array(buffer)) {\x0d\n    buffer = Buffer.from(buffer.buffer\x2C buffer.byteOffset\x2C buffer.byteLength);\x0d\n  } else if (isAnyArrayBuffer(buffer)) {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  }\x0d\n  engine.buffers = null;\x0d\n  engine.nread = 0;\x0d\n  engine.cb = callback;\x0d\n  engine.on('data'\x2C zlibBufferOnData);\x0d\n  engine.on('error'\x2C zlibBufferOnError);\x0d\n  engine.on('end'\x2C zlibBufferOnEnd);\x0d\n  engine.end(buffer);\x0d\n}\x0d\n\x0d\nfunction zlibBufferOnData(chunk) {\x0d\n  if (!this.buffers)\x0d\n    this.buffers = [chunk];\x0d\n  else\x0d\n    ArrayPrototypePush(this.buffers\x2C chunk);\x0d\n  this.nread += chunk.length;\x0d\n  if (this.nread > this._maxOutputLength) {\x0d\n    this.close();\x0d\n    this.removeAllListeners('end');\x0d\n    this.cb(new ERR_BUFFER_TOO_LARGE(this._maxOutputLength));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction zlibBufferOnError(err) {\x0d\n  this.removeAllListeners('end');\x0d\n  this.cb(err);\x0d\n}\x0d\n\x0d\nfunction zlibBufferOnEnd() {\x0d\n  let buf;\x0d\n  if (this.nread === 0) {\x0d\n    buf = Buffer.alloc(0);\x0d\n  } else {\x0d\n    const bufs = this.buffers;\x0d\n    buf = (bufs.length === 1 ? bufs[0] : Buffer.concat(bufs\x2C this.nread));\x0d\n  }\x0d\n  this.close();\x0d\n  if (this._info)\x0d\n    this.cb(null\x2C { buffer: buf\x2C engine: this });\x0d\n  else\x0d\n    this.cb(null\x2C buf);\x0d\n}\x0d\n\x0d\nfunction zlibBufferSync(engine\x2C buffer) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    if (isAnyArrayBuffer(buffer)) {\x0d\n      buffer = Buffer.from(buffer);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'buffer'\x2C\x0d\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\x0d\n        buffer\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  buffer = processChunkSync(engine\x2C buffer\x2C engine._finishFlushFlag);\x0d\n  if (engine._info)\x0d\n    return { buffer\x2C engine };\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction zlibOnError(message\x2C errno\x2C code) {\x0d\n  const self = this[owner_symbol];\x0d\n  // There is no way to cleanly recover.\x0d\n  // Continuing only obscures problems.\x0d\n\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const error = new Error(message);\x0d\n  error.errno = errno;\x0d\n  error.code = code;\x0d\n  self.destroy(error);\x0d\n  self[kError] = error;\x0d\n}\x0d\n\x0d\n// 1. Returns false for undefined and NaN\x0d\n// 2. Returns true for finite numbers\x0d\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\x0d\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers\x0d\nconst checkFiniteNumber = hideStackFrames((number\x2C name) => {\x0d\n  // Common case\x0d\n  if (number === undefined) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (NumberIsFinite(number)) {\x0d\n    return true; // Is a valid number\x0d\n  }\x0d\n\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  validateNumber(number\x2C name);\x0d\n\x0d\n  // Infinite numbers\x0d\n  throw new ERR_OUT_OF_RANGE(name\x2C 'a finite number'\x2C number);\x0d\n});\x0d\n\x0d\n// 1. Returns def for number when it's undefined or NaN\x0d\n// 2. Returns number for finite numbers >= lower and <= upper\x0d\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\x0d\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers or numbers > upper or < lower\x0d\nconst checkRangesOrGetDefault = hideStackFrames(\x0d\n  (number\x2C name\x2C lower\x2C upper\x2C def) => {\x0d\n    if (!checkFiniteNumber(number\x2C name)) {\x0d\n      return def;\x0d\n    }\x0d\n    if (number < lower || number > upper) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C\x0d\n                                 `>= ${lower} and <= ${upper}`\x2C number);\x0d\n    }\x0d\n    return number;\x0d\n  }\x0d\n);\x0d\n\x0d\nconst FLUSH_BOUND = [\x0d\n  [ Z_NO_FLUSH\x2C Z_BLOCK ]\x2C\x0d\n  [ BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_EMIT_METADATA ]\x2C\x0d\n];\x0d\nconst FLUSH_BOUND_IDX_NORMAL = 0;\x0d\nconst FLUSH_BOUND_IDX_BROTLI = 1;\x0d\n\x0d\n// The base class for all Zlib-style streams.\x0d\nfunction ZlibBase(opts\x2C mode\x2C handle\x2C { flush\x2C finishFlush\x2C fullFlush }) {\x0d\n  let chunkSize = Z_DEFAULT_CHUNK;\x0d\n  let maxOutputLength = kMaxLength;\x0d\n  // The ZlibBase class is not exported to user land\x2C the mode should only be\x0d\n  // passed in by us.\x0d\n  assert(typeof mode === 'number');\x0d\n  assert(mode >= DEFLATE && mode <= BROTLI_ENCODE);\x0d\n\x0d\n  let flushBoundIdx;\x0d\n  if (mode !== BROTLI_ENCODE && mode !== BROTLI_DECODE) {\x0d\n    flushBoundIdx = FLUSH_BOUND_IDX_NORMAL;\x0d\n  } else {\x0d\n    flushBoundIdx = FLUSH_BOUND_IDX_BROTLI;\x0d\n  }\x0d\n\x0d\n  if (opts) {\x0d\n    chunkSize = opts.chunkSize;\x0d\n    if (!checkFiniteNumber(chunkSize\x2C 'options.chunkSize')) {\x0d\n      chunkSize = Z_DEFAULT_CHUNK;\x0d\n    } else if (chunkSize < Z_MIN_CHUNK) {\x0d\n      throw new ERR_OUT_OF_RANGE('options.chunkSize'\x2C\x0d\n                                 `>= ${Z_MIN_CHUNK}`\x2C chunkSize);\x0d\n    }\x0d\n\x0d\n    flush = checkRangesOrGetDefault(\x0d\n      opts.flush\x2C 'options.flush'\x2C\x0d\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C flush);\x0d\n\x0d\n    finishFlush = checkRangesOrGetDefault(\x0d\n      opts.finishFlush\x2C 'options.finishFlush'\x2C\x0d\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C\x0d\n      finishFlush);\x0d\n\x0d\n    maxOutputLength = checkRangesOrGetDefault(\x0d\n      opts.maxOutputLength\x2C 'options.maxOutputLength'\x2C\x0d\n      1\x2C kMaxLength\x2C kMaxLength);\x0d\n\x0d\n    if (opts.encoding || opts.objectMode || opts.writableObjectMode) {\x0d\n      opts = { ...opts };\x0d\n      opts.encoding = null;\x0d\n      opts.objectMode = false;\x0d\n      opts.writableObjectMode = false;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ReflectApply(Transform\x2C this\x2C [{ autoDestroy: true\x2C ...opts }]);\x0d\n  this[kError] = null;\x0d\n  this.bytesWritten = 0;\x0d\n  this._handle = handle;\x0d\n  handle[owner_symbol] = this;\x0d\n  // Used by processCallback() and zlibOnError()\x0d\n  handle.onerror = zlibOnError;\x0d\n  this._outBuffer = Buffer.allocUnsafe(chunkSize);\x0d\n  this._outOffset = 0;\x0d\n\x0d\n  this._chunkSize = chunkSize;\x0d\n  this._defaultFlushFlag = flush;\x0d\n  this._finishFlushFlag = finishFlush;\x0d\n  this._defaultFullFlushFlag = fullFlush;\x0d\n  this._info = opts && opts.info;\x0d\n  this._maxOutputLength = maxOutputLength;\x0d\n}\x0d\nObjectSetPrototypeOf(ZlibBase.prototype\x2C Transform.prototype);\x0d\nObjectSetPrototypeOf(ZlibBase\x2C Transform);\x0d\n\x0d\nObjectDefineProperty(ZlibBase.prototype\x2C '_closed'\x2C {\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return !this._handle;\x0d\n  }\x0d\n});\x0d\n\x0d\n// `bytesRead` made sense as a name when looking from the zlib engine's\x0d\n// perspective\x2C but it is inconsistent with all other streams exposed by Node.js\x0d\n// that have this concept\x2C where it stands for the number of bytes read\x0d\n// *from* the stream (that is\x2C net.Socket/tls.Socket & file system streams).\x0d\nObjectDefineProperty(ZlibBase.prototype\x2C 'bytesRead'\x2C {\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this.bytesWritten;\x0d\n  }\x2C 'zlib.bytesRead is deprecated and will change its meaning in the ' +\x0d\n     'future. Use zlib.bytesWritten instead.'\x2C 'DEP0108')\x2C\x0d\n  set: deprecate(function(value) {\x0d\n    this.bytesWritten = value;\x0d\n  }\x2C 'Setting zlib.bytesRead is deprecated. ' +\x0d\n     'This feature will be removed in the future.'\x2C 'DEP0108')\x0d\n});\x0d\n\x0d\nZlibBase.prototype.reset = function() {\x0d\n  if (!this._handle)\x0d\n    assert(false\x2C 'zlib binding closed');\x0d\n  return this._handle.reset();\x0d\n};\x0d\n\x0d\n// This is the _flush function called by the transform class\x2C\x0d\n// internally\x2C when the last chunk has been written.\x0d\nZlibBase.prototype._flush = function(callback) {\x0d\n  this._transform(Buffer.alloc(0)\x2C ''\x2C callback);\x0d\n};\x0d\n\x0d\n// Force Transform compat behavior.\x0d\nZlibBase.prototype._final = function(callback) {\x0d\n  callback();\x0d\n};\x0d\n\x0d\n// If a flush is scheduled while another flush is still pending\x2C a way to figure\x0d\n// out which one is the "stronger" flush is needed.\x0d\n// This is currently only used to figure out which flush flag to use for the\x0d\n// last chunk.\x0d\n// Roughly\x2C the following holds:\x0d\n// Z_NO_FLUSH (< Z_TREES) < Z_BLOCK < Z_PARTIAL_FLUSH <\x0d\n//     Z_SYNC_FLUSH < Z_FULL_FLUSH < Z_FINISH\x0d\nconst flushiness = [];\x0d\nlet i = 0;\x0d\nconst kFlushFlagList = [Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C\x0d\n                        Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH];\x0d\nfor (const flushFlag of kFlushFlagList) {\x0d\n  flushiness[flushFlag] = i++;\x0d\n}\x0d\n\x0d\nfunction maxFlush(a\x2C b) {\x0d\n  return flushiness[a] > flushiness[b] ? a : b;\x0d\n}\x0d\n\x0d\n// Set up a list of 'special' buffers that can be written using .write()\x0d\n// from the .flush() code as a way of introducing flushing operations into the\x0d\n// write sequence.\x0d\nconst kFlushBuffers = [];\x0d\n{\x0d\n  const dummyArrayBuffer = new ArrayBuffer();\x0d\n  for (const flushFlag of kFlushFlagList) {\x0d\n    kFlushBuffers[flushFlag] = Buffer.from(dummyArrayBuffer);\x0d\n    kFlushBuffers[flushFlag][kFlushFlag] = flushFlag;\x0d\n  }\x0d\n}\x0d\n\x0d\nZlibBase.prototype.flush = function(kind\x2C callback) {\x0d\n  if (typeof kind === 'function' || (kind === undefined && !callback)) {\x0d\n    callback = kind;\x0d\n    kind = this._defaultFullFlushFlag;\x0d\n  }\x0d\n\x0d\n  if (this.writableFinished) {\x0d\n    if (callback)\x0d\n      process.nextTick(callback);\x0d\n  } else if (this.writableEnded) {\x0d\n    if (callback)\x0d\n      this.once('end'\x2C callback);\x0d\n  } else {\x0d\n    this.write(kFlushBuffers[kind]\x2C ''\x2C callback);\x0d\n  }\x0d\n};\x0d\n\x0d\nZlibBase.prototype.close = function(callback) {\x0d\n  if (callback) finished(this\x2C callback);\x0d\n  this.destroy();\x0d\n};\x0d\n\x0d\nZlibBase.prototype._destroy = function(err\x2C callback) {\x0d\n  _close(this);\x0d\n  callback(err);\x0d\n};\x0d\n\x0d\nZlibBase.prototype._transform = function(chunk\x2C encoding\x2C cb) {\x0d\n  let flushFlag = this._defaultFlushFlag;\x0d\n  // We use a 'fake' zero-length chunk to carry information about flushes from\x0d\n  // the public API to the actual stream implementation.\x0d\n  if (typeof chunk[kFlushFlag] === 'number') {\x0d\n    flushFlag = chunk[kFlushFlag];\x0d\n  }\x0d\n\x0d\n  // For the last chunk\x2C also apply `_finishFlushFlag`.\x0d\n  if (this.writableEnded && this.writableLength === chunk.byteLength) {\x0d\n    flushFlag = maxFlush(flushFlag\x2C this._finishFlushFlag);\x0d\n  }\x0d\n  processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\x0d\n};\x0d\n\x0d\nZlibBase.prototype._processChunk = function(chunk\x2C flushFlag\x2C cb) {\x0d\n  // _processChunk() is left for backwards compatibility\x0d\n  if (typeof cb === 'function')\x0d\n    processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\x0d\n  else\x0d\n    return processChunkSync(this\x2C chunk\x2C flushFlag);\x0d\n};\x0d\n\x0d\nfunction processChunkSync(self\x2C chunk\x2C flushFlag) {\x0d\n  let availInBefore = chunk.byteLength;\x0d\n  let availOutBefore = self._chunkSize - self._outOffset;\x0d\n  let inOff = 0;\x0d\n  let availOutAfter;\x0d\n  let availInAfter;\x0d\n\x0d\n  let buffers = null;\x0d\n  let nread = 0;\x0d\n  let inputRead = 0;\x0d\n  const state = self._writeState;\x0d\n  const handle = self._handle;\x0d\n  let buffer = self._outBuffer;\x0d\n  let offset = self._outOffset;\x0d\n  const chunkSize = self._chunkSize;\x0d\n\x0d\n  let error;\x0d\n  self.on('error'\x2C function onError(er) {\x0d\n    error = er;\x0d\n  });\x0d\n\x0d\n  while (true) {\x0d\n    handle.writeSync(flushFlag\x2C\x0d\n                     chunk\x2C // in\x0d\n                     inOff\x2C // in_off\x0d\n                     availInBefore\x2C // in_len\x0d\n                     buffer\x2C // out\x0d\n                     offset\x2C // out_off\x0d\n                     availOutBefore); // out_len\x0d\n    if (error)\x0d\n      throw error;\x0d\n    else if (self[kError])\x0d\n      throw self[kError];\x0d\n\x0d\n    availOutAfter = state[0];\x0d\n    availInAfter = state[1];\x0d\n\x0d\n    const inDelta = (availInBefore - availInAfter);\x0d\n    inputRead += inDelta;\x0d\n\x0d\n    const have = availOutBefore - availOutAfter;\x0d\n    if (have > 0) {\x0d\n      const out = buffer.slice(offset\x2C offset + have);\x0d\n      offset += have;\x0d\n      if (!buffers)\x0d\n        buffers = [out];\x0d\n      else\x0d\n        ArrayPrototypePush(buffers\x2C out);\x0d\n      nread += out.byteLength;\x0d\n\x0d\n      if (nread > self._maxOutputLength) {\x0d\n        _close(self);\x0d\n        throw new ERR_BUFFER_TOO_LARGE(self._maxOutputLength);\x0d\n      }\x0d\n\x0d\n    } else {\x0d\n      assert(have === 0\x2C 'have should not go down');\x0d\n    }\x0d\n\x0d\n    // Exhausted the output buffer\x2C or used all the input create a new one.\x0d\n    if (availOutAfter === 0 || offset >= chunkSize) {\x0d\n      availOutBefore = chunkSize;\x0d\n      offset = 0;\x0d\n      buffer = Buffer.allocUnsafe(chunkSize);\x0d\n    }\x0d\n\x0d\n    if (availOutAfter === 0) {\x0d\n      // Not actually done. Need to reprocess.\x0d\n      // Also\x2C update the availInBefore to the availInAfter value\x2C\x0d\n      // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\x0d\n      // it'll have the correct byte counts.\x0d\n      inOff += inDelta;\x0d\n      availInBefore = availInAfter;\x0d\n    } else {\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  self.bytesWritten = inputRead;\x0d\n  _close(self);\x0d\n\x0d\n  if (nread === 0)\x0d\n    return Buffer.alloc(0);\x0d\n\x0d\n  return (buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C nread));\x0d\n}\x0d\n\x0d\nfunction processChunk(self\x2C chunk\x2C flushFlag\x2C cb) {\x0d\n  const handle = self._handle;\x0d\n  if (!handle) return process.nextTick(cb);\x0d\n\x0d\n  handle.buffer = chunk;\x0d\n  handle.cb = cb;\x0d\n  handle.availOutBefore = self._chunkSize - self._outOffset;\x0d\n  handle.availInBefore = chunk.byteLength;\x0d\n  handle.inOff = 0;\x0d\n  handle.flushFlag = flushFlag;\x0d\n\x0d\n  handle.write(flushFlag\x2C\x0d\n               chunk\x2C // in\x0d\n               0\x2C // in_off\x0d\n               handle.availInBefore\x2C // in_len\x0d\n               self._outBuffer\x2C // out\x0d\n               self._outOffset\x2C // out_off\x0d\n               handle.availOutBefore); // out_len\x0d\n}\x0d\n\x0d\nfunction processCallback() {\x0d\n  // This callback's context (`this`) is the `_handle` (ZCtx) object. It is\x0d\n  // important to null out the values once they are no longer needed since\x0d\n  // `_handle` can stay in memory long after the buffer is needed.\x0d\n  const handle = this;\x0d\n  const self = this[owner_symbol];\x0d\n  const state = self._writeState;\x0d\n\x0d\n  if (self.destroyed) {\x0d\n    this.buffer = null;\x0d\n    this.cb();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const availOutAfter = state[0];\x0d\n  const availInAfter = state[1];\x0d\n\x0d\n  const inDelta = handle.availInBefore - availInAfter;\x0d\n  self.bytesWritten += inDelta;\x0d\n\x0d\n  const have = handle.availOutBefore - availOutAfter;\x0d\n  if (have > 0) {\x0d\n    const out = self._outBuffer.slice(self._outOffset\x2C self._outOffset + have);\x0d\n    self._outOffset += have;\x0d\n    self.push(out);\x0d\n  } else {\x0d\n    assert(have === 0\x2C 'have should not go down');\x0d\n  }\x0d\n\x0d\n  if (self.destroyed) {\x0d\n    this.cb();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Exhausted the output buffer\x2C or used all the input create a new one.\x0d\n  if (availOutAfter === 0 || self._outOffset >= self._chunkSize) {\x0d\n    handle.availOutBefore = self._chunkSize;\x0d\n    self._outOffset = 0;\x0d\n    self._outBuffer = Buffer.allocUnsafe(self._chunkSize);\x0d\n  }\x0d\n\x0d\n  if (availOutAfter === 0) {\x0d\n    // Not actually done. Need to reprocess.\x0d\n    // Also\x2C update the availInBefore to the availInAfter value\x2C\x0d\n    // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\x0d\n    // it'll have the correct byte counts.\x0d\n    handle.inOff += inDelta;\x0d\n    handle.availInBefore = availInAfter;\x0d\n\x0d\n    this.write(handle.flushFlag\x2C\x0d\n               this.buffer\x2C // in\x0d\n               handle.inOff\x2C // in_off\x0d\n               handle.availInBefore\x2C // in_len\x0d\n               self._outBuffer\x2C // out\x0d\n               self._outOffset\x2C // out_off\x0d\n               self._chunkSize); // out_len\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (availInAfter > 0) {\x0d\n    // If we have more input that should be written\x2C but we also have output\x0d\n    // space available\x2C that means that the compression library was not\x0d\n    // interested in receiving more data\x2C and in particular that the input\x0d\n    // stream has ended early.\x0d\n    // This applies to streams where we don't check data past the end of\x0d\n    // what was consumed; that is\x2C everything except Gunzip/Unzip.\x0d\n    self.push(null);\x0d\n  }\x0d\n\x0d\n  // Finished with the chunk.\x0d\n  this.buffer = null;\x0d\n  this.cb();\x0d\n}\x0d\n\x0d\nfunction _close(engine) {\x0d\n  // Caller may invoke .close after a zlib error (which will null _handle).\x0d\n  if (!engine._handle)\x0d\n    return;\x0d\n\x0d\n  engine._handle.close();\x0d\n  engine._handle = null;\x0d\n}\x0d\n\x0d\nconst zlibDefaultOpts = {\x0d\n  flush: Z_NO_FLUSH\x2C\x0d\n  finishFlush: Z_FINISH\x2C\x0d\n  fullFlush: Z_FULL_FLUSH\x0d\n};\x0d\n// Base class for all streams actually backed by zlib and using zlib-specific\x0d\n// parameters.\x0d\nfunction Zlib(opts\x2C mode) {\x0d\n  let windowBits = Z_DEFAULT_WINDOWBITS;\x0d\n  let level = Z_DEFAULT_COMPRESSION;\x0d\n  let memLevel = Z_DEFAULT_MEMLEVEL;\x0d\n  let strategy = Z_DEFAULT_STRATEGY;\x0d\n  let dictionary;\x0d\n\x0d\n  if (opts) {\x0d\n    // windowBits is special. On the compression side\x2C 0 is an invalid value.\x0d\n    // But on the decompression side\x2C a value of 0 for windowBits tells zlib\x0d\n    // to use the window size in the zlib header of the compressed stream.\x0d\n    if ((opts.windowBits == null || opts.windowBits === 0) &&\x0d\n        (mode === INFLATE ||\x0d\n         mode === GUNZIP ||\x0d\n         mode === UNZIP)) {\x0d\n      windowBits = 0;\x0d\n    } else {\x0d\n      // `{ windowBits: 8 }` is valid for deflate but not gzip.\x0d\n      const min = Z_MIN_WINDOWBITS + (mode === GZIP ? 1 : 0);\x0d\n      windowBits = checkRangesOrGetDefault(\x0d\n        opts.windowBits\x2C 'options.windowBits'\x2C\x0d\n        min\x2C Z_MAX_WINDOWBITS\x2C Z_DEFAULT_WINDOWBITS);\x0d\n    }\x0d\n\x0d\n    level = checkRangesOrGetDefault(\x0d\n      opts.level\x2C 'options.level'\x2C\x0d\n      Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C Z_DEFAULT_COMPRESSION);\x0d\n\x0d\n    memLevel = checkRangesOrGetDefault(\x0d\n      opts.memLevel\x2C 'options.memLevel'\x2C\x0d\n      Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_MEMLEVEL);\x0d\n\x0d\n    strategy = checkRangesOrGetDefault(\x0d\n      opts.strategy\x2C 'options.strategy'\x2C\x0d\n      Z_DEFAULT_STRATEGY\x2C Z_FIXED\x2C Z_DEFAULT_STRATEGY);\x0d\n\x0d\n    dictionary = opts.dictionary;\x0d\n    if (dictionary !== undefined && !isArrayBufferView(dictionary)) {\x0d\n      if (isAnyArrayBuffer(dictionary)) {\x0d\n        dictionary = Buffer.from(dictionary);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'options.dictionary'\x2C\x0d\n          ['Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\x0d\n          dictionary\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const handle = new binding.Zlib(mode);\x0d\n  // Ideally\x2C we could let ZlibBase() set up _writeState. I haven't been able\x0d\n  // to come up with a good solution that doesn't break our internal API\x2C\x0d\n  // and with it all supported npm versions at the time of writing.\x0d\n  this._writeState = new Uint32Array(2);\x0d\n  handle.init(windowBits\x2C\x0d\n              level\x2C\x0d\n              memLevel\x2C\x0d\n              strategy\x2C\x0d\n              this._writeState\x2C\x0d\n              processCallback\x2C\x0d\n              dictionary);\x0d\n\x0d\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C zlibDefaultOpts]);\x0d\n\x0d\n  this._level = level;\x0d\n  this._strategy = strategy;\x0d\n}\x0d\nObjectSetPrototypeOf(Zlib.prototype\x2C ZlibBase.prototype);\x0d\nObjectSetPrototypeOf(Zlib\x2C ZlibBase);\x0d\n\x0d\n// This callback is used by `.params()` to wait until a full flush happened\x0d\n// before adjusting the parameters. In particular\x2C the call to the native\x0d\n// `params()` function should not happen while a write is currently in progress\x0d\n// on the threadpool.\x0d\nfunction paramsAfterFlushCallback(level\x2C strategy\x2C callback) {\x0d\n  assert(this._handle\x2C 'zlib binding closed');\x0d\n  this._handle.params(level\x2C strategy);\x0d\n  if (!this.destroyed) {\x0d\n    this._level = level;\x0d\n    this._strategy = strategy;\x0d\n    if (callback) callback();\x0d\n  }\x0d\n}\x0d\n\x0d\nZlib.prototype.params = function params(level\x2C strategy\x2C callback) {\x0d\n  checkRangesOrGetDefault(level\x2C 'level'\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL);\x0d\n  checkRangesOrGetDefault(strategy\x2C 'strategy'\x2C Z_DEFAULT_STRATEGY\x2C Z_FIXED);\x0d\n\x0d\n  if (this._level !== level || this._strategy !== strategy) {\x0d\n    this.flush(Z_SYNC_FLUSH\x2C\x0d\n               FunctionPrototypeBind(paramsAfterFlushCallback\x2C this\x2C\x0d\n                                     level\x2C strategy\x2C callback));\x0d\n  } else {\x0d\n    process.nextTick(callback);\x0d\n  }\x0d\n};\x0d\n\x0d\n// generic zlib\x0d\n// minimal 2-byte header\x0d\nfunction Deflate(opts) {\x0d\n  if (!(this instanceof Deflate))\x0d\n    return new Deflate(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATE]);\x0d\n}\x0d\nObjectSetPrototypeOf(Deflate.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Deflate\x2C Zlib);\x0d\n\x0d\nfunction Inflate(opts) {\x0d\n  if (!(this instanceof Inflate))\x0d\n    return new Inflate(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATE]);\x0d\n}\x0d\nObjectSetPrototypeOf(Inflate.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Inflate\x2C Zlib);\x0d\n\x0d\nfunction Gzip(opts) {\x0d\n  if (!(this instanceof Gzip))\x0d\n    return new Gzip(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GZIP]);\x0d\n}\x0d\nObjectSetPrototypeOf(Gzip.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Gzip\x2C Zlib);\x0d\n\x0d\nfunction Gunzip(opts) {\x0d\n  if (!(this instanceof Gunzip))\x0d\n    return new Gunzip(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GUNZIP]);\x0d\n}\x0d\nObjectSetPrototypeOf(Gunzip.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Gunzip\x2C Zlib);\x0d\n\x0d\nfunction DeflateRaw(opts) {\x0d\n  if (opts && opts.windowBits === 8) opts.windowBits = 9;\x0d\n  if (!(this instanceof DeflateRaw))\x0d\n    return new DeflateRaw(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATERAW]);\x0d\n}\x0d\nObjectSetPrototypeOf(DeflateRaw.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(DeflateRaw\x2C Zlib);\x0d\n\x0d\nfunction InflateRaw(opts) {\x0d\n  if (!(this instanceof InflateRaw))\x0d\n    return new InflateRaw(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATERAW]);\x0d\n}\x0d\nObjectSetPrototypeOf(InflateRaw.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(InflateRaw\x2C Zlib);\x0d\n\x0d\nfunction Unzip(opts) {\x0d\n  if (!(this instanceof Unzip))\x0d\n    return new Unzip(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C UNZIP]);\x0d\n}\x0d\nObjectSetPrototypeOf(Unzip.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Unzip\x2C Zlib);\x0d\n\x0d\nfunction createConvenienceMethod(ctor\x2C sync) {\x0d\n  if (sync) {\x0d\n    return function syncBufferWrapper(buffer\x2C opts) {\x0d\n      return zlibBufferSync(new ctor(opts)\x2C buffer);\x0d\n    };\x0d\n  }\x0d\n  return function asyncBufferWrapper(buffer\x2C opts\x2C callback) {\x0d\n    if (typeof opts === 'function') {\x0d\n      callback = opts;\x0d\n      opts = {};\x0d\n    }\x0d\n    return zlibBuffer(new ctor(opts)\x2C buffer\x2C callback);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst kMaxBrotliParam = MathMaxApply(ArrayPrototypeMap(\x0d\n  ObjectKeys(constants)\x2C\x0d\n  (key) => (StringPrototypeStartsWith(key\x2C 'BROTLI_PARAM_') ?\x0d\n    constants[key] :\x0d\n    0)\x0d\n));\x0d\n\x0d\nconst brotliInitParamsArray = new Uint32Array(kMaxBrotliParam + 1);\x0d\n\x0d\nconst brotliDefaultOpts = {\x0d\n  flush: BROTLI_OPERATION_PROCESS\x2C\x0d\n  finishFlush: BROTLI_OPERATION_FINISH\x2C\x0d\n  fullFlush: BROTLI_OPERATION_FLUSH\x0d\n};\x0d\nfunction Brotli(opts\x2C mode) {\x0d\n  assert(mode === BROTLI_DECODE || mode === BROTLI_ENCODE);\x0d\n\x0d\n  TypedArrayPrototypeFill(brotliInitParamsArray\x2C -1);\x0d\n  if (opts?.params) {\x0d\n    ArrayPrototypeForEach(ObjectKeys(opts.params)\x2C (origKey) => {\x0d\n      const key = +origKey;\x0d\n      if (NumberIsNaN(key) || key < 0 || key > kMaxBrotliParam ||\x0d\n          (brotliInitParamsArray[key] | 0) !== -1) {\x0d\n        throw new ERR_BROTLI_INVALID_PARAM(origKey);\x0d\n      }\x0d\n\x0d\n      const value = opts.params[origKey];\x0d\n      if (typeof value !== 'number' && typeof value !== 'boolean') {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.params[key]'\x2C\x0d\n                                       'number'\x2C opts.params[origKey]);\x0d\n      }\x0d\n      brotliInitParamsArray[key] = value;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  const handle = mode === BROTLI_DECODE ?\x0d\n    new binding.BrotliDecoder(mode) : new binding.BrotliEncoder(mode);\x0d\n\x0d\n  this._writeState = new Uint32Array(2);\x0d\n  // TODO(addaleax): Sometimes we generate better error codes in C++ land\x2C\x0d\n  // e.g. ERR_BROTLI_PARAM_SET_FAILED -- it's hard to access them with\x0d\n  // the current bindings setup\x2C though.\x0d\n  if (!handle.init(brotliInitParamsArray\x2C\x0d\n                   this._writeState\x2C\x0d\n                   processCallback)) {\x0d\n    throw new ERR_ZLIB_INITIALIZATION_FAILED();\x0d\n  }\x0d\n\x0d\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C brotliDefaultOpts]);\x0d\n}\x0d\nObjectSetPrototypeOf(Brotli.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Brotli\x2C Zlib);\x0d\n\x0d\nfunction BrotliCompress(opts) {\x0d\n  if (!(this instanceof BrotliCompress))\x0d\n    return new BrotliCompress(opts);\x0d\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_ENCODE]);\x0d\n}\x0d\nObjectSetPrototypeOf(BrotliCompress.prototype\x2C Brotli.prototype);\x0d\nObjectSetPrototypeOf(BrotliCompress\x2C Brotli);\x0d\n\x0d\nfunction BrotliDecompress(opts) {\x0d\n  if (!(this instanceof BrotliDecompress))\x0d\n    return new BrotliDecompress(opts);\x0d\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_DECODE]);\x0d\n}\x0d\nObjectSetPrototypeOf(BrotliDecompress.prototype\x2C Brotli.prototype);\x0d\nObjectSetPrototypeOf(BrotliDecompress\x2C Brotli);\x0d\n\x0d\n\x0d\nfunction createProperty(ctor) {\x0d\n  return {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: function(options) {\x0d\n      return new ctor(options);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(binding.Zlib.prototype\x2C 'jsref'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  Deflate\x2C\x0d\n  Inflate\x2C\x0d\n  Gzip\x2C\x0d\n  Gunzip\x2C\x0d\n  DeflateRaw\x2C\x0d\n  InflateRaw\x2C\x0d\n  Unzip\x2C\x0d\n  BrotliCompress\x2C\x0d\n  BrotliDecompress\x2C\x0d\n\x0d\n  // Convenience methods.\x0d\n  // compress/decompress a string or buffer in one step.\x0d\n  deflate: createConvenienceMethod(Deflate\x2C false)\x2C\x0d\n  deflateSync: createConvenienceMethod(Deflate\x2C true)\x2C\x0d\n  gzip: createConvenienceMethod(Gzip\x2C false)\x2C\x0d\n  gzipSync: createConvenienceMethod(Gzip\x2C true)\x2C\x0d\n  deflateRaw: createConvenienceMethod(DeflateRaw\x2C false)\x2C\x0d\n  deflateRawSync: createConvenienceMethod(DeflateRaw\x2C true)\x2C\x0d\n  unzip: createConvenienceMethod(Unzip\x2C false)\x2C\x0d\n  unzipSync: createConvenienceMethod(Unzip\x2C true)\x2C\x0d\n  inflate: createConvenienceMethod(Inflate\x2C false)\x2C\x0d\n  inflateSync: createConvenienceMethod(Inflate\x2C true)\x2C\x0d\n  gunzip: createConvenienceMethod(Gunzip\x2C false)\x2C\x0d\n  gunzipSync: createConvenienceMethod(Gunzip\x2C true)\x2C\x0d\n  inflateRaw: createConvenienceMethod(InflateRaw\x2C false)\x2C\x0d\n  inflateRawSync: createConvenienceMethod(InflateRaw\x2C true)\x2C\x0d\n  brotliCompress: createConvenienceMethod(BrotliCompress\x2C false)\x2C\x0d\n  brotliCompressSync: createConvenienceMethod(BrotliCompress\x2C true)\x2C\x0d\n  brotliDecompress: createConvenienceMethod(BrotliDecompress\x2C false)\x2C\x0d\n  brotliDecompressSync: createConvenienceMethod(BrotliDecompress\x2C true)\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  createDeflate: createProperty(Deflate)\x2C\x0d\n  createInflate: createProperty(Inflate)\x2C\x0d\n  createDeflateRaw: createProperty(DeflateRaw)\x2C\x0d\n  createInflateRaw: createProperty(InflateRaw)\x2C\x0d\n  createGzip: createProperty(Gzip)\x2C\x0d\n  createGunzip: createProperty(Gunzip)\x2C\x0d\n  createUnzip: createProperty(Unzip)\x2C\x0d\n  createBrotliCompress: createProperty(BrotliCompress)\x2C\x0d\n  createBrotliDecompress: createProperty(BrotliDecompress)\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  codes: {\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: ObjectFreeze(codes)\x0d\n  }\x0d\n});\x0d\n\x0d\n// These should be considered deprecated\x0d\n// expose all the zlib constants\x0d\nfor (const bkey of ObjectKeys(constants)) {\x0d\n  if (StringPrototypeStartsWith(bkey\x2C 'BROTLI')) continue;\x0d\n  ObjectDefineProperty(module.exports\x2C bkey\x2C {\x0d\n    enumerable: false\x2C value: constants[bkey]\x2C writable: false\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x20cab79d41e,206,0,30343,C0O0C4O30343,,
code-creation,Function,10,309432,0x20cab79f22e,4132, node:zlib:1:1,0x20cab79d398,~
code-source-info,0x20cab79f22e,206,0,30343,C0O0C360O1183C365O1199C371O1225C376O1247C382O1270C388O1280C394O1306C399O1323C405O1342C411O1358C416O1385C421O1410C426O1427C432O1442C437O1467C443O1484C449O1514C454O1525C460O1553C466O1782C470O1782C476O1782C482O1612C488O1643C494O1670C500O1697C506O1720C512O1761C517O1843C521O1843C527O1819C533O1830C539O1889C543O1889C549O1874C554O1989C558O1989C564O1927C570O1949C576O1970C582O2038C586O2038C590O2038C592O2079C596O2079C600O2079C602O2146C606O2146C612O2119C618O2130C624O2191C628O2191C634O2222C640O2174C646O2286C650O2286C656O2244C662O2265C668O2340C672O2340C676O2340C678O2378C682O2378C686O2378C688O2417C692O2417C698O2445C702O2417C704O3128C708O2488C713O2500C718O2509C723O2526C729O2540C734O2554C739O2592C745O2605C751O2623C757O2641C763O2654C769O2670C775O2686C781O2702C787O2719C793O2745C799O2765C805O2787C811O2807C817O2874C823O2883C829O2895C835O2904C841O2916C847O2922C853O2930C859O2940C865O2955C871O3013C876O3039C882O3066C888O3091C894O3196C904O3217C916O3250C928O3290C940O3325C952O3363C964O3406C976O3446C988O3485C1000O3528C1011O3570C1015O3570C1049O3562C1080O3562C1083O3594C1085O3605C1092O3613C1099O3551C1170O6188C1176O6188C1180O6188C1182O6849C1188O6849C1192O6849C1194O7197C1214O7204C1224O7216C1249O7232C1259O7258C1271O7197C1273O7328C1274O7328C1276O7363C1278O7363C1280O9531C1284O9561C1294O9582C1300O9531C1305O9595C1313O9595C1318O9641C1322O9671C1338O9742C1346O9641C1351O10096C1355O10126C1371O10204C1383O10331C1392O10204C1401O10401C1413O10508C1425O10401C1443O10096C1453O10582C1457O10591C1467O10607C1475O10843C1479O10852C1489O10869C1497O10987C1501O10996C1511O11013C1519O11444C1523O11444C1525O11457C1528O11484C1542O11485C1556O11497C1570O11506C1584O11548C1598O11562C1612O11576C1623O11612C1659O11599C1702O11599C1705O11633C1711O11644C1725O11655C1736O11588C1815O11945C1819O11945C1821O11980C1823O11980C1835O12026C1871O12013C1914O12013C1917O12049C1925O12083C1935O12083C1945O12074C1953O12112C1959O12125C1973O12149C1984O12002C2063O12173C2067O12182C2077O12198C2085O12622C2089O12631C2099O12647C2107O12739C2111O12748C2121O12767C2129O12837C2133O12846C2143O12867C2151O13421C2155O13430C2165O13454C2173O19285C2184O19297C2194O19325C2204O19349C2214O19285C2216O21848C2220O21874C2234O21894C2240O21848C2250O21907C2258O21907C2268O22482C2272O22487C2286O22504C2294O23173C2298O23202C2312O23218C2322O23173C2332O23231C2340O23231C2350O23412C2354O23441C2368O23457C2378O23412C2388O23470C2396O23470C2406O23639C2410O23665C2424O23681C2434O23639C2444O23694C2452O23694C2462O23868C2466O23896C2480O23912C2490O23868C2500O23925C2508O23925C2518O24176C2522O24208C2536O24224C2546O24176C2556O24237C2564O24237C2574O24433C2578O24465C2592O24481C2602O24433C2612O24494C2620O24494C2630O24670C2634O24697C2648O24713C2658O24670C2668O24726C2676O24726C2686O25194C2694O25229C2710O25207C2722O25194C2730O25194C2732O25383C2738O25415C2748O25383C2758O25383C2760O25450C2771O25462C2781O25504C2791O25543C2801O25450C2803O26945C2807O26973C2821O26989C2831O26945C2841O27002C2849O27002C2859O27211C2863O27247C2877O27265C2887O27211C2897O27278C2905O27278C2915O27503C2919O27541C2933O27559C2943O27503C2953O27572C2961O27572C2971O27953C2975O27982C2985O27987C3008O28012C3020O28053C3032O27953C3042O28103C3053O28125C3063O28137C3073O28149C3083O28158C3093O28169C3103O28184C3113O28199C3123O28209C3133O28228C3148O28345C3173O28402C3198O28451C3223O28502C3248O28554C3273O28617C3298O28670C3323O28723C3348O28773C3373O28830C3398O28881C3423O28936C3448O28990C3473O29053C3498O29115C3523O29186C3548O29254C3573O29329C3593O28118C3601O29415C3624O29444C3644O29487C3664O29533C3684O29582C3704O29625C3724O29664C3744O29704C3764O29752C3784O29811C3800O29859C3811O29922C3829O29948C3838O30007C3864O29385C3874O30135C3882O30135C3928O30127C3971O30127C3974O30163C3982O30167C3997O30210C3999O30251C4009O30260C4024O30308C4041O30223C4051O30116C4131O30342,,
tick,0x7ff6a88c3dcf,309736,1,0x7ff6a79aa4a0,3,0x7ff6a82ef2d0,0x225ca7847fb,0x225ca7acaee,0x225ca791e63,0x225ca79d19f,0x225ca7983c7,0x225ca798095,0x23ad593e8c4,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2f65a73ecb8,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2f65a736850,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2bdba108aa2,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x22645774e6,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2264576859,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x226457464f,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x2264572d77,0x3103a7b5c9
code-creation,LazyCompile,10,310058,0x20cab7a4776,135,fromArrayBuffer node:buffer:448:25,0x6682ea5e68,~
code-source-info,0x20cab7a4776,18,13364,14066,C0O13431C4O13468C9O13501C11O13514C15O13532C20O13536C26O13568C29O13616C36O13627C40O13646C41O13660C46O13670C56O13676C61O13670C62O13721C66O13754C73O13839C75O13848C79O13862C80O13873C85O13887C87O13898C92O13920C102O13926C107O13920C110O13987C113O14016C129O14023C134O14063,,
code-creation,LazyCompile,10,310214,0x20cab7a4abe,29, node:zlib:805:3,0x20cab79e330,~
code-source-info,0x20cab7a4abe,206,25255,25344,C0O25265C8O25265C17O25320C22O25329C28O25344,,
code-creation,LazyCompile,10,310309,0x20cab7a6ab6,23,createConvenienceMethod node:zlib:788:33,0x20cab79db10,~
code-source-info,0x20cab7a6ab6,206,24796,25166,C0O24796C9O24814C13O24831C17O24942C18O24951C22O25163,,
code-creation,LazyCompile,10,310375,0x20cab7a6d76,25,createProperty node:zlib:873:24,0x20cab79dc80,~
code-source-info,0x20cab7a6d76,206,27648,27797,C0O27648C9O27660C14O27729C24O27794,,
code-creation,Eval,10,311737,0x20cab7a7cc6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js:1:1,0x20cab7a7b20,~
script-source,207,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js,/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity\x2C 'utf8')\n    .digest('base64')\n    .substring(0\x2C 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity\x2C 'utf8')\n    : entity.length\n\n  return '"' + len.toString(16) + '-' + hash + '"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity\x2C options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string\x2C Buffer\x2C or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '"' + size + '-' + mtime + '"'\n}\n
code-source-info,0x20cab7a7cc6,207,0,2479,C0O0C4O2479,,
code-creation,Function,10,311858,0x20cab7a7ede,74, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js:1:1,0x20cab7a7c40,~
code-source-info,0x20cab7a7ede,207,0,2479,C0O0C28O139C30O154C34O220C37O220C41O220C43O250C46O250C51O263C55O250C57O328C61O335C66O345C70O328C73O2478,,
code-creation,Eval,10,312154,0x20cab7a95a6,5, node:crypto:1:1,0x20cab7a9390,~
script-source,208,node:crypto,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Note: In 0.8 and before\x2C crypto functions all defaulted to using\x0d\n// binary-encoded strings rather than buffers.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  assertCrypto\x2C\x0d\n  deprecate\x0d\n} = require('internal/util');\x0d\nassertCrypto();\x0d\n\x0d\nconst {\x0d\n  ERR_CRYPTO_FIPS_FORCED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst constants = internalBinding('constants').crypto;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst fipsForced = getOptionValue('--force-fips');\x0d\nconst {\x0d\n  getFipsCrypto\x2C\x0d\n  setFipsCrypto\x2C\x0d\n  timingSafeEqual\x2C\x0d\n} = internalBinding('crypto');\x0d\nconst {\x0d\n  checkPrime\x2C\x0d\n  checkPrimeSync\x2C\x0d\n  generatePrime\x2C\x0d\n  generatePrimeSync\x2C\x0d\n  randomBytes\x2C\x0d\n  randomFill\x2C\x0d\n  randomFillSync\x2C\x0d\n  randomInt\x2C\x0d\n  randomUUID\x2C\x0d\n} = require('internal/crypto/random');\x0d\nconst {\x0d\n  pbkdf2\x2C\x0d\n  pbkdf2Sync\x0d\n} = require('internal/crypto/pbkdf2');\x0d\nconst {\x0d\n  scrypt\x2C\x0d\n  scryptSync\x0d\n} = require('internal/crypto/scrypt');\x0d\nconst {\x0d\n  hkdf\x2C\x0d\n  hkdfSync\x0d\n} = require('internal/crypto/hkdf');\x0d\nconst {\x0d\n  generateKeyPair\x2C\x0d\n  generateKeyPairSync\x2C\x0d\n  generateKey\x2C\x0d\n  generateKeySync\x2C\x0d\n} = require('internal/crypto/keygen');\x0d\nconst {\x0d\n  createSecretKey\x2C\x0d\n  createPublicKey\x2C\x0d\n  createPrivateKey\x2C\x0d\n  KeyObject\x2C\x0d\n} = require('internal/crypto/keys');\x0d\nconst {\x0d\n  DiffieHellman\x2C\x0d\n  DiffieHellmanGroup\x2C\x0d\n  ECDH\x2C\x0d\n  diffieHellman\x0d\n} = require('internal/crypto/diffiehellman');\x0d\nconst {\x0d\n  Cipher\x2C\x0d\n  Cipheriv\x2C\x0d\n  Decipher\x2C\x0d\n  Decipheriv\x2C\x0d\n  privateDecrypt\x2C\x0d\n  privateEncrypt\x2C\x0d\n  publicDecrypt\x2C\x0d\n  publicEncrypt\x2C\x0d\n  getCipherInfo\x2C\x0d\n} = require('internal/crypto/cipher');\x0d\nconst {\x0d\n  Sign\x2C\x0d\n  signOneShot\x2C\x0d\n  Verify\x2C\x0d\n  verifyOneShot\x0d\n} = require('internal/crypto/sig');\x0d\nconst {\x0d\n  Hash\x2C\x0d\n  Hmac\x0d\n} = require('internal/crypto/hash');\x0d\nconst {\x0d\n  X509Certificate\x0d\n} = require('internal/crypto/x509');\x0d\nconst {\x0d\n  getCiphers\x2C\x0d\n  getCurves\x2C\x0d\n  getDefaultEncoding\x2C\x0d\n  getHashes\x2C\x0d\n  setDefaultEncoding\x2C\x0d\n  setEngine\x2C\x0d\n  lazyRequire\x2C\x0d\n  secureHeapUsed\x2C\x0d\n} = require('internal/crypto/util');\x0d\nconst Certificate = require('internal/crypto/certificate');\x0d\n\x0d\n// These helper functions are needed because the constructors can\x0d\n// use new\x2C in which case V8 cannot inline the recursive constructor call\x0d\nfunction createHash(algorithm\x2C options) {\x0d\n  return new Hash(algorithm\x2C options);\x0d\n}\x0d\n\x0d\nfunction createCipher(cipher\x2C password\x2C options) {\x0d\n  return new Cipher(cipher\x2C password\x2C options);\x0d\n}\x0d\n\x0d\nfunction createCipheriv(cipher\x2C key\x2C iv\x2C options) {\x0d\n  return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\x0d\n}\x0d\n\x0d\nfunction createDecipher(cipher\x2C password\x2C options) {\x0d\n  return new Decipher(cipher\x2C password\x2C options);\x0d\n}\x0d\n\x0d\nfunction createDecipheriv(cipher\x2C key\x2C iv\x2C options) {\x0d\n  return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\x0d\n}\x0d\n\x0d\nfunction createDiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\x0d\n  return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\x0d\n}\x0d\n\x0d\nfunction createDiffieHellmanGroup(name) {\x0d\n  return new DiffieHellmanGroup(name);\x0d\n}\x0d\n\x0d\nfunction createECDH(curve) {\x0d\n  return new ECDH(curve);\x0d\n}\x0d\n\x0d\nfunction createHmac(hmac\x2C key\x2C options) {\x0d\n  return new Hmac(hmac\x2C key\x2C options);\x0d\n}\x0d\n\x0d\nfunction createSign(algorithm\x2C options) {\x0d\n  return new Sign(algorithm\x2C options);\x0d\n}\x0d\n\x0d\nfunction createVerify(algorithm\x2C options) {\x0d\n  return new Verify(algorithm\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  // Methods\x0d\n  checkPrime\x2C\x0d\n  checkPrimeSync\x2C\x0d\n  createCipheriv\x2C\x0d\n  createDecipheriv\x2C\x0d\n  createDiffieHellman\x2C\x0d\n  createDiffieHellmanGroup\x2C\x0d\n  createECDH\x2C\x0d\n  createHash\x2C\x0d\n  createHmac\x2C\x0d\n  createPrivateKey\x2C\x0d\n  createPublicKey\x2C\x0d\n  createSecretKey\x2C\x0d\n  createSign\x2C\x0d\n  createVerify\x2C\x0d\n  diffieHellman\x2C\x0d\n  generatePrime\x2C\x0d\n  generatePrimeSync\x2C\x0d\n  getCiphers\x2C\x0d\n  getCipherInfo\x2C\x0d\n  getCurves\x2C\x0d\n  getDiffieHellman: createDiffieHellmanGroup\x2C\x0d\n  getHashes\x2C\x0d\n  hkdf\x2C\x0d\n  hkdfSync\x2C\x0d\n  pbkdf2\x2C\x0d\n  pbkdf2Sync\x2C\x0d\n  generateKeyPair\x2C\x0d\n  generateKeyPairSync\x2C\x0d\n  generateKey\x2C\x0d\n  generateKeySync\x2C\x0d\n  privateDecrypt\x2C\x0d\n  privateEncrypt\x2C\x0d\n  publicDecrypt\x2C\x0d\n  publicEncrypt\x2C\x0d\n  randomBytes\x2C\x0d\n  randomFill\x2C\x0d\n  randomFillSync\x2C\x0d\n  randomInt\x2C\x0d\n  randomUUID\x2C\x0d\n  scrypt\x2C\x0d\n  scryptSync\x2C\x0d\n  sign: signOneShot\x2C\x0d\n  setEngine\x2C\x0d\n  timingSafeEqual\x2C\x0d\n  getFips: fipsForced ? getFipsForced : getFipsCrypto\x2C\x0d\n  setFips: fipsForced ? setFipsForced : setFipsCrypto\x2C\x0d\n  verify: verifyOneShot\x2C\x0d\n\x0d\n  // Classes\x0d\n  Certificate\x2C\x0d\n  Cipher\x2C\x0d\n  Cipheriv\x2C\x0d\n  Decipher\x2C\x0d\n  Decipheriv\x2C\x0d\n  DiffieHellman\x2C\x0d\n  DiffieHellmanGroup\x2C\x0d\n  ECDH\x2C\x0d\n  Hash\x2C\x0d\n  Hmac\x2C\x0d\n  KeyObject\x2C\x0d\n  Sign\x2C\x0d\n  Verify\x2C\x0d\n  X509Certificate\x2C\x0d\n  secureHeapUsed\x2C\x0d\n};\x0d\n\x0d\nfunction setFipsForced(val) {\x0d\n  if (val) return;\x0d\n  throw new ERR_CRYPTO_FIPS_FORCED();\x0d\n}\x0d\n\x0d\nfunction getFipsForced() {\x0d\n  return 1;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(constants\x2C 'defaultCipherList'\x2C {\x0d\n  value: getOptionValue('--tls-cipher-list')\x0d\n});\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  createCipher: {\x0d\n    enumerable: false\x2C\x0d\n    value: deprecate(createCipher\x2C\x0d\n                     'crypto.createCipher is deprecated.'\x2C 'DEP0106')\x0d\n  }\x2C\x0d\n  createDecipher: {\x0d\n    enumerable: false\x2C\x0d\n    value: deprecate(createDecipher\x2C\x0d\n                     'crypto.createDecipher is deprecated.'\x2C 'DEP0106')\x0d\n  }\x2C\x0d\n  // crypto.fips is deprecated. DEP0093. Use crypto.getFips()/crypto.setFips()\x0d\n  fips: {\x0d\n    get: fipsForced ? getFipsForced : getFipsCrypto\x2C\x0d\n    set: fipsForced ? setFipsForced : setFipsCrypto\x0d\n  }\x2C\x0d\n  DEFAULT_ENCODING: {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get: deprecate(getDefaultEncoding\x2C\x0d\n                   'crypto.DEFAULT_ENCODING is deprecated.'\x2C 'DEP0091')\x2C\x0d\n    set: deprecate(setDefaultEncoding\x2C\x0d\n                   'crypto.DEFAULT_ENCODING is deprecated.'\x2C 'DEP0091')\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n\x0d\n  webcrypto: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return lazyRequire('internal/crypto/webcrypto').crypto; }\x0d\n  }\x2C\x0d\n\x0d\n  // Aliases for randomBytes are deprecated.\x0d\n  // The ecosystem needs those to exist for backwards compatibility.\x0d\n  prng: {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: pendingDeprecation ?\x0d\n      deprecate(randomBytes\x2C 'crypto.prng is deprecated.'\x2C 'DEP0115') :\x0d\n      randomBytes\x0d\n  }\x2C\x0d\n  pseudoRandomBytes: {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: pendingDeprecation ?\x0d\n      deprecate(randomBytes\x2C\x0d\n                'crypto.pseudoRandomBytes is deprecated.'\x2C 'DEP0115') :\x0d\n      randomBytes\x0d\n  }\x2C\x0d\n  rng: {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: pendingDeprecation ?\x0d\n      deprecate(randomBytes\x2C 'crypto.rng is deprecated.'\x2C 'DEP0115') :\x0d\n      randomBytes\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x20cab7a95a6,208,0,7927,C0O0C4O7927,,
code-creation,Function,10,312574,0x20cab7aa66e,1692, node:crypto:1:1,0x20cab7a9520,~
code-source-info,0x20cab7aa66e
code-creation,LazyCompile,10,312839,0x20cab7abc96,19,assertCrypto node:internal/util:152:22,0x25aadb2acb0,~
code-source-info,0x20cab7abc96,12,4099,4155,C0O4107C6O4126C11O4132C16O4126C18O4154,,
code-creation,Eval,10,314072,0x20cab7b9d06,5, node:internal/crypto/random:1:1,0x20cab7b9800,~
script-source,209,node:internal/crypto/random,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigInt\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  NumberPrototypeToString\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  RandomBytesJob\x2C\x0d\n  RandomPrimeJob\x2C\x0d\n  CheckPrimeJob\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n  secureBuffer\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer\x2C kMaxLength } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_OPERATION_FAILED\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateNumber\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst { FastBuffer } = require('internal/buffer');\x0d\n\x0d\nconst kMaxInt32 = 2 ** 31 - 1;\x0d\nconst kMaxPossibleLength = MathMin(kMaxLength\x2C kMaxInt32);\x0d\n\x0d\nfunction assertOffset(offset\x2C elementSize\x2C length) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  offset *= elementSize;\x0d\n\x0d\n  const maxLength = MathMin(length\x2C kMaxPossibleLength);\x0d\n  if (NumberIsNaN(offset) || offset > maxLength || offset < 0) {\x0d\n    throw new ERR_OUT_OF_RANGE('offset'\x2C `>= 0 && <= ${maxLength}`\x2C offset);\x0d\n  }\x0d\n\x0d\n  return offset >>> 0;  // Convert to uint32.\x0d\n}\x0d\n\x0d\nfunction assertSize(size\x2C elementSize\x2C offset\x2C length) {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  size *= elementSize;\x0d\n\x0d\n  if (NumberIsNaN(size) || size > kMaxPossibleLength || size < 0) {\x0d\n    throw new ERR_OUT_OF_RANGE('size'\x2C\x0d\n                               `>= 0 && <= ${kMaxPossibleLength}`\x2C size);\x0d\n  }\x0d\n\x0d\n  if (size + offset > length) {\x0d\n    throw new ERR_OUT_OF_RANGE('size + offset'\x2C `<= ${length}`\x2C size + offset);\x0d\n  }\x0d\n\x0d\n  return size >>> 0;  // Convert to uint32.\x0d\n}\x0d\n\x0d\nfunction randomBytes(size\x2C callback) {\x0d\n  size = assertSize(size\x2C 1\x2C 0\x2C Infinity);\x0d\n  if (callback !== undefined) {\x0d\n    validateCallback(callback);\x0d\n  }\x0d\n\x0d\n  const buf = new FastBuffer(size);\x0d\n\x0d\n  if (callback === undefined) {\x0d\n    randomFillSync(buf.buffer\x2C 0\x2C size);\x0d\n    return buf;\x0d\n  }\x0d\n\x0d\n  // Keep the callback as a regular function so this is propagated.\x0d\n  randomFill(buf.buffer\x2C 0\x2C size\x2C function(error) {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction randomFillSync(buf\x2C offset = 0\x2C size) {\x0d\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'buf'\x2C\x0d\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n      buf);\x0d\n  }\x0d\n\x0d\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\x0d\n\x0d\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\x0d\n\x0d\n  if (size === undefined) {\x0d\n    size = buf.byteLength - offset;\x0d\n  } else {\x0d\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  if (size === 0)\x0d\n    return buf;\x0d\n\x0d\n  const job = new RandomBytesJob(\x0d\n    kCryptoJobSync\x2C\x0d\n    buf\x2C\x0d\n    offset\x2C\x0d\n    size);\x0d\n\x0d\n  const err = job.run()[0];\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nfunction randomFill(buf\x2C offset\x2C size\x2C callback) {\x0d\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'buf'\x2C\x0d\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n      buf);\x0d\n  }\x0d\n\x0d\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\x0d\n\x0d\n  if (typeof offset === 'function') {\x0d\n    callback = offset;\x0d\n    offset = 0;\x0d\n    // Size is a length here\x2C assertSize() call turns it into a number of bytes\x0d\n    size = buf.length;\x0d\n  } else if (typeof size === 'function') {\x0d\n    callback = size;\x0d\n    size = buf.length - offset;\x0d\n  } else {\x0d\n    validateCallback(callback);\x0d\n  }\x0d\n\x0d\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\x0d\n\x0d\n  if (size === undefined) {\x0d\n    size = buf.byteLength - offset;\x0d\n  } else {\x0d\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  if (size === 0) {\x0d\n    callback(null\x2C buf);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const job = new RandomBytesJob(\x0d\n    kCryptoJobAsync\x2C\x0d\n    buf\x2C\x0d\n    offset\x2C\x0d\n    size);\x0d\n  job.ondone = FunctionPrototypeBind(onJobDone\x2C job\x2C buf\x2C callback);\x0d\n  job.run();\x0d\n}\x0d\n\x0d\n// Largest integer we can read from a buffer.\x0d\n// e.g.: Buffer.from("ff".repeat(6)\x2C "hex").readUIntBE(0\x2C 6);\x0d\nconst RAND_MAX = 0xFFFF_FFFF_FFFF;\x0d\n\x0d\n// Cache random data to use in randomInt. The cache size must be evenly\x0d\n// divisible by 6 because each attempt to obtain a random int uses 6 bytes.\x0d\nconst randomCache = new FastBuffer(6 * 1024);\x0d\nlet randomCacheOffset = randomCache.length;\x0d\nlet asyncCacheFillInProgress = false;\x0d\nconst asyncCachePendingTasks = [];\x0d\n\x0d\n// Generates an integer in [min\x2C max) range where min is inclusive and max is\x0d\n// exclusive.\x0d\nfunction randomInt(min\x2C max\x2C callback) {\x0d\n  // Detect optional min syntax\x0d\n  // randomInt(max)\x0d\n  // randomInt(max\x2C callback)\x0d\n  const minNotSpecified = typeof max === 'undefined' ||\x0d\n    typeof max === 'function';\x0d\n\x0d\n  if (minNotSpecified) {\x0d\n    callback = max;\x0d\n    max = min;\x0d\n    min = 0;\x0d\n  }\x0d\n\x0d\n  const isSync = typeof callback === 'undefined';\x0d\n  if (!isSync) {\x0d\n    validateCallback(callback);\x0d\n  }\x0d\n  if (!NumberIsSafeInteger(min)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('min'\x2C 'a safe integer'\x2C min);\x0d\n  }\x0d\n  if (!NumberIsSafeInteger(max)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('max'\x2C 'a safe integer'\x2C max);\x0d\n  }\x0d\n  if (max <= min) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      'max'\x2C `greater than the value of "min" (${min})`\x2C max\x0d\n    );\x0d\n  }\x0d\n\x0d\n  // First we generate a random int between [0..range)\x0d\n  const range = max - min;\x0d\n\x0d\n  if (!(range <= RAND_MAX)) {\x0d\n    throw new ERR_OUT_OF_RANGE(`max${minNotSpecified ? '' : ' - min'}`\x2C\x0d\n                               `<= ${RAND_MAX}`\x2C range);\x0d\n  }\x0d\n\x0d\n  // For (x % range) to produce an unbiased value greater than or equal to 0 and\x0d\n  // less than range\x2C x must be drawn randomly from the set of integers greater\x0d\n  // than or equal to 0 and less than randLimit.\x0d\n  const randLimit = RAND_MAX - (RAND_MAX % range);\x0d\n\x0d\n  // If we don't have a callback\x2C or if there is still data in the cache\x2C we can\x0d\n  // do this synchronously\x2C which is super fast.\x0d\n  while (isSync || (randomCacheOffset < randomCache.length)) {\x0d\n    if (randomCacheOffset === randomCache.length) {\x0d\n      // This might block the thread for a bit\x2C but we are in sync mode.\x0d\n      randomFillSync(randomCache);\x0d\n      randomCacheOffset = 0;\x0d\n    }\x0d\n\x0d\n    const x = randomCache.readUIntBE(randomCacheOffset\x2C 6);\x0d\n    randomCacheOffset += 6;\x0d\n\x0d\n    if (x < randLimit) {\x0d\n      const n = (x % range) + min;\x0d\n      if (isSync) return n;\x0d\n      process.nextTick(callback\x2C undefined\x2C n);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // At this point\x2C we are in async mode with no data in the cache. We cannot\x0d\n  // simply refill the cache\x2C because another async call to randomInt might\x0d\n  // already be doing that. Instead\x2C queue this call for when the cache has\x0d\n  // been refilled.\x0d\n  ArrayPrototypePush(asyncCachePendingTasks\x2C { min\x2C max\x2C callback });\x0d\n  asyncRefillRandomIntCache();\x0d\n}\x0d\n\x0d\nfunction asyncRefillRandomIntCache() {\x0d\n  if (asyncCacheFillInProgress)\x0d\n    return;\x0d\n\x0d\n  asyncCacheFillInProgress = true;\x0d\n  randomFill(randomCache\x2C (err) => {\x0d\n    asyncCacheFillInProgress = false;\x0d\n\x0d\n    const tasks = asyncCachePendingTasks;\x0d\n    const errorReceiver = err && ArrayPrototypeShift(tasks);\x0d\n    if (!err)\x0d\n      randomCacheOffset = 0;\x0d\n\x0d\n    // Restart all pending tasks. If an error occurred\x2C we only notify a single\x0d\n    // callback (errorReceiver) about it. This way\x2C every async call to\x0d\n    // randomInt has a chance of being successful\x2C and it avoids complex\x0d\n    // exception handling here.\x0d\n    ArrayPrototypeForEach(ArrayPrototypeSplice(tasks\x2C 0)\x2C (task) => {\x0d\n      randomInt(task.min\x2C task.max\x2C task.callback);\x0d\n    });\x0d\n\x0d\n    // This is the only call that might throw\x2C and is therefore done at the end.\x0d\n    if (errorReceiver)\x0d\n      errorReceiver.callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction onJobDone(buf\x2C callback\x2C error) {\x0d\n  if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\x0d\n  FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\x0d\n}\x0d\n\x0d\n// Really just the Web Crypto API alternative\x0d\n// to require('crypto').randomFillSync() with an\x0d\n// additional limitation that the input buffer is\x0d\n// not allowed to exceed 65536 bytes\x2C and can only\x0d\n// be an integer-type TypedArray.\x0d\nfunction getRandomValues(data) {\x0d\n  if (!isArrayBufferView(data) ||\x0d\n      isFloat32Array(data) ||\x0d\n      isFloat64Array(data)) {\x0d\n    // Ordinarily this would be an ERR_INVALID_ARG_TYPE. However\x2C\x0d\n    // the Web Crypto API and web platform tests expect this to\x0d\n    // be a DOMException with type TypeMismatchError.\x0d\n    throw lazyDOMException(\x0d\n      'The data argument must be an integer-type TypedArray'\x2C\x0d\n      'TypeMismatchError');\x0d\n  }\x0d\n  if (data.byteLength > 65536) {\x0d\n    throw lazyDOMException(\x0d\n      'The requested length exceeds 65\x2C536 bytes'\x2C\x0d\n      'QuotaExceededError');\x0d\n  }\x0d\n  randomFillSync(data\x2C 0);\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// Implements an RFC 4122 version 4 random UUID.\x0d\n// To improve performance\x2C random data is generated in batches\x0d\n// large enough to cover kBatchSize UUID's at a time. The uuidData\x0d\n// buffer is reused. Each call to randomUUID() consumes 16 bytes\x0d\n// from the buffer.\x0d\n\x0d\nconst kBatchSize = 128;\x0d\nlet uuidData;\x0d\nlet uuidNotBuffered;\x0d\nlet uuidBatch = 0;\x0d\n\x0d\nlet hexBytesCache;\x0d\nfunction getHexBytes() {\x0d\n  if (hexBytesCache === undefined) {\x0d\n    hexBytesCache = new Array(256);\x0d\n    for (let i = 0; i < hexBytesCache.length; i++) {\x0d\n      const hex = NumberPrototypeToString(i\x2C 16);\x0d\n      hexBytesCache[i] = StringPrototypePadStart(hex\x2C 2\x2C '0');\x0d\n    }\x0d\n  }\x0d\n  return hexBytesCache;\x0d\n}\x0d\n\x0d\nfunction serializeUUID(buf\x2C offset = 0) {\x0d\n  const kHexBytes = getHexBytes();\x0d\n  // xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\x0d\n  return kHexBytes[buf[offset]] +\x0d\n    kHexBytes[buf[offset + 1]] +\x0d\n    kHexBytes[buf[offset + 2]] +\x0d\n    kHexBytes[buf[offset + 3]] +\x0d\n    '-' +\x0d\n    kHexBytes[buf[offset + 4]] +\x0d\n    kHexBytes[buf[offset + 5]] +\x0d\n    '-' +\x0d\n    kHexBytes[(buf[offset + 6] & 0x0f) | 0x40] +\x0d\n    kHexBytes[buf[offset + 7]] +\x0d\n    '-' +\x0d\n    kHexBytes[(buf[offset + 8] & 0x3f) | 0x80] +\x0d\n    kHexBytes[buf[offset + 9]] +\x0d\n    '-' +\x0d\n    kHexBytes[buf[offset + 10]] +\x0d\n    kHexBytes[buf[offset + 11]] +\x0d\n    kHexBytes[buf[offset + 12]] +\x0d\n    kHexBytes[buf[offset + 13]] +\x0d\n    kHexBytes[buf[offset + 14]] +\x0d\n    kHexBytes[buf[offset + 15]];\x0d\n}\x0d\n\x0d\nfunction getBufferedUUID() {\x0d\n  uuidData ??= secureBuffer(16 * kBatchSize);\x0d\n  if (uuidData === undefined)\x0d\n    throw new ERR_OPERATION_FAILED('Out of memory');\x0d\n\x0d\n  if (uuidBatch === 0) randomFillSync(uuidData);\x0d\n  uuidBatch = (uuidBatch + 1) % kBatchSize;\x0d\n  return serializeUUID(uuidData\x2C uuidBatch * 16);\x0d\n}\x0d\n\x0d\nfunction getUnbufferedUUID() {\x0d\n  uuidNotBuffered ??= secureBuffer(16);\x0d\n  if (uuidNotBuffered === undefined)\x0d\n    throw new ERR_OPERATION_FAILED('Out of memory');\x0d\n  randomFillSync(uuidNotBuffered);\x0d\n  return serializeUUID(uuidNotBuffered);\x0d\n}\x0d\n\x0d\nfunction randomUUID(options) {\x0d\n  if (options !== undefined)\x0d\n    validateObject(options\x2C 'options');\x0d\n  const {\x0d\n    disableEntropyCache = false\x2C\x0d\n  } = options || {};\x0d\n\x0d\n  validateBoolean(disableEntropyCache\x2C 'options.disableEntropyCache');\x0d\n\x0d\n  return disableEntropyCache ? getUnbufferedUUID() : getBufferedUUID();\x0d\n}\x0d\n\x0d\nfunction createRandomPrimeJob(type\x2C size\x2C options) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    safe = false\x2C\x0d\n    bigint = false\x2C\x0d\n  } = options;\x0d\n  let {\x0d\n    add\x2C\x0d\n    rem\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(safe\x2C 'options.safe');\x0d\n  validateBoolean(bigint\x2C 'options.bigint');\x0d\n\x0d\n  if (add !== undefined) {\x0d\n    if (typeof add === 'bigint') {\x0d\n      add = unsignedBigIntToBuffer(add\x2C 'options.add');\x0d\n    } else if (!isAnyArrayBuffer(add) && !isArrayBufferView(add)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.add'\x2C\x0d\n        [\x0d\n          'ArrayBuffer'\x2C\x0d\n          'TypedArray'\x2C\x0d\n          'Buffer'\x2C\x0d\n          'DataView'\x2C\x0d\n          'bigint'\x2C\x0d\n        ]\x2C\x0d\n        add);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (rem !== undefined) {\x0d\n    if (typeof rem === 'bigint') {\x0d\n      rem = unsignedBigIntToBuffer(rem\x2C 'options.rem');\x0d\n    } else if (!isAnyArrayBuffer(rem) && !isArrayBufferView(rem)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.rem'\x2C\x0d\n        [\x0d\n          'ArrayBuffer'\x2C\x0d\n          'TypedArray'\x2C\x0d\n          'Buffer'\x2C\x0d\n          'DataView'\x2C\x0d\n          'bigint'\x2C\x0d\n        ]\x2C\x0d\n        rem);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const job = new RandomPrimeJob(type\x2C size\x2C safe\x2C add\x2C rem);\x0d\n  job.result = bigint ? arrayBufferToUnsignedBigInt : (p) => p;\x0d\n  return job;\x0d\n}\x0d\n\x0d\nfunction generatePrime(size\x2C options\x2C callback) {\x0d\n  validateUint32(size\x2C 'size'\x2C true);\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  validateCallback(callback);\x0d\n\x0d\n  const job = createRandomPrimeJob(kCryptoJobAsync\x2C size\x2C options);\x0d\n  job.ondone = (err\x2C prime) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    callback(\x0d\n      undefined\x2C\x0d\n      job.result(prime));\x0d\n  };\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction generatePrimeSync(size\x2C options = {}) {\x0d\n  validateUint32(size\x2C 'size'\x2C true);\x0d\n\x0d\n  const job = createRandomPrimeJob(kCryptoJobSync\x2C size\x2C options);\x0d\n  const { 0: err\x2C 1: prime } = job.run();\x0d\n  if (err)\x0d\n    throw err;\x0d\n  return job.result(prime);\x0d\n}\x0d\n\x0d\nfunction arrayBufferToUnsignedBigInt(arrayBuffer) {\x0d\n  return BigInt(`0x${Buffer.from(arrayBuffer).toString('hex')}`);\x0d\n}\x0d\n\x0d\nfunction unsignedBigIntToBuffer(bigint\x2C name) {\x0d\n  if (bigint < 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 0'\x2C bigint);\x0d\n  }\x0d\n\x0d\n  const hex = bigint.toString(16);\x0d\n  const padded = hex.padStart(hex.length + (hex.length % 2)\x2C 0);\x0d\n  return Buffer.from(padded\x2C 'hex');\x0d\n}\x0d\n\x0d\nfunction checkPrime(candidate\x2C options = {}\x2C callback) {\x0d\n  if (typeof candidate === 'bigint')\x0d\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\x0d\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'candidate'\x2C\x0d\n      [\x0d\n        'ArrayBuffer'\x2C\x0d\n        'TypedArray'\x2C\x0d\n        'Buffer'\x2C\x0d\n        'DataView'\x2C\x0d\n        'bigint'\x2C\x0d\n      ]\x2C\x0d\n      candidate\x0d\n    );\x0d\n  }\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  validateCallback(callback);\x0d\n  validateObject(options\x2C 'options');\x0d\n  const {\x0d\n    checks = 0\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateUint32(checks\x2C 'options.checks');\x0d\n\x0d\n  const job = new CheckPrimeJob(kCryptoJobAsync\x2C candidate\x2C checks);\x0d\n  job.ondone = callback;\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction checkPrimeSync(candidate\x2C options = {}) {\x0d\n  if (typeof candidate === 'bigint')\x0d\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\x0d\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'candidate'\x2C\x0d\n      [\x0d\n        'ArrayBuffer'\x2C\x0d\n        'TypedArray'\x2C\x0d\n        'Buffer'\x2C\x0d\n        'DataView'\x2C\x0d\n        'bigint'\x2C\x0d\n      ]\x2C\x0d\n      candidate\x0d\n    );\x0d\n  }\x0d\n  validateObject(options\x2C 'options');\x0d\n  const {\x0d\n    checks = 0\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateUint32(checks\x2C 'options.checks');\x0d\n\x0d\n  const job = new CheckPrimeJob(kCryptoJobSync\x2C candidate\x2C checks);\x0d\n  const { 0: err\x2C 1: result } = job.run();\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  checkPrime\x2C\x0d\n  checkPrimeSync\x2C\x0d\n  randomBytes\x2C\x0d\n  randomFill\x2C\x0d\n  randomFillSync\x2C\x0d\n  randomInt\x2C\x0d\n  getRandomValues\x2C\x0d\n  randomUUID\x2C\x0d\n  generatePrime\x2C\x0d\n  generatePrimeSync\x2C\x0d\n};\x0d\n
code-source-info,0x20cab7b9d06,209,0,15657,C0O0C4O15657,,
code-creation,Function,10,314809,0x20cab7ba776,678, node:internal/crypto/random:1:1,0x20cab7b9c80,~
code-source-info,0x20cab7ba776,209,0,15657,C0O0C263O28C269O38C275O64C281O87C287O111C293O136C299O147C305O173C311O199C317O211C323O227C329O251C335O279C341O450C344O450C349O336C355O355C361O374C367O392C373O412C379O431C385O514C388O514C393O491C399O574C402O574C407O551C413O559C418O703C421O703C426O703C431O621C437O648C443O671C449O845C452O845C457O745C463O764C469O784C475O805C481O824C487O974C490O974C495O891C501O913C507O934C513O953C519O1032C522O1032C527O1017C533O1081C540O1122C543O1122C548O1122C550O4480C552O4480C554O4671C564O4671C569O4671C571O4722C574O4734C578O4722C580O4774C581O4774C583O4813C585O4813C587O9457C591O9457C593O9467C594O9467C596O9482C597O9482C599O9516C600O9516C602O9526C603O9526C605O15460C612O15482C618O15497C624O15516C630O15532C636O15547C642O15566C648O15580C654O15600C660O15615C666O15633C672O15475C677O15656,,
code-creation,Eval,10,315100,0x20cab7bc4ae,5, node:internal/crypto/pbkdf2:1:1,0x20cab7bc248,~
script-source,210,node:internal/crypto/pbkdf2,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Promise\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  PBKDF2Job\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { ERR_MISSING_OPTION } = require('internal/errors').codes;\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  getDefaultEncoding\x2C\x0d\n  normalizeHashName\x2C\x0d\n  kKeyObject\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nfunction pbkdf2(password\x2C salt\x2C iterations\x2C keylen\x2C digest\x2C callback) {\x0d\n  if (typeof digest === 'function') {\x0d\n    callback = digest;\x0d\n    digest = undefined;\x0d\n  }\x0d\n\x0d\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\x0d\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\x0d\n\x0d\n  validateCallback(callback);\x0d\n\x0d\n  const job = new PBKDF2Job(\x0d\n    kCryptoJobAsync\x2C\x0d\n    password\x2C\x0d\n    salt\x2C\x0d\n    iterations\x2C\x0d\n    keylen\x2C\x0d\n    digest);\x0d\n\x0d\n  const encoding = getDefaultEncoding();\x0d\n  job.ondone = (err\x2C result) => {\x0d\n    if (err !== undefined)\x0d\n      return FunctionPrototypeCall(callback\x2C job\x2C err);\x0d\n    const buf = Buffer.from(result);\x0d\n    if (encoding === 'buffer')\x0d\n      return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf.toString(encoding));\x0d\n  };\x0d\n\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction pbkdf2Sync(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\x0d\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\x0d\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\x0d\n\x0d\n  const job = new PBKDF2Job(\x0d\n    kCryptoJobSync\x2C\x0d\n    password\x2C\x0d\n    salt\x2C\x0d\n    iterations\x2C\x0d\n    keylen\x2C\x0d\n    digest);\x0d\n\x0d\n  const { 0: err\x2C 1: result } = job.run();\x0d\n  if (err !== undefined)\x0d\n    throw err;\x0d\n\x0d\n  const buf = Buffer.from(result);\x0d\n  const encoding = getDefaultEncoding();\x0d\n  return encoding === 'buffer' ? buf : buf.toString(encoding);\x0d\n}\x0d\n\x0d\nfunction check(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\x0d\n  validateString(digest\x2C 'digest');\x0d\n\x0d\n  password = getArrayBufferOrView(password\x2C 'password');\x0d\n  salt = getArrayBufferOrView(salt\x2C 'salt');\x0d\n  validateUint32(iterations\x2C 'iterations'\x2C true);\x0d\n  validateUint32(keylen\x2C 'keylen');\x0d\n\x0d\n  return { password\x2C salt\x2C iterations\x2C keylen\x2C digest };\x0d\n}\x0d\n\x0d\nasync function pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length) {\x0d\n  validateUint32(length\x2C 'length');\x0d\n  const { iterations } = algorithm;\x0d\n  let { hash } = algorithm;\x0d\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt');\x0d\n  if (hash === undefined)\x0d\n    throw new ERR_MISSING_OPTION('algorithm.hash');\x0d\n  validateInteger(iterations\x2C 'algorithm.iterations'\x2C 1);\x0d\n\x0d\n  hash = normalizeHashName(hash.name);\x0d\n\x0d\n  const raw = baseKey[kKeyObject].export();\x0d\n\x0d\n  let byteLength = 64;  // the default\x0d\n  if (length !== undefined) {\x0d\n    if (length === 0)\x0d\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\x0d\n    if (length % 8) {\x0d\n      throw lazyDOMException(\x0d\n        'length must be a multiple of 8'\x2C\x0d\n        'OperationError');\x0d\n    }\x0d\n    byteLength = length / 8;\x0d\n  }\x0d\n\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    pbkdf2(raw\x2C salt\x2C iterations\x2C byteLength\x2C hash\x2C (err\x2C result) => {\x0d\n      if (err) return reject(err);\x0d\n      resolve(result.buffer);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  pbkdf2\x2C\x0d\n  pbkdf2Sync\x2C\x0d\n  pbkdf2DeriveBits\x2C\x0d\n};\x0d\n
code-source-info,0x20cab7bc4ae,210,0,3421,C0O0C4O3421,,
code-creation,Function,10,315295,0x20cab7bc7b6,255, node:internal/crypto/pbkdf2:1:1,0x20cab7bc428,~
code-source-info,0x20cab7bc7b6,210,0,3421,C0O0C75O28C81O54C87O103C90O103C95O92C101O191C104O191C109O136C115O150C121O170C127O313C130O313C135O232C141O253C147O273C153O292C159O379C162O379C167O405C172O356C178O514C181O514C186O427C192O452C198O475C204O497C210O584C213O584C218O561C224O3350C231O3372C237O3383C243O3398C249O3365C254O3420,,
code-creation,Eval,10,315675,0x20cab7bde36,5, node:internal/crypto/util:1:1,0x20cab7bdaa0,~
script-source,211,node:internal/crypto/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigInt\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Number\x2C\x0d\n  ObjectKeys\x2C\x0d\n  Promise\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getCiphers: _getCiphers\x2C\x0d\n  getCurves: _getCurves\x2C\x0d\n  getHashes: _getHashes\x2C\x0d\n  setEngine: _setEngine\x2C\x0d\n  secureHeapUsed: _secureHeapUsed\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst {\x0d\n  crypto: {\x0d\n    ENGINE_METHOD_ALL\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\nconst normalizeHashName = require('internal/crypto/hashnames');\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_CRYPTO_ENGINE_UNKNOWN\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  cachedResult\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kKeyObject = Symbol('kKeyObject');\x0d\n\x0d\nconst lazyRequireCache = {};\x0d\n\x0d\nfunction lazyRequire(name) {\x0d\n  let ret = lazyRequireCache[name];\x0d\n  if (ret === undefined)\x0d\n    ret = lazyRequireCache[name] = require(name);\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nvar defaultEncoding = 'buffer';\x0d\n\x0d\nfunction setDefaultEncoding(val) {\x0d\n  defaultEncoding = val;\x0d\n}\x0d\n\x0d\nfunction getDefaultEncoding() {\x0d\n  return defaultEncoding;\x0d\n}\x0d\n\x0d\n// This is here because many functions accepted binary strings without\x0d\n// any explicit encoding in older versions of node\x2C and we don't want\x0d\n// to break them unnecessarily.\x0d\nfunction toBuf(val\x2C encoding) {\x0d\n  if (typeof val === 'string') {\x0d\n    if (encoding === 'buffer')\x0d\n      encoding = 'utf8';\x0d\n    return Buffer.from(val\x2C encoding);\x0d\n  }\x0d\n  return val;\x0d\n}\x0d\n\x0d\nconst getCiphers = cachedResult(() => filterDuplicateStrings(_getCiphers()));\x0d\nconst getHashes = cachedResult(() => filterDuplicateStrings(_getHashes()));\x0d\nconst getCurves = cachedResult(() => filterDuplicateStrings(_getCurves()));\x0d\n\x0d\nfunction setEngine(id\x2C flags) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (flags)\x0d\n    validateNumber(flags\x2C 'flags');\x0d\n  flags = flags >>> 0;\x0d\n\x0d\n  // Use provided engine for everything by default\x0d\n  if (flags === 0)\x0d\n    flags = ENGINE_METHOD_ALL;\x0d\n\x0d\n  if (!_setEngine(id\x2C flags))\x0d\n    throw new ERR_CRYPTO_ENGINE_UNKNOWN(id);\x0d\n}\x0d\n\x0d\nconst getArrayBufferOrView = hideStackFrames((buffer\x2C name\x2C encoding) => {\x0d\n  if (isAnyArrayBuffer(buffer))\x0d\n    return buffer;\x0d\n  if (typeof buffer === 'string') {\x0d\n    if (encoding === 'buffer')\x0d\n      encoding = 'utf8';\x0d\n    return Buffer.from(buffer\x2C encoding);\x0d\n  }\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      name\x2C\x0d\n      [\x0d\n        'string'\x2C\x0d\n        'ArrayBuffer'\x2C\x0d\n        'Buffer'\x2C\x0d\n        'TypedArray'\x2C\x0d\n        'DataView'\x2C\x0d\n      ]\x2C\x0d\n      buffer\x0d\n    );\x0d\n  }\x0d\n  return buffer;\x0d\n});\x0d\n\x0d\n// The maximum buffer size that we'll support in the WebCrypto impl\x0d\nconst kMaxBufferLength = (2 ** 31) - 1;\x0d\n\x0d\n// The EC named curves that we currently support via the Web Crypto API.\x0d\nconst kNamedCurveAliases = {\x0d\n  'P-256': 'prime256v1'\x2C\x0d\n  'P-384': 'secp384r1'\x2C\x0d\n  'P-521': 'secp521r1'\x2C\x0d\n  'NODE-ED25519': 'ed25519'\x2C\x0d\n  'NODE-ED448': 'ed448'\x2C\x0d\n  'NODE-X25519': 'x25519'\x2C\x0d\n  'NODE-X448': 'x448'\x2C\x0d\n};\x0d\n\x0d\nconst kAesKeyLengths = [128\x2C 192\x2C 256];\x0d\n\x0d\n// These are the only algorithms we currently support\x0d\n// via the Web Crypto API\x0d\nconst kAlgorithms = {\x0d\n  'rsassa-pkcs1-v1_5': 'RSASSA-PKCS1-v1_5'\x2C\x0d\n  'rsa-pss': 'RSA-PSS'\x2C\x0d\n  'rsa-oaep': 'RSA-OAEP'\x2C\x0d\n  'ecdsa': 'ECDSA'\x2C\x0d\n  'ecdh': 'ECDH'\x2C\x0d\n  'aes-ctr': 'AES-CTR'\x2C\x0d\n  'aes-cbc': 'AES-CBC'\x2C\x0d\n  'aes-gcm': 'AES-GCM'\x2C\x0d\n  'aes-kw': 'AES-KW'\x2C\x0d\n  'hmac': 'HMAC'\x2C\x0d\n  'sha-1': 'SHA-1'\x2C\x0d\n  'sha-256': 'SHA-256'\x2C\x0d\n  'sha-384': 'SHA-384'\x2C\x0d\n  'sha-512': 'SHA-512'\x2C\x0d\n  'hkdf': 'HKDF'\x2C\x0d\n  'pbkdf2': 'PBKDF2'\x2C\x0d\n  // Following here are Node.js specific extensions. All\x0d\n  // should be prefixed with 'node-'\x0d\n  'node-dsa': 'NODE-DSA'\x2C\x0d\n  'node-dh': 'NODE-DH'\x2C\x0d\n  'node-scrypt': 'NODE-SCRYPT'\x2C\x0d\n  'node-ed25519': 'NODE-ED25519'\x2C\x0d\n  'node-ed448': 'NODE-ED448'\x2C\x0d\n};\x0d\nconst kAlgorithmsKeys = ObjectKeys(kAlgorithms);\x0d\n\x0d\n// These are the only export and import formats we currently\x0d\n// support via the Web Crypto API\x0d\nconst kExportFormats = [\x0d\n  'raw'\x2C\x0d\n  'pkcs8'\x2C\x0d\n  'spki'\x2C\x0d\n  'jwk'\x2C\x0d\n  'node.keyObject'];\x0d\n\x0d\n// These are the only hash algorithms we currently support via\x0d\n// the Web Crypto API.\x0d\nconst kHashTypes = [\x0d\n  'SHA-1'\x2C\x0d\n  'SHA-256'\x2C\x0d\n  'SHA-384'\x2C\x0d\n  'SHA-512'\x2C\x0d\n];\x0d\n\x0d\nfunction validateMaxBufferLength(data\x2C name) {\x0d\n  if (data.byteLength > kMaxBufferLength) {\x0d\n    throw lazyDOMException(\x0d\n      `${name} must be less than ${kMaxBufferLength + 1} bits`\x2C\x0d\n      'OperationError');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction normalizeAlgorithm(algorithm\x2C label = 'algorithm') {\x0d\n  if (algorithm != null) {\x0d\n    if (typeof algorithm === 'string')\x0d\n      algorithm = { name: algorithm };\x0d\n\x0d\n    if (typeof algorithm === 'object') {\x0d\n      const { name } = algorithm;\x0d\n      let hash;\x0d\n      if (typeof name !== 'string' ||\x0d\n          !ArrayPrototypeIncludes(\x0d\n            kAlgorithmsKeys\x2C\x0d\n            StringPrototypeToLowerCase(name))) {\x0d\n        throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\x0d\n      }\x0d\n      if (algorithm.hash !== undefined) {\x0d\n        hash = normalizeAlgorithm(algorithm.hash\x2C 'algorithm.hash');\x0d\n        if (!ArrayPrototypeIncludes(kHashTypes\x2C hash.name))\x0d\n          throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\x0d\n      }\x0d\n      return {\x0d\n        ...algorithm\x2C\x0d\n        name: kAlgorithms[StringPrototypeToLowerCase(name)]\x2C\x0d\n        hash\x2C\x0d\n      };\x0d\n    }\x0d\n  }\x0d\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nfunction hasAnyNotIn(set\x2C checks) {\x0d\n  for (const s of set)\x0d\n    if (!ArrayPrototypeIncludes(checks\x2C s))\x0d\n      return true;\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction validateBitLength(length\x2C name\x2C required = false) {\x0d\n  if (length !== undefined || required) {\x0d\n    validateNumber(length\x2C name);\x0d\n    if (length < 0)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C '> 0');\x0d\n    if (length % 8) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        name\x2C\x0d\n        length\x2C\x0d\n        'must be a multiple of 8');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateByteLength(buf\x2C name\x2C target) {\x0d\n  if (buf.byteLength !== target) {\x0d\n    throw lazyDOMException(\x0d\n      `${name} must contain exactly ${target} bytes`\x2C\x0d\n      'OperationError');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateByteSource = hideStackFrames((val\x2C name) => {\x0d\n  val = toBuf(val);\x0d\n\x0d\n  if (isAnyArrayBuffer(val) || isArrayBufferView(val))\x0d\n    return;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    [\x0d\n      'string'\x2C\x0d\n      'ArrayBuffer'\x2C\x0d\n      'TypedArray'\x2C\x0d\n      'DataView'\x2C\x0d\n      'Buffer'\x2C\x0d\n    ]\x2C\x0d\n    val);\x0d\n});\x0d\n\x0d\nfunction onDone(resolve\x2C reject\x2C err\x2C result) {\x0d\n  if (err) return reject(err);\x0d\n  resolve(result);\x0d\n}\x0d\n\x0d\nfunction jobPromise(job) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    job.ondone = FunctionPrototypeBind(onDone\x2C job\x2C resolve\x2C reject);\x0d\n    job.run();\x0d\n  });\x0d\n}\x0d\n\x0d\n// In WebCrypto\x2C the publicExponent option in RSA is represented as a\x0d\n// WebIDL "BigInteger"... that is\x2C a Uint8Array that allows an arbitrary\x0d\n// number of leading zero bits. Our conventional APIs for reading\x0d\n// an unsigned int from a Buffer are not adequate. The implementation\x0d\n// here is adapted from the chromium implementation here:\x0d\n// https://github.com/chromium/chromium/blob/HEAD/third_party/blink/public/platform/web_crypto_algorithm_params.h\x2C but ported to JavaScript\x0d\n// Returns undefined if the conversion was unsuccessful.\x0d\nfunction bigIntArrayToUnsignedInt(input) {\x0d\n  let result = 0;\x0d\n\x0d\n  for (let n = 0; n < input.length; ++n) {\x0d\n    const n_reversed = input.length - n - 1;\x0d\n    if (n_reversed >= 4 && input[n])\x0d\n      return;  // Too large\x0d\n    result |= input[n] << 8 * n_reversed;\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction bigIntArrayToUnsignedBigInt(input) {\x0d\n  let result = 0n;\x0d\n\x0d\n  for (let n = 0; n < input.length; ++n) {\x0d\n    const n_reversed = input.length - n - 1;\x0d\n    result |= BigInt(input[n]) << 8n * BigInt(n_reversed);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction getStringOption(options\x2C key) {\x0d\n  let value;\x0d\n  if (options && (value = options[key]) != null)\x0d\n    validateString(value\x2C `options.${key}`);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nfunction getUsagesUnion(usageSet\x2C ...usages) {\x0d\n  const newset = [];\x0d\n  for (let n = 0; n < usages.length; n++) {\x0d\n    if (usageSet.has(usages[n]))\x0d\n      ArrayPrototypePush(newset\x2C usages[n]);\x0d\n  }\x0d\n  return newset;\x0d\n}\x0d\n\x0d\nfunction getHashLength(name) {\x0d\n  switch (name) {\x0d\n    case 'SHA-1': return 160;\x0d\n    case 'SHA-256': return 256;\x0d\n    case 'SHA-384': return 384;\x0d\n    case 'SHA-512': return 512;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kKeyOps = {\x0d\n  sign: 1\x2C\x0d\n  verify: 2\x2C\x0d\n  encrypt: 3\x2C\x0d\n  decrypt: 4\x2C\x0d\n  wrapKey: 5\x2C\x0d\n  unwrapKey: 6\x2C\x0d\n  deriveKey: 7\x2C\x0d\n  deriveBits: 8\x2C\x0d\n};\x0d\n\x0d\nfunction validateKeyOps(keyOps\x2C usagesSet) {\x0d\n  if (keyOps === undefined) return;\x0d\n  validateArray(keyOps\x2C 'keyData.key_ops');\x0d\n  let flags = 0;\x0d\n  for (let n = 0; n < keyOps.length; n++) {\x0d\n    const op = keyOps[n];\x0d\n    const op_flag = kKeyOps[op];\x0d\n    // Skipping unknown key ops\x0d\n    if (op_flag === undefined)\x0d\n      continue;\x0d\n    // Have we seen it already? if so\x2C error\x0d\n    if (flags & (1 << op_flag))\x0d\n      throw lazyDOMException('Duplicate key operation'\x2C 'DataError');\x0d\n    flags |= (1 << op_flag);\x0d\n\x0d\n    // TODO(@jasnell): RFC7517 section 4.3 strong recommends validating\x0d\n    // key usage combinations. Specifically\x2C it says that unrelated key\x0d\n    // ops SHOULD NOT be used together. We're not yet validating that here.\x0d\n  }\x0d\n\x0d\n  if (usagesSet !== undefined) {\x0d\n    for (const use of usagesSet) {\x0d\n      if (!ArrayPrototypeIncludes(keyOps\x2C use)) {\x0d\n        throw lazyDOMException(\x0d\n          'Key operations and usage mismatch'\x2C\x0d\n          'DataError');\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction secureHeapUsed() {\x0d\n  const val = _secureHeapUsed();\x0d\n  if (val === undefined)\x0d\n    return { total: 0\x2C used: 0\x2C utilization: 0\x2C min: 0 };\x0d\n  const used = Number(_secureHeapUsed());\x0d\n  const total = Number(getOptionValue('--secure-heap'));\x0d\n  const min = Number(getOptionValue('--secure-heap-min'));\x0d\n  const utilization = used / total;\x0d\n  return { total\x2C used\x2C utilization\x2C min };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getArrayBufferOrView\x2C\x0d\n  getCiphers\x2C\x0d\n  getCurves\x2C\x0d\n  getDefaultEncoding\x2C\x0d\n  getHashes\x2C\x0d\n  kHandle\x2C\x0d\n  kKeyObject\x2C\x0d\n  setDefaultEncoding\x2C\x0d\n  setEngine\x2C\x0d\n  toBuf\x2C\x0d\n\x0d\n  kHashTypes\x2C\x0d\n  kNamedCurveAliases\x2C\x0d\n  kAesKeyLengths\x2C\x0d\n  kExportFormats\x2C\x0d\n  normalizeAlgorithm\x2C\x0d\n  normalizeHashName\x2C\x0d\n  hasAnyNotIn\x2C\x0d\n  validateBitLength\x2C\x0d\n  validateByteLength\x2C\x0d\n  validateByteSource\x2C\x0d\n  validateKeyOps\x2C\x0d\n  jobPromise\x2C\x0d\n  lazyRequire\x2C\x0d\n  validateMaxBufferLength\x2C\x0d\n  bigIntArrayToUnsignedBigInt\x2C\x0d\n  bigIntArrayToUnsignedInt\x2C\x0d\n  getStringOption\x2C\x0d\n  getUsagesUnion\x2C\x0d\n  getHashLength\x2C\x0d\n  secureHeapUsed\x2C\x0d\n};\x0d\n
code-source-info,0x20cab7bde36,211,0,11011,C0O0C4O11011,,
code-creation,Function,10,316211,0x20cab7bee96,848, node:internal/crypto/util:1:1,0x20cab7bddb0,~
code-source-info,0x20cab7bee
code-creation,Eval,10,316524,0xe6a61858d6,5, node:internal/crypto/hashnames:1:1,0xe6a6185760,~
script-source,212,node:internal/crypto/hashnames,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectKeys\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kHashContextNode = 1;\x0d\nconst kHashContextWebCrypto = 2;\x0d\nconst kHashContextJwkRsa = 3;\x0d\nconst kHashContextJwkRsaPss = 4;\x0d\nconst kHashContextJwkRsaOaep = 5;\x0d\nconst kHashContextJwkHmac = 6;\x0d\nconst kHashContextJwkDsa = 7;\x0d\n\x0d\n// WebCrypto and JWK use a bunch of different names for the\x0d\n// standard set of SHA-* digest algorithms... which is ... fun.\x0d\n// Here we provide a utility for mapping between them in order\x0d\n// make it easier in the code.\x0d\n\x0d\nconst kHashNames = {\x0d\n  sha1: {\x0d\n    [kHashContextNode]: 'sha1'\x2C\x0d\n    [kHashContextWebCrypto]: 'SHA-1'\x2C\x0d\n    [kHashContextJwkRsa]: 'RS1'\x2C\x0d\n    [kHashContextJwkRsaPss]: 'PS1'\x2C\x0d\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP'\x2C\x0d\n    [kHashContextJwkHmac]: 'HS1'\x2C\x0d\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-1'\x2C\x0d\n  }\x2C\x0d\n  sha256: {\x0d\n    [kHashContextNode]: 'sha256'\x2C\x0d\n    [kHashContextWebCrypto]: 'SHA-256'\x2C\x0d\n    [kHashContextJwkRsa]: 'RS256'\x2C\x0d\n    [kHashContextJwkRsaPss]: 'PS256'\x2C\x0d\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-256'\x2C\x0d\n    [kHashContextJwkHmac]: 'HS256'\x2C\x0d\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-256'\x2C\x0d\n  }\x2C\x0d\n  sha384: {\x0d\n    [kHashContextNode]: 'sha384'\x2C\x0d\n    [kHashContextWebCrypto]: 'SHA-384'\x2C\x0d\n    [kHashContextJwkRsa]: 'RS384'\x2C\x0d\n    [kHashContextJwkRsaPss]: 'PS384'\x2C\x0d\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-384'\x2C\x0d\n    [kHashContextJwkHmac]: 'HS384'\x2C\x0d\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-384'\x2C\x0d\n  }\x2C\x0d\n  sha512: {\x0d\n    [kHashContextNode]: 'sha512'\x2C\x0d\n    [kHashContextWebCrypto]: 'SHA-512'\x2C\x0d\n    [kHashContextJwkRsa]: 'RS512'\x2C\x0d\n    [kHashContextJwkRsaPss]: 'PS512'\x2C\x0d\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-512'\x2C\x0d\n    [kHashContextJwkHmac]: 'HS512'\x2C\x0d\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-512'\x2C\x0d\n  }\x0d\n};\x0d\n\x0d\n{\x0d\n  // Index the aliases\x0d\n  const keys = ObjectKeys(kHashNames);\x0d\n  for (let n = 0; n < keys.length; n++) {\x0d\n    const contexts = ObjectKeys(kHashNames[keys[n]]);\x0d\n    for (let i = 0; i < contexts.length; i++) {\x0d\n      const alias =\x0d\n        StringPrototypeToLowerCase(kHashNames[keys[n]][contexts[i]]);\x0d\n      if (kHashNames[alias] === undefined)\x0d\n        kHashNames[alias] = kHashNames[keys[n]];\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction normalizeHashName(name\x2C context = kHashContextNode) {\x0d\n  if (typeof name !== 'string')\x0d\n    return name;\x0d\n  name = StringPrototypeToLowerCase(name);\x0d\n  const alias = kHashNames[name] && kHashNames[name][context];\x0d\n  return alias || name;\x0d\n}\x0d\n\x0d\nnormalizeHashName.kContextNode = kHashContextNode;\x0d\nnormalizeHashName.kContextWebCrypto = kHashContextWebCrypto;\x0d\nnormalizeHashName.kContextJwkRsa = kHashContextJwkRsa;\x0d\nnormalizeHashName.kContextJwkRsaPss = kHashContextJwkRsaPss;\x0d\nnormalizeHashName.kContextJwkRsaOaep = kHashContextJwkRsaOaep;\x0d\nnormalizeHashName.kContextJwkHmac = kHashContextJwkHmac;\x0d\nnormalizeHashName.kContextJwkDsa = kHashContextJwkDsa;\x0d\n\x0d\nmodule.exports = normalizeHashName;\x0d\n
code-source-info,0xe6a61858d6,212,0,2876,C0O0C4O2876,,
code-creation,Function,10,316671,0xe6a6185bce,584, node:internal/crypto/hashnames:1:1,0xe6a6185850,~
code-source-info,0xe6a6185bce
code-creation,LazyCompile,10,316886,0xe6a618662e,20,cachedResult node:internal/util:241:22,0x25aadb2aed8,~
code-source-info,0xe6a618662e,12,6958,7100,C0O6958C12O6972C13O6972C15O6983C19O7097,,
code-creation,Eval,10,317135,0xe6a6186bd6,5, node:internal/crypto/scrypt:1:1,0xe6a6186960,~
script-source,213,node:internal/crypto/scrypt,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Promise\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  ScryptJob\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateInteger\x2C\x0d\n  validateInt32\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_SCRYPT_INVALID_PARAMETER\x2C\x0d\n    ERR_CRYPTO_SCRYPT_NOT_SUPPORTED\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  getDefaultEncoding\x2C\x0d\n  kKeyObject\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst defaults = {\x0d\n  N: 16384\x2C\x0d\n  r: 8\x2C\x0d\n  p: 1\x2C\x0d\n  maxmem: 32 << 20\x2C  // 32 MB\x2C matches SCRYPT_MAX_MEM.\x0d\n};\x0d\n\x0d\nfunction scrypt(password\x2C salt\x2C keylen\x2C options\x2C callback = defaults) {\x0d\n  if (callback === defaults) {\x0d\n    callback = options;\x0d\n    options = defaults;\x0d\n  }\x0d\n\x0d\n  options = check(password\x2C salt\x2C keylen\x2C options);\x0d\n  const { N\x2C r\x2C p\x2C maxmem } = options;\x0d\n  ({ password\x2C salt\x2C keylen } = options);\x0d\n\x0d\n  validateCallback(callback);\x0d\n\x0d\n  const job = new ScryptJob(\x0d\n    kCryptoJobAsync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\x0d\n\x0d\n  const encoding = getDefaultEncoding();\x0d\n  job.ondone = (error\x2C result) => {\x0d\n    if (error !== undefined)\x0d\n      return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    const buf = Buffer.from(result);\x0d\n    if (encoding === 'buffer')\x0d\n      return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf.toString(encoding));\x0d\n  };\x0d\n\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction scryptSync(password\x2C salt\x2C keylen\x2C options = defaults) {\x0d\n  options = check(password\x2C salt\x2C keylen\x2C options);\x0d\n  const { N\x2C r\x2C p\x2C maxmem } = options;\x0d\n  ({ password\x2C salt\x2C keylen } = options);\x0d\n  const job = new ScryptJob(\x0d\n    kCryptoJobSync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\x0d\n  const { 0: err\x2C 1: result } = job.run();\x0d\n\x0d\n  if (err !== undefined)\x0d\n    throw err;\x0d\n\x0d\n  const buf = Buffer.from(result);\x0d\n  const encoding = getDefaultEncoding();\x0d\n  return encoding === 'buffer' ? buf : buf.toString(encoding);\x0d\n}\x0d\n\x0d\nfunction check(password\x2C salt\x2C keylen\x2C options) {\x0d\n  if (ScryptJob === undefined)\x0d\n    throw new ERR_CRYPTO_SCRYPT_NOT_SUPPORTED();\x0d\n\x0d\n  password = getArrayBufferOrView(password\x2C 'password');\x0d\n  salt = getArrayBufferOrView(salt\x2C 'salt');\x0d\n  validateInt32(keylen\x2C 'keylen'\x2C 0);\x0d\n\x0d\n  let { N\x2C r\x2C p\x2C maxmem } = defaults;\x0d\n  if (options && options !== defaults) {\x0d\n    let has_N\x2C has_r\x2C has_p;\x0d\n    if (has_N = (options.N !== undefined)) {\x0d\n      N = options.N;\x0d\n      validateUint32(N\x2C 'N');\x0d\n    }\x0d\n    if (options.cost !== undefined) {\x0d\n      if (has_N) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\x0d\n      N = options.cost;\x0d\n      validateUint32(N\x2C 'cost');\x0d\n    }\x0d\n    if (has_r = (options.r !== undefined)) {\x0d\n      r = options.r;\x0d\n      validateUint32(r\x2C 'r');\x0d\n    }\x0d\n    if (options.blockSize !== undefined) {\x0d\n      if (has_r) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\x0d\n      r = options.blockSize;\x0d\n      validateUint32(r\x2C 'blockSize');\x0d\n    }\x0d\n    if (has_p = (options.p !== undefined)) {\x0d\n      p = options.p;\x0d\n      validateUint32(p\x2C 'p');\x0d\n    }\x0d\n    if (options.parallelization !== undefined) {\x0d\n      if (has_p) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\x0d\n      p = options.parallelization;\x0d\n      validateUint32(p\x2C 'parallelization');\x0d\n    }\x0d\n    if (options.maxmem !== undefined) {\x0d\n      maxmem = options.maxmem;\x0d\n      validateInteger(maxmem\x2C 'maxmem'\x2C 0);\x0d\n    }\x0d\n    if (N === 0) N = defaults.N;\x0d\n    if (r === 0) r = defaults.r;\x0d\n    if (p === 0) p = defaults.p;\x0d\n    if (maxmem === 0) maxmem = defaults.maxmem;\x0d\n  }\x0d\n\x0d\n  return { password\x2C salt\x2C keylen\x2C N\x2C r\x2C p\x2C maxmem };\x0d\n}\x0d\n\x0d\nasync function scryptDeriveBits(algorithm\x2C baseKey\x2C length) {\x0d\n  validateUint32(length\x2C 'length');\x0d\n  const {\x0d\n    N = 16384\x2C\x0d\n    r = 8\x2C\x0d\n    p = 1\x2C\x0d\n    maxmem = 32 * 1024 * 1024\x2C\x0d\n    encoding\x2C\x0d\n  } = algorithm;\x0d\n  validateUint32(N\x2C 'algorithm.N');\x0d\n  validateUint32(r\x2C 'algorithm.r');\x0d\n  validateUint32(p\x2C 'algorithm.p');\x0d\n  validateUint32(maxmem\x2C 'algorithm.maxmem');\x0d\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt'\x2C encoding);\x0d\n\x0d\n  const raw = baseKey[kKeyObject].export();\x0d\n\x0d\n  let byteLength = 64;  // the default\x0d\n  if (length !== undefined) {\x0d\n    if (length === 0)\x0d\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\x0d\n    if (length % 8) {\x0d\n      throw lazyDOMException(\x0d\n        'length must be a multiple of 8'\x2C\x0d\n        'OperationError');\x0d\n    }\x0d\n    byteLength = length / 8;\x0d\n  }\x0d\n\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    scrypt(raw\x2C salt\x2C byteLength\x2C { N\x2C r\x2C p\x2C maxmem }\x2C (err\x2C result) => {\x0d\n      if (err) return reject(err);\x0d\n      resolve(result.buffer);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  scrypt\x2C\x0d\n  scryptSync\x2C\x0d\n  scryptDeriveBits\x2C\x0d\n};\x0d\n
code-source-info,0xe6a6186bd6,213,0,4876,C0O0C4O4876,,
code-creation,Function,10,317392,0xe6a6186f3e,264, node:internal/crypto/scrypt:1:1,0xe6a6186b50,~
code-source-info,0xe6a6186f3e,213,0,4876,C0O0C78O28C84O54C90O103C93O103C98O92C104O191C107O191C112O136C118O150C124O170C130O312C133O312C138O232C144O253C150O273C156O291C162O457C165O457C170O457C175O372C181O414C187O564C190O564C195O499C201O524C207O547C213O634C216O634C221O611C227O680C231O680C233O4805C240O4827C246O4838C252O4853C258O4820C263O4875,,
code-creation,Eval,10,317610,0xe6a6187bfe,5, node:internal/crypto/hkdf:1:1,0xe6a6187908,~
script-source,214,node:internal/crypto/hkdf,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Promise\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  HKDFJob\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { kMaxLength } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  normalizeHashName\x2C\x0d\n  toBuf\x2C\x0d\n  validateByteSource\x2C\x0d\n  kKeyObject\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  createSecretKey\x2C\x0d\n  isKeyObject\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_OPTION\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst validateParameters = hideStackFrames((hash\x2C key\x2C salt\x2C info\x2C length) => {\x0d\n  key = prepareKey(key);\x0d\n  salt = toBuf(salt);\x0d\n  info = toBuf(info);\x0d\n\x0d\n  validateString(hash\x2C 'digest');\x0d\n  validateByteSource(salt\x2C 'salt');\x0d\n  validateByteSource(info\x2C 'info');\x0d\n\x0d\n  validateInteger(length\x2C 'length'\x2C 0\x2C kMaxLength);\x0d\n\x0d\n  if (info.byteLength > 1024) {\x0d\n    throw ERR_OUT_OF_RANGE(\x0d\n      'info'\x2C\x0d\n      'must not contain more than 1024 bytes'\x2C\x0d\n      info.byteLength);\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    hash\x2C\x0d\n    key\x2C\x0d\n    salt\x2C\x0d\n    info\x2C\x0d\n    length\x2C\x0d\n  };\x0d\n});\x0d\n\x0d\nfunction prepareKey(key) {\x0d\n  if (isKeyObject(key))\x0d\n    return key;\x0d\n\x0d\n  // TODO(@jasnell): createSecretKey should allow using an ArrayBuffer\x0d\n  if (isAnyArrayBuffer(key))\x0d\n    return createSecretKey(new Uint8Array(key));\x0d\n\x0d\n  key = toBuf(key);\x0d\n\x0d\n  if (!isArrayBufferView(key)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'ikm'\x2C\x0d\n      [\x0d\n        'string'\x2C\x0d\n        'SecretKeyObject'\x2C\x0d\n        'ArrayBuffer'\x2C\x0d\n        'TypedArray'\x2C\x0d\n        'DataView'\x2C\x0d\n        'Buffer'\x2C\x0d\n      ]\x2C\x0d\n      key);\x0d\n  }\x0d\n\x0d\n  return createSecretKey(key);\x0d\n}\x0d\n\x0d\nfunction hkdf(hash\x2C key\x2C salt\x2C info\x2C length\x2C callback) {\x0d\n  ({\x0d\n    hash\x2C\x0d\n    key\x2C\x0d\n    salt\x2C\x0d\n    info\x2C\x0d\n    length\x2C\x0d\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\x0d\n\x0d\n  validateCallback(callback);\x0d\n\x0d\n  const job = new HKDFJob(kCryptoJobAsync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\x0d\n\x0d\n  job.ondone = (error\x2C bits) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\x0d\n  };\x0d\n\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction hkdfSync(hash\x2C key\x2C salt\x2C info\x2C length) {\x0d\n  ({\x0d\n    hash\x2C\x0d\n    key\x2C\x0d\n    salt\x2C\x0d\n    info\x2C\x0d\n    length\x2C\x0d\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\x0d\n\x0d\n  const job = new HKDFJob(kCryptoJobSync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\x0d\n  const { 0: err\x2C 1: bits } = job.run();\x0d\n  if (err !== undefined)\x0d\n    throw err;\x0d\n\x0d\n  return bits;\x0d\n}\x0d\n\x0d\nasync function hkdfDeriveBits(algorithm\x2C baseKey\x2C length) {\x0d\n  validateUint32(length\x2C 'length');\x0d\n  const { hash } = algorithm;\x0d\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt');\x0d\n  const info = getArrayBufferOrView(algorithm.info\x2C 'algorithm.info');\x0d\n  if (hash === undefined)\x0d\n    throw new ERR_MISSING_OPTION('algorithm.hash');\x0d\n\x0d\n  let byteLength = 512 / 8;\x0d\n  if (length !== undefined) {\x0d\n    if (length === 0)\x0d\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\x0d\n    if (length % 8) {\x0d\n      throw lazyDOMException(\x0d\n        'length must be a multiple of 8'\x2C\x0d\n        'OperationError');\x0d\n    }\x0d\n    byteLength = length / 8;\x0d\n  }\x0d\n\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    hkdf(\x0d\n      normalizeHashName(hash.name)\x2C\x0d\n      baseKey[kKeyObject]\x2C\x0d\n      salt\x2C\x0d\n      info\x2C\x0d\n      byteLength\x2C\x0d\n      (err\x2C bits) => {\x0d\n        if (err) return reject(err);\x0d\n        resolve(bits);\x0d\n      });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  hkdf\x2C\x0d\n  hkdfSync\x2C\x0d\n  hkdfDeriveBits\x2C\x0d\n};\x0d\n
code-source-info,0xe6a6187bfe,214,0,3863,C0O0C4O3863,,
code-creation,Function,10,317838,0xe6a6187fb6,362, node:internal/crypto/hkdf:1:1,0xe6a6187b78,~
code-source-info,0xe6a6187fb6,214,0,3863,C0O0C102O28C108O54C114O66C120O163C123O163C128O110C134O122C140O142C146O285C149O285C154O204C160O225C166O245C172O264C178O343C181O343C186O328C192O473C195O473C200O376C206O401C212O423C218O433C224O456C230O558C233O558C238O520C244O540C250O628C253O628C258O605C264O713C267O713C272O668C278O689C284O874C287O874C292O874C297O773C303O800C309O823C315O852C320O932C325O932C329O932C331O3798C338O3820C344O3829C350O3842C356O3813C361O3862,,
code-creation,Eval,10,318382,0xe6a61896de,5, node:internal/crypto/keys:1:1,0xe6a61891b8,~
script-source,215,node:internal/crypto/keys,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  KeyObjectHandle\x2C\x0d\n  createNativeKeyObjectClass\x2C\x0d\n  kKeyTypeSecret\x2C\x0d\n  kKeyTypePublic\x2C\x0d\n  kKeyTypePrivate\x2C\x0d\n  kKeyFormatPEM\x2C\x0d\n  kKeyFormatDER\x2C\x0d\n  kKeyFormatJWK\x2C\x0d\n  kKeyEncodingPKCS1\x2C\x0d\n  kKeyEncodingPKCS8\x2C\x0d\n  kKeyEncodingSPKI\x2C\x0d\n  kKeyEncodingSEC1\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS\x2C\x0d\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\x0d\n    ERR_CRYPTO_INVALID_JWK\x2C\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  kHandle\x2C\x0d\n  kKeyObject\x2C\x0d\n  getArrayBufferOrView\x2C\x0d\n  bigIntArrayToUnsignedBigInt\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst kAlgorithm = Symbol('kAlgorithm');\x0d\nconst kExtractable = Symbol('kExtractable');\x0d\nconst kKeyType = Symbol('kKeyType');\x0d\nconst kKeyUsages = Symbol('kKeyUsages');\x0d\n\x0d\n// Key input contexts.\x0d\nconst kConsumePublic = 0;\x0d\nconst kConsumePrivate = 1;\x0d\nconst kCreatePublic = 2;\x0d\nconst kCreatePrivate = 3;\x0d\n\x0d\nconst encodingNames = [];\x0d\nfor (const m of [[kKeyEncodingPKCS1\x2C 'pkcs1']\x2C [kKeyEncodingPKCS8\x2C 'pkcs8']\x2C\x0d\n                 [kKeyEncodingSPKI\x2C 'spki']\x2C [kKeyEncodingSEC1\x2C 'sec1']])\x0d\n  encodingNames[m[0]] = m[1];\x0d\n\x0d\n// Creating the KeyObject class is a little complicated due to inheritance\x0d\n// and that fact that KeyObjects should be transferrable between threads\x2C\x0d\n// which requires the KeyObject base class to be implemented in C++.\x0d\n// The creation requires a callback to make sure that the NativeKeyObject\x0d\n// base class cannot exist without the other KeyObject implementations.\x0d\nconst {\x0d\n  0: KeyObject\x2C\x0d\n  1: SecretKeyObject\x2C\x0d\n  2: PublicKeyObject\x2C\x0d\n  3: PrivateKeyObject\x2C\x0d\n} = createNativeKeyObjectClass((NativeKeyObject) => {\x0d\n  // Publicly visible KeyObject class.\x0d\n  class KeyObject extends NativeKeyObject {\x0d\n    constructor(type\x2C handle) {\x0d\n      if (type !== 'secret' && type !== 'public' && type !== 'private')\x0d\n        throw new ERR_INVALID_ARG_VALUE('type'\x2C type);\x0d\n      if (typeof handle !== 'object' || !(handle instanceof KeyObjectHandle))\x0d\n        throw new ERR_INVALID_ARG_TYPE('handle'\x2C 'object'\x2C handle);\x0d\n\x0d\n      super(handle);\x0d\n\x0d\n      this[kKeyType] = type;\x0d\n\x0d\n      ObjectDefineProperty(this\x2C kHandle\x2C {\x0d\n        value: handle\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: false\x2C\x0d\n        writable: false\x0d\n      });\x0d\n    }\x0d\n\x0d\n    get type() {\x0d\n      return this[kKeyType];\x0d\n    }\x0d\n\x0d\n    static from(key) {\x0d\n      if (!isCryptoKey(key))\x0d\n        throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\x0d\n      return key[kKeyObject];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  class SecretKeyObject extends KeyObject {\x0d\n    constructor(handle) {\x0d\n      super('secret'\x2C handle);\x0d\n    }\x0d\n\x0d\n    get symmetricKeySize() {\x0d\n      return this[kHandle].getSymmetricKeySize();\x0d\n    }\x0d\n\x0d\n    export(options) {\x0d\n      if (options !== undefined) {\x0d\n        validateObject(options\x2C 'options');\x0d\n        validateOneOf(\x0d\n          options.format\x2C 'options.format'\x2C [undefined\x2C 'buffer'\x2C 'jwk']);\x0d\n        if (options.format === 'jwk') {\x0d\n          return this[kHandle].exportJwk({}\x2C false);\x0d\n        }\x0d\n      }\x0d\n      return this[kHandle].export();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const kAsymmetricKeyType = Symbol('kAsymmetricKeyType');\x0d\n  const kAsymmetricKeyDetails = Symbol('kAsymmetricKeyDetails');\x0d\n\x0d\n  function normalizeKeyDetails(details = {}) {\x0d\n    if (details.publicExponent !== undefined) {\x0d\n      return {\x0d\n        ...details\x2C\x0d\n        publicExponent:\x0d\n          bigIntArrayToUnsignedBigInt(new Uint8Array(details.publicExponent))\x0d\n      };\x0d\n    }\x0d\n    return details;\x0d\n  }\x0d\n\x0d\n  class AsymmetricKeyObject extends KeyObject {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(type\x2C handle) {\x0d\n      super(type\x2C handle);\x0d\n    }\x0d\n\x0d\n    get asymmetricKeyType() {\x0d\n      return this[kAsymmetricKeyType] ||\x0d\n             (this[kAsymmetricKeyType] = this[kHandle].getAsymmetricKeyType());\x0d\n    }\x0d\n\x0d\n    get asymmetricKeyDetails() {\x0d\n      switch (this.asymmetricKeyType) {\x0d\n        case 'rsa':\x0d\n        case 'rsa-pss':\x0d\n        case 'dsa':\x0d\n        case 'ec':\x0d\n          return this[kAsymmetricKeyDetails] ||\x0d\n             (this[kAsymmetricKeyDetails] = normalizeKeyDetails(\x0d\n               this[kHandle].keyDetail({})\x0d\n             ));\x0d\n        default:\x0d\n          return {};\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  class PublicKeyObject extends AsymmetricKeyObject {\x0d\n    constructor(handle) {\x0d\n      super('public'\x2C handle);\x0d\n    }\x0d\n\x0d\n    export(options) {\x0d\n      if (options && options.format === 'jwk') {\x0d\n        return this[kHandle].exportJwk({}\x2C false);\x0d\n      }\x0d\n      const {\x0d\n        format\x2C\x0d\n        type\x0d\n      } = parsePublicKeyEncoding(options\x2C this.asymmetricKeyType);\x0d\n      return this[kHandle].export(format\x2C type);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  class PrivateKeyObject extends AsymmetricKeyObject {\x0d\n    constructor(handle) {\x0d\n      super('private'\x2C handle);\x0d\n    }\x0d\n\x0d\n    export(options) {\x0d\n      if (options && options.format === 'jwk') {\x0d\n        if (options.passphrase !== undefined) {\x0d\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\x0d\n            'jwk'\x2C 'does not support encryption');\x0d\n        }\x0d\n        return this[kHandle].exportJwk({}\x2C false);\x0d\n      }\x0d\n      const {\x0d\n        format\x2C\x0d\n        type\x2C\x0d\n        cipher\x2C\x0d\n        passphrase\x0d\n      } = parsePrivateKeyEncoding(options\x2C this.asymmetricKeyType);\x0d\n      return this[kHandle].export(format\x2C type\x2C cipher\x2C passphrase);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [KeyObject\x2C SecretKeyObject\x2C PublicKeyObject\x2C PrivateKeyObject];\x0d\n});\x0d\n\x0d\nfunction parseKeyFormat(formatStr\x2C defaultFormat\x2C optionName) {\x0d\n  if (formatStr === undefined && defaultFormat !== undefined)\x0d\n    return defaultFormat;\x0d\n  else if (formatStr === 'pem')\x0d\n    return kKeyFormatPEM;\x0d\n  else if (formatStr === 'der')\x0d\n    return kKeyFormatDER;\x0d\n  else if (formatStr === 'jwk')\x0d\n    return kKeyFormatJWK;\x0d\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C formatStr);\x0d\n}\x0d\n\x0d\nfunction parseKeyType(typeStr\x2C required\x2C keyType\x2C isPublic\x2C optionName) {\x0d\n  if (typeStr === undefined && !required) {\x0d\n    return undefined;\x0d\n  } else if (typeStr === 'pkcs1') {\x0d\n    if (keyType !== undefined && keyType !== 'rsa') {\x0d\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\x0d\n        typeStr\x2C 'can only be used for RSA keys');\x0d\n    }\x0d\n    return kKeyEncodingPKCS1;\x0d\n  } else if (typeStr === 'spki' && isPublic !== false) {\x0d\n    return kKeyEncodingSPKI;\x0d\n  } else if (typeStr === 'pkcs8' && isPublic !== true) {\x0d\n    return kKeyEncodingPKCS8;\x0d\n  } else if (typeStr === 'sec1' && isPublic !== true) {\x0d\n    if (keyType !== undefined && keyType !== 'ec') {\x0d\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\x0d\n        typeStr\x2C 'can only be used for EC keys');\x0d\n    }\x0d\n    return kKeyEncodingSEC1;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C typeStr);\x0d\n}\x0d\n\x0d\nfunction option(name\x2C objName) {\x0d\n  return objName === undefined ?\x0d\n    `options.${name}` : `options.${objName}.${name}`;\x0d\n}\x0d\n\x0d\nfunction parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName) {\x0d\n  const { format: formatStr\x2C type: typeStr } = enc;\x0d\n\x0d\n  const isInput = keyType === undefined;\x0d\n  const format = parseKeyFormat(formatStr\x2C\x0d\n                                isInput ? kKeyFormatPEM : undefined\x2C\x0d\n                                option('format'\x2C objName));\x0d\n\x0d\n  const isRequired = (!isInput ||\x0d\n                      format === kKeyFormatDER) &&\x0d\n                      format !== kKeyFormatJWK;\x0d\n  const type = parseKeyType(typeStr\x2C\x0d\n                            isRequired\x2C\x0d\n                            keyType\x2C\x0d\n                            isPublic\x2C\x0d\n                            option('type'\x2C objName));\x0d\n  return { format\x2C type };\x0d\n}\x0d\n\x0d\nfunction isStringOrBuffer(val) {\x0d\n  return typeof val === 'string' ||\x0d\n         isArrayBufferView(val) ||\x0d\n         isAnyArrayBuffer(val);\x0d\n}\x0d\n\x0d\nfunction parseKeyEncoding(enc\x2C keyType\x2C isPublic\x2C objName) {\x0d\n  validateObject(enc\x2C 'options');\x0d\n\x0d\n  const isInput = keyType === undefined;\x0d\n\x0d\n  const {\x0d\n    format\x2C\x0d\n    type\x0d\n  } = parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName);\x0d\n\x0d\n  let cipher\x2C passphrase\x2C encoding;\x0d\n  if (isPublic !== true) {\x0d\n    ({ cipher\x2C passphrase\x2C encoding } = enc);\x0d\n\x0d\n    if (!isInput) {\x0d\n      if (cipher != null) {\x0d\n        if (typeof cipher !== 'string')\x0d\n          throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\x0d\n        if (format === kKeyFormatDER &&\x0d\n            (type === kKeyEncodingPKCS1 ||\x0d\n             type === kKeyEncodingSEC1)) {\x0d\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\x0d\n            encodingNames[type]\x2C 'does not support encryption');\x0d\n        }\x0d\n      } else if (passphrase !== undefined) {\x0d\n        throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if ((isInput && passphrase !== undefined &&\x0d\n         !isStringOrBuffer(passphrase)) ||\x0d\n        (!isInput && cipher != null && !isStringOrBuffer(passphrase))) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(option('passphrase'\x2C objName)\x2C\x0d\n                                      passphrase);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (passphrase !== undefined)\x0d\n    passphrase = getArrayBufferOrView(passphrase\x2C 'key.passphrase'\x2C encoding);\x0d\n\x0d\n  return { format\x2C type\x2C cipher\x2C passphrase };\x0d\n}\x0d\n\x0d\n// Parses the public key encoding based on an object. keyType must be undefined\x0d\n// when this is used to parse an input encoding and must be a valid key type if\x0d\n// used to parse an output encoding.\x0d\nfunction parsePublicKeyEncoding(enc\x2C keyType\x2C objName) {\x0d\n  return parseKeyEncoding(enc\x2C keyType\x2C keyType ? true : undefined\x2C objName);\x0d\n}\x0d\n\x0d\n// Parses the private key encoding based on an object. keyType must be undefined\x0d\n// when this is used to parse an input encoding and must be a valid key type if\x0d\n// used to parse an output encoding.\x0d\nfunction parsePrivateKeyEncoding(enc\x2C keyType\x2C objName) {\x0d\n  return parseKeyEncoding(enc\x2C keyType\x2C false\x2C objName);\x0d\n}\x0d\n\x0d\nfunction getKeyObjectHandle(key\x2C ctx) {\x0d\n  if (ctx === kCreatePrivate) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'key'\x2C\x0d\n      ['string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      key\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (key.type !== 'private') {\x0d\n    if (ctx === kConsumePrivate || ctx === kCreatePublic)\x0d\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'private');\x0d\n    if (key.type !== 'public') {\x0d\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C\x0d\n                                                   'private or public');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return key[kHandle];\x0d\n}\x0d\n\x0d\nfunction getKeyTypes(allowKeyObject\x2C bufferOnly = false) {\x0d\n  const types = [\x0d\n    'ArrayBuffer'\x2C\x0d\n    'Buffer'\x2C\x0d\n    'TypedArray'\x2C\x0d\n    'DataView'\x2C\x0d\n    'string'\x2C // Only if bufferOnly == false\x0d\n    'KeyObject'\x2C // Only if allowKeyObject == true && bufferOnly == false\x0d\n    'CryptoKey'\x2C // Only if allowKeyObject == true && bufferOnly == false\x0d\n  ];\x0d\n  if (bufferOnly) {\x0d\n    return ArrayPrototypeSlice(types\x2C 0\x2C 4);\x0d\n  } else if (!allowKeyObject) {\x0d\n    return ArrayPrototypeSlice(types\x2C 0\x2C 5);\x0d\n  }\x0d\n  return types;\x0d\n}\x0d\n\x0d\nfunction getKeyObjectHandleFromJwk(key\x2C ctx) {\x0d\n  validateObject(key\x2C 'key');\x0d\n  validateOneOf(\x0d\n    key.kty\x2C 'key.kty'\x2C ['RSA'\x2C 'EC'\x2C 'OKP']);\x0d\n  const isPublic = ctx === kConsumePublic || ctx === kCreatePublic;\x0d\n\x0d\n  if (key.kty === 'OKP') {\x0d\n    validateString(key.crv\x2C 'key.crv');\x0d\n    validateOneOf(\x0d\n      key.crv\x2C 'key.crv'\x2C ['Ed25519'\x2C 'Ed448'\x2C 'X25519'\x2C 'X448']);\x0d\n    validateString(key.x\x2C 'key.x');\x0d\n\x0d\n    if (!isPublic)\x0d\n      validateString(key.d\x2C 'key.d');\x0d\n\x0d\n    let keyData;\x0d\n    if (isPublic)\x0d\n      keyData = Buffer.from(key.x\x2C 'base64');\x0d\n    else\x0d\n      keyData = Buffer.from(key.d\x2C 'base64');\x0d\n\x0d\n    switch (key.crv) {\x0d\n      case 'Ed25519':\x0d\n      case 'X25519':\x0d\n        if (keyData.byteLength !== 32) {\x0d\n          throw new ERR_CRYPTO_INVALID_JWK();\x0d\n        }\x0d\n        break;\x0d\n      case 'Ed448':\x0d\n        if (keyData.byteLength !== 57) {\x0d\n          throw new ERR_CRYPTO_INVALID_JWK();\x0d\n        }\x0d\n        break;\x0d\n      case 'X448':\x0d\n        if (keyData.byteLength !== 56) {\x0d\n          throw new ERR_CRYPTO_INVALID_JWK();\x0d\n        }\x0d\n        break;\x0d\n    }\x0d\n\x0d\n    const handle = new KeyObjectHandle();\x0d\n\x0d\n    const keyType = isPublic ? kKeyTypePublic : kKeyTypePrivate;\x0d\n    if (!handle.initEDRaw(`NODE-${key.crv.toUpperCase()}`\x2C keyData\x2C keyType)) {\x0d\n      throw new ERR_CRYPTO_INVALID_JWK();\x0d\n    }\x0d\n\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (key.kty === 'EC') {\x0d\n    validateString(key.crv\x2C 'key.crv');\x0d\n    validateOneOf(\x0d\n      key.crv\x2C 'key.crv'\x2C ['P-256'\x2C 'secp256k1'\x2C 'P-384'\x2C 'P-521']);\x0d\n    validateString(key.x\x2C 'key.x');\x0d\n    validateString(key.y\x2C 'key.y');\x0d\n\x0d\n    const jwk = {\x0d\n      kty: key.kty\x2C\x0d\n      crv: key.crv\x2C\x0d\n      x: key.x\x2C\x0d\n      y: key.y\x0d\n    };\x0d\n\x0d\n    if (!isPublic) {\x0d\n      validateString(key.d\x2C 'key.d');\x0d\n      jwk.d = key.d;\x0d\n    }\x0d\n\x0d\n    const handle = new KeyObjectHandle();\x0d\n    const type = handle.initJwk(jwk\x2C jwk.crv);\x0d\n    if (type === undefined)\x0d\n      throw new ERR_CRYPTO_INVALID_JWK();\x0d\n\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  // RSA\x0d\n  validateString(key.n\x2C 'key.n');\x0d\n  validateString(key.e\x2C 'key.e');\x0d\n\x0d\n  const jwk = {\x0d\n    kty: key.kty\x2C\x0d\n    n: key.n\x2C\x0d\n    e: key.e\x0d\n  };\x0d\n\x0d\n  if (!isPublic) {\x0d\n    validateString(key.d\x2C 'key.d');\x0d\n    validateString(key.p\x2C 'key.p');\x0d\n    validateString(key.q\x2C 'key.q');\x0d\n    validateString(key.dp\x2C 'key.dp');\x0d\n    validateString(key.dq\x2C 'key.dq');\x0d\n    validateString(key.qi\x2C 'key.qi');\x0d\n    jwk.d = key.d;\x0d\n    jwk.p = key.p;\x0d\n    jwk.q = key.q;\x0d\n    jwk.dp = key.dp;\x0d\n    jwk.dq = key.dq;\x0d\n    jwk.qi = key.qi;\x0d\n  }\x0d\n\x0d\n  const handle = new KeyObjectHandle();\x0d\n  const type = handle.initJwk(jwk);\x0d\n  if (type === undefined)\x0d\n    throw new ERR_CRYPTO_INVALID_JWK();\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction prepareAsymmetricKey(key\x2C ctx) {\x0d\n  if (isKeyObject(key)) {\x0d\n    // Best case: A key object\x2C as simple as that.\x0d\n    return { data: getKeyObjectHandle(key\x2C ctx) };\x0d\n  } else if (isCryptoKey(key)) {\x0d\n    return { data: getKeyObjectHandle(key[kKeyObject]\x2C ctx) };\x0d\n  } else if (isStringOrBuffer(key)) {\x0d\n    // Expect PEM by default\x2C mostly for backward compatibility.\x0d\n    return { format: kKeyFormatPEM\x2C data: getArrayBufferOrView(key\x2C 'key') };\x0d\n  } else if (typeof key === 'object') {\x0d\n    const { key: data\x2C encoding\x2C format } = key;\x0d\n    // The 'key' property can be a KeyObject as well to allow specifying\x0d\n    // additional options such as padding along with the key.\x0d\n    if (isKeyObject(data))\x0d\n      return { data: getKeyObjectHandle(data\x2C ctx) };\x0d\n    else if (isCryptoKey(data))\x0d\n      return { data: getKeyObjectHandle(data[kKeyObject]\x2C ctx) };\x0d\n    else if (isJwk(data) && format === 'jwk')\x0d\n      return { data: getKeyObjectHandleFromJwk(data\x2C ctx)\x2C format: 'jwk' };\x0d\n    // Either PEM or DER using PKCS#1 or SPKI.\x0d\n    if (!isStringOrBuffer(data)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'key.key'\x2C\x0d\n        getKeyTypes(ctx !== kCreatePrivate)\x2C\x0d\n        data);\x0d\n    }\x0d\n\x0d\n    const isPublic =\x0d\n      (ctx === kConsumePrivate || ctx === kCreatePrivate) ? false : undefined;\x0d\n    return {\x0d\n      data: getArrayBufferOrView(data\x2C 'key'\x2C encoding)\x2C\x0d\n      ...parseKeyEncoding(key\x2C undefined\x2C isPublic)\x0d\n    };\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'key'\x2C\x0d\n    getKeyTypes(ctx !== kCreatePrivate)\x2C\x0d\n    key);\x0d\n}\x0d\n\x0d\nfunction preparePrivateKey(key) {\x0d\n  return prepareAsymmetricKey(key\x2C kConsumePrivate);\x0d\n}\x0d\n\x0d\nfunction preparePublicOrPrivateKey(key) {\x0d\n  return prepareAsymmetricKey(key\x2C kConsumePublic);\x0d\n}\x0d\n\x0d\nfunction prepareSecretKey(key\x2C encoding\x2C bufferOnly = false) {\x0d\n  if (!bufferOnly) {\x0d\n    if (isKeyObject(key)) {\x0d\n      if (key.type !== 'secret')\x0d\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\x0d\n      return key[kHandle];\x0d\n    } else if (isCryptoKey(key)) {\x0d\n      if (key.type !== 'secret')\x0d\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\x0d\n      return key[kKeyObject][kHandle];\x0d\n    }\x0d\n  }\x0d\n  if (typeof key !== 'string' &&\x0d\n      !isArrayBufferView(key) &&\x0d\n      !isAnyArrayBuffer(key)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'key'\x2C\x0d\n      getKeyTypes(!bufferOnly\x2C bufferOnly)\x2C\x0d\n      key);\x0d\n  }\x0d\n  return getArrayBufferOrView(key\x2C 'key'\x2C encoding);\x0d\n}\x0d\n\x0d\nfunction createSecretKey(key\x2C encoding) {\x0d\n  key = prepareSecretKey(key\x2C encoding\x2C true);\x0d\n  if (key.byteLength === 0)\x0d\n    throw new ERR_OUT_OF_RANGE('key.byteLength'\x2C '> 0'\x2C key.byteLength);\x0d\n  const handle = new KeyObjectHandle();\x0d\n  handle.init(kKeyTypeSecret\x2C key);\x0d\n  return new SecretKeyObject(handle);\x0d\n}\x0d\n\x0d\nfunction createPublicKey(key) {\x0d\n  const { format\x2C type\x2C data\x2C passphrase } =\x0d\n    prepareAsymmetricKey(key\x2C kCreatePublic);\x0d\n  let handle;\x0d\n  if (format === 'jwk') {\x0d\n    handle = data;\x0d\n  } else {\x0d\n    handle = new KeyObjectHandle();\x0d\n    handle.init(kKeyTypePublic\x2C data\x2C format\x2C type\x2C passphrase);\x0d\n  }\x0d\n  return new PublicKeyObject(handle);\x0d\n}\x0d\n\x0d\nfunction createPrivateKey(key) {\x0d\n  const { format\x2C type\x2C data\x2C passphrase } =\x0d\n    prepareAsymmetricKey(key\x2C kCreatePrivate);\x0d\n  let handle;\x0d\n  if (format === 'jwk') {\x0d\n    handle = data;\x0d\n  } else {\x0d\n    handle = new KeyObjectHandle();\x0d\n    handle.init(kKeyTypePrivate\x2C data\x2C format\x2C type\x2C passphrase);\x0d\n  }\x0d\n  return new PrivateKeyObject(handle);\x0d\n}\x0d\n\x0d\nfunction isKeyObject(obj) {\x0d\n  return obj != null && obj[kKeyType] !== undefined;\x0d\n}\x0d\n\x0d\n// Our implementation of CryptoKey is a simple wrapper around a KeyObject\x0d\n// that adapts it to the standard interface. This implementation also\x0d\n// extends the JSTransferable class\x2C allowing the CryptoKey to be cloned\x0d\n// to Workers.\x0d\n// TODO(@jasnell): Embedder environments like electron may have issues\x0d\n// here similar to other things like URL. A chromium provided CryptoKey\x0d\n// will not be recognized as a Node.js CryptoKey\x2C and vice versa. It\x0d\n// would be fantastic if we could find a way of making those interop.\x0d\nclass CryptoKey extends JSTransferable {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `CryptoKey ${inspect({\x0d\n      type: this.type\x2C\x0d\n      extractable: this.extractable\x2C\x0d\n      algorithm: this.algorithm\x2C\x0d\n      usages: this.usages\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  get type() {\x0d\n    return this[kKeyObject].type;\x0d\n  }\x0d\n\x0d\n  get extractable() {\x0d\n    return this[kExtractable];\x0d\n  }\x0d\n\x0d\n  get algorithm() {\x0d\n    return this[kAlgorithm];\x0d\n  }\x0d\n\x0d\n  get usages() {\x0d\n    return ArrayFrom(this[kKeyUsages]);\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const keyObject = this[kKeyObject];\x0d\n    const algorithm = this.algorithm;\x0d\n    const extractable = this.extractable;\x0d\n    const usages = this.usages;\x0d\n\x0d\n    return {\x0d\n      data: {\x0d\n        keyObject\x2C\x0d\n        algorithm\x2C\x0d\n        usages\x2C\x0d\n        extractable\x2C\x0d\n      }\x2C\x0d\n      deserializeInfo: 'internal/crypto/keys:InternalCryptoKey'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ keyObject\x2C algorithm\x2C usages\x2C extractable }) {\x0d\n    this[kKeyObject] = keyObject;\x0d\n    this[kAlgorithm] = algorithm;\x0d\n    this[kKeyUsages] = usages;\x0d\n    this[kExtractable] = extractable;\x0d\n  }\x0d\n}\x0d\n\x0d\n// All internal code must use new InternalCryptoKey to create\x0d\n// CryptoKey instances. The CryptoKey class is exposed to end\x0d\n// user code but is not permitted to be constructed directly.\x0d\nclass InternalCryptoKey extends JSTransferable {\x0d\n  constructor(\x0d\n    keyObject\x2C\x0d\n    algorithm\x2C\x0d\n    keyUsages\x2C\x0d\n    extractable) {\x0d\n    super();\x0d\n    // Using symbol properties here currently instead of private\x0d\n    // properties because (for now) the performance penalty of\x0d\n    // private fields is still too high.\x0d\n    this[kKeyObject] = keyObject;\x0d\n    this[kAlgorithm] = algorithm;\x0d\n    this[kExtractable] = extractable;\x0d\n    this[kKeyUsages] = keyUsages;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalCryptoKey.prototype.constructor = CryptoKey;\x0d\nObjectSetPrototypeOf(InternalCryptoKey.prototype\x2C CryptoKey.prototype);\x0d\n\x0d\nfunction isCryptoKey(obj) {\x0d\n  return obj != null && obj[kKeyObject] !== undefined;\x0d\n}\x0d\n\x0d\nfunction isJwk(obj) {\x0d\n  return obj != null && obj.kty !== undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  // Public API.\x0d\n  createSecretKey\x2C\x0d\n  createPublicKey\x2C\x0d\n  createPrivateKey\x2C\x0d\n  KeyObject\x2C\x0d\n  CryptoKey\x2C\x0d\n  InternalCryptoKey\x2C\x0d\n\x0d\n  // These are designed for internal use only and should not be exposed.\x0d\n  parsePublicKeyEncoding\x2C\x0d\n  parsePrivateKeyEncoding\x2C\x0d\n  parseKeyEncoding\x2C\x0d\n  preparePrivateKey\x2C\x0d\n  preparePublicOrPrivateKey\x2C\x0d\n  prepareSecretKey\x2C\x0d\n  SecretKeyObject\x2C\x0d\n  PublicKeyObject\x2C\x0d\n  PrivateKeyObject\x2C\x0d\n  isKeyObject\x2C\x0d\n  isCryptoKey\x2C\x0d\n  isJwk\x2C\x0d\n};\x0d\n
code-source-info,0xe6a61896de,215,0,21133,C0O0C4O21133,,
code-creation,Function,10,319539,0xe6a618acd6,1232, node:internal/crypto/keys:1:1,0xe6a6189658,~
code-source-info,0xe6a618acd6,215,0,21133,C0O0C264O28C270O42C276O66C282O91C287O116C293O127C299O422C303O422C309O171C315O191C320O222C326O241C332O260C338O280C344O298C350O316C356O334C362O356C368O378C374O399C380O521C384O521C390O463C396O482C402O500C408O806C412O806C418O806C424O581C430O623C436O664C442O693C448O723C454O750C460O778C466O934C470O934C476O848C482O860C488O875C494O900C500O1026C504O1026C510O981C516O1002C522O1121C526O1121C532O1072C537O1091C542O1102C547O1215C551O1215C557O1200C562O1264C566O1264C572O1252C578O1320C582O1320C588O1309C594O1361C602O1361C606O1361C608O1405C616O1405C620O1405C622O1447C630O1447C634O1447C636O1487C644O1487C648O1487C650O1559C651O1559C653O1587C655O1587C657O1613C659O1613C661O1640C663O1640C665O1668C667O1668C669O1689C689O1691C714O1721C739O1769C764O1797C802O1684C833O1684C836O1828C841O1843C848O1851C851O1848C858O1673C929O2328C935O2328C941O2242C948O2259C957O2282C966O2305C975O18406C983O18495C1017O19107C1027O19479C1055O19915C1081O20375C1089O20397C1093O20450C1099O20471C1105O20411C1110O20652C1118O20692C1124O20712C1130O20732C1136O20753C1142O20767C1148O20781C1154O20879C1160O20906C1166O20934C1172O20955C1178O20977C1184O21007C1190O21028C1196O21048C1202O21068C1208O21089C1214O21105C1220O21121C1226O20667C1231O21132,,
code-creation,LazyCompile,10,319906,0xe6a618df46,247, node:internal/crypto/keys:97:32,0xe6a6189da0,~
code-source-info,0xe6a618df46,215,2355,6128,C0O2355C17O2445C50O3258C83O3829C93O3829C97O3829C99O3892C109O3892C113O3892C115O4247C148O4983C176O5419C204O6054C213O6062C222O6073C231O6090C240O6107C246O6125,,
code-creation,Eval,10,320253,0xe6a61902ce,5, node:internal/crypto/keygen:1:1,0xe6a618fec8,~
script-source,216,node:internal/crypto/keygen,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  DhKeyPairGenJob\x2C\x0d\n  DsaKeyPairGenJob\x2C\x0d\n  EcKeyPairGenJob\x2C\x0d\n  NidKeyPairGenJob\x2C\x0d\n  RsaKeyPairGenJob\x2C\x0d\n  SecretKeyGenJob\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n  kKeyVariantRSA_PSS\x2C\x0d\n  kKeyVariantRSA_SSA_PKCS1_v1_5\x2C\x0d\n  EVP_PKEY_ED25519\x2C\x0d\n  EVP_PKEY_ED448\x2C\x0d\n  EVP_PKEY_X25519\x2C\x0d\n  EVP_PKEY_X448\x2C\x0d\n  OPENSSL_EC_NAMED_CURVE\x2C\x0d\n  OPENSSL_EC_EXPLICIT_CURVE\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  PublicKeyObject\x2C\x0d\n  PrivateKeyObject\x2C\x0d\n  SecretKeyObject\x2C\x0d\n  parsePublicKeyEncoding\x2C\x0d\n  parsePrivateKeyEncoding\x2C\x0d\n  isJwk\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  kAesKeyLengths\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst { customPromisifyArgs } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  validateCallback\x2C\x0d\n  validateString\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_MISSING_OPTION\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nfunction wrapKey(key\x2C ctor) {\x0d\n  if (typeof key === 'string' ||\x0d\n      isArrayBufferView(key) ||\x0d\n      isJwk(key))\x0d\n    return key;\x0d\n  return new ctor(key);\x0d\n}\x0d\n\x0d\nfunction generateKeyPair(type\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  validateCallback(callback);\x0d\n\x0d\n  const job = createJob(kCryptoJobAsync\x2C type\x2C options);\x0d\n\x0d\n  job.ondone = (error\x2C result) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    // If no encoding was chosen\x2C return key objects instead.\x0d\n    let { 0: pubkey\x2C 1: privkey } = result;\x0d\n    pubkey = wrapKey(pubkey\x2C PublicKeyObject);\x0d\n    privkey = wrapKey(privkey\x2C PrivateKeyObject);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C pubkey\x2C privkey);\x0d\n  };\x0d\n\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nObjectDefineProperty(generateKeyPair\x2C customPromisifyArgs\x2C {\x0d\n  value: ['publicKey'\x2C 'privateKey']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nfunction generateKeyPairSync(type\x2C options) {\x0d\n  return handleError(createJob(kCryptoJobSync\x2C type\x2C options).run());\x0d\n}\x0d\n\x0d\nfunction handleError(ret) {\x0d\n  if (ret == null)\x0d\n    return; // async\x0d\n\x0d\n  const { 0: err\x2C 1: keys } = ret;\x0d\n  if (err !== undefined)\x0d\n    throw err;\x0d\n\x0d\n  const { 0: publicKey\x2C 1: privateKey } = keys;\x0d\n\x0d\n  // If no encoding was chosen\x2C return key objects instead.\x0d\n  return {\x0d\n    publicKey: wrapKey(publicKey\x2C PublicKeyObject)\x2C\x0d\n    privateKey: wrapKey(privateKey\x2C PrivateKeyObject)\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction parseKeyEncoding(keyType\x2C options = {}) {\x0d\n  const { publicKeyEncoding\x2C privateKeyEncoding } = options;\x0d\n\x0d\n  let publicFormat\x2C publicType;\x0d\n  if (publicKeyEncoding == null) {\x0d\n    publicFormat = publicType = undefined;\x0d\n  } else if (typeof publicKeyEncoding === 'object') {\x0d\n    ({\x0d\n      format: publicFormat\x2C\x0d\n      type: publicType\x0d\n    } = parsePublicKeyEncoding(publicKeyEncoding\x2C keyType\x2C\x0d\n                               'publicKeyEncoding'));\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options.publicKeyEncoding'\x2C\x0d\n                                    publicKeyEncoding);\x0d\n  }\x0d\n\x0d\n  let privateFormat\x2C privateType\x2C cipher\x2C passphrase;\x0d\n  if (privateKeyEncoding == null) {\x0d\n    privateFormat = privateType = undefined;\x0d\n  } else if (typeof privateKeyEncoding === 'object') {\x0d\n    ({\x0d\n      format: privateFormat\x2C\x0d\n      type: privateType\x2C\x0d\n      cipher\x2C\x0d\n      passphrase\x0d\n    } = parsePrivateKeyEncoding(privateKeyEncoding\x2C keyType\x2C\x0d\n                                'privateKeyEncoding'));\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options.privateKeyEncoding'\x2C\x0d\n                                    privateKeyEncoding);\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    publicFormat\x2C\x0d\n    publicType\x2C\x0d\n    privateFormat\x2C\x0d\n    privateType\x2C\x0d\n    cipher\x2C\x0d\n    passphrase\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction createJob(mode\x2C type\x2C options) {\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  const encoding = new SafeArrayIterator(parseKeyEncoding(type\x2C options));\x0d\n\x0d\n  if (options !== undefined)\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  switch (type) {\x0d\n    case 'rsa':\x0d\n    case 'rsa-pss':\x0d\n    {\x0d\n      validateObject(options\x2C 'options');\x0d\n      const { modulusLength } = options;\x0d\n      if (!isUint32(modulusLength))\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.modulusLength'\x2C modulusLength);\x0d\n\x0d\n      let { publicExponent } = options;\x0d\n      if (publicExponent == null) {\x0d\n        publicExponent = 0x10001;\x0d\n      } else if (!isUint32(publicExponent)) {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.publicExponent'\x2C\x0d\n          publicExponent);\x0d\n      }\x0d\n\x0d\n      if (type === 'rsa') {\x0d\n        return new RsaKeyPairGenJob(\x0d\n          mode\x2C\x0d\n          kKeyVariantRSA_SSA_PKCS1_v1_5\x2C  // Used also for RSA-OAEP\x0d\n          modulusLength\x2C\x0d\n          publicExponent\x2C\x0d\n          ...encoding);\x0d\n      }\x0d\n\x0d\n      const {\x0d\n        hash\x2C mgf1Hash\x2C hashAlgorithm\x2C mgf1HashAlgorithm\x2C saltLength\x0d\n      } = options;\x0d\n      if (saltLength !== undefined && (!isInt32(saltLength) || saltLength < 0))\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.saltLength'\x2C saltLength);\x0d\n      if (hashAlgorithm !== undefined && typeof hashAlgorithm !== 'string')\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.hashAlgorithm'\x2C hashAlgorithm);\x0d\n      if (mgf1HashAlgorithm !== undefined &&\x0d\n          typeof mgf1HashAlgorithm !== 'string')\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.mgf1HashAlgorithm'\x2C\x0d\n                                        mgf1HashAlgorithm);\x0d\n      if (hash !== undefined) {\x0d\n        pendingDeprecation && process.emitWarning(\x0d\n          '"options.hash" is deprecated\x2C ' +\x0d\n          'use "options.hashAlgorithm" instead.'\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0154');\x0d\n        if (typeof hash !== 'string' ||\x0d\n          (hashAlgorithm && hash !== hashAlgorithm)) {\x0d\n          throw new ERR_INVALID_ARG_VALUE('options.hash'\x2C hash);\x0d\n        }\x0d\n      }\x0d\n      if (mgf1Hash !== undefined) {\x0d\n        pendingDeprecation && process.emitWarning(\x0d\n          '"options.mgf1Hash" is deprecated\x2C ' +\x0d\n          'use "options.mgf1HashAlgorithm" instead.'\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0154');\x0d\n        if (typeof mgf1Hash !== 'string' ||\x0d\n          (mgf1HashAlgorithm && mgf1Hash !== mgf1HashAlgorithm)) {\x0d\n          throw new ERR_INVALID_ARG_VALUE('options.mgf1Hash'\x2C mgf1Hash);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return new RsaKeyPairGenJob(\x0d\n        mode\x2C\x0d\n        kKeyVariantRSA_PSS\x2C\x0d\n        modulusLength\x2C\x0d\n        publicExponent\x2C\x0d\n        hashAlgorithm || hash\x2C\x0d\n        mgf1HashAlgorithm || mgf1Hash\x2C\x0d\n        saltLength\x2C\x0d\n        ...encoding);\x0d\n    }\x0d\n    case 'dsa':\x0d\n    {\x0d\n      validateObject(options\x2C 'options');\x0d\n      const { modulusLength } = options;\x0d\n      if (!isUint32(modulusLength))\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.modulusLength'\x2C modulusLength);\x0d\n\x0d\n      let { divisorLength } = options;\x0d\n      if (divisorLength == null) {\x0d\n        divisorLength = -1;\x0d\n      } else if (!isInt32(divisorLength) || divisorLength < 0) {\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.divisorLength'\x2C divisorLength);\x0d\n      }\x0d\n\x0d\n      return new DsaKeyPairGenJob(\x0d\n        mode\x2C\x0d\n        modulusLength\x2C\x0d\n        divisorLength\x2C\x0d\n        ...encoding);\x0d\n    }\x0d\n    case 'ec':\x0d\n    {\x0d\n      validateObject(options\x2C 'options');\x0d\n      const { namedCurve } = options;\x0d\n      if (typeof namedCurve !== 'string')\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.namedCurve'\x2C namedCurve);\x0d\n      let { paramEncoding } = options;\x0d\n      if (paramEncoding == null || paramEncoding === 'named')\x0d\n        paramEncoding = OPENSSL_EC_NAMED_CURVE;\x0d\n      else if (paramEncoding === 'explicit')\x0d\n        paramEncoding = OPENSSL_EC_EXPLICIT_CURVE;\x0d\n      else\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.paramEncoding'\x2C paramEncoding);\x0d\n\x0d\n      return new EcKeyPairGenJob(\x0d\n        mode\x2C\x0d\n        namedCurve\x2C\x0d\n        paramEncoding\x2C\x0d\n        ...encoding);\x0d\n    }\x0d\n    case 'ed25519':\x0d\n    case 'ed448':\x0d\n    case 'x25519':\x0d\n    case 'x448':\x0d\n    {\x0d\n      let id;\x0d\n      switch (type) {\x0d\n        case 'ed25519':\x0d\n          id = EVP_PKEY_ED25519;\x0d\n          break;\x0d\n        case 'ed448':\x0d\n          id = EVP_PKEY_ED448;\x0d\n          break;\x0d\n        case 'x25519':\x0d\n          id = EVP_PKEY_X25519;\x0d\n          break;\x0d\n        case 'x448':\x0d\n          id = EVP_PKEY_X448;\x0d\n          break;\x0d\n      }\x0d\n      return new NidKeyPairGenJob(mode\x2C id\x2C ...encoding);\x0d\n    }\x0d\n    case 'dh':\x0d\n    {\x0d\n      validateObject(options\x2C 'options');\x0d\n      const { group\x2C primeLength\x2C prime\x2C generator } = options;\x0d\n      if (group != null) {\x0d\n        if (prime != null)\x0d\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'prime');\x0d\n        if (primeLength != null)\x0d\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'primeLength');\x0d\n        if (generator != null)\x0d\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'generator');\x0d\n        if (typeof group !== 'string')\x0d\n          throw new ERR_INVALID_ARG_VALUE('options.group'\x2C group);\x0d\n\x0d\n        return new DhKeyPairGenJob(mode\x2C group\x2C ...encoding);\x0d\n      }\x0d\n\x0d\n      if (prime != null) {\x0d\n        if (primeLength != null)\x0d\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('prime'\x2C 'primeLength');\x0d\n        if (!isArrayBufferView(prime))\x0d\n          throw new ERR_INVALID_ARG_VALUE('options.prime'\x2C prime);\x0d\n      } else if (primeLength != null) {\x0d\n        if (!isInt32(primeLength) || primeLength < 0)\x0d\n          throw new ERR_INVALID_ARG_VALUE('options.primeLength'\x2C primeLength);\x0d\n      } else {\x0d\n        throw new ERR_MISSING_OPTION(\x0d\n          'At least one of the group\x2C prime\x2C or primeLength options');\x0d\n      }\x0d\n\x0d\n      if (generator != null) {\x0d\n        if (!isInt32(generator) || generator < 0)\x0d\n          throw new ERR_INVALID_ARG_VALUE('options.generator'\x2C generator);\x0d\n      }\x0d\n      return new DhKeyPairGenJob(\x0d\n        mode\x2C\x0d\n        prime != null ? prime : primeLength\x2C\x0d\n        generator == null ? 2 : generator\x2C\x0d\n        ...encoding);\x0d\n    }\x0d\n    default:\x0d\n      // Fall through\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_VALUE('type'\x2C type\x2C 'must be a supported key type');\x0d\n}\x0d\n\x0d\n// Symmetric Key Generation\x0d\n\x0d\nfunction generateKeyJob(mode\x2C keyType\x2C options) {\x0d\n  validateString(keyType\x2C 'type');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { length } = options;\x0d\n  switch (keyType) {\x0d\n    case 'hmac':\x0d\n      validateInteger(length\x2C 'options.length'\x2C 1\x2C 2 ** 31 - 1);\x0d\n      break;\x0d\n    case 'aes':\x0d\n      validateOneOf(length\x2C 'options.length'\x2C kAesKeyLengths);\x0d\n      break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'type'\x2C\x0d\n        keyType\x2C\x0d\n        'must be a supported key type');\x0d\n  }\x0d\n\x0d\n  return new SecretKeyGenJob(mode\x2C length);\x0d\n}\x0d\n\x0d\nfunction handleGenerateKeyError(ret) {\x0d\n  if (ret === undefined)\x0d\n    return; // async\x0d\n\x0d\n  const { 0: err\x2C 1: key } = ret;\x0d\n  if (err !== undefined)\x0d\n    throw err;\x0d\n\x0d\n  return wrapKey(key\x2C SecretKeyObject);\x0d\n}\x0d\n\x0d\nfunction generateKey(type\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  validateCallback(callback);\x0d\n\x0d\n  const job = generateKeyJob(kCryptoJobAsync\x2C type\x2C options);\x0d\n\x0d\n  job.ondone = (error\x2C key) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C wrapKey(key\x2C SecretKeyObject));\x0d\n  };\x0d\n\x0d\n  handleGenerateKeyError(job.run());\x0d\n}\x0d\n\x0d\nfunction generateKeySync(type\x2C options) {\x0d\n  return handleGenerateKeyError(\x0d\n    generateKeyJob(kCryptoJobSync\x2C type\x2C options).run());\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  generateKeyPair\x2C\x0d\n  generateKeyPairSync\x2C\x0d\n  generateKey\x2C\x0d\n  generateKeySync\x2C\x0d\n};\x0d\n
code-source-info,0xe6a61902ce,216,0,11893,C0O0C4O11893,,
code-creation,Function,10,320808,0xe6a6190946,538, node:internal/crypto/keygen:1:1,0xe6a6190248,~
code-source-info,0xe6a6190946,216,0,11893,C0O0C176O28C182O54C187O79C193O486C196O486C201O130C207O150C213O171C219O191C225O212C231O233C237O253C243O273C249O292C255O315C261O349C267O370C273O389C279O409C285O427C291O454C297O654C300O654C305O527C311O547C317O568C323O588C329O615C335O643C341O722C344O722C349O701C355O790C358O790C363O766C368O954C371O954C376O830C382O842C388O855C394O876C400O895C406O915C412O934C418O1107C421O1107C426O1107C431O1014C437O1049C443O1077C449O1168C452O1168C457O1146C463O1230C466O1230C471O1211C476O1287C479O1287C483O1287C485O2180C496O2142C501O11789C508O11811C514O11831C520O11855C526O11871C532O11804C537O11892,,
code-creation,Eval,10,321298,0xe6a61924e6,5, node:internal/crypto/diffiehellman:1:1,0xe6a6192000,~
script-source,217,node:internal/crypto/diffiehellman,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferPrototypeSlice\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathFloor\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  DHBitsJob\x2C\x0d\n  DHKeyExportJob\x2C\x0d\n  DiffieHellman: _DiffieHellman\x2C\x0d\n  DiffieHellmanGroup: _DiffieHellmanGroup\x2C\x0d\n  ECDH: _ECDH\x2C\x0d\n  ECDHBitsJob\x2C\x0d\n  ECDHConvertKey: _ECDHConvertKey\x2C\x0d\n  statelessDH\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_ECDH_INVALID_FORMAT\x2C\x0d\n    ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY\x2C\x0d\n    ERR_CRYPTO_INCOMPATIBLE_KEY\x2C\x0d\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  KeyObject\x2C\x0d\n  InternalCryptoKey\x2C\x0d\n  createPrivateKey\x2C\x0d\n  createPublicKey\x2C\x0d\n  isCryptoKey\x2C\x0d\n  isKeyObject\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  generateKeyPair\x2C\x0d\n} = require('internal/crypto/keygen');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  getDefaultEncoding\x2C\x0d\n  getUsagesUnion\x2C\x0d\n  hasAnyNotIn\x2C\x0d\n  jobPromise\x2C\x0d\n  toBuf\x2C\x0d\n  kHandle\x2C\x0d\n  kKeyObject\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  crypto: {\x0d\n    POINT_CONVERSION_COMPRESSED\x2C\x0d\n    POINT_CONVERSION_HYBRID\x2C\x0d\n    POINT_CONVERSION_UNCOMPRESSED\x2C\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\nconst DH_GENERATOR = 2;\x0d\n\x0d\nfunction DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\x0d\n  if (!(this instanceof DiffieHellman))\x0d\n    return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\x0d\n\x0d\n  if (typeof sizeOrKey !== 'number' &&\x0d\n      typeof sizeOrKey !== 'string' &&\x0d\n      !isArrayBufferView(sizeOrKey) &&\x0d\n      !isAnyArrayBuffer(sizeOrKey)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'sizeOrKey'\x2C\x0d\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      sizeOrKey\x0d\n    );\x0d\n  }\x0d\n\x0d\n  // Sizes < 0 don't make sense but they _are_ accepted (and subsequently\x0d\n  // rejected with ERR_OSSL_BN_BITS_TOO_SMALL) by OpenSSL. The glue code\x0d\n  // in node_crypto.cc accepts values that are IsInt32() for that reason\x0d\n  // and that's why we do that here too.\x0d\n  if (typeof sizeOrKey === 'number')\x0d\n    validateInt32(sizeOrKey\x2C 'sizeOrKey');\x0d\n\x0d\n  if (keyEncoding && !Buffer.isEncoding(keyEncoding) &&\x0d\n      keyEncoding !== 'buffer') {\x0d\n    genEncoding = generator;\x0d\n    generator = keyEncoding;\x0d\n    keyEncoding = false;\x0d\n  }\x0d\n\x0d\n  const encoding = getDefaultEncoding();\x0d\n  keyEncoding = keyEncoding || encoding;\x0d\n  genEncoding = genEncoding || encoding;\x0d\n\x0d\n  if (typeof sizeOrKey !== 'number')\x0d\n    sizeOrKey = toBuf(sizeOrKey\x2C keyEncoding);\x0d\n\x0d\n  if (!generator) {\x0d\n    generator = DH_GENERATOR;\x0d\n  } else if (typeof generator === 'number') {\x0d\n    validateInt32(generator\x2C 'generator');\x0d\n  } else if (typeof generator === 'string') {\x0d\n    generator = toBuf(generator\x2C genEncoding);\x0d\n  } else if (!isArrayBufferView(generator) && !isAnyArrayBuffer(generator)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'generator'\x2C\x0d\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      generator\x0d\n    );\x0d\n  }\x0d\n\x0d\n\x0d\n  this[kHandle] = new _DiffieHellman(sizeOrKey\x2C generator);\x0d\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    value: this[kHandle].verifyError\x2C\x0d\n    writable: false\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction DiffieHellmanGroup(name) {\x0d\n  if (!(this instanceof DiffieHellmanGroup))\x0d\n    return new DiffieHellmanGroup(name);\x0d\n  this[kHandle] = new _DiffieHellmanGroup(name);\x0d\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    value: this[kHandle].verifyError\x2C\x0d\n    writable: false\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.generateKeys =\x0d\n    DiffieHellman.prototype.generateKeys =\x0d\n    dhGenerateKeys;\x0d\n\x0d\nfunction dhGenerateKeys(encoding) {\x0d\n  const keys = this[kHandle].generateKeys();\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n  return encode(keys\x2C encoding);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.computeSecret =\x0d\n    DiffieHellman.prototype.computeSecret =\x0d\n    dhComputeSecret;\x0d\n\x0d\nfunction dhComputeSecret(key\x2C inEnc\x2C outEnc) {\x0d\n  const encoding = getDefaultEncoding();\x0d\n  inEnc = inEnc || encoding;\x0d\n  outEnc = outEnc || encoding;\x0d\n  key = getArrayBufferOrView(key\x2C 'key'\x2C inEnc);\x0d\n  const ret = this[kHandle].computeSecret(key);\x0d\n  if (typeof ret === 'string')\x0d\n    throw new ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY();\x0d\n  return encode(ret\x2C outEnc);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.getPrime =\x0d\n    DiffieHellman.prototype.getPrime =\x0d\n    dhGetPrime;\x0d\n\x0d\nfunction dhGetPrime(encoding) {\x0d\n  const prime = this[kHandle].getPrime();\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n  return encode(prime\x2C encoding);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.getGenerator =\x0d\n    DiffieHellman.prototype.getGenerator =\x0d\n    dhGetGenerator;\x0d\n\x0d\nfunction dhGetGenerator(encoding) {\x0d\n  const generator = this[kHandle].getGenerator();\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n  return encode(generator\x2C encoding);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.getPublicKey =\x0d\n    DiffieHellman.prototype.getPublicKey =\x0d\n    dhGetPublicKey;\x0d\n\x0d\nfunction dhGetPublicKey(encoding) {\x0d\n  const key = this[kHandle].getPublicKey();\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n  return encode(key\x2C encoding);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.getPrivateKey =\x0d\n    DiffieHellman.prototype.getPrivateKey =\x0d\n    dhGetPrivateKey;\x0d\n\x0d\nfunction dhGetPrivateKey(encoding) {\x0d\n  const key = this[kHandle].getPrivateKey();\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n  return encode(key\x2C encoding);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellman.prototype.setPublicKey = function setPublicKey(key\x2C encoding) {\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\x0d\n  this[kHandle].setPublicKey(key);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nDiffieHellman.prototype.setPrivateKey = function setPrivateKey(key\x2C encoding) {\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\x0d\n  this[kHandle].setPrivateKey(key);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction ECDH(curve) {\x0d\n  if (!(this instanceof ECDH))\x0d\n    return new ECDH(curve);\x0d\n\x0d\n  validateString(curve\x2C 'curve');\x0d\n  this[kHandle] = new _ECDH(curve);\x0d\n}\x0d\n\x0d\nECDH.prototype.computeSecret = DiffieHellman.prototype.computeSecret;\x0d\nECDH.prototype.setPrivateKey = DiffieHellman.prototype.setPrivateKey;\x0d\nECDH.prototype.setPublicKey = DiffieHellman.prototype.setPublicKey;\x0d\nECDH.prototype.getPrivateKey = DiffieHellman.prototype.getPrivateKey;\x0d\n\x0d\nECDH.prototype.generateKeys = function generateKeys(encoding\x2C format) {\x0d\n  this[kHandle].generateKeys();\x0d\n\x0d\n  return this.getPublicKey(encoding\x2C format);\x0d\n};\x0d\n\x0d\nECDH.prototype.getPublicKey = function getPublicKey(encoding\x2C format) {\x0d\n  const f = getFormat(format);\x0d\n  const key = this[kHandle].getPublicKey(f);\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n  return encode(key\x2C encoding);\x0d\n};\x0d\n\x0d\nECDH.convertKey = function convertKey(key\x2C curve\x2C inEnc\x2C outEnc\x2C format) {\x0d\n  validateString(curve\x2C 'curve');\x0d\n  const encoding = inEnc || getDefaultEncoding();\x0d\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\x0d\n  outEnc = outEnc || encoding;\x0d\n  const f = getFormat(format);\x0d\n  const convertedKey = _ECDHConvertKey(key\x2C curve\x2C f);\x0d\n  return encode(convertedKey\x2C outEnc);\x0d\n};\x0d\n\x0d\nfunction encode(buffer\x2C encoding) {\x0d\n  if (encoding && encoding !== 'buffer')\x0d\n    buffer = buffer.toString(encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction getFormat(format) {\x0d\n  if (format) {\x0d\n    if (format === 'compressed')\x0d\n      return POINT_CONVERSION_COMPRESSED;\x0d\n    if (format === 'hybrid')\x0d\n      return POINT_CONVERSION_HYBRID;\x0d\n    if (format !== 'uncompressed')\x0d\n      throw new ERR_CRYPTO_ECDH_INVALID_FORMAT(format);\x0d\n  }\x0d\n  return POINT_CONVERSION_UNCOMPRESSED;\x0d\n}\x0d\n\x0d\nconst dhEnabledKeyTypes = new SafeSet(['dh'\x2C 'ec'\x2C 'x448'\x2C 'x25519']);\x0d\n\x0d\nfunction diffieHellman(options) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const { privateKey\x2C publicKey } = options;\x0d\n  if (!(privateKey instanceof KeyObject))\x0d\n    throw new ERR_INVALID_ARG_VALUE('options.privateKey'\x2C privateKey);\x0d\n\x0d\n  if (!(publicKey instanceof KeyObject))\x0d\n    throw new ERR_INVALID_ARG_VALUE('options.publicKey'\x2C publicKey);\x0d\n\x0d\n  if (privateKey.type !== 'private')\x0d\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(privateKey.type\x2C 'private');\x0d\n\x0d\n  if (publicKey.type !== 'public' && publicKey.type !== 'private') {\x0d\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(publicKey.type\x2C\x0d\n                                                 'private or public');\x0d\n  }\x0d\n\x0d\n  const privateType = privateKey.asymmetricKeyType;\x0d\n  const publicType = publicKey.asymmetricKeyType;\x0d\n  if (privateType !== publicType || !dhEnabledKeyTypes.has(privateType)) {\x0d\n    throw new ERR_CRYPTO_INCOMPATIBLE_KEY('key types for Diffie-Hellman'\x2C\x0d\n                                          `${privateType} and ${publicType}`);\x0d\n  }\x0d\n\x0d\n  return statelessDH(privateKey[kHandle]\x2C publicKey[kHandle]);\x0d\n}\x0d\n\x0d\n// The deriveBitsECDH function is part of the Web Crypto API and serves both\x0d\n// deriveKeys and deriveBits functions.\x0d\nfunction deriveBitsECDH(name\x2C publicKey\x2C privateKey\x2C callback) {\x0d\n  validateString(name\x2C 'name');\x0d\n  validateObject(publicKey\x2C 'publicKey');\x0d\n  validateObject(privateKey\x2C 'privateKey');\x0d\n  validateCallback(callback);\x0d\n  const job = new ECDHBitsJob(kCryptoJobAsync\x2C name\x2C publicKey\x2C privateKey);\x0d\n  job.ondone = (error\x2C bits) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\x0d\n  };\x0d\n  job.run();\x0d\n}\x0d\n\x0d\n// The deriveBitsDH function is part of the Web Crypto API and serves both\x0d\n// deriveKeys and deriveBits functions.\x0d\nfunction deriveBitsDH(publicKey\x2C privateKey\x2C callback) {\x0d\n  validateObject(publicKey\x2C 'publicKey');\x0d\n  validateObject(privateKey\x2C 'privateKey');\x0d\n  validateCallback(callback);\x0d\n  const job = new DHBitsJob(kCryptoJobAsync\x2C publicKey\x2C privateKey);\x0d\n  job.ondone = (error\x2C bits) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\x0d\n  };\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction verifyAcceptableDhKeyUse(name\x2C type\x2C usages) {\x0d\n  let checkSet;\x0d\n  switch (type) {\x0d\n    case 'private':\x0d\n      checkSet = ['deriveBits'\x2C 'deriveKey'];\x0d\n      break;\x0d\n    case 'public':\x0d\n      checkSet = [];\x0d\n      break;\x0d\n  }\x0d\n  if (hasAnyNotIn(usages\x2C checkSet)) {\x0d\n    throw lazyDOMException(\x0d\n      `Unsupported key usage for an ${name} key`\x2C\x0d\n      'SyntaxError');\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function dhGenerateKey(\x0d\n  algorithm\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  const usageSet = new SafeSet(keyUsages);\x0d\n\x0d\n  if (hasAnyNotIn(usageSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\x0d\n    throw lazyDOMException(\x0d\n      'Unsupported key usage for a DH key'\x2C\x0d\n      'SyntaxError');\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    name\x2C\x0d\n    primeLength\x2C\x0d\n    generator\x2C\x0d\n    group\x0d\n  } = algorithm;\x0d\n  let { prime } = algorithm;\x0d\n\x0d\n  if (prime !== undefined)\x0d\n    prime = getArrayBufferOrView(prime);\x0d\n\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    generateKeyPair('dh'\x2C {\x0d\n      prime\x2C\x0d\n      primeLength\x2C\x0d\n      generator\x2C\x0d\n      group\x2C\x0d\n    }\x2C (err\x2C pubKey\x2C privKey) => {\x0d\n      if (err) {\x0d\n        return reject(lazyDOMException(\x0d\n          'The operation failed for an operation-specific reason'\x2C\x0d\n          'OperationError'));\x0d\n      }\x0d\n\x0d\n      const algorithm = { name\x2C prime\x2C primeLength\x2C generator\x2C group };\x0d\n\x0d\n      const publicKey = new InternalCryptoKey(pubKey\x2C algorithm\x2C []\x2C true);\x0d\n\x0d\n      const privateKey =\x0d\n        new InternalCryptoKey(\x0d\n          privKey\x2C\x0d\n          algorithm\x2C\x0d\n          getUsagesUnion(usageSet\x2C 'deriveBits'\x2C 'deriveKey')\x2C\x0d\n          extractable);\x0d\n\x0d\n      resolve({ publicKey\x2C privateKey });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nasync function asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length) {\x0d\n  const { 'public': key } = algorithm;\x0d\n\x0d\n  // Null means that we're not asking for a specific number of bits\x2C just\x0d\n  // give us everything that is generated.\x0d\n  if (length !== null)\x0d\n    validateUint32(length\x2C 'length');\x0d\n  if (!isCryptoKey(key))\x0d\n    throw new ERR_INVALID_ARG_TYPE('algorithm.public'\x2C 'CryptoKey'\x2C key);\x0d\n\x0d\n  if (key.type !== 'public') {\x0d\n    throw lazyDOMException(\x0d\n      'algorithm.public must be a public key'\x2C 'InvalidAccessError');\x0d\n  }\x0d\n  if (baseKey.type !== 'private') {\x0d\n    throw lazyDOMException(\x0d\n      'baseKey must be a private key'\x2C 'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  if (key.algorithm.name !== 'ECDH') {\x0d\n    throw lazyDOMException('Keys must be ECDH keys'\x2C 'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  if (key.algorithm.name !== baseKey.algorithm.name) {\x0d\n    throw lazyDOMException(\x0d\n      'The public and private keys must be of the same type'\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  if (key.algorithm.namedCurve !== baseKey.algorithm.namedCurve)\x0d\n    throw lazyDOMException('Named curve mismatch'\x2C 'InvalidAccessError');\x0d\n\x0d\n  const bits = await new Promise((resolve\x2C reject) => {\x0d\n    deriveBitsECDH(\x0d\n      baseKey.algorithm.namedCurve\x2C\x0d\n      key[kKeyObject][kHandle]\x2C\x0d\n      baseKey[kKeyObject][kHandle]\x2C (err\x2C bits) => {\x0d\n        if (err) return reject(err);\x0d\n        resolve(bits);\x0d\n      });\x0d\n  });\x0d\n\x0d\n  // If a length is not specified\x2C return the full derived secret\x0d\n  if (length === null)\x0d\n    return bits;\x0d\n\x0d\n  // If the length is not a multiple of 8\x2C it will be truncated\x0d\n  // down to the nearest multiple of 8.\x0d\n  length = MathFloor(length / 8);\x0d\n  const { byteLength } = bits;\x0d\n\x0d\n  // If the length is larger than the derived secret\x2C throw.\x0d\n  // Otherwise\x2C we either return the secret or a truncated\x0d\n  // slice.\x0d\n  if (byteLength < length)\x0d\n    throw lazyDOMException('derived bit length is too small'\x2C 'OperationError');\x0d\n\x0d\n  return length === byteLength ?\x0d\n    bits :\x0d\n    ArrayBufferPrototypeSlice(bits\x2C 0\x2C length);\x0d\n}\x0d\n\x0d\nasync function asyncDeriveBitsDH(algorithm\x2C baseKey\x2C length) {\x0d\n  const { 'public': key } = algorithm;\x0d\n  // Null has a specific meaning for DH\x0d\n  if (length !== null)\x0d\n    validateUint32(length\x2C 'length');\x0d\n  if (!isCryptoKey(key))\x0d\n    throw new ERR_INVALID_ARG_TYPE('algorithm.public'\x2C 'CryptoKey'\x2C key);\x0d\n\x0d\n  if (key.type !== 'public') {\x0d\n    throw lazyDOMException(\x0d\n      'algorithm.public must be a public key'\x2C 'InvalidAccessError');\x0d\n  }\x0d\n  if (baseKey.type !== 'private') {\x0d\n    throw lazyDOMException(\x0d\n      'baseKey must be a private key'\x2C 'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  if (key.algorithm.name !== 'NODE-DH')\x0d\n    throw lazyDOMException('Keys must be DH keys'\x2C 'InvalidAccessError');\x0d\n\x0d\n  if (key.algorithm.name !== baseKey.algorithm.name) {\x0d\n    throw lazyDOMException(\x0d\n      'The public and private keys must be of the same type'\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  const bits = await new Promise((resolve\x2C reject) => {\x0d\n    deriveBitsDH(\x0d\n      key[kKeyObject][kHandle]\x2C\x0d\n      baseKey[kKeyObject][kHandle]\x2C (err\x2C bits) => {\x0d\n        if (err) return reject(err);\x0d\n        resolve(bits);\x0d\n      });\x0d\n  });\x0d\n\x0d\n  // If a length is not specified\x2C return the full derived secret\x0d\n  if (length === null)\x0d\n    return bits;\x0d\n\x0d\n  // If the length is not a multiple of 8\x2C it will be truncated\x0d\n  // down to the nearest multiple of 8.\x0d\n  length = MathFloor(length / 8);\x0d\n  const { byteLength } = bits;\x0d\n\x0d\n  // If the length is larger than the derived secret\x2C throw.\x0d\n  // Otherwise\x2C we either return the secret or a truncated\x0d\n  // slice.\x0d\n  if (byteLength < length)\x0d\n    throw lazyDOMException('derived bit length is too small'\x2C 'OperationError');\x0d\n\x0d\n  return length === byteLength ?\x0d\n    bits :\x0d\n    ArrayBufferPrototypeSlice(bits\x2C 0\x2C length);\x0d\n}\x0d\n\x0d\nfunction dhExportKey(key\x2C format) {\x0d\n  return jobPromise(new DHKeyExportJob(\x0d\n    kCryptoJobAsync\x2C\x0d\n    format\x2C\x0d\n    key[kKeyObject][kHandle]));\x0d\n}\x0d\n\x0d\nasync function dhImportKey(\x0d\n  format\x2C\x0d\n  keyData\x2C\x0d\n  algorithm\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  const usagesSet = new SafeSet(keyUsages);\x0d\n  let keyObject;\x0d\n  switch (format) {\x0d\n    case 'node.keyObject': {\x0d\n      if (!isKeyObject(keyData))\x0d\n        throw new ERR_INVALID_ARG_TYPE('keyData'\x2C 'KeyObject'\x2C keyData);\x0d\n      if (keyData.type === 'secret')\x0d\n        throw lazyDOMException('Invalid key type'\x2C 'InvalidAccessException');\x0d\n      verifyAcceptableDhKeyUse(algorithm.name\x2C keyData.type\x2C usagesSet);\x0d\n      keyObject = keyData;\x0d\n      break;\x0d\n    }\x0d\n    case 'spki': {\x0d\n      verifyAcceptableDhKeyUse(algorithm.name\x2C 'public'\x2C usagesSet);\x0d\n      keyObject = createPublicKey({\x0d\n        key: keyData\x2C\x0d\n        format: 'der'\x2C\x0d\n        type: 'spki'\x0d\n      });\x0d\n      break;\x0d\n    }\x0d\n    case 'pkcs8': {\x0d\n      verifyAcceptableDhKeyUse(algorithm.name\x2C 'private'\x2C usagesSet);\x0d\n      keyObject = createPrivateKey({\x0d\n        key: keyData\x2C\x0d\n        format: 'der'\x2C\x0d\n        type: 'pkcs8'\x0d\n      });\x0d\n      break;\x0d\n    }\x0d\n    default:\x0d\n      throw lazyDOMException(\x0d\n        `Unable to import DH key with format ${format}`\x2C\x0d\n        'NotSupportedError');\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    prime\x2C\x0d\n    primeLength\x2C\x0d\n    generator\x2C\x0d\n    group\x2C\x0d\n  } = keyObject[kHandle].keyDetail({});\x0d\n\x0d\n  return new InternalCryptoKey(keyObject\x2C {\x0d\n    name: algorithm.name\x2C\x0d\n    prime\x2C\x0d\n    primeLength\x2C\x0d\n    generator\x2C\x0d\n    group\x2C\x0d\n  }\x2C keyUsages\x2C extractable);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DiffieHellman\x2C\x0d\n  DiffieHellmanGroup\x2C\x0d\n  ECDH\x2C\x0d\n  diffieHellman\x2C\x0d\n  deriveBitsECDH\x2C\x0d\n  deriveBitsDH\x2C\x0d\n  dhGenerateKey\x2C\x0d\n  asyncDeriveBitsECDH\x2C\x0d\n  asyncDeriveBitsDH\x2C\x0d\n  dhExportKey\x2C\x0d\n  dhImportKey\x2C\x0d\n};\x0d\n
code-source-info,0xe6a61924e6,217,0,17565,C0O0C4O17565,,
code-creation,Function,10,322105,0xe6a619318e,1080, node:internal/crypto/diffiehellman:1:1,0xe6a6192460,~
code-source-info,0xe6a619318e
code-creation,Eval,10,322592,0xe6a619584e,5, node:internal/crypto/cipher:1:1,0xe6a61954f8,~
script-source,218,node:internal/crypto/cipher,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CipherBase\x2C\x0d\n  privateDecrypt: _privateDecrypt\x2C\x0d\n  privateEncrypt: _privateEncrypt\x2C\x0d\n  publicDecrypt: _publicDecrypt\x2C\x0d\n  publicEncrypt: _publicEncrypt\x2C\x0d\n  getCipherInfo: _getCipherInfo\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  crypto: {\x0d\n    RSA_PKCS1_OAEP_PADDING\x2C\x0d\n    RSA_PKCS1_PADDING\x2C\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_INVALID_STATE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateEncoding\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  preparePrivateKey\x2C\x0d\n  preparePublicOrPrivateKey\x2C\x0d\n  prepareSecretKey\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  getDefaultEncoding\x2C\x0d\n  getArrayBufferOrView\x2C\x0d\n  getStringOption\x2C\x0d\n  kHandle\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst LazyTransform = require('internal/streams/lazy_transform');\x0d\n\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\n\x0d\nfunction rsaFunctionFor(method\x2C defaultPadding\x2C keyType) {\x0d\n  return (options\x2C buffer) => {\x0d\n    const { format\x2C type\x2C data\x2C passphrase } =\x0d\n      keyType === 'private' ?\x0d\n        preparePrivateKey(options) :\x0d\n        preparePublicOrPrivateKey(options);\x0d\n    const padding = options.padding || defaultPadding;\x0d\n    const { oaepHash\x2C encoding } = options;\x0d\n    let { oaepLabel } = options;\x0d\n    if (oaepHash !== undefined)\x0d\n      validateString(oaepHash\x2C 'key.oaepHash');\x0d\n    if (oaepLabel !== undefined)\x0d\n      oaepLabel = getArrayBufferOrView(oaepLabel\x2C 'key.oaepLabel'\x2C encoding);\x0d\n    buffer = getArrayBufferOrView(buffer\x2C 'buffer'\x2C encoding);\x0d\n    return method(data\x2C format\x2C type\x2C passphrase\x2C buffer\x2C padding\x2C oaepHash\x2C\x0d\n                  oaepLabel);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst publicEncrypt = rsaFunctionFor(_publicEncrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\x0d\n                                     'public');\x0d\nconst publicDecrypt = rsaFunctionFor(_publicDecrypt\x2C RSA_PKCS1_PADDING\x2C\x0d\n                                     'public');\x0d\nconst privateEncrypt = rsaFunctionFor(_privateEncrypt\x2C RSA_PKCS1_PADDING\x2C\x0d\n                                      'private');\x0d\nconst privateDecrypt = rsaFunctionFor(_privateDecrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\x0d\n                                      'private');\x0d\n\x0d\nfunction getDecoder(decoder\x2C encoding) {\x0d\n  encoding = normalizeEncoding(encoding);\x0d\n  decoder = decoder || new StringDecoder(encoding);\x0d\n  assert(decoder.encoding === encoding\x2C 'Cannot change encoding');\x0d\n  return decoder;\x0d\n}\x0d\n\x0d\nfunction getUIntOption(options\x2C key) {\x0d\n  let value;\x0d\n  if (options && (value = options[key]) != null) {\x0d\n    if (value >>> 0 !== value)\x0d\n      throw new ERR_INVALID_ARG_VALUE(`options.${key}`\x2C value);\x0d\n    return value;\x0d\n  }\x0d\n  return -1;\x0d\n}\x0d\n\x0d\nfunction createCipherBase(cipher\x2C credential\x2C options\x2C decipher\x2C iv) {\x0d\n  const authTagLength = getUIntOption(options\x2C 'authTagLength');\x0d\n  this[kHandle] = new CipherBase(decipher);\x0d\n  if (iv === undefined) {\x0d\n    this[kHandle].init(cipher\x2C credential\x2C authTagLength);\x0d\n  } else {\x0d\n    this[kHandle].initiv(cipher\x2C credential\x2C iv\x2C authTagLength);\x0d\n  }\x0d\n  this._decoder = null;\x0d\n\x0d\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\x0d\n}\x0d\n\x0d\nfunction createCipher(cipher\x2C password\x2C options\x2C decipher) {\x0d\n  validateString(cipher\x2C 'cipher');\x0d\n  password = getArrayBufferOrView(password\x2C 'password');\x0d\n\x0d\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C password\x2C options\x2C decipher]);\x0d\n}\x0d\n\x0d\nfunction createCipherWithIV(cipher\x2C key\x2C options\x2C decipher\x2C iv) {\x0d\n  validateString(cipher\x2C 'cipher');\x0d\n  const encoding = getStringOption(options\x2C 'encoding');\x0d\n  key = prepareSecretKey(key\x2C encoding);\x0d\n  iv = iv === null ? null : getArrayBufferOrView(iv\x2C 'iv');\x0d\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C key\x2C options\x2C decipher\x2C iv]);\x0d\n}\x0d\n\x0d\n// The Cipher class is part of the legacy Node.js crypto API. It exposes\x0d\n// a stream-based encryption/decryption model. For backwards compatibility\x0d\n// the Cipher class is defined using the legacy function syntax rather than\x0d\n// ES6 classes.\x0d\n\x0d\nfunction Cipher(cipher\x2C password\x2C options) {\x0d\n  if (!(this instanceof Cipher))\x0d\n    return new Cipher(cipher\x2C password\x2C options);\x0d\n\x0d\n  ReflectApply(createCipher\x2C this\x2C [cipher\x2C password\x2C options\x2C true]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Cipher.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Cipher\x2C LazyTransform);\x0d\n\x0d\nCipher.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\x0d\n  this.push(this[kHandle].update(chunk\x2C encoding));\x0d\n  callback();\x0d\n};\x0d\n\x0d\nCipher.prototype._flush = function _flush(callback) {\x0d\n  try {\x0d\n    this.push(this[kHandle].final());\x0d\n  } catch (e) {\x0d\n    callback(e);\x0d\n    return;\x0d\n  }\x0d\n  callback();\x0d\n};\x0d\n\x0d\nCipher.prototype.update = function update(data\x2C inputEncoding\x2C outputEncoding) {\x0d\n  const encoding = getDefaultEncoding();\x0d\n  inputEncoding = inputEncoding || encoding;\x0d\n  outputEncoding = outputEncoding || encoding;\x0d\n\x0d\n  if (typeof data === 'string') {\x0d\n    validateEncoding(data\x2C inputEncoding);\x0d\n  } else if (!isArrayBufferView(data)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\x0d\n  }\x0d\n\x0d\n  const ret = this[kHandle].update(data\x2C inputEncoding);\x0d\n\x0d\n  if (outputEncoding && outputEncoding !== 'buffer') {\x0d\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\x0d\n    return this._decoder.write(ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nCipher.prototype.final = function final(outputEncoding) {\x0d\n  outputEncoding = outputEncoding || getDefaultEncoding();\x0d\n  const ret = this[kHandle].final();\x0d\n\x0d\n  if (outputEncoding && outputEncoding !== 'buffer') {\x0d\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\x0d\n    return this._decoder.end(ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nCipher.prototype.setAutoPadding = function setAutoPadding(ap) {\x0d\n  if (!this[kHandle].setAutoPadding(!!ap))\x0d\n    throw new ERR_CRYPTO_INVALID_STATE('setAutoPadding');\x0d\n  return this;\x0d\n};\x0d\n\x0d\nCipher.prototype.getAuthTag = function getAuthTag() {\x0d\n  const ret = this[kHandle].getAuthTag();\x0d\n  if (ret === undefined)\x0d\n    throw new ERR_CRYPTO_INVALID_STATE('getAuthTag');\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nfunction setAuthTag(tagbuf\x2C encoding) {\x0d\n  tagbuf = getArrayBufferOrView(tagbuf\x2C 'buffer'\x2C encoding);\x0d\n  if (!this[kHandle].setAuthTag(tagbuf))\x0d\n    throw new ERR_CRYPTO_INVALID_STATE('setAuthTag');\x0d\n  return this;\x0d\n}\x0d\n\x0d\nCipher.prototype.setAAD = function setAAD(aadbuf\x2C options) {\x0d\n  const encoding = getStringOption(options\x2C 'encoding');\x0d\n  const plaintextLength = getUIntOption(options\x2C 'plaintextLength');\x0d\n  aadbuf = getArrayBufferOrView(aadbuf\x2C 'aadbuf'\x2C encoding);\x0d\n  if (!this[kHandle].setAAD(aadbuf\x2C plaintextLength))\x0d\n    throw new ERR_CRYPTO_INVALID_STATE('setAAD');\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// The Cipheriv class is part of the legacy Node.js crypto API. It exposes\x0d\n// a stream-based encryption/decryption model. For backwards compatibility\x0d\n// the Cipheriv class is defined using the legacy function syntax rather than\x0d\n// ES6 classes.\x0d\n\x0d\nfunction Cipheriv(cipher\x2C key\x2C iv\x2C options) {\x0d\n  if (!(this instanceof Cipheriv))\x0d\n    return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\x0d\n\x0d\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C true\x2C iv]);\x0d\n}\x0d\n\x0d\nfunction addCipherPrototypeFunctions(constructor) {\x0d\n  constructor.prototype._transform = Cipher.prototype._transform;\x0d\n  constructor.prototype._flush = Cipher.prototype._flush;\x0d\n  constructor.prototype.update = Cipher.prototype.update;\x0d\n  constructor.prototype.final = Cipher.prototype.final;\x0d\n  constructor.prototype.setAutoPadding = Cipher.prototype.setAutoPadding;\x0d\n  if (constructor === Cipheriv) {\x0d\n    constructor.prototype.getAuthTag = Cipher.prototype.getAuthTag;\x0d\n  } else {\x0d\n    constructor.prototype.setAuthTag = setAuthTag;\x0d\n  }\x0d\n  constructor.prototype.setAAD = Cipher.prototype.setAAD;\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Cipheriv.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Cipheriv\x2C LazyTransform);\x0d\naddCipherPrototypeFunctions(Cipheriv);\x0d\n\x0d\n// The Decipher class is part of the legacy Node.js crypto API. It exposes\x0d\n// a stream-based encryption/decryption model. For backwards compatibility\x0d\n// the Decipher class is defined using the legacy function syntax rather than\x0d\n// ES6 classes.\x0d\n\x0d\nfunction Decipher(cipher\x2C password\x2C options) {\x0d\n  if (!(this instanceof Decipher))\x0d\n    return new Decipher(cipher\x2C password\x2C options);\x0d\n\x0d\n  ReflectApply(createCipher\x2C this\x2C [cipher\x2C password\x2C options\x2C false]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Decipher.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Decipher\x2C LazyTransform);\x0d\naddCipherPrototypeFunctions(Decipher);\x0d\n\x0d\n// The Decipheriv class is part of the legacy Node.js crypto API. It exposes\x0d\n// a stream-based encryption/decryption model. For backwards compatibility\x0d\n// the Decipheriv class is defined using the legacy function syntax rather than\x0d\n// ES6 classes.\x0d\n\x0d\nfunction Decipheriv(cipher\x2C key\x2C iv\x2C options) {\x0d\n  if (!(this instanceof Decipheriv))\x0d\n    return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\x0d\n\x0d\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C false\x2C iv]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Decipheriv.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Decipheriv\x2C LazyTransform);\x0d\naddCipherPrototypeFunctions(Decipheriv);\x0d\n\x0d\nfunction getCipherInfo(nameOrNid\x2C options) {\x0d\n  if (typeof nameOrNid !== 'string' && typeof nameOrNid !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'nameOrNid'\x2C\x0d\n      ['string'\x2C 'number']\x2C\x0d\n      nameOrNid);\x0d\n  }\x0d\n  if (typeof nameOrNid === 'number')\x0d\n    validateInt32(nameOrNid\x2C 'nameOrNid');\x0d\n  let keyLength\x2C ivLength;\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    ({ keyLength\x2C ivLength } = options);\x0d\n    if (keyLength !== undefined)\x0d\n      validateInt32(keyLength\x2C 'options.keyLength');\x0d\n    if (ivLength !== undefined)\x0d\n      validateInt32(ivLength\x2C 'options.ivLength');\x0d\n  }\x0d\n\x0d\n  const ret = _getCipherInfo({}\x2C nameOrNid\x2C keyLength\x2C ivLength);\x0d\n  if (ret !== undefined) {\x0d\n    if (ret.name) ret.name = StringPrototypeToLowerCase(ret.name);\x0d\n    if (ret.type) ret.type = StringPrototypeToLowerCase(ret.type);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Cipher\x2C\x0d\n  Cipheriv\x2C\x0d\n  Decipher\x2C\x0d\n  Decipheriv\x2C\x0d\n  privateDecrypt\x2C\x0d\n  privateEncrypt\x2C\x0d\n  publicDecrypt\x2C\x0d\n  publicEncrypt\x2C\x0d\n  getCipherInfo\x2C\x0d\n};\x0d\n
code-source-info,0xe6a619584e,218,0,10574,C0O0C4O10574,,
code-creation,Function,10,323080,0xe6a6196216,843, node:internal/crypto/cipher:1:1,0xe6a61957c8,~
code-source-info,0xe6a
code-creation,Eval,10,323313,0xe6a61976f6,5, node:internal/streams/lazy_transform:1:1,0xe6a6197580,~
script-source,219,node:internal/streams/lazy_transform,// LazyTransform is a special type of Transform stream that is lazily loaded.\x0d\n// This is used for performance with bi-API-ship: when two APIs are available\x0d\n// for the stream\x2C one conventional and one non-conventional.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst stream = require('stream');\x0d\n\x0d\nconst {\x0d\n  getDefaultEncoding\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nmodule.exports = LazyTransform;\x0d\n\x0d\nfunction LazyTransform(options) {\x0d\n  this._options = options;\x0d\n}\x0d\nObjectSetPrototypeOf(LazyTransform.prototype\x2C stream.Transform.prototype);\x0d\nObjectSetPrototypeOf(LazyTransform\x2C stream.Transform);\x0d\n\x0d\nfunction makeGetter(name) {\x0d\n  return function() {\x0d\n    stream.Transform.call(this\x2C this._options);\x0d\n    this._writableState.decodeStrings = false;\x0d\n\x0d\n    if (!this._options || !this._options.defaultEncoding) {\x0d\n      this._writableState.defaultEncoding = getDefaultEncoding();\x0d\n    }\x0d\n\x0d\n    return this[name];\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction makeSetter(name) {\x0d\n  return function(val) {\x0d\n    ObjectDefineProperty(this\x2C name\x2C {\x0d\n      value: val\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  };\x0d\n}\x0d\n\x0d\nObjectDefineProperties(LazyTransform.prototype\x2C {\x0d\n  _readableState: {\x0d\n    get: makeGetter('_readableState')\x2C\x0d\n    set: makeSetter('_readableState')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  _writableState: {\x0d\n    get: makeGetter('_writableState')\x2C\x0d\n    set: makeSetter('_writableState')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xe6a61976f6,219,0,1581,C0O0C4O1581,,
code-creation,Function,10,323412,0xe6a6197a36,193, node:internal/streams/lazy_transform:1:1,0xe6a6197670,~
code-source-info,0xe6a6197a36,219,0,1581,C0O0C29O249C34O276C40O301C45O359C48O359C52O359C54O416C57O416C62O392C68O452C70O467C74O588C82O606C87O616C92O553C97O629C100O672C105O629C110O1255C120O1287C128O1299C139O1339C153O1441C161O1453C172O1493C186O1218C192O1580,,
code-creation,LazyCompile,10,323512,0xe6a6197f6e,14,makeGetter node:internal/streams/lazy_transform:26:20,0xe6a6197778,~
code-source-info,0xe6a6197f6e,219,706,1006,C0O706C9O718C13O1003,,
code-creation,LazyCompile,10,323542,0xe6a61982f6,14,makeSetter node:internal/streams/lazy_transform:39:20,0xe6a61977f0,~
code-source-info,0xe6a61982f6,219,1029,1214,C0O1029C9O1041C13O1211,,
code-creation,LazyCompile,10,323616,0xe6a61984fe,22,rsaFunctionFor node:internal/crypto/cipher:65:24,0xe6a6195880,~
code-source-info,0xe6a61984fe,218,1314,2056,C0O1314C17O1353C21O2053,,
code-creation,LazyCompile,10,323674,0xe6a6199296,169,addCipherPrototypeFunctions node:internal/crypto/cipher:246:37,0xe6a6195b50,~
code-source-info,0xe6a6199296,218,7518,8085,C0O7549C8O7579C13O7589C17O7570C21O7616C29O7642C34O7652C38O7633C42O7675C50O7701C55O7711C59O7692C63O7734C71O7759C76O7769C80O7750C84O7791C92O7825C97O7835C101O7816C105O7854C107O7870C112O7903C120O7933C125O7943C129O7924C135O7984C142O8005C146O8039C154O8065C159O8075C163O8056C168O8084,,
code-creation,Eval,10,323932,0xe6a61999e6,5, node:internal/crypto/sig:1:1,0xe6a61996b0,~
script-source,220,node:internal/crypto/sig,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_SIGN_KEY_REQUIRED\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  Sign: _Sign\x2C\x0d\n  SignJob\x2C\x0d\n  Verify: _Verify\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n  kSigEncDER\x2C\x0d\n  kSigEncP1363\x2C\x0d\n  kSignJobModeSign\x2C\x0d\n  kSignJobModeVerify\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  getDefaultEncoding\x2C\x0d\n  kHandle\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  preparePrivateKey\x2C\x0d\n  preparePublicOrPrivateKey\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst { Writable } = require('stream');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nfunction Sign(algorithm\x2C options) {\x0d\n  if (!(this instanceof Sign))\x0d\n    return new Sign(algorithm\x2C options);\x0d\n  validateString(algorithm\x2C 'algorithm');\x0d\n  this[kHandle] = new _Sign();\x0d\n  this[kHandle].init(algorithm);\x0d\n\x0d\n  ReflectApply(Writable\x2C this\x2C [options]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Sign.prototype\x2C Writable.prototype);\x0d\nObjectSetPrototypeOf(Sign\x2C Writable);\x0d\n\x0d\nSign.prototype._write = function _write(chunk\x2C encoding\x2C callback) {\x0d\n  this.update(chunk\x2C encoding);\x0d\n  callback();\x0d\n};\x0d\n\x0d\nSign.prototype.update = function update(data\x2C encoding) {\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n\x0d\n  if (typeof data === 'string') {\x0d\n    validateEncoding(data\x2C encoding);\x0d\n  } else if (!isArrayBufferView(data)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\x0d\n  }\x0d\n\x0d\n  this[kHandle].update(data\x2C encoding);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction getPadding(options) {\x0d\n  return getIntOption('padding'\x2C options);\x0d\n}\x0d\n\x0d\nfunction getSaltLength(options) {\x0d\n  return getIntOption('saltLength'\x2C options);\x0d\n}\x0d\n\x0d\nfunction getDSASignatureEncoding(options) {\x0d\n  if (typeof options === 'object') {\x0d\n    const { dsaEncoding = 'der' } = options;\x0d\n    if (dsaEncoding === 'der')\x0d\n      return kSigEncDER;\x0d\n    else if (dsaEncoding === 'ieee-p1363')\x0d\n      return kSigEncP1363;\x0d\n    throw new ERR_INVALID_ARG_VALUE('options.dsaEncoding'\x2C dsaEncoding);\x0d\n  }\x0d\n\x0d\n  return kSigEncDER;\x0d\n}\x0d\n\x0d\nfunction getIntOption(name\x2C options) {\x0d\n  const value = options[name];\x0d\n  if (value !== undefined) {\x0d\n    if (value === value >> 0) {\x0d\n      return value;\x0d\n    }\x0d\n    throw new ERR_INVALID_ARG_VALUE(`options.${name}`\x2C value);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nSign.prototype.sign = function sign(options\x2C encoding) {\x0d\n  if (!options)\x0d\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\x0d\n\x0d\n  const { data\x2C format\x2C type\x2C passphrase } = preparePrivateKey(options\x2C true);\x0d\n\x0d\n  // Options specific to RSA\x0d\n  const rsaPadding = getPadding(options);\x0d\n  const pssSaltLength = getSaltLength(options);\x0d\n\x0d\n  // Options specific to (EC)DSA\x0d\n  const dsaSigEnc = getDSASignatureEncoding(options);\x0d\n\x0d\n  const ret = this[kHandle].sign(data\x2C format\x2C type\x2C passphrase\x2C rsaPadding\x2C\x0d\n                                 pssSaltLength\x2C dsaSigEnc);\x0d\n\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n  if (encoding && encoding !== 'buffer')\x0d\n    return ret.toString(encoding);\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction signOneShot(algorithm\x2C data\x2C key\x2C callback) {\x0d\n  if (algorithm != null)\x0d\n    validateString(algorithm\x2C 'algorithm');\x0d\n\x0d\n  if (callback !== undefined)\x0d\n    validateCallback(callback);\x0d\n\x0d\n  data = getArrayBufferOrView(data\x2C 'data');\x0d\n\x0d\n  if (!key)\x0d\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\x0d\n\x0d\n  // Options specific to RSA\x0d\n  const rsaPadding = getPadding(key);\x0d\n  const pssSaltLength = getSaltLength(key);\x0d\n\x0d\n  // Options specific to (EC)DSA\x0d\n  const dsaSigEnc = getDSASignatureEncoding(key);\x0d\n\x0d\n  const {\x0d\n    data: keyData\x2C\x0d\n    format: keyFormat\x2C\x0d\n    type: keyType\x2C\x0d\n    passphrase: keyPassphrase\x0d\n  } = preparePrivateKey(key);\x0d\n\x0d\n  const job = new SignJob(\x0d\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\x0d\n    kSignJobModeSign\x2C\x0d\n    keyData\x2C\x0d\n    keyFormat\x2C\x0d\n    keyType\x2C\x0d\n    keyPassphrase\x2C\x0d\n    data\x2C\x0d\n    algorithm\x2C\x0d\n    pssSaltLength\x2C\x0d\n    rsaPadding\x2C\x0d\n    dsaSigEnc);\x0d\n\x0d\n  if (!callback) {\x0d\n    const { 0: err\x2C 1: signature } = job.run();\x0d\n    if (err !== undefined)\x0d\n      throw err;\x0d\n\x0d\n    return Buffer.from(signature);\x0d\n  }\x0d\n\x0d\n  job.ondone = (error\x2C signature) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C Buffer.from(signature));\x0d\n  };\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction Verify(algorithm\x2C options) {\x0d\n  if (!(this instanceof Verify))\x0d\n    return new Verify(algorithm\x2C options);\x0d\n  validateString(algorithm\x2C 'algorithm');\x0d\n  this[kHandle] = new _Verify();\x0d\n  this[kHandle].init(algorithm);\x0d\n\x0d\n  ReflectApply(Writable\x2C this\x2C [options]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Verify.prototype\x2C Writable.prototype);\x0d\nObjectSetPrototypeOf(Verify\x2C Writable);\x0d\n\x0d\nVerify.prototype._write = Sign.prototype._write;\x0d\nVerify.prototype.update = Sign.prototype.update;\x0d\n\x0d\nVerify.prototype.verify = function verify(options\x2C signature\x2C sigEncoding) {\x0d\n  const {\x0d\n    data\x2C\x0d\n    format\x2C\x0d\n    type\x2C\x0d\n    passphrase\x0d\n  } = preparePublicOrPrivateKey(options\x2C true);\x0d\n\x0d\n  sigEncoding = sigEncoding || getDefaultEncoding();\x0d\n\x0d\n  // Options specific to RSA\x0d\n  const rsaPadding = getPadding(options);\x0d\n  const pssSaltLength = getSaltLength(options);\x0d\n\x0d\n  // Options specific to (EC)DSA\x0d\n  const dsaSigEnc = getDSASignatureEncoding(options);\x0d\n\x0d\n  signature = getArrayBufferOrView(signature\x2C 'signature'\x2C sigEncoding);\x0d\n\x0d\n  return this[kHandle].verify(data\x2C format\x2C type\x2C passphrase\x2C signature\x2C\x0d\n                              rsaPadding\x2C pssSaltLength\x2C dsaSigEnc);\x0d\n};\x0d\n\x0d\nfunction verifyOneShot(algorithm\x2C data\x2C key\x2C signature\x2C callback) {\x0d\n  if (algorithm != null)\x0d\n    validateString(algorithm\x2C 'algorithm');\x0d\n\x0d\n  if (callback !== undefined)\x0d\n    validateCallback(callback);\x0d\n\x0d\n  data = getArrayBufferOrView(data\x2C 'data');\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'data'\x2C\x0d\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      data\x0d\n    );\x0d\n  }\x0d\n\x0d\n  // Options specific to RSA\x0d\n  const rsaPadding = getPadding(key);\x0d\n  const pssSaltLength = getSaltLength(key);\x0d\n\x0d\n  // Options specific to (EC)DSA\x0d\n  const dsaSigEnc = getDSASignatureEncoding(key);\x0d\n\x0d\n  if (!isArrayBufferView(signature)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'signature'\x2C\x0d\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      signature\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    data: keyData\x2C\x0d\n    format: keyFormat\x2C\x0d\n    type: keyType\x2C\x0d\n    passphrase: keyPassphrase\x0d\n  } = preparePublicOrPrivateKey(key);\x0d\n\x0d\n  const job = new SignJob(\x0d\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\x0d\n    kSignJobModeVerify\x2C\x0d\n    keyData\x2C\x0d\n    keyFormat\x2C\x0d\n    keyType\x2C\x0d\n    keyPassphrase\x2C\x0d\n    data\x2C\x0d\n    algorithm\x2C\x0d\n    pssSaltLength\x2C\x0d\n    rsaPadding\x2C\x0d\n    dsaSigEnc\x2C\x0d\n    signature);\x0d\n\x0d\n  if (!callback) {\x0d\n    const { 0: err\x2C 1: result } = job.run();\x0d\n    if (err !== undefined)\x0d\n      throw err;\x0d\n\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  job.ondone = (error\x2C result) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C result);\x0d\n  };\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Sign\x2C\x0d\n  signOneShot\x2C\x0d\n  Verify\x2C\x0d\n  verifyOneShot\x2C\x0d\n};\x0d\n
code-source-info,0xe6a61999e6,220,0,7390,C0O0C4O7390,,
code-creation,Function,10,324311,0xe6a619a03e,563, node:internal/crypto/sig:1:1,0xe6a6199960,~
code-source-info,0xe6a619a03e,220,0,7390,C0O0C126O28C132O54C137O79C143O234C146O234C151O234C156O139C162O174C168O201C174O339C177O339C182O276C188O297C194O318C200O550C203O550C208O391C214O401C220O421C226O433C232O453C238O472C244O487C250O504C256O525C262O653C265O653C270O591C276O616C282O639C288O754C291O754C296O700C302O722C308O811C311O811C316O798C322O852C325O852C330O841C336O909C339O909C344O885C350O1215C353O1241C361O1261C366O1215C371O1274C377O1274C382O1315C385O1320C394O1337C398O1439C401O1444C410O1461C414O2634C417O2639C426O2654C430O4885C433O4913C441O4933C446O4885C451O4946C457O4946C462O4989C465O4996C473O5020C478O5030C482O5013C486O5039C489O5046C497O5070C502O5080C506O5063C510O5091C513O5098C522O5115C526O7312C533O7334C539O7343C545O7359C551O7370C557O7327C562O7389,,
code-creation,Eval,10,324607,0xe6a619b48e,5, node:internal/crypto/hash:1:1,0xe6a619b198,~
script-source,221,node:internal/crypto/hash,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  Hash: _Hash\x2C\x0d\n  HashJob\x2C\x0d\n  Hmac: _Hmac\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  getDefaultEncoding\x2C\x0d\n  getStringOption\x2C\x0d\n  jobPromise\x2C\x0d\n  normalizeAlgorithm\x2C\x0d\n  normalizeHashName\x2C\x0d\n  validateMaxBufferLength\x2C\x0d\n  kHandle\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  prepareSecretKey\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  Buffer\x2C\x0d\n} = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_HASH_FINALIZED\x2C\x0d\n    ERR_CRYPTO_HASH_UPDATE_FAILED\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateEncoding\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst LazyTransform = require('internal/streams/lazy_transform');\x0d\n\x0d\nconst kState = Symbol('kState');\x0d\nconst kFinalized = Symbol('kFinalized');\x0d\n\x0d\nfunction Hash(algorithm\x2C options) {\x0d\n  if (!(this instanceof Hash))\x0d\n    return new Hash(algorithm\x2C options);\x0d\n  if (!(algorithm instanceof _Hash))\x0d\n    validateString(algorithm\x2C 'algorithm');\x0d\n  const xofLen = typeof options === 'object' && options !== null ?\x0d\n    options.outputLength : undefined;\x0d\n  if (xofLen !== undefined)\x0d\n    validateUint32(xofLen\x2C 'options.outputLength');\x0d\n  this[kHandle] = new _Hash(algorithm\x2C xofLen);\x0d\n  this[kState] = {\x0d\n    [kFinalized]: false\x0d\n  };\x0d\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Hash.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Hash\x2C LazyTransform);\x0d\n\x0d\nHash.prototype.copy = function copy(options) {\x0d\n  const state = this[kState];\x0d\n  if (state[kFinalized])\x0d\n    throw new ERR_CRYPTO_HASH_FINALIZED();\x0d\n\x0d\n  return new Hash(this[kHandle]\x2C options);\x0d\n};\x0d\n\x0d\nHash.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\x0d\n  this[kHandle].update(chunk\x2C encoding);\x0d\n  callback();\x0d\n};\x0d\n\x0d\nHash.prototype._flush = function _flush(callback) {\x0d\n  this.push(this[kHandle].digest());\x0d\n  callback();\x0d\n};\x0d\n\x0d\nHash.prototype.update = function update(data\x2C encoding) {\x0d\n  encoding = encoding || getDefaultEncoding();\x0d\n\x0d\n  const state = this[kState];\x0d\n  if (state[kFinalized])\x0d\n    throw new ERR_CRYPTO_HASH_FINALIZED();\x0d\n\x0d\n  if (typeof data === 'string') {\x0d\n    validateEncoding(data\x2C encoding);\x0d\n  } else if (!isArrayBufferView(data)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\x0d\n  }\x0d\n\x0d\n  if (!this[kHandle].update(data\x2C encoding))\x0d\n    throw new ERR_CRYPTO_HASH_UPDATE_FAILED();\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nHash.prototype.digest = function digest(outputEncoding) {\x0d\n  const state = this[kState];\x0d\n  if (state[kFinalized])\x0d\n    throw new ERR_CRYPTO_HASH_FINALIZED();\x0d\n  outputEncoding = outputEncoding || getDefaultEncoding();\x0d\n\x0d\n  // Explicit conversion for backward compatibility.\x0d\n  const ret = this[kHandle].digest(`${outputEncoding}`);\x0d\n  state[kFinalized] = true;\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction Hmac(hmac\x2C key\x2C options) {\x0d\n  if (!(this instanceof Hmac))\x0d\n    return new Hmac(hmac\x2C key\x2C options);\x0d\n  validateString(hmac\x2C 'hmac');\x0d\n  const encoding = getStringOption(options\x2C 'encoding');\x0d\n  key = prepareSecretKey(key\x2C encoding);\x0d\n  this[kHandle] = new _Hmac();\x0d\n  this[kHandle].init(hmac\x2C key);\x0d\n  this[kState] = {\x0d\n    [kFinalized]: false\x0d\n  };\x0d\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Hmac.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Hmac\x2C LazyTransform);\x0d\n\x0d\nHmac.prototype.update = Hash.prototype.update;\x0d\n\x0d\nHmac.prototype.digest = function digest(outputEncoding) {\x0d\n  const state = this[kState];\x0d\n  outputEncoding = outputEncoding || getDefaultEncoding();\x0d\n\x0d\n  if (state[kFinalized]) {\x0d\n    const buf = Buffer.from('');\x0d\n    return outputEncoding === 'buffer' ? buf : buf.toString(outputEncoding);\x0d\n  }\x0d\n\x0d\n  // Explicit conversion for backward compatibility.\x0d\n  const ret = this[kHandle].digest(`${outputEncoding}`);\x0d\n  state[kFinalized] = true;\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nHmac.prototype._flush = Hash.prototype._flush;\x0d\nHmac.prototype._transform = Hash.prototype._transform;\x0d\n\x0d\n// Implementation for WebCrypto subtle.digest()\x0d\n\x0d\nasync function asyncDigest(algorithm\x2C data) {\x0d\n  algorithm = normalizeAlgorithm(algorithm);\x0d\n  data = getArrayBufferOrView(data\x2C 'data');\x0d\n  validateMaxBufferLength(data\x2C 'data');\x0d\n\x0d\n  if (algorithm.length !== undefined)\x0d\n    validateUint32(algorithm.length\x2C 'algorithm.length');\x0d\n\x0d\n  return jobPromise(new HashJob(\x0d\n    kCryptoJobAsync\x2C\x0d\n    normalizeHashName(algorithm.name)\x2C\x0d\n    data\x2C\x0d\n    algorithm.length));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Hash\x2C\x0d\n  Hmac\x2C\x0d\n  asyncDigest\x2C\x0d\n};\x0d\n
code-source-info,0xe6a619b48e,221,0,4735,C0O0C4O4735,,
code-creation,Function,10,324850,0xe6a619b9ce,590, node:internal/crypto/hash:1:1,0xe6a619b408,~
code-source-info,0xe6a619b9ce
tick,0x7fffb299479e,325123,1,0x7ff6a79aa4a0,2,0x7ff6a82ef2d0,0x225ca7847fb,0x225ca784545,0x20cab7aa8c7,0x225ca7848c3,0x225ca7acaee,0x225ca791e63,0x225ca79d19f,0x225ca7983c7,0x225ca798095,0x20cab7a7f03,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2f65a73ecd3,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2f65a736850,0x225ca7a0b43,0xbfdd363843,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2bdba108aa2,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x22645774e6,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2264576859,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x226457464f,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x2264572d77,0x3103a7b5c9
code-creation,Eval,10,325364,0xe6a619ce6e,5, node:internal/crypto/x509:1:1,0xe6a619caa8,~
script-source,222,node:internal/crypto/x509,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  SafeMap\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  parseX509\x2C\x0d\n  X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT\x2C\x0d\n  X509_CHECK_FLAG_NEVER_CHECK_SUBJECT\x2C\x0d\n  X509_CHECK_FLAG_NO_WILDCARDS\x2C\x0d\n  X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS\x2C\x0d\n  X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS\x2C\x0d\n  X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  PublicKeyObject\x2C\x0d\n  isKeyObject\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst {\x0d\n  kHandle\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst kInternalState = Symbol('kInternalState');\x0d\n\x0d\nfunction isX509Certificate(value) {\x0d\n  return value[kInternalState] !== undefined;\x0d\n}\x0d\n\x0d\nfunction getFlags(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const {\x0d\n    subject = 'always'\x2C  // Can be 'always' or 'never'\x0d\n    wildcards = true\x2C\x0d\n    partialWildcards = true\x2C\x0d\n    multiLabelWildcards = false\x2C\x0d\n    singleLabelSubdomains = false\x2C\x0d\n  } = { ...options };\x0d\n  let flags = 0;\x0d\n  validateString(subject\x2C 'options.subject');\x0d\n  validateBoolean(wildcards\x2C 'options.wildcards');\x0d\n  validateBoolean(partialWildcards\x2C 'options.partialWildcards');\x0d\n  validateBoolean(multiLabelWildcards\x2C 'options.multiLabelWildcards');\x0d\n  validateBoolean(singleLabelSubdomains\x2C 'options.singleLabelSubdomains');\x0d\n  switch (subject) {\x0d\n    case 'always': flags |= X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT; break;\x0d\n    case 'never': flags |= X509_CHECK_FLAG_NEVER_CHECK_SUBJECT; break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.subject'\x2C subject);\x0d\n  }\x0d\n  if (!wildcards) flags |= X509_CHECK_FLAG_NO_WILDCARDS;\x0d\n  if (!partialWildcards) flags |= X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS;\x0d\n  if (multiLabelWildcards) flags |= X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS;\x0d\n  if (singleLabelSubdomains) flags |= X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS;\x0d\n  return flags;\x0d\n}\x0d\n\x0d\nclass InternalX509Certificate extends JSTransferable {\x0d\n  [kInternalState] = new SafeMap();\x0d\n\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass X509Certificate extends JSTransferable {\x0d\n  [kInternalState] = new SafeMap();\x0d\n\x0d\n  constructor(buffer) {\x0d\n    if (typeof buffer === 'string')\x0d\n      buffer = Buffer.from(buffer);\x0d\n    if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'buffer'\x2C\x0d\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        buffer);\x0d\n    }\x0d\n    super();\x0d\n    this[kHandle] = parseX509(buffer);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `X509Certificate ${inspect({\x0d\n      subject: this.subject\x2C\x0d\n      subjectAltName: this.subjectAltName\x2C\x0d\n      issuer: this.issuer\x2C\x0d\n      infoAccess: this.infoAccess\x2C\x0d\n      validFrom: this.validFrom\x2C\x0d\n      validTo: this.validTo\x2C\x0d\n      fingerprint: this.fingerprint\x2C\x0d\n      fingerprint256: this.fingerprint256\x2C\x0d\n      keyUsage: this.keyUsage\x2C\x0d\n      serialNumber: this.serialNumber\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/crypto/x509:InternalX509Certificate'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n\x0d\n  get subject() {\x0d\n    let value = this[kInternalState].get('subject');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].subject();\x0d\n      this[kInternalState].set('subject'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get subjectAltName() {\x0d\n    let value = this[kInternalState].get('subjectAltName');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].subjectAltName();\x0d\n      this[kInternalState].set('subjectAltName'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get issuer() {\x0d\n    let value = this[kInternalState].get('issuer');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].issuer();\x0d\n      this[kInternalState].set('issuer'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get issuerCertificate() {\x0d\n    let value = this[kInternalState].get('issuerCertificate');\x0d\n    if (value === undefined) {\x0d\n      const cert = this[kHandle].getIssuerCert();\x0d\n      if (cert)\x0d\n        value = new InternalX509Certificate(this[kHandle].getIssuerCert());\x0d\n      this[kInternalState].set('issuerCertificate'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get infoAccess() {\x0d\n    let value = this[kInternalState].get('infoAccess');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].infoAccess();\x0d\n      this[kInternalState].set('infoAccess'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get validFrom() {\x0d\n    let value = this[kInternalState].get('validFrom');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].validFrom();\x0d\n      this[kInternalState].set('validFrom'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get validTo() {\x0d\n    let value = this[kInternalState].get('validTo');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].validTo();\x0d\n      this[kInternalState].set('validTo'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get fingerprint() {\x0d\n    let value = this[kInternalState].get('fingerprint');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].fingerprint();\x0d\n      this[kInternalState].set('fingerprint'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get fingerprint256() {\x0d\n    let value = this[kInternalState].get('fingerprint256');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].fingerprint256();\x0d\n      this[kInternalState].set('fingerprint256'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get keyUsage() {\x0d\n    let value = this[kInternalState].get('keyUsage');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].keyUsage();\x0d\n      this[kInternalState].set('keyUsage'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get serialNumber() {\x0d\n    let value = this[kInternalState].get('serialNumber');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].serialNumber();\x0d\n      this[kInternalState].set('serialNumber'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get raw() {\x0d\n    let value = this[kInternalState].get('raw');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].raw();\x0d\n      this[kInternalState].set('raw'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get publicKey() {\x0d\n    let value = this[kInternalState].get('publicKey');\x0d\n    if (value === undefined) {\x0d\n      value = new PublicKeyObject(this[kHandle].publicKey());\x0d\n      this[kInternalState].set('publicKey'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    let value = this[kInternalState].get('pem');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].pem();\x0d\n      this[kInternalState].set('pem'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  // There's no standardized JSON encoding for X509 certs so we\x0d\n  // fallback to providing the PEM encoding as a string.\x0d\n  toJSON() { return this.toString(); }\x0d\n\x0d\n  get ca() {\x0d\n    let value = this[kInternalState].get('ca');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].checkCA();\x0d\n      this[kInternalState].set('ca'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  checkHost(name\x2C options) {\x0d\n    validateString(name\x2C 'name');\x0d\n    return this[kHandle].checkHost(name\x2C getFlags(options));\x0d\n  }\x0d\n\x0d\n  checkEmail(email\x2C options) {\x0d\n    validateString(email\x2C 'email');\x0d\n    return this[kHandle].checkEmail(email\x2C getFlags(options));\x0d\n  }\x0d\n\x0d\n  checkIP(ip\x2C options) {\x0d\n    validateString(ip\x2C 'ip');\x0d\n    return this[kHandle].checkIP(ip\x2C getFlags(options));\x0d\n  }\x0d\n\x0d\n  checkIssued(otherCert) {\x0d\n    if (!isX509Certificate(otherCert))\x0d\n      throw new ERR_INVALID_ARG_TYPE('otherCert'\x2C 'X509Certificate'\x2C otherCert);\x0d\n    return this[kHandle].checkIssued(otherCert[kHandle]);\x0d\n  }\x0d\n\x0d\n  checkPrivateKey(pkey) {\x0d\n    if (!isKeyObject(pkey))\x0d\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\x0d\n    if (pkey.type !== 'private')\x0d\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\x0d\n    return this[kHandle].checkPrivateKey(pkey[kHandle]);\x0d\n  }\x0d\n\x0d\n  verify(pkey) {\x0d\n    if (!isKeyObject(pkey))\x0d\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\x0d\n    if (pkey.type !== 'public')\x0d\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\x0d\n    return this[kHandle].verify(pkey[kHandle]);\x0d\n  }\x0d\n\x0d\n  toLegacyObject() {\x0d\n    return this[kHandle].toLegacy();\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalX509Certificate.prototype.constructor = X509Certificate;\x0d\nObjectSetPrototypeOf(\x0d\n  InternalX509Certificate.prototype\x2C\x0d\n  X509Certificate.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  X509Certificate\x2C\x0d\n  InternalX509Certificate\x2C\x0d\n  isX509Certificate\x2C\x0d\n};\x0d\n
code-source-info,0xe6a619ce6e,222,0,9181,C0O0C4O9181,,
code-creation,Function,10,325818,0xe6a619e7d6,651, node:internal/crypto/x509:1:1,0xe6a619cde8,~
code-source-info,0xe6a619e7d6,222,0,9181,C0O0C80O28C85O53C91O65C96O362C99O362C104O105C110O119C116O160C122O200C128O233C134O274C140O316C146O441C149O441C154O403C160O423C166O524C169O524C174O509C179O624C182O624C187O564C193O584C199O603C205O679C208O679C213O667C219O735C222O735C227O724C233O792C236O792C241O768C247O912C250O912C255O912C260O852C266O879C272O1003C275O1003C280O954C285O973C290O984C295O1075C298O1075C303O1061C309O1134C312O1134C316O1134C325O2472C333O2493C368O2434C377O2637C385O2658C395O3036C403O3643C412O3819C588O8927C591O8951C598O8973C602O8993C605O9042C610O9072C615O8993C620O9087C627O9109C633O9129C639O9157C645O9102C650O9180,,
code-creation,Function,10,325884,0xe6a619ebce,26,<instance_members_initializer> node:internal/crypto/x509:103:3,0xe6a619da00,~
code-source-info,0xe6a619ebce,222,2657,2689,C3O2676C10O2676C25O2689,,
code-creation,Function,10,325900,0xe6a619ec6e,26,<instance_members_initializer> node:internal/crypto/x509:94:3,0xe6a619cf90,~
code-source-info,0xe6a619ec6e,222,2492,2524,C3O2511C10O2511C25O2524,,
code-creation,Eval,10,326100,0xe6a61a001e,5, node:internal/crypto/certificate:1:1,0xe6a619fe88,~
script-source,223,node:internal/crypto/certificate,'use strict';\x0d\n\x0d\nconst {\x0d\n  certExportChallenge\x2C\x0d\n  certExportPublicKey\x2C\x0d\n  certVerifySpkac\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\n// The functions contained in this file cover the SPKAC format\x0d\n// (also referred to as Netscape SPKI). A general description of\x0d\n// the format can be found at https://en.wikipedia.org/wiki/SPKAC\x0d\n\x0d\nfunction verifySpkac(spkac\x2C encoding) {\x0d\n  return certVerifySpkac(\x0d\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\x0d\n}\x0d\n\x0d\nfunction exportPublicKey(spkac\x2C encoding) {\x0d\n  return certExportPublicKey(\x0d\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\x0d\n}\x0d\n\x0d\nfunction exportChallenge(spkac\x2C encoding) {\x0d\n  return certExportChallenge(\x0d\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\x0d\n}\x0d\n\x0d\n// The legacy implementation of this exposed the Certificate\x0d\n// object and required that users create an instance before\x0d\n// calling the member methods. This API pattern has been\x0d\n// deprecated\x2C however\x2C as the method implementations do not\x0d\n// rely on any object state.\x0d\n\x0d\n// For backwards compatibility reasons\x2C this cannot be converted into a\x0d\n// ES6 Class.\x0d\nfunction Certificate() {\x0d\n  if (!(this instanceof Certificate))\x0d\n    return new Certificate();\x0d\n}\x0d\n\x0d\nCertificate.prototype.verifySpkac = verifySpkac;\x0d\nCertificate.prototype.exportPublicKey = exportPublicKey;\x0d\nCertificate.prototype.exportChallenge = exportChallenge;\x0d\n\x0d\nCertificate.exportChallenge = exportChallenge;\x0d\nCertificate.exportPublicKey = exportPublicKey;\x0d\nCertificate.verifySpkac = verifySpkac;\x0d\n\x0d\nmodule.exports = Certificate;\x0d\n
code-source-info,0xe6a61a001e,223,0,1599,C0O0C4O1599,,
code-creation,Function,10,326200,0xe6a61a0256,155, node:internal/crypto/certificate:1:1,0xe6a619ff98,~
code-source-info,0xe6a61a0256,223,0,1599,C0O0C38O98C41O98C46O28C52O52C58O76C64O166C67O166C72O139C78O1262C81O1274C88O1296C92O1312C95O1324C102O1350C106O1370C109O1382C116O1408C120O1430C125O1458C129O1478C134O1506C138O1526C143O1550C147O1568C149O1583C154O1598,,
code-creation,LazyCompile,10,326506,0xe6a61a0c96,18,get node:crypto:287:8,0x20cab7a99e8,~
code-source-info,0xe6a61a0c96,208,7058,7120,C0O7063C8O7070C13O7110C17O7118,,
code-creation,LazyCompile,10,326567,0xe6a61a177e,38,lazyRequire node:internal/crypto/util:67:21,0x20cab7bde68,~
code-source-info,0xe6a61a177e,211,1276,1416,C0O1298C7O1314C11O1325C13O1353C21O1384C26O1382C35O1402C37O1413,,
code-creation,Eval,10,326970,0xe6a61a2d8e,5, node:internal/crypto/webcrypto:1:1,0xe6a61a2998,~
script-source,224,node:internal/crypto/webcrypto,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  kWebCryptoKeyFormatRaw\x2C\x0d\n  kWebCryptoKeyFormatPKCS8\x2C\x0d\n  kWebCryptoKeyFormatSPKI\x2C\x0d\n  kWebCryptoCipherEncrypt\x2C\x0d\n  kWebCryptoCipherDecrypt\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { TextDecoder\x2C TextEncoder } = require('internal/encoding');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  CryptoKey\x2C\x0d\n  InternalCryptoKey\x2C\x0d\n  createSecretKey\x2C\x0d\n  isCryptoKey\x2C\x0d\n  isKeyObject\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  asyncDigest\x2C\x0d\n} = require('internal/crypto/hash');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  hasAnyNotIn\x2C\x0d\n  lazyRequire\x2C\x0d\n  normalizeAlgorithm\x2C\x0d\n  normalizeHashName\x2C\x0d\n  validateMaxBufferLength\x2C\x0d\n  kExportFormats\x2C\x0d\n  kHandle\x2C\x0d\n  kKeyObject\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  getRandomValues\x2C\x0d\n  randomUUID: _randomUUID\x2C\x0d\n} = require('internal/crypto/random');\x0d\n\x0d\nconst randomUUID = () => _randomUUID();\x0d\n\x0d\nasync function generateKey(\x0d\n  algorithm\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  algorithm = normalizeAlgorithm(algorithm);\x0d\n  validateBoolean(extractable\x2C 'extractable');\x0d\n  validateArray(keyUsages\x2C 'keyUsages');\x0d\n  switch (algorithm.name) {\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      // Fall through\x0d\n    case 'RSA-PSS':\x0d\n      // Fall through\x0d\n    case 'RSA-OAEP':\x0d\n      return lazyRequire('internal/crypto/rsa')\x0d\n        .rsaKeyGenerate(algorithm\x2C extractable\x2C keyUsages);\x0d\n    case 'NODE-ED25519':\x0d\n      // Fall through\x0d\n    case 'NODE-ED448':\x0d\n      // Fall through\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      return lazyRequire('internal/crypto/ec')\x0d\n        .ecGenerateKey(algorithm\x2C extractable\x2C keyUsages);\x0d\n    case 'HMAC':\x0d\n      return lazyRequire('internal/crypto/mac')\x0d\n        .hmacGenerateKey(algorithm\x2C extractable\x2C keyUsages);\x0d\n    case 'AES-CTR':\x0d\n      // Fall through\x0d\n    case 'AES-CBC':\x0d\n      // Fall through\x0d\n    case 'AES-GCM':\x0d\n      // Fall through\x0d\n    case 'AES-KW':\x0d\n      return lazyRequire('internal/crypto/aes')\x0d\n        .aesGenerateKey(algorithm\x2C extractable\x2C keyUsages);\x0d\n\x0d\n    // Following are Node.js specific extensions. Names must be prefixed\x0d\n    // with the `NODE-`\x0d\n    case 'NODE-DSA':\x0d\n      return lazyRequire('internal/crypto/dsa')\x0d\n        .dsaGenerateKey(algorithm\x2C extractable\x2C keyUsages);\x0d\n    case 'NODE-DH':\x0d\n      return lazyRequire('internal/crypto/diffiehellman')\x0d\n        .dhGenerateKey(algorithm\x2C extractable\x2C keyUsages);\x0d\n    default:\x0d\n      throw lazyDOMException('Unrecognized name.');\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function deriveBits(algorithm\x2C baseKey\x2C length) {\x0d\n  algorithm = normalizeAlgorithm(algorithm);\x0d\n  if (!isCryptoKey(baseKey))\x0d\n    throw new ERR_INVALID_ARG_TYPE('baseKey'\x2C 'CryptoKey'\x2C baseKey);\x0d\n  if (!ArrayPrototypeIncludes(baseKey.usages\x2C 'deriveBits')) {\x0d\n    throw lazyDOMException(\x0d\n      'baseKey does not have deriveBits usage'\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n  if (baseKey.algorithm.name !== algorithm.name)\x0d\n    throw lazyDOMException('Key algorithm mismatch'\x2C 'InvalidAccessError');\x0d\n  switch (algorithm.name) {\x0d\n    case 'ECDH':\x0d\n      return lazyRequire('internal/crypto/diffiehellman')\x0d\n        .asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length);\x0d\n    case 'HKDF':\x0d\n      return lazyRequire('internal/crypto/hkdf')\x0d\n        .hkdfDeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n    case 'PBKDF2':\x0d\n      return lazyRequire('internal/crypto/pbkdf2')\x0d\n        .pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n    case 'NODE-SCRYPT':\x0d\n      return lazyRequire('internal/crypto/scrypt')\x0d\n        .scryptDeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n    case 'NODE-DH':\x0d\n      return lazyRequire('internal/crypto/diffiehellman')\x0d\n        .asyncDeriveBitsDH(algorithm\x2C baseKey\x2C length);\x0d\n  }\x0d\n  throw lazyDOMException('Unrecognized name.');\x0d\n}\x0d\n\x0d\nasync function deriveKey(\x0d\n  algorithm\x2C\x0d\n  baseKey\x2C\x0d\n  derivedKeyAlgorithm\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  algorithm = normalizeAlgorithm(algorithm);\x0d\n  derivedKeyAlgorithm = normalizeAlgorithm(derivedKeyAlgorithm);\x0d\n  if (!isCryptoKey(baseKey))\x0d\n    throw new ERR_INVALID_ARG_TYPE('baseKey'\x2C 'CryptoKey'\x2C baseKey);\x0d\n  if (!ArrayPrototypeIncludes(baseKey.usages\x2C 'deriveKey')) {\x0d\n    throw lazyDOMException(\x0d\n      'baseKey does not have deriveKey usage'\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n  if (baseKey.algorithm.name !== algorithm.name)\x0d\n    throw lazyDOMException('Key algorithm mismatch'\x2C 'InvalidAccessError');\x0d\n  validateObject(derivedKeyAlgorithm\x2C 'derivedKeyAlgorithm'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  validateBoolean(extractable\x2C 'extractable');\x0d\n  validateArray(keyUsages\x2C 'keyUsages');\x0d\n\x0d\n  const { length } = derivedKeyAlgorithm;\x0d\n  let bits;\x0d\n  switch (algorithm.name) {\x0d\n    case 'ECDH':\x0d\n      bits = await lazyRequire('internal/crypto/diffiehellman')\x0d\n        .asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length);\x0d\n      break;\x0d\n    case 'HKDF':\x0d\n      bits = await lazyRequire('internal/crypto/hkdf')\x0d\n        .hkdfDeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n      break;\x0d\n    case 'PBKDF2':\x0d\n      bits = await lazyRequire('internal/crypto/pbkdf2')\x0d\n        .pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n      break;\x0d\n    case 'NODE-SCRYPT':\x0d\n      bits = await lazyRequire('internal/crypto/scrypt')\x0d\n        .scryptDeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n      break;\x0d\n    case 'NODE-DH':\x0d\n      bits = await lazyRequire('internal/crypto/diffiehellman')\x0d\n        .asyncDeriveBitsDH(algorithm\x2C baseKey\x2C length);\x0d\n      break;\x0d\n    default:\x0d\n      throw lazyDOMException('Unrecognized name.');\x0d\n  }\x0d\n\x0d\n  return importKey('raw'\x2C bits\x2C derivedKeyAlgorithm\x2C extractable\x2C keyUsages);\x0d\n}\x0d\n\x0d\nasync function exportKeySpki(key) {\x0d\n  switch (key.algorithm.name) {\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      // Fall through\x0d\n    case 'RSA-PSS':\x0d\n      // Fall through\x0d\n    case 'RSA-OAEP':\x0d\n      if (key.type === 'public') {\x0d\n        return lazyRequire('internal/crypto/rsa')\x0d\n          .rsaExportKey(key\x2C kWebCryptoKeyFormatSPKI);\x0d\n      }\x0d\n      break;\x0d\n    case 'NODE-ED25519':\x0d\n      // Fall through\x0d\n    case 'NODE-ED448':\x0d\n      // Fall through\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      if (key.type === 'public') {\x0d\n        return lazyRequire('internal/crypto/ec')\x0d\n          .ecExportKey(key\x2C kWebCryptoKeyFormatSPKI);\x0d\n      }\x0d\n      break;\x0d\n    case 'NODE-DSA':\x0d\n      if (key.type === 'public') {\x0d\n        return lazyRequire('internal/crypto/dsa')\x0d\n          .dsaExportKey(key\x2C kWebCryptoKeyFormatSPKI);\x0d\n      }\x0d\n      break;\x0d\n    case 'NODE-DH':\x0d\n      if (key.type === 'public') {\x0d\n        return lazyRequire('internal/crypto/diffiehellman')\x0d\n          .dhExportKey(key\x2C kWebCryptoKeyFormatSPKI);\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException(\x0d\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`\x2C\x0d\n    'InvalidAccessError');\x0d\n}\x0d\n\x0d\nasync function exportKeyPkcs8(key) {\x0d\n  switch (key.algorithm.name) {\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      // Fall through\x0d\n    case 'RSA-PSS':\x0d\n      // Fall through\x0d\n    case 'RSA-OAEP':\x0d\n      if (key.type === 'private') {\x0d\n        return lazyRequire('internal/crypto/rsa')\x0d\n          .rsaExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\x0d\n      }\x0d\n      break;\x0d\n    case 'NODE-ED25519':\x0d\n      // Fall through\x0d\n    case 'NODE-ED448':\x0d\n      // Fall through\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      if (key.type === 'private') {\x0d\n        return lazyRequire('internal/crypto/ec')\x0d\n          .ecExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\x0d\n      }\x0d\n      break;\x0d\n    case 'NODE-DSA':\x0d\n      if (key.type === 'private') {\x0d\n        return lazyRequire('internal/crypto/dsa')\x0d\n          .dsaExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\x0d\n      }\x0d\n      break;\x0d\n    case 'NODE-DH':\x0d\n      if (key.type === 'private') {\x0d\n        return lazyRequire('internal/crypto/diffiehellman')\x0d\n          .dhExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException(\x0d\n    `Unable to export a pkcs8 ${key.algorithm.name} ${key.type} key`\x2C\x0d\n    'InvalidAccessError');\x0d\n}\x0d\n\x0d\nasync function exportKeyRaw(key) {\x0d\n  switch (key.algorithm.name) {\x0d\n    case 'NODE-ED25519':\x0d\n      // Fall through\x0d\n    case 'NODE-ED448':\x0d\n      if (key.type === 'public') {\x0d\n        return lazyRequire('internal/crypto/ec')\x0d\n          .ecExportKey(key\x2C kWebCryptoKeyFormatRaw);\x0d\n      }\x0d\n      break;\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      if (key.type === 'public') {\x0d\n        return lazyRequire('internal/crypto/ec')\x0d\n          .ecExportKey(key\x2C kWebCryptoKeyFormatRaw);\x0d\n      }\x0d\n      break;\x0d\n    case 'AES-CTR':\x0d\n      // Fall through\x0d\n    case 'AES-CBC':\x0d\n      // Fall through\x0d\n    case 'AES-GCM':\x0d\n      // Fall through\x0d\n    case 'AES-KW':\x0d\n      // Fall through\x0d\n    case 'HMAC':\x0d\n      return key[kKeyObject].export().buffer;\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException(\x0d\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`\x2C\x0d\n    'InvalidAccessError');\x0d\n}\x0d\n\x0d\nasync function exportKeyJWK(key) {\x0d\n  const jwk = key[kKeyObject][kHandle].exportJwk({\x0d\n    key_ops: key.usages\x2C\x0d\n    ext: key.extractable\x2C\x0d\n  }\x2C true);\x0d\n  switch (key.algorithm.name) {\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      jwk.alg = normalizeHashName(\x0d\n        key.algorithm.hash.name\x2C\x0d\n        normalizeHashName.kContextJwkRsa);\x0d\n      return jwk;\x0d\n    case 'RSA-PSS':\x0d\n      jwk.alg = normalizeHashName(\x0d\n        key.algorithm.hash.name\x2C\x0d\n        normalizeHashName.kContextJwkRsaPss);\x0d\n      return jwk;\x0d\n    case 'RSA-OAEP':\x0d\n      jwk.alg = normalizeHashName(\x0d\n        key.algorithm.hash.name\x2C\x0d\n        normalizeHashName.kContextJwkRsaOaep);\x0d\n      return jwk;\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      jwk.crv ||= key.algorithm.namedCurve;\x0d\n      return jwk;\x0d\n    case 'AES-CTR':\x0d\n      // Fall through\x0d\n    case 'AES-CBC':\x0d\n      // Fall through\x0d\n    case 'AES-GCM':\x0d\n      // Fall through\x0d\n    case 'AES-KW':\x0d\n      jwk.alg = lazyRequire('internal/crypto/aes')\x0d\n        .getAlgorithmName(key.algorithm.name\x2C key.algorithm.length);\x0d\n      return jwk;\x0d\n    case 'HMAC':\x0d\n      jwk.alg = normalizeHashName(\x0d\n        key.algorithm.hash.name\x2C\x0d\n        normalizeHashName.kContextJwkHmac);\x0d\n      return jwk;\x0d\n    case 'NODE-DSA':\x0d\n      jwk.alg = normalizeHashName(\x0d\n        key.algorithm.hash.name\x2C\x0d\n        normalizeHashName.kContextJwkDsa);\x0d\n      return jwk;\x0d\n    case 'NODE-ED25519':\x0d\n      // Fall through\x0d\n    case 'NODE-ED448':\x0d\n      return jwk;\x0d\n    default:\x0d\n      // Fall through\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException('Not yet supported'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nasync function exportKey(format\x2C key) {\x0d\n  validateString(format\x2C 'format');\x0d\n  validateOneOf(format\x2C 'format'\x2C kExportFormats);\x0d\n  if (!isCryptoKey(key))\x0d\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\x0d\n\x0d\n  if (!key.extractable)\x0d\n    throw lazyDOMException('key is not extractable'\x2C 'InvalidAccessException');\x0d\n\x0d\n  switch (format) {\x0d\n    case 'node.keyObject': return key[kKeyObject];\x0d\n    case 'spki': return exportKeySpki(key);\x0d\n    case 'pkcs8': return exportKeyPkcs8(key);\x0d\n    case 'jwk': return exportKeyJWK(key);\x0d\n    case 'raw': return exportKeyRaw(key);\x0d\n  }\x0d\n  throw lazyDOMException(\x0d\n    'Export format is unsupported'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nasync function importGenericSecretKey(\x0d\n  { name\x2C length }\x2C\x0d\n  format\x2C\x0d\n  keyData\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  const usagesSet = new SafeSet(keyUsages);\x0d\n  if (extractable)\x0d\n    throw lazyDOMException(`${name} keys are not extractable`\x2C 'SyntaxError');\x0d\n\x0d\n  if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\x0d\n    throw lazyDOMException(\x0d\n      `Unsupported key usage for a ${name} key`\x2C\x0d\n      'SyntaxError');\x0d\n  }\x0d\n\x0d\n  switch (format) {\x0d\n    case 'node.keyObject': {\x0d\n      if (!isKeyObject(keyData))\x0d\n        throw new ERR_INVALID_ARG_TYPE('keyData'\x2C 'KeyObject'\x2C keyData);\x0d\n\x0d\n      if (keyData.type === 'secret')\x0d\n        return new InternalCryptoKey(keyData\x2C { name }\x2C keyUsages\x2C extractable);\x0d\n\x0d\n      break;\x0d\n    }\x0d\n    case 'raw':\x0d\n      if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\x0d\n        throw lazyDOMException(\x0d\n          `Unsupported key usage for a ${name} key`\x2C\x0d\n          'SyntaxError');\x0d\n      }\x0d\n\x0d\n      const checkLength = keyData.byteLength * 8;\x0d\n\x0d\n      if (checkLength === 0 || length === 0)\x0d\n        throw lazyDOMException('Zero-length key is not supported'\x2C 'DataError');\x0d\n\x0d\n      // The Web Crypto spec allows for key lengths that are not multiples of\x0d\n      // 8. We don't. Our check here is stricter than that defined by the spec\x0d\n      // in that we require that algorithm.length match keyData.length * 8 if\x0d\n      // algorithm.length is specified.\x0d\n      if (length !== undefined && length !== checkLength) {\x0d\n        throw lazyDOMException('Invalid key length'\x2C 'DataError');\x0d\n      }\x0d\n\x0d\n      const keyObject = createSecretKey(keyData);\x0d\n      return new InternalCryptoKey(keyObject\x2C { name }\x2C keyUsages\x2C false);\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException(\x0d\n    `Unable to import ${name} key with format ${format}`\x2C\x0d\n    'NotSupportedError');\x0d\n}\x0d\n\x0d\nasync function importKey(\x0d\n  format\x2C\x0d\n  keyData\x2C\x0d\n  algorithm\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  validateString(format\x2C 'format');\x0d\n  validateOneOf(format\x2C 'format'\x2C kExportFormats);\x0d\n  if (format !== 'node.keyObject' && format !== 'jwk')\x0d\n    keyData = getArrayBufferOrView(keyData\x2C 'keyData');\x0d\n  algorithm = normalizeAlgorithm(algorithm);\x0d\n  validateBoolean(extractable\x2C 'extractable');\x0d\n  validateArray(keyUsages\x2C 'keyUsages');\x0d\n  switch (algorithm.name) {\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      // Fall through\x0d\n    case 'RSA-PSS':\x0d\n      // Fall through\x0d\n    case 'RSA-OAEP':\x0d\n      return lazyRequire('internal/crypto/rsa')\x0d\n        .rsaImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\x0d\n    case 'NODE-ED25519':\x0d\n      // Fall through\x0d\n    case 'NODE-ED448':\x0d\n      // Fall through\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      return lazyRequire('internal/crypto/ec')\x0d\n        .ecImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\x0d\n    case 'HMAC':\x0d\n      return lazyRequire('internal/crypto/mac')\x0d\n        .hmacImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\x0d\n    case 'AES-CTR':\x0d\n      // Fall through\x0d\n    case 'AES-CBC':\x0d\n      // Fall through\x0d\n    case 'AES-GCM':\x0d\n      // Fall through\x0d\n    case 'AES-KW':\x0d\n      return lazyRequire('internal/crypto/aes')\x0d\n        .aesImportKey(algorithm\x2C format\x2C keyData\x2C extractable\x2C keyUsages);\x0d\n    case 'HKDF':\x0d\n      // Fall through\x0d\n    case 'NODE-SCRYPT':\x0d\n      // Fall through\x0d\n    case 'PBKDF2':\x0d\n      return importGenericSecretKey(\x0d\n        algorithm\x2C\x0d\n        format\x2C\x0d\n        keyData\x2C\x0d\n        extractable\x2C\x0d\n        keyUsages);\x0d\n    case 'NODE-DSA':\x0d\n      return lazyRequire('internal/crypto/dsa')\x0d\n        .dsaImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\x0d\n    case 'NODE-DH':\x0d\n      return lazyRequire('internal/crypto/diffiehellman')\x0d\n        .dhImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\n// subtle.wrapKey() is essentially a subtle.exportKey() followed\x0d\n// by a subtle.encrypt().\x0d\nasync function wrapKey(format\x2C key\x2C wrappingKey\x2C algorithm) {\x0d\n  algorithm = normalizeAlgorithm(algorithm);\x0d\n  let keyData = await exportKey(format\x2C key);\x0d\n\x0d\n  if (format === 'jwk') {\x0d\n    if (keyData == null || typeof keyData !== 'object')\x0d\n      throw lazyDOMException('Invalid exported JWK key'\x2C 'DataError');\x0d\n    const ec = new TextEncoder();\x0d\n    const raw = JSONStringify(keyData);\x0d\n    keyData = ec.encode(raw + StringPrototypeRepeat(' '\x2C 8 - (raw.length % 8)));\x0d\n  }\x0d\n\x0d\n  return cipherOrWrap(\x0d\n    kWebCryptoCipherEncrypt\x2C\x0d\n    algorithm\x2C\x0d\n    wrappingKey\x2C\x0d\n    keyData\x2C\x0d\n    'wrapKey');\x0d\n}\x0d\n\x0d\n// subtle.unwrapKey() is essentially a subtle.decrypt() followed\x0d\n// by a subtle.importKey().\x0d\nasync function unwrapKey(\x0d\n  format\x2C\x0d\n  wrappedKey\x2C\x0d\n  unwrappingKey\x2C\x0d\n  unwrapAlgo\x2C\x0d\n  unwrappedKeyAlgo\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  wrappedKey = getArrayBufferOrView(wrappedKey\x2C 'wrappedKey');\x0d\n\x0d\n  let keyData = await cipherOrWrap(\x0d\n    kWebCryptoCipherDecrypt\x2C\x0d\n    normalizeAlgorithm(unwrapAlgo)\x2C\x0d\n    unwrappingKey\x2C\x0d\n    wrappedKey\x2C\x0d\n    'unwrapKey');\x0d\n\x0d\n  if (format === 'jwk') {\x0d\n    // The fatal: true option is only supported in builds that have ICU.\x0d\n    const options = process.versions.icu !== undefined ?\x0d\n      { fatal: true } : undefined;\x0d\n    const dec = new TextDecoder('utf-8'\x2C options);\x0d\n    try {\x0d\n      keyData = JSONParse(dec.decode(keyData));\x0d\n    } catch {\x0d\n      throw lazyDOMException('Invalid imported JWK key'\x2C 'DataError');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return importKey(format\x2C keyData\x2C unwrappedKeyAlgo\x2C extractable\x2C keyUsages);\x0d\n}\x0d\n\x0d\nfunction signVerify(algorithm\x2C key\x2C data\x2C signature) {\x0d\n  algorithm = normalizeAlgorithm(algorithm);\x0d\n  if (!isCryptoKey(key))\x0d\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\x0d\n  data = getArrayBufferOrView(data\x2C 'data');\x0d\n  let usage = 'sign';\x0d\n  if (signature !== undefined) {\x0d\n    signature = getArrayBufferOrView(signature\x2C 'signature');\x0d\n    usage = 'verify';\x0d\n  }\x0d\n\x0d\n  if (!ArrayPrototypeIncludes(key.usages\x2C usage) ||\x0d\n      algorithm.name !== key.algorithm.name) {\x0d\n    throw lazyDOMException(\x0d\n      `Unable to use this key to ${usage}`\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  switch (algorithm.name) {\x0d\n    case 'RSA-PSS':\x0d\n      // Fall through\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      return lazyRequire('internal/crypto/rsa')\x0d\n        .rsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\x0d\n    case 'NODE-ED25519':\x0d\n      // Fall through\x0d\n    case 'NODE-ED448':\x0d\n      // Fall through\x0d\n    case 'ECDSA':\x0d\n      return lazyRequire('internal/crypto/ec')\x0d\n        .ecdsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\x0d\n    case 'HMAC':\x0d\n      return lazyRequire('internal/crypto/mac')\x0d\n        .hmacSignVerify(key\x2C data\x2C algorithm\x2C signature);\x0d\n    // The following are Node.js specific extensions. They must begin with\x0d\n    // the `NODE-` prefix\x0d\n    case 'NODE-DSA':\x0d\n      return lazyRequire('internal/crypto/dsa')\x0d\n        .dsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\x0d\n  }\x0d\n  throw lazyDOMException('Unrecognized named.'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nasync function sign(algorithm\x2C key\x2C data) {\x0d\n  return signVerify(algorithm\x2C key\x2C data);\x0d\n}\x0d\n\x0d\nasync function verify(algorithm\x2C key\x2C signature\x2C data) {\x0d\n  return signVerify(algorithm\x2C key\x2C data\x2C signature);\x0d\n}\x0d\n\x0d\nasync function cipherOrWrap(mode\x2C algorithm\x2C key\x2C data\x2C op) {\x0d\n  algorithm = normalizeAlgorithm(algorithm);\x0d\n  // We use a Node.js style error here instead of a DOMException because\x0d\n  // the WebCrypto spec is not specific what kind of error is to be thrown\x0d\n  // in this case. Both Firefox and Chrome throw simple TypeErrors here.\x0d\n  if (!isCryptoKey(key))\x0d\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\x0d\n  // The key algorithm and cipher algorithm must match\x2C and the\x0d\n  // key must have the proper usage.\x0d\n  if (key.algorithm.name !== algorithm.name ||\x0d\n      !ArrayPrototypeIncludes(key.usages\x2C op)) {\x0d\n    throw lazyDOMException(\x0d\n      'The requested operation is not valid for the provided key'\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  // For the Web Crypto API\x2C the input data can be any ArrayBuffer\x2C\x0d\n  // TypedArray\x2C or DataView.\x0d\n  data = getArrayBufferOrView(data\x2C 'data');\x0d\n\x0d\n  // While WebCrypto allows for larger input buffer sizes\x2C we limit\x0d\n  // those to sizes that can fit within uint32_t because of limitations\x0d\n  // in the OpenSSL API.\x0d\n  validateMaxBufferLength(data\x2C 'data');\x0d\n\x0d\n  switch (algorithm.name) {\x0d\n    case 'RSA-OAEP':\x0d\n      return lazyRequire('internal/crypto/rsa')\x0d\n        .rsaCipher(mode\x2C key\x2C data\x2C algorithm);\x0d\n    case 'AES-CTR':\x0d\n      // Fall through\x0d\n    case 'AES-CBC':\x0d\n      // Fall through\x0d\n    case 'AES-GCM':\x0d\n      return lazyRequire('internal/crypto/aes')\x0d\n        .aesCipher(mode\x2C key\x2C data\x2C algorithm);\x0d\n    case 'AES-KW':\x0d\n      if (op === 'wrapKey' || op === 'unwrapKey') {\x0d\n        return lazyRequire('internal/crypto/aes')\x0d\n          .aesCipher(mode\x2C key\x2C data\x2C algorithm);\x0d\n      }\x0d\n  }\x0d\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nasync function encrypt(algorithm\x2C key\x2C data) {\x0d\n  return cipherOrWrap(kWebCryptoCipherEncrypt\x2C algorithm\x2C key\x2C data\x2C 'encrypt');\x0d\n}\x0d\n\x0d\nasync function decrypt(algorithm\x2C key\x2C data) {\x0d\n  return cipherOrWrap(kWebCryptoCipherDecrypt\x2C algorithm\x2C key\x2C data\x2C 'decrypt');\x0d\n}\x0d\n\x0d\n// The SubtleCrypto and Crypto classes are defined as part of the\x0d\n// Web Crypto API standard: https://www.w3.org/TR/WebCryptoAPI/\x0d\n\x0d\nclass SubtleCrypto {}\x0d\nconst subtle = new SubtleCrypto();\x0d\n\x0d\nclass Crypto {}\x0d\nconst crypto = new Crypto();\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Crypto.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: false\x2C\x0d\n      value: 'Crypto'\x2C\x0d\n    }\x2C\x0d\n    subtle: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x2C\x0d\n      value: subtle\x2C\x0d\n    }\x2C\x0d\n    getRandomValues: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: getRandomValues\x2C\x0d\n    }\x2C\x0d\n    randomUUID: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: randomUUID\x2C\x0d\n    }\x2C\x0d\n    CryptoKey: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: CryptoKey\x2C\x0d\n    }\x0d\n  });\x0d\n\x0d\nObjectDefineProperties(\x0d\n  SubtleCrypto.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: false\x2C\x0d\n      value: 'SubtleCrypto'\x2C\x0d\n    }\x2C\x0d\n    encrypt: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: encrypt\x2C\x0d\n    }\x2C\x0d\n    decrypt: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: decrypt\x2C\x0d\n    }\x2C\x0d\n    sign: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: sign\x2C\x0d\n    }\x2C\x0d\n    verify: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: verify\x2C\x0d\n    }\x2C\x0d\n    digest: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: asyncDigest\x2C\x0d\n    }\x2C\x0d\n    generateKey: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: generateKey\x2C\x0d\n    }\x2C\x0d\n    deriveKey: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: deriveKey\x2C\x0d\n    }\x2C\x0d\n    deriveBits: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: deriveBits\x2C\x0d\n    }\x2C\x0d\n    importKey: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: importKey\x2C\x0d\n    }\x2C\x0d\n    exportKey: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: exportKey\x2C\x0d\n    }\x2C\x0d\n    wrapKey: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: wrapKey\x2C\x0d\n    }\x2C\x0d\n    unwrapKey: {\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: unwrapKey\x2C\x0d\n    }\x0d\n  });\x0d\n\x0d\nmodule.exports = {\x0d\n  Crypto\x2C\x0d\n  SubtleCrypto\x2C\x0d\n  crypto\x2C\x0d\n};\x0d\n
code-source-info,0xe6a61a2d8e,224,0,23406,C0O0C4O23406,,
code-creation,Function,10,328086,0xe6a61a40de,1061, node:internal/crypto/webcrypto:1:1,0xe6a61a2d08,~
code-source-info,0xe6a61a40de
code-creation,LazyCompile,10,328308,0xe6a61a638e,2,SubtleCrypto node:internal/crypto/webcrypto:686:1,0xe6a61a33b0,~
code-source-info,0xe6a61a638e,224,20856,20856,C1O20856,,
code-creation,LazyCompile,10,328335,0xe6a61a7d9e,2,Crypto node:internal/crypto/webcrypto:689:1,0xe6a61a3400,~
code-source-info,0xe6a61a7d9e,224,20917,20917,C1O20917,,
code-creation,Eval,10,329161,0xe6a61a8986,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\fresh\\index.js:1:1,0xe6a61a8810,~
script-source,225,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\fresh\\index.js,/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|\x2C)\\s*?no-cache\\s*?(?:\x2C|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders\x2C resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0\x2C len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* \x2C */\n        list.push(str.substring(start\x2C end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start\x2C end))\n\n  return list\n}\n
code-source-info,0xe6a61a8986,225,0,2711,C0O0C4O2711,,
code-creation,Function,10,329314,0xe6a61a8b1e,36, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\fresh\\index.js:1:1,0xe6a61a8900,~
code-source-info,0xe6a61a8b1e,225,0,2711,C0O0C22O250C26O250C28O323C30O338C35O2710,,
code-creation,Eval,10,330005,0xe6a61a989e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime\\mime.js:1:1,0xe6a61a9748,~
script-source,226,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime\\mime.js,var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg'\x2C ['oga'\x2C 'ogg'\x2C 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || "define()").replace(/.*\\//\x2C '')\x2C 'changes "' + exts[i] + '" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style ".types" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions\x2C the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {}\x2C\n      content = fs.readFileSync(file\x2C 'ascii')\x2C\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments\x2C and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g\x2C '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path\x2C fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/\x2C '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType\x2C fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n
code-source-info,0xe6a61a989e,226,0,2726,C0O0C4O2726,,
code-creation,Function,10,330158,0xe6a61a9d4e,155, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime\\mime.js:1:1,0xe6a61a9818,~
code-source-info,0xe6a61a9d4e,226,0,2726,C0O0C10O11C13O11C18O37C21O37C25O37C27O543C36O560C40O1329C49O1344C53O1833C62O1850C66O2068C75O2088C79O2251C81O2251C87O2294C95O2301C100O2294C105O2369C113O2369C118O2362C122O2443C124O2453C128O2510C133O2538C143O2524C147O2703C149O2718C154O2725,,
code-creation,LazyCompile,10,330272,0xe6a61aa556,42,Mime C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime\\mime.js:4:14,0xe6a61a98d0,~
code-source-info,0xe6a61aa556,226,66,220,C0O121C4O128C11O128C16O119C20O198C24O205C31O205C36O196C41O219,,
code-creation,LazyCompile,10,331241,0xe6a61b99fe,223,Mime.define C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime\\mime.js:21:34,0xe6a61a9920,~
code-source-info,0xe6a61b99fe,226,571,1094,C0O598C13O590C26O590C27O620C29O623C33O648C35O660C39O653C44O681C48O693C53O697C59O716C66O726C69O721C74O742C78O750C83O761C92O785C105O785C117O824C120O818C126O828C130O872C137O882C140O877C143O855C149O887C155O896C159O750C165O925C172O935C178O940C182O669C187O635C190O1024C197O1034C202O1055C208O1078C211O1072C218O581C222O1093,,
code-creation,LazyCompile,10,332814,0xe6a61b9fa6,51,Mime.lookup C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime\\mime.js:69:33,0xe6a61a9a58,~
code-source-info,0xe6a61b9fa6,226,1860,1999,C0O1896C13O1896C20O1922C25O1923C30O1953C37O1958C44O1967C46O1984C50O1997,,
code-creation,Function,11,332967,0x225ca7aeea0,3732,Module._extensions..js node:internal/modules/cjs/loader:1110:37,0x334160a07d8,^
code-source-info,0x225ca7aeea0,99,35777,37521,,,
code-creation,Function,11,332991,0x225ca7afda0,288, node:zlib:805:3,0x20cab79e330,^
code-source-info,0x225ca7afda0,206,25255,25344,,,
code-creation,Function,11,333011,0x225ca7aff20,264,createConvenienceMethod node:zlib:788:33,0x20cab79db10,^
code-source-info,0x225ca7aff20,206,24796,25166,,,
code-creation,Function,11,333028,0x225ca7b00a0,252,createProperty node:zlib:873:24,0x20cab79dc80,^
code-source-info,0x225ca7b00a0,206,27648,27797,,,
code-creation,Function,11,333056,0x225ca7b0200,1624,Mime.define C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime\\mime.js:21:34,0xe6a61a9920,^
code-source-info,0x225ca7b0200,226,571,1094,,,
code-creation,Eval,10,333694,0xe6a61bae06,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\node_modules\\ms\\index.js:1:1,0xe6a61bac20,~
script-source,227,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\node_modules\\ms\\index.js,/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val\x2C options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms\x2C msAbs\x2C d\x2C 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms\x2C msAbs\x2C h\x2C 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms\x2C msAbs\x2C m\x2C 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms\x2C msAbs\x2C s\x2C 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms\x2C msAbs\x2C n\x2C name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n
code-source-info,0xe6a61bae06,227,0,3024,C0O0C4O3024,,
code-creation,Function,10,333868,0xe6a61bb096,83, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\node_modules\\ms\\index.js:1:1,0xe6a61bad80,~
code-source-info,0xe6a61bb096,227,0,3024,C0O0C29O29C33O29C35O43C37O45C40O43C42O59C44O61C47O59C49O75C51O77C54O75C56O91C58O93C61O91C63O106C68O108C71O106C73O405C77O420C82O3023,,
code-creation,Eval,10,334739,0xe6a61bc146,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\range-parser\\index.js:1:1,0xe6a61bbfb0,~
script-source,228,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\range-parser\\index.js,/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse "Range" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size\x2C str\x2C options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string')\n  }\n\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split('\x2C')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0\x2C index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0]\x2C 10)\n    var end = parseInt(range[1]\x2C 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start\x2C\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0\x2C i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index\x2C range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range\x2C index) {\n  return {\n    start: range.start\x2C\n    end: range.end\x2C\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start\x2C\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a\x2C b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a\x2C b) {\n  return a.start - b.start\n}\n
code-source-info,0xe6a61bc146,228,0,2900,C0O0C4O2900,,
code-creation,Function,10,334870,0xe6a61bc3de,48, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\range-parser\\index.js:1:1,0xe6a61bc0c0,~
code-source-info,0xe6a61bc3de,228,0,2900,C0O0C40O188C42O203C47O2899,,
code-creation,Eval,10,335243,0xe6a61bcfbe,6, :1:1,0xe6a61bce28,~
script-source,229,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function (arg0) {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0xe6a61bcfbe,229,0,163,C0O0C5O163,,
code-creation,Function,10,335276,0xe6a61bd096,30, :1:20,0xe6a61bcf38,~
code-source-info,0xe6a61bd096,229,19,162,C0O19C25O67C29O160,,
code-creation,Eval,10,336223,0xe6a61be92e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\proxy-addr\\index.js:1:1,0xe6a61be708,~
script-source,230,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\proxy-addr\\index.js,/*!\n * proxy-addr\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = proxyaddr\nmodule.exports.all = alladdrs\nmodule.exports.compile = compile\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar forwarded = require('forwarded')\nvar ipaddr = require('ipaddr.js')\n\n/**\n * Variables.\n * @private\n */\n\nvar DIGIT_REGEXP = /^[0-9]+$/\nvar isip = ipaddr.isValid\nvar parseip = ipaddr.parse\n\n/**\n * Pre-defined IP ranges.\n * @private\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16'\x2C 'fe80::/10']\x2C\n  loopback: ['127.0.0.1/8'\x2C '::1/128']\x2C\n  uniquelocal: ['10.0.0.0/8'\x2C '172.16.0.0/12'\x2C '192.168.0.0/16'\x2C 'fc00::/7']\n}\n\n/**\n * Get all addresses in the request\x2C optionally stopping\n * at the first untrusted.\n *\n * @param {Object} request\n * @param {Function|Array|String} [trust]\n * @public\n */\n\nfunction alladdrs (req\x2C trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i]\x2C i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES\x2C val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    trust.splice.apply(trust\x2C [i\x2C 1].concat(val))\n    i += val.length - 1\n  }\n\n  return compileTrust(compileRangeSubnets(trust))\n}\n\n/**\n * Compile `arr` elements into range subnets.\n *\n * @param {Array} arr\n * @private\n */\n\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0\x2C pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1\x2C note.length)\n    : null\n\n  if (range === null) {\n    range = max\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range\x2C 10)\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range)\n  } else {\n    range = null\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note)\n  }\n\n  return [ip\x2C range]\n}\n\n/**\n * Parse netmask string into CIDR range.\n *\n * @param {String} netmask\n * @private\n */\n\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req\x2C trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req\x2C trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4'\n            ? ip.toIPv4Address()\n            : ip.toIPv4MappedAddress()\n        }\n\n        trusted = ipconv\n      }\n\n      if (trusted.match(subnetip\x2C subnetrange)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Compile trust function for single subnet.\n *\n * @param {Object} subnet\n * @private\n */\n\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip\x2C subnetrange)\n  }\n}\n
code-source-info,0xe6a61be92e,230,0,6000,C0O0C4O6000,,
code-creation,Function,10,336458,0xe6a61beeb6,135, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\proxy-addr\\index.js:1:1,0xe6a61be8a8,~
code-source-info,0xe6a61beeb6,230,0,6000,C0O0C64O145C66O160C70O179C77O191C81O209C88O225C92O297C95O297C99O297C101O331C104O331C109O407C113O407C115O436C119O429C121O465C125O458C127O535C131O535C134O5999,,
code-creation,Eval,10,337025,0x96d32106ce,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\forwarded\\index.js:1:1,0x96d3210568,~
script-source,231,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\forwarded\\index.js,/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request\x2C using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = getSocketAddr(req)\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\nfunction getSocketAddr (req) {\n  return req.socket\n    ? req.socket.remoteAddress\n    : req.connection.remoteAddress\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses\x2C backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* \x2C */\n        if (start !== end) {\n          list.push(header.substring(start\x2C end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start\x2C end))\n  }\n\n  return list\n}\n
code-source-info,0x96d32106ce,231,0,1578,C0O0C4O1578,,
code-creation,Function,10,337113,0x96d321085e,30, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\forwarded\\index.js:1:1,0x96d3210648,~
code-source-info,0x96d321085e,231,0,1578,C0O0C22O144C24O159C29O1577,,
code-creation,Eval,10,338227,0x96d3213e76,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:1,0x96d3213bd0,~
script-source,232,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ipaddr.js\\lib\\ipaddr.js,(function() {\n  var expandIPv6\x2C ipaddr\x2C ipv4Part\x2C ipv4Regexes\x2C ipv6Part\x2C ipv6Regexes\x2C matchCIDR\x2C root\x2C zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== "undefined" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first\x2C second\x2C partSize\x2C cidrBits) {\n    var part\x2C shift;\n    if (first.length !== second.length) {\n      throw new Error("ipaddr: cannot match CIDR for objects with different lengths");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address\x2C rangeList\x2C defaultName) {\n    var k\x2C len\x2C rangeName\x2C rangeSubnets\x2C subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0\x2C len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address\x2C subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k\x2C len\x2C octet;\n      if (octets.length !== 4) {\n        throw new Error("ipaddr: ipv4 octet count should be 4");\n      }\n      for (k = 0\x2C len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error("ipaddr: ipv4 octet should fit in 8 bits");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(".");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other\x2C cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other\x2C other = ref[0]\x2C cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error("ipaddr: cannot match ipv4 address with non-ipv4 one");\n      }\n      return matchCIDR(this.octets\x2C other.octets\x2C 8\x2C cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0\x2C 0\x2C 0\x2C 0])\x2C 8]]\x2C\n      broadcast: [[new IPv4([255\x2C 255\x2C 255\x2C 255])\x2C 32]]\x2C\n      multicast: [[new IPv4([224\x2C 0\x2C 0\x2C 0])\x2C 4]]\x2C\n      linkLocal: [[new IPv4([169\x2C 254\x2C 0\x2C 0])\x2C 16]]\x2C\n      loopback: [[new IPv4([127\x2C 0\x2C 0\x2C 0])\x2C 8]]\x2C\n      carrierGradeNat: [[new IPv4([100\x2C 64\x2C 0\x2C 0])\x2C 10]]\x2C\n      "private": [[new IPv4([10\x2C 0\x2C 0\x2C 0])\x2C 8]\x2C [new IPv4([172\x2C 16\x2C 0\x2C 0])\x2C 12]\x2C [new IPv4([192\x2C 168\x2C 0\x2C 0])\x2C 16]]\x2C\n      reserved: [[new IPv4([192\x2C 0\x2C 0\x2C 0])\x2C 24]\x2C [new IPv4([192\x2C 0\x2C 2\x2C 0])\x2C 24]\x2C [new IPv4([192\x2C 88\x2C 99\x2C 0])\x2C 24]\x2C [new IPv4([198\x2C 51\x2C 100\x2C 0])\x2C 24]\x2C [new IPv4([203\x2C 0\x2C 113\x2C 0])\x2C 24]\x2C [new IPv4([240\x2C 0\x2C 0\x2C 0])\x2C 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this\x2C this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse("::ffff:" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr\x2C i\x2C k\x2C octet\x2C stop\x2C zeros\x2C zerotable;\n      zerotable = {\n        0: 8\x2C\n        128: 7\x2C\n        192: 6\x2C\n        224: 5\x2C\n        240: 4\x2C\n        248: 3\x2C\n        252: 2\x2C\n        254: 1\x2C\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = "(0?\\\\d+|0x[a-f0-9]+)";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp("^" + ipv4Part + "\\\\." + ipv4Part + "\\\\." + ipv4Part + "\\\\." + ipv4Part + "$"\x2C 'i')\x2C\n    longValue: new RegExp("^" + ipv4Part + "$"\x2C 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match\x2C parseIntAuto\x2C part\x2C shift\x2C value;\n    parseIntAuto = function(string) {\n      if (string[0] === "0" && string[1] !== "x") {\n        return parseInt(string\x2C 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k\x2C len\x2C ref\x2C results;\n        ref = match.slice(1\x2C 6);\n        results = [];\n        for (k = 0\x2C len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error("ipaddr: address outside defined range");\n      }\n      return ((function() {\n        var k\x2C results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts\x2C zoneId) {\n      var i\x2C k\x2C l\x2C len\x2C part\x2C ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error("ipaddr: ipv6 part count should be 8 or 16");\n      }\n      ref = this.parts;\n      for (l = 0\x2C len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error("ipaddr: ipv6 part should fit in 16 bits");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/\x2C '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function() {\n      var bestMatchIndex\x2C bestMatchLength\x2C match\x2C regex\x2C string;\n      regex = /((^|:)(0(:|$)){2\x2C})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n      while ((match = regex.exec(string))) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n      if (bestMatchLength < 0) {\n        return string;\n      }\n      return string.substring(0\x2C bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes\x2C k\x2C len\x2C part\x2C ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0\x2C len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr\x2C part\x2C suffix;\n      addr = ((function() {\n        var k\x2C len\x2C ref\x2C results;\n        ref = this.parts;\n        results = [];\n        for (k = 0\x2C len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(":");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function() {\n      var addr\x2C part\x2C suffix;\n      addr = ((function() {\n        var k\x2C len\x2C ref\x2C results;\n        ref = this.parts;\n        results = [];\n        for (k = 0\x2C len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4\x2C '0'));\n        }\n        return results;\n      }).call(this)).join(":");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other\x2C cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other\x2C other = ref[0]\x2C cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error("ipaddr: cannot match ipv6 address with non-ipv6 one");\n      }\n      return matchCIDR(this.parts\x2C other.parts\x2C 16\x2C cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 128]\x2C\n      linkLocal: [new IPv6([0xfe80\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 10]\x2C\n      multicast: [new IPv6([0xff00\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 8]\x2C\n      loopback: [new IPv6([0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1])\x2C 128]\x2C\n      uniqueLocal: [new IPv6([0xfc00\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 7]\x2C\n      ipv4Mapped: [new IPv6([0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0xffff\x2C 0\x2C 0])\x2C 96]\x2C\n      rfc6145: [new IPv6([0\x2C 0\x2C 0\x2C 0\x2C 0xffff\x2C 0\x2C 0\x2C 0])\x2C 96]\x2C\n      rfc6052: [new IPv6([0x64\x2C 0xff9b\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 96]\x2C\n      '6to4': [new IPv6([0x2002\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 16]\x2C\n      teredo: [new IPv6([0x2001\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 32]\x2C\n      reserved: [[new IPv6([0x2001\x2C 0xdb8\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this\x2C this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high\x2C low\x2C ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error("ipaddr: trying to convert a generic ipv6 address to ipv4");\n      }\n      ref = this.parts.slice(-2)\x2C high = ref[0]\x2C low = ref[1];\n      return new ipaddr.IPv4([high >> 8\x2C high & 0xff\x2C low >> 8\x2C low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr\x2C i\x2C k\x2C part\x2C stop\x2C zeros\x2C zerotable;\n      zerotable = {\n        0: 16\x2C\n        32768: 15\x2C\n        49152: 14\x2C\n        57344: 13\x2C\n        61440: 12\x2C\n        63488: 11\x2C\n        64512: 10\x2C\n        65024: 9\x2C\n        65280: 8\x2C\n        65408: 7\x2C\n        65472: 6\x2C\n        65504: 5\x2C\n        65520: 4\x2C\n        65528: 3\x2C\n        65532: 2\x2C\n        65534: 1\x2C\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = "(?:[0-9a-f]+::?)+";\n\n  zoneIndex = "%[0-9a-z]{1\x2C}";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex\x2C 'i')\x2C\n    "native": new RegExp("^(::)?(" + ipv6Part + ")?([0-9a-f]+)?(::)?(" + zoneIndex + ")?$"\x2C 'i')\x2C\n    transitional: new RegExp(("^((?:" + ipv6Part + ")|(?:::)(?:" + ipv6Part + ")?)") + (ipv4Part + "\\\\." + ipv4Part + "\\\\." + ipv4Part + "\\\\." + ipv4Part) + ("(" + zoneIndex + ")?$")\x2C 'i')\n  };\n\n  expandIPv6 = function(string\x2C parts) {\n    var colonCount\x2C lastColon\x2C part\x2C replacement\x2C replacementCount\x2C zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/\x2C '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':'\x2C lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0\x2C 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2\x2C 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::'\x2C replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0\x2C -1);\n    }\n    parts = (function() {\n      var k\x2C len\x2C ref\x2C results;\n      ref = string.split(":");\n      results = [];\n      for (k = 0\x2C len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part\x2C 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts\x2C\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr\x2C k\x2C len\x2C match\x2C octet\x2C octets\x2C zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string\x2C 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0\x2C -1) + zoneId\x2C 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2])\x2C parseInt(match[3])\x2C parseInt(match[4])\x2C parseInt(match[5])];\n        for (k = 0\x2C len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts\x2C\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr\x2C e;\n    if (typeof string === "string" && string.indexOf(":") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts\x2C addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error("ipaddr: string is not formatted like ip address");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error("ipaddr: string is not formatted like ip address");\n    }\n    return new this(addr.parts\x2C addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength\x2C match\x2C parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1])\x2C maskLength];\n        Object.defineProperty(parsed\x2C 'toString'\x2C {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error("ipaddr: string is not formatted like an IPv4 CIDR range");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount\x2C j\x2C octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0\x2C 0\x2C 0\x2C 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2\x2C prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr\x2C error\x2C i\x2C ipInterfaceOctets\x2C octets\x2C subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i]\x2C 10) | parseInt(subnetMaskOctets[i]\x2C 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr\x2C error\x2C i\x2C ipInterfaceOctets\x2C octets\x2C subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i]\x2C 10) & parseInt(subnetMaskOctets[i]\x2C 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength\x2C match\x2C parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1])\x2C maskLength];\n        Object.defineProperty(parsed\x2C 'toString'\x2C {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error("ipaddr: string is not formatted like an IPv6 CIDR range");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error("ipaddr: the address has neither IPv6 nor IPv4 format");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error("ipaddr: the address has neither IPv6 nor IPv4 CIDR format");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error("ipaddr: the binary input is neither an IPv6 nor IPv4 address");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n
code-source-info,0x96d3213e76,232,0,19333,C0O0C4O19333,,
code-creation,Function,10,338926,0x96d3213f3e,26, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:1,0x96d3213df0,~
code-source-info,0x96d3213f3e,232,0,19333,C0O0C9O0C14O19321C19O19321C25O19332,,
code-creation,Function,10,338946,0x96d3215236,685, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:10,0x96d3213ea8,~
code-source-info,0x96d
code-creation,Function,10,339056,0x96d3216c66,499, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ipaddr.js\\lib\\ipaddr.js:199:26,0x96d3214198,~
code-source-info,0x96d3216c66,232,5665,11106,C0O5665C5O6383C14O6398C18O6451C27O6470C31O6576C40O6602C44O7204C53O7226C57O7503C66O7532C70O8008C79O8038C83O8531C92O8547C96O8898C106O8945C113O8950C120O8946C135O9005C142O9010C149O9006C164O9069C171O9074C178O9070C193O9131C200O9136C207O9132C222O9193C229O9198C236O9194C251O9257C258O9262C265O9258C280O9319C287O9324C294O9320C309O9381C316O9386C323O9382C338O9445C345O9450C352O9446C367O9506C374O9511C381O9507C396O9569C410O9575C417O9571C440O8922C444O9638C453O9654C457O9745C466O9775C470O9851C479O9875C483O10208C492O10245C496O11089C498O11101,,
code-creation,Function,10,339119,0x96d3218446,688, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ipaddr.js\\lib\\ipaddr.js:56:26,0x96d3214070,~
code-source-info,0x96d3218446,232,1503,4290,C0O1503C5O1928C14O1943C18O1996C27O2015C31O2083C40O2112C44O2174C53O2196C57O2263C66O2279C70O2631C80O2678C94O2684C101O2680C122O2726C136O2732C143O2728C164O2783C178O2789C185O2785C206O2833C220O2839C227O2835C248O2885C262O2891C269O2887C290O2941C304O2947C311O2943C332O2993C346O2999C353O2995C378O3029C385O3025C410O3062C417O3058C438O3108C452O3114C459O3110C484O3146C491O3142C516O3178C523O3174C548O3212C555O3208C580O3247C587O3243C612O3281C619O3277C642O2655C646O3324C655O3340C659O3431C668O3461C672O3556C681O3593C685O4273C687O4285,,
code-creation,LazyCompile,10,339252,0x96d321a456,96,IPv4 C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ipaddr.js\\lib\\ipaddr.js:57:18,0x96d3216f68,~
code-source-info,0x96d321a456,232,1525,1917,C0O1578C7O1585C12O1602C21O1608C26O1602C27O1678C29O1698C34O1708C36O1708C41O1730C43O1744C47O1757C51O1766C60O1784C65O1806C74O1812C79O1806C80O1716C85O1673C88O1890C90O1902C95O1916,,
code-creation,Function,11,339351,0x225ca7b08c0,680,IPv4 C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ipaddr.js\\lib\\ipaddr.js:57:18,0x96d3216f68,^
code-source-info,0x225ca7b08c0,232,1525,1917,,,
code-creation,Function,11,339382,0x225ca7b0be0,836,createPool node:buffer:150:20,0x6682ea56c0,^
code-source-info,0x225ca7b0be0,18,3973,4118,,,
code-creation,Function,11,339399,0x225ca7b0fa0,44,prepareObjectStackTrace C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:405:34,0x226457ba98,^
code-source-info,0x225ca7b0fa0,141,7983,8014,,,
code-creation,Function,11,339426,0x225ca7b1040,656,getStack C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:381:19,0x226457ba48,^
code-source-info,0x225ca7b1040,141,7502,7903,,,
code-creation,Function,11,339452,0x225ca7b1340,696,callSiteLocation C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:267:27,0x226457b8b8,^
code-source-info,0x225ca7b1340,141,5193,5537,,,
code-creation,LazyCompile,10,339586,0x96d321afe6,191,IPv6 C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ipaddr.js\\lib\\ipaddr.js:200:18,0x96d3215680,~
code-source-info,0x96d321afe6,232,5687,6372,C0O5756C7O5763C12O5781C14O5792C18O5811C21O5824C23O5824C28O5860C33O5866C40O5877C43O5881C49O5897C52O5894C55O5887C59O5866C64O5833C71O5806C76O5937C83O5944C88O5961C90O5972C96O6004C105O6010C110O6004C111O6091C116O6109C118O6126C123O6136C125O6136C130O6158C132O6168C136O6181C140O6190C151O6206C156O6231C165O6237C170O6231C171O6144C176O6104C179O6315C183O6337C185O6349C190O6371,,
code-creation,LazyCompile,10,339925,0x96d321bdb6,14,createETagGenerator C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:272:30,0x2f65a736168,~
code-source-info,0x96d321bdb6,197,5467,5651,C0O5467C9O5481C13O5649,,
code-creation,Eval,10,340026,0x96d321c13e,6, :1:1,0x96d321bfa8,~
script-source,233,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function (arg0\x2C arg1) {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0x96d321c13e,233,0,169,C0O0C5O169,,
code-creation,Function,10,340059,0x96d321c216,30, :1:20,0x96d321c0b8,~
code-source-info,0x96d321c216,233,19,168,C0O19C25O67C29O166,,
code-creation,Eval,10,340131,0x96d321c5e6,6, :1:1,0x96d321c450,~
script-source,234,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function (arg0\x2C arg1) {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0x96d321c5e6,234,0,169,C0O0C5O169,,
code-creation,Function,10,340161,0x96d321c6be,30, :1:20,0x96d321c560,~
code-source-info,0x96d321c6be,234,19,168,C0O19C25O67C29O166,,
code-creation,LazyCompile,10,340590,0x96d321d43e,27, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:489:25,0x2bdba108668,~
code-source-info,0x96d321d43e,144,10843,11148,C0O10843C9O10855C17O10859C21O10867C26O11147,,
code-creation,Function,11,340653,0x225ca7b1660,260, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:489:25,0x2bdba108668,^
code-source-info,0x225ca7b1660,144,10843,11148,,,
code-creation,Function,11,340689,0x225ca7b17e0,1320,IPv6 C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\ipaddr.js\\lib\\ipaddr.js:200:18,0x96d3215680,^
code-source-info,0x225ca7b17e0,232,5687,6372,,,
code-creation,Function,11,340712,0x225ca7b1d80,348,createArgumentsString C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:71:32,0x226457b660,^
code-source-info,0x225ca7b1d80,141,1255,1369,,,
code-creation,Function,11,340738,0x225ca7b1f40,912,wrapfunction C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:413:23,0x226457bae8,^
code-source-info,0x225ca7b1f40,141,8102,8686,,,
tick,0x7fffb2a0db64,341095,1,0x7ff6a79f5df0,6,0x7ff6a82ef2d0,0x225ca792fab,0x225ca7966fa,0x225ca7af0c9,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x22645774ff,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2264576859,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x226457464f,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x2264572d77,0x3103a7b5c9
code-creation,Eval,10,341497,0x96d321ea86,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\request.js:1:1,0x96d321e8c0,~
script-source,235,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\request.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts');\nvar deprecate = require('depd')('express');\nvar isIP = require('net').isIP;\nvar typeis = require('type-is');\nvar http = require('http');\nvar fresh = require('fresh');\nvar parseRange = require('range-parser');\nvar parse = require('parseurl');\nvar proxyaddr = require('proxy-addr');\n\n/**\n * Request prototype.\n * @public\n */\n\nvar req = Object.create(http.IncomingMessage.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = req\n\n/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased\x2C\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => "text/plain"\n *\n *     req.get('content-type');\n *     // => "text/plain"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */\n\nreq.get =\nreq.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer\n        || this.headers.referer;\n    default:\n      return this.headers[lc];\n  }\n};\n\n/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable\x2C returning\n * the best match when true\x2C otherwise `undefined`\x2C in which\n * case you should respond with 406 "Not Acceptable".\n *\n * The `type` value may be a single MIME type string\n * such as "application/json"\x2C an extension name\n * such as "json"\x2C a comma-delimited list such as "json\x2C html\x2C text/plain"\x2C\n * an argument list such as `"json"\x2C "html"\x2C "text/plain"`\x2C\n * or an array `["json"\x2C "html"\x2C "text/plain"]`. When a list\n * or array is given\x2C the _best_ match\x2C if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => "html"\n *\n *     // Accept: text/*\x2C application/json\n *     req.accepts('html');\n *     // => "html"\n *     req.accepts('text/html');\n *     // => "text/html"\n *     req.accepts('json\x2C text');\n *     // => "json"\n *     req.accepts('application/json');\n *     // => "application/json"\n *\n *     // Accept: text/*\x2C application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5\x2C application/json\n *     req.accepts(['html'\x2C 'json']);\n *     req.accepts('html'\x2C 'json');\n *     req.accepts('html\x2C json');\n *     // => "json"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */\n\nreq.accepts = function(){\n  var accept = accepts(this);\n  return accept.types.apply(accept\x2C arguments);\n};\n\n/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsEncodings = function(){\n  var accept = accepts(this);\n  return accept.encodings.apply(accept\x2C arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings\x2C\n  'req.acceptsEncoding: Use acceptsEncodings instead');\n\n/**\n * Check if the given `charset`s are acceptable\x2C\n * otherwise you should respond with 406 "Not Acceptable".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsCharsets = function(){\n  var accept = accepts(this);\n  return accept.charsets.apply(accept\x2C arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets\x2C\n  'req.acceptsCharset: Use acceptsCharsets instead');\n\n/**\n * Check if the given `lang`s are acceptable\x2C\n * otherwise you should respond with 406 "Not Acceptable".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsLanguages = function(){\n  var accept = accepts(this);\n  return accept.languages.apply(accept\x2C arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages\x2C\n  'req.acceptsLanguage: Use acceptsLanguages instead');\n\n/**\n * Parse Range header field\x2C capping to the given `size`.\n *\n * Unspecified ranges such as "0-" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned\x2C `-1` when unsatisfiable\x2C\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned\x2C the array has a "type" property which is the type of\n * range that is required (most commonly\x2C "bytes"). Each array element is an object\n * with a "start" and "end" property for the portion of the range.\n *\n * The "combine" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive\x2C so for example "Range: users=0-3"\n * should respond with 4 users when available\x2C not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */\n\nreq.range = function range(size\x2C options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size\x2C range\x2C options);\n};\n\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders\x2C ex: _/user/:id_\n *  - Checks body params\x2C ex: id=12\x2C {"id":12}\n *  - Checks query string params\x2C ex: ?id=12\n *\n * To utilize request bodies\x2C `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */\n\nreq.param = function param(name\x2C defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n\n  var args = arguments.length === 1\n    ? 'name'\n    : 'name\x2C default';\n  deprecate('req.param(' + args + '): Use req.params\x2C req.body\x2C or req.query instead');\n\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n\n  return defaultValue;\n};\n\n/**\n * Check if the incoming request contains the "Content-Type"\n * header field\x2C and it contains the given mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nreq.is = function is(types) {\n  var arr = types;\n\n  // support flattened arguments\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this\x2C arr);\n};\n\n/**\n * Return the protocol string "http" or "https"\n * when requested with TLS. When the "trust proxy"\n * setting trusts the socket address\x2C the\n * "X-Forwarded-Proto" header field will be trusted\n * and used if present.\n *\n * If you're running behind a reverse proxy that\n * supplies https for you this may be enabled.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req\x2C 'protocol'\x2C function protocol(){\n  var proto = this.connection.encrypted\n    ? 'https'\n    : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress\x2C 0)) {\n    return proto;\n  }\n\n  // Note: X-Forwarded-Proto is normally only ever a\n  //       single value\x2C but this is to be safe.\n  var header = this.get('X-Forwarded-Proto') || proto\n  var index = header.indexOf('\x2C')\n\n  return index !== -1\n    ? header.substring(0\x2C index).trim()\n    : header.trim()\n});\n\n/**\n * Short-hand for:\n *\n *    req.protocol === 'https'\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req\x2C 'secure'\x2C function secure(){\n  return this.protocol === 'https';\n});\n\n/**\n * Return the remote address from the trusted proxy.\n *\n * The is the remote address on the socket unless\n * "trust proxy" is set.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req\x2C 'ip'\x2C function ip(){\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this\x2C trust);\n});\n\n/**\n * When "trust proxy" is set\x2C trusted proxy addresses + client.\n *\n * For example if the value were "client\x2C proxy1\x2C proxy2"\n * you would receive the array `["client"\x2C "proxy1"\x2C "proxy2"]`\n * where "proxy2" is the furthest down-stream and "proxy1" and\n * "proxy2" were trusted.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req\x2C 'ips'\x2C function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this\x2C trust);\n\n  // reverse the order (to farthest -> closest)\n  // and remove socket address\n  addrs.reverse().pop()\n\n  return addrs\n});\n\n/**\n * Return subdomains as an array.\n *\n * Subdomains are the dot-separated parts of the host before the main domain of\n * the app. By default\x2C the domain of the app is assumed to be the last two\n * parts of the host. This can be changed by setting "subdomain offset".\n *\n * For example\x2C if the domain is "tobi.ferrets.example.com":\n * If "subdomain offset" is not set\x2C req.subdomains is `["ferrets"\x2C "tobi"]`.\n * If "subdomain offset" is 3\x2C req.subdomains is `["tobi"]`.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req\x2C 'subdomains'\x2C function subdomains() {\n  var hostname = this.hostname;\n\n  if (!hostname) return [];\n\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname)\n    ? hostname.split('.').reverse()\n    : [hostname];\n\n  return subdomains.slice(offset);\n});\n\n/**\n * Short-hand for `url.parse(req.url).pathname`.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req\x2C 'path'\x2C function path() {\n  return parse(this).pathname;\n});\n\n/**\n * Parse the "Host" header field to a hostname.\n *\n * When the "trust proxy" setting trusts the socket\n * address\x2C the "X-Forwarded-Host" header field will\n * be trusted.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req\x2C 'hostname'\x2C function hostname(){\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress\x2C 0)) {\n    host = this.get('Host');\n  } else if (host.indexOf('\x2C') !== -1) {\n    // Note: X-Forwarded-Host is normally only ever a\n    //       single value\x2C but this is to be safe.\n    host = host.substring(0\x2C host.indexOf('\x2C')).trimRight()\n  }\n\n  if (!host) return;\n\n  // IPv6 literal support\n  var offset = host[0] === '['\n    ? host.indexOf(']') + 1\n    : 0;\n  var index = host.indexOf(':'\x2C offset);\n\n  return index !== -1\n    ? host.substring(0\x2C index)\n    : host;\n});\n\n// TODO: change req.host to return host in next major\n\ndefineGetter(req\x2C 'host'\x2C deprecate.function(function host(){\n  return this.hostname;\n}\x2C 'req.host: Use req.hostname instead'));\n\n/**\n * Check if the request is fresh\x2C aka\n * Last-Modified and/or the ETag\n * still match.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req\x2C 'fresh'\x2C function(){\n  var method = this.method;\n  var res = this.res\n  var status = res.statusCode\n\n  // GET or HEAD for weak freshness validation only\n  if ('GET' !== method && 'HEAD' !== method) return false;\n\n  // 2xx or 304 as per rfc2616 14.26\n  if ((status >= 200 && status < 300) || 304 === status) {\n    return fresh(this.headers\x2C {\n      'etag': res.get('ETag')\x2C\n      'last-modified': res.get('Last-Modified')\n    })\n  }\n\n  return false;\n});\n\n/**\n * Check if the request is stale\x2C aka\n * "Last-Modified" and / or the "ETag" for the\n * resource has changed.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req\x2C 'stale'\x2C function stale(){\n  return !this.fresh;\n});\n\n/**\n * Check if the request was an _XMLHttpRequest_.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req\x2C 'xhr'\x2C function xhr(){\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj\x2C name\x2C getter) {\n  Object.defineProperty(obj\x2C name\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: getter\n  });\n}\n
code-source-info,0x96d321ea86,235,0,12505,C0O0C4O12505,,
code-creation,Function,10,341942,0x96d321f42e,479, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\request.js:1:1,0x96d321ea00,~
code-source-info,0x96d321f42e
code-creation,Eval,10,342931,0x96d322154e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\accepts\\index.js:1:1,0x96d32213b8,~
script-source,236,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\accepts\\index.js,/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable\x2C returning\n * the best match when true\x2C otherwise `undefined`\x2C in which\n * case you should respond with 406 "Not Acceptable".\n *\n * The `type` value may be a single mime type string\n * such as "application/json"\x2C the extension name\n * such as "json" or an array `["json"\x2C "html"\x2C "text/plain"]`. When a list\n * or array is given the _best_ match\x2C if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => "html"\n *\n *     // Accept: text/*\x2C application/json\n *     this.types('html');\n *     // => "html"\n *     this.types('text/html');\n *     // => "text/html"\n *     this.types('json'\x2C 'text');\n *     // => "json"\n *     this.types('application/json');\n *     // => "application/json"\n *\n *     // Accept: text/*\x2C application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5\x2C application/json\n *     this.types(['html'\x2C 'json']);\n *     this.types('html'\x2C 'json');\n *     // => "json"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types\x2C return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header\x2C return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip\x2C deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip'\x2C 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings\x2C return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8\x2C iso-8859-1;q=0.2\x2C utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8'\x2C 'utf-7'\x2C 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets\x2C return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8\x2C es\x2C pt`\n * an array sorted by quality is returned:\n *\n *     ['es'\x2C 'pt'\x2C 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages\x2C return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n
code-source-info,0x96d322154e,236,0,5252,C0O0C4O5252,,
code-creation,Function,10,343162,0x96d3221c9e,201, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\accepts\\index.js:1:1,0x96d32214c8,~
code-source-info,0x96d3221c9e,236,0,5252,C0O0C23O194C26O194C30O194C32O227C35O227C39O227C41O289C43O304C47O1721C50O1729C58O1754C68O1770C74O1744C78O2701C81O2709C89O2738C99O2758C105O2728C109O3534C112O3542C120O3570C130O3589C136O3560C140O4312C143O4320C151O4345C159O4371C167O4400C177O4420C183O4390C189O4361C195O4335C200O5251,,
code-creation,Eval,10,343839,0x96d3222ece,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\index.js:1:1,0x96d3222d38,~
script-source,237,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\index.js,/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nvar preferredCharsets = require('./lib/charset')\nvar preferredEncodings = require('./lib/encoding')\nvar preferredLanguages = require('./lib/language')\nvar preferredMediaTypes = require('./lib/mediaType')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  return preferredCharsets(this.request.headers['accept-charset']\x2C available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  return preferredEncodings(this.request.headers['accept-encoding']\x2C available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  return preferredLanguages(this.request.headers['accept-language']\x2C available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  return preferredMediaTypes(this.request.headers.accept\x2C available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n
code-source-info,0x96d3222ece,237,0,2451,C0O0C4O2451,,
code-creation,Function,10,343948,0x96d322331e,386, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\index.js:1:1,0x96d3222e48,~
code-source-info,0x96d322331e,237,0,2451,C0O0C11O208C14O208C18O208C20O258C23O258C27O258C29O309C32O309C36O309C38O361C41O361C45O361C47O428C49O443C53O464C60O483C64O733C67O744C76O762C80O860C83O871C92O890C96O1006C99O1017C108O1036C112O1136C115O1147C124O1167C128O1286C131O1297C140O1316C144O1416C147O1427C156O1447C160O1566C163O1577C172O1597C176O1699C179O1710C188O1731C192O1867C195O1878C203O1918C208O1928C212O1905C216O1937C219O1948C227O1989C232O1999C236O1976C240O2009C243O2020C251O2061C256O2071C260O2048C264O2081C267O2092C275O2134C280O2144C284O2121C288O2155C291O2166C299O2207C304O2217C308O2194C312O2227C315O2238C323O2280C328O2290C332O2267C336O2301C339O2312C347O2354C352O2364C356O2341C360O2375C363O2386C371O2429C376O2439C380O2416C385O2450,,
code-creation,Eval,10,344475,0x96d3224016,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\charset.js:1:1,0x96d3223e50,~
script-source,238,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\charset.js,/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split('\x2C');\n\n  for (var i = 0\x2C j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim()\x2C i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str\x2C i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset\x2C\n    q: q\x2C\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset\x2C accepted\x2C index) {\n  var priority = {o: -1\x2C q: 0\x2C s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset\x2C accepted[i]\x2C index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset\x2C spec\x2C index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index\x2C\n    o: spec.i\x2C\n    q: spec.q\x2C\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept\x2C provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type\x2C index) {\n    return getCharsetPriority(type\x2C accepts\x2C index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a\x2C b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n
code-source-info,0x96d3224016,238,0,3081,C0O0C4O3081,,
code-creation,Function,10,344614,0x96d322439e,77, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\charset.js:1:1,0x96d3223f90,~
code-source-info,0x96d322439e,238,0,3081,C0O0C52O223C54O238C58O266C65O292C69O382C73O382C76O3080,,
code-creation,Eval,10,345036,0x96d322504e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\encoding.js:1:1,0x96d3224e88,~
script-source,239,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\encoding.js,/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split('\x2C');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0\x2C j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim()\x2C i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity'\x2C encoding);\n      minQuality = Math.min(minQuality\x2C encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header\x2C\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity'\x2C\n      q: minQuality\x2C\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str\x2C i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding\x2C\n    q: q\x2C\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding\x2C accepted\x2C index) {\n  var priority = {o: -1\x2C q: 0\x2C s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding\x2C accepted[i]\x2C index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding\x2C spec\x2C index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index\x2C\n    o: spec.i\x2C\n    q: spec.q\x2C\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept\x2C provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type\x2C index) {\n    return getEncodingPriority(type\x2C accepts\x2C index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a\x2C b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n
code-source-info,0x96d322504e,239,0,3506,C0O0C4O3506,,
code-creation,Function,10,345188,0x96d32253d6,77, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\encoding.js:1:1,0x96d3224fc8,~
code-source-info,0x96d32253d6,239,0,3506,C0O0C52O223C54O238C58O267C65O294C69O386C73O386C76O3505,,
code-creation,Eval,10,345598,0x96d32260be,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\language.js:1:1,0x96d3225ef8,~
script-source,240,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\language.js,/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split('\x2C');\n\n  for (var i = 0\x2C j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim()\x2C i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str\x2C i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1]\n  var suffix = match[2]\n  var full = prefix\n\n  if (suffix) full += "-" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix\x2C\n    suffix: suffix\x2C\n    q: q\x2C\n    i: i\x2C\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language\x2C accepted\x2C index) {\n  var priority = {o: -1\x2C q: 0\x2C s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language\x2C accepted[i]\x2C index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language\x2C spec\x2C index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index\x2C\n    o: spec.i\x2C\n    q: spec.q\x2C\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept\x2C provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type\x2C index) {\n    return getLanguagePriority(type\x2C accepts\x2C index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a\x2C b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n
code-source-info,0x96d32260be,240,0,3409,C0O0C4O3409,,
code-creation,Function,10,345746,0x96d3226446,77, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\language.js:1:1,0x96d3226038,~
code-source-info,0x96d3226446,240,0,3409,C0O0C52O223C54O238C58O267C65O294C69O386C73O386C76O3408,,
code-creation,Eval,10,346246,0x96d322720e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\mediaType.js:1:1,0x96d3227008,~
script-source,241,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\mediaType.js,/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0\x2C j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim()\x2C i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str\x2C i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value\x2C unwrapping quotes\n      var value = val && val[0] === '"' && val[val.length - 1] === '"'\n        ? val.substr(1\x2C val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type\x2C\n    subtype: subtype\x2C\n    params: params\x2C\n    q: q\x2C\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type\x2C accepted\x2C index) {\n  var priority = {o: -1\x2C q: 0\x2C s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type\x2C accepted[i]\x2C index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type\x2C spec\x2C index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index\x2C\n    o: spec.i\x2C\n    q: spec.q\x2C\n    s: s\x2C\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept\x2C provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type\x2C index) {\n    return getMediaTypePriority(type\x2C accepts\x2C index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a\x2C b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('"'\x2C index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0\x2C index);\n    val = str.substr(index + 1);\n  }\n\n  return [key\x2C val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split('\x2C');\n\n  for (var i = 1\x2C j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += '\x2C' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1\x2C j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n
code-source-info,0x96d322720e,241,0,5358,C0O0C4O5358,,
code-creation,Function,10,346461,0x96d322771e,101, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\negotiator\\lib\\mediaType.js:1:1,0x96d3227188,~
code-source-info,0x96d322771e,241,0,5358,C0O0C76O223C78O238C82O268C89O296C93O390C97O390C100O5357,,
code-creation,Eval,10,347088,0x96d3228c1e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime-types\\index.js:1:1,0x96d3228a88,~
script-source,242,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime-types\\index.js,/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions\x2C exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension ("ext" or ".ext" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions\x2C types) {\n  // source preference (least -> most)\n  var preference = ['nginx'\x2C 'apache'\x2C undefined\x2C 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0\x2C 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n
code-source-info,0x96d3228c1e,242,0,3663,C0O0C4O3663,,
code-creation,Function,10,347241,0x96d3228f1e,194, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime-types\\index.js:1:1,0x96d3228b98,~
code-source-info,0x96d3228f1e,242,0,3663,C0O0C34O189C37O189C41O189C43O222C46O222C51O237C55O222C57O315C61O315C63O364C67O364C69O415C74O431C78O441C88O470C94O458C98O480C103O500C107O514C112O532C116O544C119O565C123O572C130O572C135O563C139O585C144O600C148O609C151O625C155O632C162O632C167O623C171O684C174O705C182O725C187O684C193O3662,,
code-creation,Eval,10,347803,0x96d3229df6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime-db\\index.js:1:1,0x96d3229cb0,~
script-source,243,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime-db\\index.js,/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n
code-source-info,0x96d3229df6,243,0,189,C0O0C4O189,,
code-creation,Function,10,347842,0x96d3229e7e,13, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime-db\\index.js:1:1,0x96d3229d70,~
code-source-info,0x96d3229e7e,243,0,189,C0O151C3O168C7O166C12O188,,
new,MemoryChunk,0xafeaf40000,192512
scavenge,begin,0,312500,1671211992711
new,MemoryChunk,0x27643280000,262144
new,MemoryChunk,0x91a5140000,262144
new,MemoryChunk,0xe498840000,262144
scavenge,end,0,312500,1671211992712
code-creation,LazyCompile,10,350928,0x96d323c486,67,populateMaps C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime-types\\index.js:154:23,0x96d3228d90,~
code-source-info,0x96d323c486,242,2766,3662,C0O2766C13O2846C22O2866C28O2846C30O2888C34O2895C44O2895C50O2903C60O2904C66O3661,,
code-creation,LazyCompile,10,351204,0x96d323c63e,201,forEachMimeType C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime-types\\index.js:158:52,0x96d323c378,~
code-source-info,0x96d323c63e,242,2937,3659,C0O2961C7O2963C11O2990C16O3006C18O3025C24O3041C25O3047C26O3085C31O3102C35O3152C37O3164C41O3157C46O3201C48O3205C52O3216C57O3225C62O3259C65O3270C80O3286C83O3280C87O3299C92O3270C98O3324C101O3335C106O3348C111O3335C117O3365C122O3374C128O3386C135O3436C142O3450C152O3465C156O3477C166O3477C175O3491C180O3557C182O3626C187O3643C191O3173C196O3139C200O3658,,
code-creation,LazyCompile,13,351482,0x225ca7b2340,2664,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x334160a02d0,*
code-source-info,0x225ca7b2340,99,17765,19316,C0O17765C48O17834C96O18215C124O18222C128O18178C386O18227C435O18399C472O18467C512O18500C707O18848C737O19195C785O19199C826O19041C869O19077C890O18988C904O19077C1035O18988C1084O18475C1088O18408C1155O18467C1165O18500C1418O18848C1456O19165C1466O19195C1516O19199C1544O19222C1568O18966C1578O19041C1631O19077C1652O18988C1666O19077C1797O18988C1839O18475C1843O18408C1862O19311C1892O18318C1897O17765C1952O18178C2053O18500C2113O19041C2223O18408C2296O18500C2371O19041C2477O18408,,
code-creation,Function,11,351584,0x225ca7b2ee0,1220,forEachMimeType C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime-types\\index.js:158:52,0x96d323c378,^
code-source-info,0x225ca7b2ee0,242,2937,3659,,,
code-creation,Function,11,351619,0x225ca7b3420,1644,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x334160973a0,^
code-source-info,0x225ca7b3420,96,2312,3381,,,
code-creation,Function,11,351640,0x225ca7b3b00,408,markAsUntransferable node:internal/buffer:1048:30,0x6682eb2ea8,^
code-source-info,0x225ca7b3b00,19,30828,31067,,,
code-creation,Eval,10,352762,0x96d323e01e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\type-is\\index.js:1:1,0x96d323de58,~
script-source,244,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\type-is\\index.js,/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`\x2C\n * a special shortcut like `multipart` or `urlencoded`\x2C\n * or a mime type.\n *\n * If no types match\x2C `false` is returned.\n * Otherwise\x2C the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value\x2C types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types\x2C return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i])\x2C val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the "Content-Type"\n * header field\x2C and it contains any of the give mime `type`s.\n * If there is no request body\x2C `null` is returned.\n * If there is no content type\x2C `false` is returned.\n * Otherwise\x2C it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*'\x2C 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json'\x2C 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html'\x2C 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req\x2C types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value\x2C types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand\x2C expand it to a valid mime type.\n *\n * In general\x2C you probably want:\n *\n *   var type = is(req\x2C ['urlencoded'\x2C 'json'\x2C 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // "+json" -> "*/*+json" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected\x2C actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0\x2C 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n
code-source-info,0x96d323e01e,244,0,5562,C0O0C4O5562,,
code-creation,Function,10,352977,0x96d323e33e,116, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\type-is\\index.js:1:1,0x96d323df98,~
code-source-info,0x96d323e33e,244,0,5562,C0O0C46O194C49O194C53O194C55O228C58O228C62O228C64O290C66O305C70O328C77O339C81O355C88O371C92O388C99O406C103O425C110O439C115O5561,,
code-creation,Eval,10,353631,0xe49884aa0e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\media-typer\\index.js:1:1,0xe49884a818,~
script-source,245,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\media-typer\\index.js,/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( ";" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token "=" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = "(" | ")" | "<" | ">" | "@"\n *               | "\x2C" | ";" | ":" | "\\" | <">\n *               | "/" | "[" | "]" | "?" | "="\n *               | "{" | "}" | SP | HT\n * quoted-string = ( <"> *(qdtext | quoted-pair ) <"> )\n * qdtext        = <any TEXT except <">>\n * quoted-pair   = "\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs\x2C but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR\x2C carriage return (13)>\n * LF            = <US-ASCII LF\x2C linefeed (10)>\n * SP            = <US-ASCII SP\x2C space (32)>\n * SHT           = <US-ASCII HT\x2C horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *("(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = "\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / "!" / "#" /\n *                          "$" / "&" / "-" / "^" / "_"\n * restricted-name-chars =/ "." ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ "+" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0\x2C126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0\x2C126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0\x2C126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0\x2C126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0\x2C index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1\x2C value.length - 2)\n        .replace(qescRegExp\x2C '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '"' + str.replace(quoteRegExp\x2C '\\\\$1') + '"'\n}\n\n/**\n * Simply "type/subtype+siffx" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0\x2C index)\n  }\n\n  var obj = {\n    type: type\x2C\n    subtype: subtype\x2C\n    suffix: suffix\n  }\n\n  return obj\n}\n
code-source-info,0xe49884aa0e,245,0,6375,C0O0C4O6375,,
code-creation,Function,10,353870,0xe49884ac96,95, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\media-typer\\index.js:1:1,0xe49884a988,~
code-source-info,0xe49884ac96,245,0,6375,C0O0C33O1112C37O1112C39O1283C43O1283C45O1335C49O1335C51O1530C55O1530C57O1643C61O1643C63O2358C67O2358C69O2421C73O2421C75O2479C79O2479C81O2598C83O2613C87O2622C89O2636C94O6374,,
code-creation,Eval,10,354553,0xe49884c3b6,6, :1:1,0xe49884c220,~
script-source,246,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function () {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0xe49884c3b6,246,0,159,C0O0C5O159,,
code-creation,Function,10,354587,0xe49884c48e,30, :1:20,0xe49884c330,~
code-source-info,0xe49884c48e,246,19,158,C0O19C25O67C29O156,,
code-creation,Eval,10,354654,0xe49884c81e,6, :1:1,0xe49884c688,~
script-source,247,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function () {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0xe49884c81e,247,0,159,C0O0C5O159,,
code-creation,Function,10,354684,0xe49884c8f6,30, :1:20,0xe49884c798,~
code-source-info,0xe49884c8f6,247,19,158,C0O19C25O67C29O156,,
code-creation,LazyCompile,10,354757,0xe49884cc26,33,defineGetter C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\request.js:519:22,0x96d321eab8,~
code-source-info,0xe49884cc26,235,12376,12504,C0O12400C4O12407C9O12427C16O12490C26O12407C32O12503,,
code-creation,Eval,10,355564,0xe49884d706,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:1:1,0xe49884d450,~
script-source,248,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar createError = require('http-errors')\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  if ((typeof code === 'string' || Math.floor(code) !== code) && code > 99 && code < 1000) {\n    deprecate('res.status(' + JSON.stringify(code) + '): use res.status(' + Math.floor(code) + ') instead')\n  }\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2'\x2C\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += '\x2C ';\n  return this.set('Link'\x2C link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel="' + rel + '"';\n  }).join('\x2C '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body\x2C status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body\x2C status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status\x2C body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status\x2C num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses.message[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type'\x2C setCharset(type\x2C 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk\x2C encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk\x2C encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length'\x2C len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk\x2C encoding))) {\n      this.set('ETag'\x2C etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  // alter headers for 205\n  if (this.statusCode === 205) {\n    this.set('Content-Length'\x2C '0')\n    this.removeHeader('Transfer-Encoding')\n    chunk = ''\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk\x2C encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body\x2C status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj\x2C status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status\x2C obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val\x2C replacer\x2C spaces\x2C escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type'\x2C 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.jsonp(body\x2C status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj\x2C status): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status\x2C obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val\x2C replacer\x2C spaces\x2C escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options'\x2C 'nosniff');\n    this.set('Content-Type'\x2C 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options'\x2C 'nosniff');\n    this.set('Content-Type'\x2C 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g\x2C '');\n\n    if (body === undefined) {\n      // empty argument\n      body = ''\n    } else if (typeof body === 'string') {\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body\n        .replace(/\\u2028/g\x2C '\\\\u2028')\n        .replace(/\\u2029/g\x2C '\\\\u2029')\n    }\n\n    // the /**/ is a specific security mitigation for "Rosetta Flash JSONP abuse"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses.message[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding\x2C as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles\x2C defaulting to false; can be `"allow"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code\x2C so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file'\x2C function(req\x2C res){\n *       var uid = req.params.uid\n *         \x2C file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid\x2C function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403\x2C 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path\x2C options\x2C callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req\x2C pathname\x2C opts);\n\n  // transfer\n  sendfile(res\x2C file\x2C opts\x2C function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding\x2C as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles\x2C defaulting to false; can be `"allow"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code\x2C so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file'\x2C function(req\x2C res){\n *       var uid = req.params.uid\n *         \x2C file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid\x2C function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403\x2C 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path\x2C options\x2C callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req\x2C path\x2C opts);\n\n  // transfer\n  sendfile(res\x2C file\x2C opts\x2C function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile\x2C\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`\x2C\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete\x2C or when an error has\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header\x2C overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path\x2C filename\x2C options\x2C callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // support optional filename\x2C where options may be in it's place\n  if (typeof filename === 'object' &&\n    (typeof options === 'function' || options === undefined)) {\n    name = null\n    opts = filename\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = !opts.root\n    ? resolve(path)\n    : path\n\n  // send file\n  return this.sendFile(fullPath\x2C opts\x2C done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain "/"\x2C or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type'\x2C ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`\x2C an array of\n * acceptable types ordered by their quality values.\n * When "Accept" is not present the _first_ callback\n * is invoked\x2C otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 "Not Acceptable".\n *\n * Content-Type is set for you\x2C however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type'\x2C ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      }\x2C\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      }\x2C\n *\n *      'application/json': function () {\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      }\x2C\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      }\x2C\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var keys = Object.keys(obj)\n    .filter(function (v) { return v !== 'default' })\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary("Accept");\n\n  if (key) {\n    this.set('Content-Type'\x2C normalizeType(key).value);\n    obj[key](req\x2C this\x2C next);\n  } else if (obj.default) {\n    obj.default(req\x2C this\x2C next)\n  } else {\n    next(createError(406\x2C {\n      types: normalizeTypes(keys).map(function (o) { return o.value })\n    }))\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition'\x2C contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link'\x2C ['<http://localhost/>'\x2C '<http://localhost:3000/>']);\n *    res.append('Set-Cookie'\x2C 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning'\x2C '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field\x2C val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n        : [prev\x2C val]\n  }\n\n  return this.set(field\x2C value);\n};\n\n/**\n * Set header `field` to `val`\x2C or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo'\x2C ['bar'\x2C 'baz']);\n *    res.set('Accept'\x2C 'application/json');\n *    res.set({ Accept: 'text/plain'\x2C 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field\x2C val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field\x2C value);\n  } else {\n    for (var key in field) {\n      this.set(key\x2C field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name\x2C options) {\n  var opts = merge({ expires: new Date(1)\x2C path: '/' }\x2C options);\n\n  return this.cookie(name\x2C ''\x2C opts);\n};\n\n/**\n * Set cookie `name` to `value`\x2C with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds\x2C converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to "/"\n *\n * Examples:\n *\n *    // "Remember Me" for 15 minutes\n *    res.cookie('rememberme'\x2C '1'\x2C { expires: new Date(Date.now() + 900000)\x2C httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme'\x2C '1'\x2C { maxAge: 900000\x2C httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name\x2C value\x2C options) {\n  var opts = merge({}\x2C options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser("secret") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val\x2C secret);\n  }\n\n  if (opts.maxAge != null) {\n    var maxAge = opts.maxAge - 0\n\n    if (!isNaN(maxAge)) {\n      opts.expires = new Date(Date.now() + maxAge)\n      opts.maxAge = Math.floor(maxAge / 1000)\n    }\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie'\x2C cookie.serialize(name\x2C String(val)\x2C opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be "back"\x2C which redirects\n * to the _Referrer_ or _Referer_ headers or "/".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // "back" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location'\x2C encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`\x2C so\n * it will play nicely with mounted apps\x2C relative paths\x2C\n * `"back"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301\x2C 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url\x2C status): Use res.redirect(status\x2C url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain\x2Chtml} by default\n  this.format({\n    text: function(){\n      body = statuses.message[status] + '. Redirecting to ' + address\n    }\x2C\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses.message[status] + '. Redirecting to <a href="' + u + '">' + u + '</a></p>'\n    }\x2C\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length'\x2C Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set\x2C then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this\x2C field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically\x2C otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view\x2C options\x2C callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err\x2C str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view\x2C opts\x2C done);\n};\n\n// pipe the send file stream\nfunction sendfile(res\x2C file\x2C options\x2C callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR\x2C read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory'\x2C ondirectory);\n  file.on('end'\x2C onend);\n  file.on('error'\x2C onerror);\n  file.on('file'\x2C onfile);\n  file.on('stream'\x2C onstream);\n  onFinished(res\x2C onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers'\x2C function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k\x2C obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON\x2C like JSON.stringify\x2C but v8 optimized\x2C with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replacer\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value\x2C replacer\x2C spaces\x2C escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value\x2C replacer\x2C spaces)\n    : JSON.stringify(value);\n\n  if (escape && typeof json === 'string') {\n    json = json.replace(/[<>&]/g\x2C function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n
code-source-info,0xe49884d706,248,0,28014,C0O0C4O28014,,
code-creation,Function,10,356571,0xe49884e426,492, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:1:1,0xe49884d680,~
code-source-info,0xe49884e
tick,0x7fffb2a0db64,357131,1,0x7ff6a79f2c60,6,0x7ff6a82ef2d0,0x225ca78e167,0x225ca793b4d,0x225ca7a2238,0x225ca79cc1e,0x225ca7983c7,0x225ca798095,0xe49884e474,0x225ca7a0b43,0x225ca7afd1b,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0x2264577508,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2264576859,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x226457464f,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x2264572d77,0x3103a7b5c9
code-creation,Eval,10,358233,0xe498852286,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\cookie-signature\\index.js:1:1,0xe498852110,~
script-source,249,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\cookie-signature\\index.js,/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val\x2C secret){\n  if ('string' != typeof val) throw new TypeError("Cookie value must be provided as a string.");\n  if ('string' != typeof secret) throw new TypeError("Secret string must be provided.");\n  return val + '.' + crypto\n    .createHmac('sha256'\x2C secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/\x2C '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`\x2C\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val\x2C secret){\n  if ('string' != typeof val) throw new TypeError("Signed cookie string must be provided.");\n  if ('string' != typeof secret) throw new TypeError("Secret string must be provided.");\n  var str = val.slice(0\x2C val.lastIndexOf('.'))\n    \x2C mac = exports.sign(str\x2C secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n
code-source-info,0xe498852286,249,0,1230,C0O0C4O1230,,
code-creation,Function,10,358306,0xe498852496,48, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\cookie-signature\\index.js:1:1,0xe498852200,~
code-source-info,0xe498852496,249,0,1230,C0O0C15O46C18O46C22O46C24O202C31O215C35O764C42O779C47O1229,,
code-creation,Eval,10,359110,0xe498853016,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\cookie\\index.js:1:1,0xe498852e70,~
script-source,250,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\cookie\\index.js,/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str\x2C options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('='\x2C index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';'\x2C index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';'\x2C eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index\x2C eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1\x2C endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1\x2C -1)\n      }\n\n      obj[key] = tryDecode(val\x2C dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo'\x2C 'bar'\x2C { httpOnly: true })\n *   => "foo=bar; httpOnly"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name\x2C val\x2C options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str\x2C decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n
code-source-info,0xe498853016,250,0,5224,C0O0C4O5224,,
code-creation,Function,10,359319,0xe4988532d6,74, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\cookie\\index.js:1:1,0xe498852f90,~
code-source-info,0xe4988532d6,250,0,5224,C0O0C39O178C41O192C45O201C47O219C51O292C55O299C60O309C64O292C66O535C70O535C73O5223,,
code-creation,Eval,10,359933,0xe498854356,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\vary\\index.js:1:1,0xe4988541e0,~
script-source,251,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\vary\\index.js,/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = "!" / "#" / "$" / "%" / "&" / "'" / "*"\n *               / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~"\n *               / DIGIT / ALPHA\n *               ; any VCHAR\x2C except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header\x2C field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing\x2C unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + '\x2C ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0\x2C len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* \x2C */\n        list.push(header.substring(start\x2C end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start\x2C end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res\x2C field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join('\x2C ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header\x2C field))) {\n    res.setHeader('Vary'\x2C val)\n  }\n}\n
code-source-info,0xe498854356,251,0,2930,C0O0C4O2930,,
code-creation,Function,10,360062,0xe4988544f6,47, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\vary\\index.js:1:1,0xe4988542d0,~
code-source-info,0xe4988544f6,251,0,2930,C0O0C22O128C24O143C28O157C35O172C39O525C43O525C46O2929,,
code-creation,Eval,10,360194,0xe498854fae,6, :1:1,0xe498854e18,~
script-source,252,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function (arg0\x2C arg1\x2C arg2) {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0xe498854fae,252,0,175,C0O0C5O175,,
code-creation,Function,10,360227,0xe498855086,30, :1:20,0xe498854f28,~
code-source-info,0xe498855086,252,19,174,C0O19C25O67C29O172,,
code-creation,LazyCompile,10,360288,0xe49885585e,13,get C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\index.js:122:23,0x2bdba105780,~
code-source-info,0xe49885585e,140,1984,2020,C0O1993C8O2000C12O2016,,
code-creation,LazyCompile,10,360340,0xe498855a06,111,loadParser C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\index.js:132:21,0x2264578a98,~
code-source-info,0xe498855a06,140,2090,2655,C0O2120C5O2127C9O2143C11O2175C13O2188C14O2248C47O2293C53O2302C58O2336C60O2364C66O2373C71O2406C73O2435C79O2444C84O2478C86O2513C92O2522C97O2562C99O2616C104O2644C110O2653,,
code-creation,Eval,10,360884,0xe4988561e6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\json.js:1:1,0xe498855fe0,~
script-source,253,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\json.js,/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*([^\\x20\\x09\\x0a\\x0d])/ // eslint-disable-line no-control-regex\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body\x2C as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of "strict" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body\x2C first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body\x2C reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e\x2C {\n        message: e.message\x2C\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req\x2C res\x2C next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j'\x2C req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.slice(0\x2C 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415\x2C 'unsupported charset "' + charset.toUpperCase() + '"'\x2C {\n        charset: charset\x2C\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req\x2C res\x2C next\x2C parse\x2C debug\x2C {\n      encoding: charset\x2C\n      inflate: inflate\x2C\n      limit: limit\x2C\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str\x2C char) {\n  var index = str.indexOf(char)\n  var partial = index !== -1\n    ? str.substring(0\x2C index) + '#'\n    : ''\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e\x2C {\n      message: e.message.replace('#'\x2C char)\x2C\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  var match = FIRST_CHAR_REGEXP.exec(str)\n\n  return match\n    ? match[1]\n    : undefined\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error\x2C obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message\x2C obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req\x2C type))\n  }\n}\n
code-source-info,0xe4988561e6,253,0,5012,C0O0C4O5012,,
code-creation,Function,10,361088,0xe498856516,116, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\json.js:1:1,0xe498856160,~
code-source-info,0xe498856516,253,0,5012,C0O0C40O198C43O198C47O198C49O233C52O233C56O233C58O275C61O275C65O275C67O310C70O310C78O326C82O310C84O358C87O358C91O358C93O390C96O390C100O390C102O438C104O453C108O815C112O815C115O5011,,
code-creation,Eval,10,361778,0xe4988576ee,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\bytes\\index.js:1:1,0xe498857548,~
script-source,254,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\bytes\\index.js,/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1\x2C\n  kb: 1 << 10\x2C\n  mb: 1 << 20\x2C\n  gb: 1 << 30\x2C\n  tb: Math.pow(1024\x2C 4)\x2C\n  pb: Math.pow(1024\x2C 5)\x2C\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string]\x2C\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value\x2C options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value\x2C options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative\x2C it is kept as such. If it is a float\x2C\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value\x2C options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp\x2C '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s\x2C i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp\x2C thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given\x2C it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val\x2C 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n
code-source-info,0xe4988576ee,254,0,3613,C0O0C4O3613,,
code-creation,Function,10,361930,0xe49885796e,133, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\bytes\\index.js:1:1,0xe498857668,~
code-source-info,0xe49885796e,254,0,3613,C0O0C22O161C24O176C28O192C35O207C39O224C46O238C50O318C54O318C56O371C60O371C62O407C67O469C71O474C84O474C94O494C98O499C111O499C123O407C125O535C129O535C132O3612,,
code-creation,Eval,10,362948,0xe498858f2e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\read.js:1:1,0xe498858d58,~
script-source,255,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\read.js,/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar destroy = require('destroy')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar unpipe = require('unpipe')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req\x2C res\x2C next\x2C parse\x2C debug\x2C options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req\x2C debug\x2C opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415\x2C 'unsupported charset "' + encoding.toUpperCase() + '"'\x2C {\n      charset: encoding.toLowerCase()\x2C\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream\x2C opts\x2C function (error\x2C body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415\x2C 'unsupported charset "' + encoding.toUpperCase() + '"'\x2C {\n          charset: encoding.toLowerCase()\x2C\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400\x2C error)\n      }\n\n      // unpipe from stream and destroy\n      if (stream !== req) {\n        unpipe(req)\n        destroy(stream\x2C true)\n      }\n\n      // read off entire request\n      dump(req\x2C function onfinished () {\n        next(createError(400\x2C _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req\x2C res\x2C body\x2C encoding)\n      } catch (err) {\n        next(createError(403\x2C err\x2C {\n          body: body\x2C\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body\x2C encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400\x2C err\x2C {\n        body: str\x2C\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req\x2C debug\x2C inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding "%s"'\x2C encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415\x2C 'content encoding unsupported'\x2C {\n      encoding: encoding\x2C\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415\x2C 'unsupported content encoding "' + encoding + '"'\x2C {\n        encoding: encoding\x2C\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n\n/**\n * Dump the contents of a request.\n *\n * @param {object} req\n * @param {function} callback\n * @api private\n */\n\nfunction dump (req\x2C callback) {\n  if (onFinished.isFinished(req)) {\n    callback(null)\n  } else {\n    onFinished(req\x2C callback)\n    req.resume()\n  }\n}\n
code-source-info,0xe498858f2e,255,0,4325,C0O0C4O4325,,
code-creation,Function,10,363141,0xe498859146,93, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\read.js:1:1,0xe498858ea8,~
code-source-info,0xe498859146,255,0,4325,C0O0C22O170C25O170C29O170C31O207C34O207C38O207C40O240C43O240C47O240C49O272C52O272C56O272C58O311C61O311C65O311C67O347C70O347C74O347C76O376C79O376C83O376C85O421C87O436C92O4324,,
code-creation,Eval,10,364070,0xe49885a7b6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\raw-body\\index.js:1:1,0xe49885a5c0,~
script-source,256,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\raw-body\\index.js,/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415\x2C 'specified encoding unsupported'\x2C {\n      encoding: encoding\x2C\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream\x2C options\x2C callback) {\n  var done = callback\n  var opts = options || {}\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function\x2C if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length\x2C 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream\x2C encoding\x2C length\x2C limit\x2C wrap(done))\n  }\n\n  return new Promise(function executor (resolve\x2C reject) {\n    readStream(stream\x2C encoding\x2C length\x2C limit\x2C function onRead (err\x2C buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream\x2C encoding\x2C length\x2C limit\x2C callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused\x2C\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413\x2C 'request entity too large'\x2C {\n      expected: length\x2C\n      length: length\x2C\n      limit: limit\x2C\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2\x2C specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500\x2C 'stream encoding should not be set'\x2C {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\n    return done(createError(500\x2C 'stream is not readable'\x2C {\n      type: 'stream.not.readable'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted'\x2C onAborted)\n  stream.on('close'\x2C cleanup)\n  stream.on('data'\x2C onData)\n  stream.on('end'\x2C onEnd)\n  stream.on('error'\x2C onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null\x2C args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400\x2C 'request aborted'\x2C {\n      code: 'ECONNABORTED'\x2C\n      expected: length\x2C\n      length: length\x2C\n      received: received\x2C\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413\x2C 'request entity too large'\x2C {\n        limit: limit\x2C\n        received: received\x2C\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400\x2C 'request size did not match content length'\x2C {\n        expected: length\x2C\n        length: length\x2C\n        received: received\x2C\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null\x2C string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted'\x2C onAborted)\n    stream.removeListener('data'\x2C onData)\n    stream.removeListener('end'\x2C onEnd)\n    stream.removeListener('error'\x2C onEnd)\n    stream.removeListener('close'\x2C cleanup)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource\x2C if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res\x2C fn\x2C null)\n}\n
code-source-info,0xe49885a7b6,256,0,6902,C0O0C4O6902,,
code-creation,Function,10,364377,0xe49885ab36,110, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\raw-body\\index.js:1:1,0xe49885a730,~
code-source-info,0xe49885ab36,256,0,6902,C0O0C43O205C46O205C48O240C54O240C58O240C60O275C66O275C70O275C72O310C78O310C82O310C84O345C90O345C94O345C96O403C98O418C102O510C106O510C109O6901,,
code-creation,LazyCompile,10,364444,0xe49885b856,27,tryRequireAsyncHooks C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\raw-body\\index.js:300:31,0xe49885a9e8,~
code-source-info,0xe49885b856,256,6363,6445,C3O6380C9O6387C13O6409C25O6430C26O6439,,
code-creation,Eval,10,365375,0xe49885c8be,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\index.js:1:1,0xe49885c738,~
script-source,257,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\index.js,"use strict";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules "buffer" and "stream" explicitly.\nvar Buffer = require("safer-buffer").Buffer;\n\nvar bomHandling = require("./bom-handling")\x2C\n    iconv = module.exports;\n\n// All codecs and aliases are kept here\x2C keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '\ufffd';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str\x2C encoding\x2C options) {\n    str = "" + (str || ""); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding\x2C options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res\x2C trail]) : res;\n}\n\niconv.decode = function decode(buf\x2C encoding\x2C options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from("" + (buf || "")\x2C "binary"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding\x2C options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require("../encodings"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case "string": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case "object": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case "function": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions\x2C iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error("Encoding not recognized: '" + encoding + "' (searched as: '"+enc+"')");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g\x2C "");\n}\n\niconv.getEncoder = function getEncoder(encoding\x2C options) {\n    var codec = iconv.getCodec(encoding)\x2C\n        encoder = new codec.encoder(options\x2C codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder\x2C options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding\x2C options) {\n    var codec = iconv.getCodec(encoding)\x2C\n        decoder = new codec.decoder(options\x2C codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder\x2C options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(".").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require("./streams")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require("./extend-node")(iconv);\n}\n\nif ("\u0100" != "\\u0100") {\n    console.error("iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.");\n}\n
code-source-info,0xe49885c8be,257,0,5120,C0O0C4O5120,,
code-creation,Function,10,365610,0xe49885cce6,335, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\index.js:1:1,0xe49885c838,~
code-source-info,0xe49885cce6,257,0,5120,C0O0C9O173C15O173C20O196C24O173C26O224C32O224C36O224C38O270C42O263C44O422C48O438C52O487C57O512C61O519C66O547C70O570C77O583C81O879C88O892C92O1478C99O1499C103O1680C109O1705C113O1697C117O1713C123O1740C127O1732C131O1834C135O1856C139O1862C146O1877C150O3591C157O3619C161O3806C168O3823C172O4103C179O4120C183O4537C188O4552C191O4571C195O4579C201O4591C205O4599C210O4608C215O4614C217O4704C225O4704C231O4714C236O4719C240O4715C246O4732C247O4746C252O4750C259O4767C265O4771C270O4788C276O4788C284O4808C288O4867C294O4867C302O4891C306O4903C311O4911C316O4930C320O4938C328O4938C334O5119,,
scavenge,begin,0,328125,1671211992728
new,MemoryChunk,0x31871680000,262144
new,MemoryChunk,0x1bc3eb00000,262144
new,MemoryChunk,0x1bb8fb00000,262144
scavenge,end,0,328125,1671211992729
code-creation,Eval,10,366847,0xe49885dc46,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\safer-buffer\\safer.js:1:1,0xe49885dab8,~
script-source,258,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\safer-buffer\\safer.js,/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value\x2C encodingOrOffset\x2C length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string\x2C Buffer\x2C ArrayBuffer\x2C Array\x2C or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value\x2C encodingOrOffset\x2C length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size\x2C fill\x2C encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value "' + size + '" is invalid for option "size"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill\x2C encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported\x2C so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n
code-source-info,0xe49885dc46,258,0,2110,C0O0C4O2110,,
code-creation,Function,10,366942,0xe49885dece,342, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\safer-buffer\\safer.js:1:1,0xe49885dbc0,~
code-source-info,0xe49885dece
code-creation,Eval,10,367394,0xe49885e8be,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\bom-handling.js:1:1,0xe49885e768,~
script-source,259,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\bom-handling.js,"use strict";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder\x2C options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder\x2C options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n
code-source-info,0xe49885e8be,259,0,1109,C0O0C4O1109,,
code-creation,Function,10,367495,0xe49885ec5e,85, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\bom-handling.js:1:1,0xe49885e838,~
code-source-info,0xe49885ec5e,259,0,1109,C0O0C15O29C17O29C19O40C21O59C25O199C34O215C38O378C47O392C51O524C53O541C57O709C66O725C70O1046C79O1060C84O1108,,
code-creation,Eval,10,367936,0xe49885f786,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\streams.js:1:1,0xe49885f600,~
script-source,260,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\streams.js,"use strict";\n\nvar Buffer = require("buffer").Buffer\x2C\n    Transform = require("stream").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding\x2C options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding\x2C options)\x2C options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding\x2C options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding\x2C options)\x2C options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv\x2C options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings\x2C so we don't need to decode them.\n    Transform.call(this\x2C options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype\x2C {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk\x2C encoding\x2C done) {\n    if (typeof chunk != 'string')\n        return done(new Error("Iconv encoding stream needs strings as its input."));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error'\x2C cb);\n    this.on('data'\x2C function(chunk) { chunks.push(chunk); });\n    this.on('end'\x2C function() {\n        cb(null\x2C Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv\x2C options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this\x2C options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype\x2C {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk\x2C encoding\x2C done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error("Iconv decoding stream needs buffers as its input."));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res\x2C this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res\x2C this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error'\x2C cb);\n    this.on('data'\x2C function(chunk) { res += chunk; });\n    this.on('end'\x2C function() {\n        cb(null\x2C res);\n    });\n    return this;\n}\n\n
code-source-info,0xe49885f786,260,0,3387,C0O0C4O3387,,
code-creation,Function,10,368107,0xe49885fe56,255, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\streams.js:1:1,0xe49885f700,~
code-source-info,0xe49885fe56,260,0,3387,C0O0C17O28C20O28C25O45C29O28C31O70C34O70C39O87C43O70C45O182C49O197C53O1138C56O1173C60O1180C68O1197C78O1227C85O1236C95O1180C101O1171C105O1266C108O1289C117O1310C121O1628C124O1651C133O1668C137O1843C140O1866C149O1884C153O2396C156O2431C160O2438C168O2455C178O2485C185O2494C195O2438C201O2429C205O2524C208O2547C217O2568C221O2900C224O2923C233O2940C237O3146C240O3169C249O3187C254O3386,,
code-creation,LazyCompile,10,368239,0xe4988609d6,84,module.exports C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\streams.js:8:26,0xe49885f858,~
code-source-info,0xe4988609d6,260,207,824,C0O207C9O256C16O275C20O420C27O439C31O584C35O606C39O646C46O675C50O705C57O734C61O764C69O804C74O814C78O779C83O823,,
code-creation,Eval,10,368679,0xe49886100e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\extend-node.js:1:1,0xe498860ea8,~
script-source,261,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\extend-node.js,"use strict";\nvar Buffer = require("buffer").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose\x2C as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error("ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node");\n            console.error("See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true\x2C 'utf8': true\x2C 'utf-8': true\x2C 'ascii': true\x2C 'binary': true\x2C \n            'base64': true\x2C 'ucs2': true\x2C 'ucs-2': true\x2C 'utf16le': true\x2C 'utf-16le': true\x2C\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding\x2C start\x2C end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this\x2C encoding\x2C start\x2C end);\n\n            // Otherwise\x2C use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start\x2C end)\x2C encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string\x2C offset\x2C length\x2C encoding) {\n            // Support both (string\x2C offset\x2C length\x2C encoding)\n            // and the legacy (string\x2C encoding\x2C offset\x2C length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this\x2C string\x2C offset\x2C length\x2C encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise\x2C use our encoding method.\n            var buf = iconv.encode(string\x2C encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this\x2C offset\x2C 0\x2C length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str\x2C encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this\x2C str\x2C encoding);\n\n            // Slow\x2C I know\x2C but we don't have a better way yet.\n            return iconv.encode(str\x2C encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding\x2C start\x2C end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this\x2C encoding\x2C start\x2C end);\n\n            // Otherwise\x2C use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start\x2C end)\x2C encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string\x2C offset\x2C length\x2C encoding) {\n            var _offset = offset\x2C _length = length\x2C _encoding = encoding;\n            // Support both (string\x2C offset\x2C length\x2C encoding)\n            // and the legacy (string\x2C encoding\x2C offset\x2C length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this\x2C string\x2C _offset\x2C _length\x2C _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise\x2C use our encoding method.\n            var buf = iconv.encode(string\x2C encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this\x2C offset\x2C 0\x2C length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc\x2C options) {\n                // Use our own decoder\x2C it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc\x2C options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error("require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n
code-source-info,0xe49886100e,261,0,8701,C0O0C4O8701,,
code-creation,Function,10,369028,0xe4988611b6,36, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\extend-node.js:1:1,0xe498860f88,~
code-source-info,0xe4988611b6,261,0,8701,C0O0C9O27C15O27C20O44C24O27C26O212C30O227C35O8700,,
code-creation,LazyCompile,10,369108,0xe498861b56,76,module.exports C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\iconv-lite\\lib\\extend-node.js:7:27,0xe498861040,~
code-source-info,0xe498861b56,261,238,8700,C0O238C9O267C10O267C12O511C20O559C35O567C41O592C44O581C48O548C52O610C59O636C63O7682C70O7712C75O8699,,
code-creation,Eval,10,370123,0xe498862dd6,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\raw.js:1:1,0xe498862c40,~
script-source,262,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\raw.js,/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req\x2C res\x2C next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j'\x2C req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req\x2C res\x2C next\x2C parse\x2C debug\x2C {\n      encoding: null\x2C\n      inflate: inflate\x2C\n      limit: limit\x2C\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req\x2C type))\n  }\n}\n
code-source-info,0xe498862dd6,262,0,1884,C0O0C4O1884,,
code-creation,Function,10,370219,0xe498862f8e,68, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\raw.js:1:1,0xe498862d50,~
code-source-info,0xe498862f8e,262,0,1884,C0O0C16O152C19O152C23O152C25O181C28O181C36O197C40O181C42O228C45O228C49O228C51O260C54O260C58O260C60O308C62O323C67O1883,,
code-creation,Eval,10,371137,0xe498863d1e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js:1:1,0xe498863b38,~
script-source,263,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js,/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root\x2C options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req\x2C res\x2C next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow'\x2C 'GET\x2C HEAD')\n      res.setHeader('Content-Length'\x2C '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req\x2C path\x2C opts)\n\n    // add directory handler\n    stream.on('directory'\x2C onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers'\x2C setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file'\x2C function onFile () {\n        // once file is determined\x2C always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error'\x2C function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title\x2C body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang="en">\\n' +\n    '<head>\\n' +\n    '<meta charset="utf-8">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting'\x2C 'Redirecting to <a href="' + escapeHtml(loc) + '">' +\n      escapeHtml(loc) + '</a>')\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type'\x2C 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length'\x2C Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy'\x2C "default-src 'none'")\n    res.setHeader('X-Content-Type-Options'\x2C 'nosniff')\n    res.setHeader('Location'\x2C loc)\n    res.end(doc)\n  }\n}\n
code-source-info,0xe498863d1e,263,0,4570,C0O0C4O4570,,
code-creation,Function,10,371355,0xe498864046,117, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js:1:1,0xe498863c98,~
code-source-info,0xe498864046,263,0,4570,C0O0C34O238C37O238C41O238C43O276C46O276C50O276C52O314C55O314C59O314C61O348C64O348C69O363C73O348C75O383C78O383C82O383C84O409C87O409C91O409C93O464C95O479C99O500C107O520C111O513C116O4569,,
code-creation,Eval,10,372212,0xe49886564e,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\text.js:1:1,0xe498865498,~
script-source,264,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\text.js,/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req\x2C res\x2C next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j'\x2C req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req\x2C res\x2C next\x2C parse\x2C debug\x2C {\n      encoding: charset\x2C\n      inflate: inflate\x2C\n      limit: limit\x2C\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req\x2C type))\n  }\n}\n
code-source-info,0xe49886564e,264,0,2285,C0O0C4O2285,,
code-creation,Function,10,372321,0xe498865866,83, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\text.js:1:1,0xe4988655c8,~
code-source-info,0xe498865866,264,0,2285,C0O0C22O152C25O152C29O152C31O187C34O187C38O187C40O223C43O223C51O239C55O223C57O271C60O271C64O271C66O303C69O303C73O303C75O351C77O366C82O2284,,
code-creation,Eval,10,372853,0xe498866346,5, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\urlencoded.js:1:1,0xe498866110,~
script-source,265,C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\urlencoded.js,/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req\x2C res\x2C next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j'\x2C req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415\x2C 'unsupported charset "' + charset.toUpperCase() + '"'\x2C {\n        charset: charset\x2C\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req\x2C res\x2C next\x2C parse\x2C debug\x2C {\n      debug: debug\x2C\n      encoding: charset\x2C\n      inflate: inflate\x2C\n      limit: limit\x2C\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body\x2C parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413\x2C 'too many parameters'\x2C {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100\x2C paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body\x2C {\n      allowPrototypes: true\x2C\n      arrayLimit: arrayLimit\x2C\n      depth: Infinity\x2C\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters\x2C stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body\x2C limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&'\x2C index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body\x2C parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413\x2C 'too many parameters'\x2C {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body\x2C undefined\x2C undefined\x2C { maxKeys: parameterLimit })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req\x2C type))\n  }\n}\n
code-source-info,0xe498866346,265,0,5797,C0O0C4O5797,,
code-creation,Function,10,373221,0xe498866736,176, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\body-parser\\lib\\types\\urlencoded.js:1:1,0xe4988662c0,~
code-source-info,0xe498866736,265,0,5797,C0O0C50O198C56O198C60O198C62O233C68O233C72O233C74O275C80O275C84O275C86O310C92O310C100O326C104O310C106O369C112O369C120O384C124O369C126O411C132O411C136O411C138O443C144O443C148O443C150O491C152O506C156O571C160O578C167O578C172O571C175O5796,,
tick,0x7ff6a78eeea1,373267,1,0x7ff6a7a0c340,3,0x7ff6a82ef2d0,0x225ca794da4,0x225ca79b855,0x225ca79ff69,0x225ca7afd1b,0x225ca79b01b,0x225ca79d45c,0x225ca7983c7,0x225ca798095,0xe498855a62,0xe498855866,0x2264577585,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x2264576859,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0xbfdd3508b2,0xbfdd36c6fe,0x226457464f,0xbfdd367951,0xbfdd363843,0xbfdd362d46,0xbfdd350ce7,0x2264572d77,0x3103a7b5c9
code-creation,Function,11,373645,0x225ca7b3d00,308,istraced C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:169:19,0x226457b818,^
code-source-info,0x225ca7b3d00,141,3161,3380,,,
code-creation,Function,11,373685,0x225ca7b3ea0,656,maybeOverridePrepareStackTrace node:internal/errors:135:40,0x25aadb24a88,^
code-source-info,0x225ca7b3ea0,11,3827,4550,,,
code-creation,Function,11,373705,0x225ca7b41a0,224,defineGetter C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\request.js:519:22,0x96d321eab8,^
code-source-info,0x225ca7b41a0,235,12376,12504,,,
code-creation,Function,11,373728,0x225ca7b42e0,340,isatty node:tty:42:16,0x2bdba1104f8,^
code-source-info,0x225ca7b42e0,148,1590,1684,,,
code-creation,Function,11,373750,0x225ca7b44a0,668,createDebug C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js:63:21,0x2bdba113b50,^
code-source-info,0x225ca7b44a0,150,1220,2957,,,
code-creation,Function,11,373769,0x225ca7b47a0,308,isignored C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:153:20,0x226457b7c8,^
code-source-info,0x225ca7b47a0,141,2884,3095,,,
code-creation,LazyCompile,10,373859,0xe498867ca6,46, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\express.js:109:37,0x2264577268,~
code-source-info,0xe498867ca6,139,2105,2406,C0O2105C9O2116C13O2123C26O2147C31O2164C39O2123C45O2405,,
code-creation,LazyCompile,10,373996,0xe498868266,169,createApplication C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\express.js:37:27,0x22645771f0,~
code-source-info,0xe498868266,139,722,1263,C0O722C5O739C9O739C11O806C24O830C31O806C36O851C51O851C56O936C59O950C63O957C73O964C78O980C85O1043C95O957C101O948C105O1114C108O1129C112O1136C122O1143C127O1159C134O1222C144O1136C150O1127C154O1236C157O1240C162O1240C166O1250C168O1261,,
code-creation,LazyCompile,10,374117,0xe49886856e,98,merge C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\merge-descriptors\\index.js:34:15,0x2bdba106f00,~
code-source-info,0xe49886856e,143,626,1214,C0O626C17O652C21O669C30O675C35O669C36O725C40O741C49O747C54O741C55O796C59O853C60O862C62O876C66O883C74O883C80O907C90O908C95O1201C97O1212,,
code-creation,LazyCompile,10,374176,0xe498868716,71,forEachOwnPropertyName C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\merge-descriptors\\index.js:48:74,0xe498868498,~
code-source-info,0xe498868716,143,947,1196,C0O960C9O992C17O992C25O1042C26O1048C27O1100C31O1107C39O1107C46O1147C50O1154C64O1154C70O1195,,
code-creation,LazyCompile,10,374343,0xe4988689de,26,init C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:64:25,0x2bdba108168,~
code-source-info,0xe4988689de,144,1438,1538,C0O1445C1O1456C5O1464C6O1477C10O1485C11O1499C15O1513C20O1513C25O1537,,
code-creation,LazyCompile,10,374433,0xe498868f16,322,defaultConfiguration C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:77:57,0x2bdba1081b8,~
code-source-info,0xe498868f16,144,1659,3237,C0O1676C4O1684C9O1688C18O1745C26O1745C31O1776C42O1776C48O1804C56O1804C62O1828C73O1828C79O1868C90O1868C96O1903C106O1903C112O1970C116O1977C121O1997C129O2007C134O1977C139O2083C145O2083C150O2125C163O2125C169O2674C173O2681C180O2681C185O2672C189O2732C191O2747C195O2782C200O2805C204O2798C208O2850C219O2850C225O2876C239O2889C244O2876C250O2915C261O2915C267O2958C269O2966C274O2995C282O2995C287O3024C291O3031C304O3073C315O3031C321O3236,,
code-creation,LazyCompile,10,374511,0xe49886921e,14,enable C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:469:29,0x2bdba1085c8,~
code-source-info,0xe49886921e,144,10523,10570,C0O10549C7O10549C13O10568,,
code-creation,LazyCompile,10,374576,0xe498869436,234,set C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:359:23,0x2bdba108488,~
code-source-info,0xe498869436,144,8451,9387,C0O8451C2O8484C9O8491C14O8548C19O8578C23O8594C27O8601C31O8590C36O8620C39O8639C44O8639C52O8674C54O8689C57O8698C58O8714C62O8732C67O8732C73O8562C76O8768C77O8784C78O8792C90O8792C95O8854C102O8872C106O8912C132O8959C143O8974C148O8959C154O8999C156O9042C167O9065C172O9042C178O9097C180O9139C191O9161C196O9139C202O9229C206O9236C211O9256C219O9266C224O9236C229O9359C231O9373C233O9385,,
code-creation,LazyCompile,10,374686,0xe4988697c6,332,debug C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js:65:17,0x2bdba117ca8,~
code-source-info,0xe4988697c6,150,1251,2646,C0O1251C7O1277C12O1288C18O1297C19O1304C20O1321C24O1321C26O1372C30O1373C35O1372C38O1398C45O1406C49O1403C53O1429C58O1439C62O1449C69O1459C73O1475C78O1485C82O1497C84O1506C88O1578C92O1598C99O1578C104O1578C106O1624C108O1629C111O1636C115O1629C120O1657C125O1676C128O1665C132O1645C137O1611C140O1692C150O1710C159O1721C163O1710C168O1700C172O1732C176O1760C183O1818C186O1823C194O1823C199O1907C200O1907C202O1914C211O1928C215O1932C230O1932C236O1922C240O2505C245O2513C250O2524C261O2524C267O2559C272O2565C283O2580C289O2587C293O2595C298O2599C303O2604C307O2599C313O2624C324O2624C331O2645,,
code-creation,LazyCompile,10,374787,0xe498869b46,86,exports.compileETag C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:152:31,0x2f65a736430,~
code-source-info,0xe498869b46,197,3279,3630,C0O3300C6O3337C8O3348C9O3356C40O3409C43O3422C48O3435C50O3464C52O3496C55O3509C60O3521C62O3547C71O3603C77O3553C82O3547C83O3618C85O3628,,
code-creation,LazyCompile,10,374845,0xe498869d0e,84,compileQueryParser C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:184:57,0x2f65a7364c0,~
code-source-info,0xe498869d0e,197,3816,4217,C0O3837C6O3874C8O3885C9O3893C40O3948C43O3965C48O3978C50O4007C53O4029C55O4063C58O4100C60O4126C69O4190C75O4132C80O4126C81O4205C83O4215,,
code-creation,LazyCompile,10,374912,0xe498869f96,106,exports.compileTrust C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:217:32,0x2f65a736510,~
code-source-info,0xe498869f96,197,4398,4852,C0O4398C9O4408C15O4439C17O4450C18O4454C22O4462C27O4510C31O4543C32O4551C38O4620C42O4660C43O4668C49O4741C52O4751C60O4751C66O4768C76O4769C81O4745C83O4814C88O4831C95O4839C100O4831C105O4850,,
code-creation,LazyCompile,10,374992,0xe49886a2ae,229,compile C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\proxy-addr\\index.js:84:18,0xe6a61be9b0,~
code-source-info,0xe49886a2ae,230,1340,1948,C0O1350C4O1366C13O1372C18O1366C19O1430C25O1465C34O1474C45O1488C49O1498C54O1498C61O1530C66O1530C73O1553C82O1559C87O1553C88O1623C90O1636C94O1628C99O1655C101O1666C106O1675C110O1687C115O1697C120O1712C128O1712C136O1742C138O1797C143O1812C148O1828C153O1835C158O1841C167O1849C171O1855C179O1855C185O1835C191O1881C195O1888C205O1645C210O1610C213O1899C219O1919C224O1906C228O1946,,
code-creation,LazyCompile,10,375084,0xe49886a4ee,56,compileRangeSubnets C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\proxy-addr\\index.js:122:30,0xe6a61bea00,~
code-source-info,0xe49886a4ee,230,2071,2238,C0O2100C4O2114C11O2100C17O2138C19O2149C23O2143C28O2168C33O2205C37O2186C41O2184C45O2158C50O2125C53O2217C55O2236,,
code-creation,LazyCompile,10,375143,0xe49886a61e,44,compileTrust C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\proxy-addr\\index.js:139:23,0xe6a61bea50,~
code-source-info,0xe49886a61e,230,2368,2586,C0O2457C5O2466C6O2477C17O2509C26O2547C30O2523C39O2560C43O2584,,
code-creation,LazyCompile,10,375309,0xe49886a90e,201,serveStatic C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js:38:22,0xe498863d50,~
code-source-info,0xe49886a90e,263,642,2702,C0O642C5O662C9O679C18O685C23O679C24O728C30O764C39O770C44O764C45O857C49O864C56O871C60O864C65O857C67O926C70O931C76O943C80O926C82O993C85O998C91O1007C96O1059C99O1064C103O1059C105O1078C115O1136C124O1142C129O1136C130O1229C136O1248C145O1263C152O1241C156O1277C164O1289C168O1287C172O1358C181O1373C191O1413C194O1358C196O1450C200O2700,,
code-creation,LazyCompile,10,375379,0xe49886ab96,5,createRedirectDirectoryListener C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js:182:42,0xe498863f10,~
code-source-info,0xe49886ab96,263,3677,4569,C0O3684C4O4567,,
code-creation,LazyCompile,10,375438,0xe49886adbe,159,use C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:194:23,0x2bdba1082d0,~
code-source-info,0xe49886adbe,144,4621,5784,C0O4621C7O4643C9O4659C11O4659C13O4724C19O4770C24O4805C28O4792C33O4792C40O4812C46O4819C51O4834C52O4843C56O4779C59O4888C65O4927C68O4945C70O4950C72O4979C82O4993C87O4993C94O4979C99O5030C105O5037C110O5050C119O5056C124O5050C125O5144C130O5144C134O5178C138O5173C140O5194C150O5194C156O5770C158O5782,,
code-creation,LazyCompile,10,375502,0xe49886afa6,35,arrayFlatten C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\array-flatten\\array-flatten.js:58:23,0x2bdba1275e8,~
code-source-info,0xe49886afa6,161,1067,1194,C0O1086C5O1111C8O1133C11O1118C16O1143C17O1151C20O1175C29O1158C34O1192,,
code-creation,LazyCompile,10,375551,0xe49886b0c6,64,flattenForever C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\array-flatten\\array-flatten.js:37:25,0x2bdba127598,~
code-source-info,0xe49886b0c6,161,683,904,C0O716C2O729C6O721C11O760C13O765C17O774C21O784C26O784C33O808C36O808C43O864C48O864C53O738C58O703C61O889C63O902,,
code-creation,LazyCompile,10,375611,0xe49886b2fe,127,lazyrouter C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:144:37,0x2bdba108230,~
code-source-info,0xe49886b2fe,144,3496,3779,C0O3513C6O3528C9O3547C14O3582C22O3582C31O3636C39O3636C50O3543C55O3541C59O3680C64O3688C72O3703C80O3703C86O3692C91O3688C96O3738C101O3746C109O3761C114O3761C120O3746C126O3778,,
code-creation,LazyCompile,10,375664,0xe49886b4a6,20,enabled C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:438:31,0x2bdba108528,~
code-source-info,0xe49886b4a6,144,10041,10091,C0O10055C4O10075C9O10075C15O10062C19O10089,,
code-creation,LazyCompile,10,375719,0xe49886b646,97,module.exports C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:43:38,0x2bdba123888,~
code-source-info,0xe49886b646,159,931,1317,C0O931C11O956C17O1084C30O1084C35O1117C39O1131C43O1139C48O1154C52O1162C55O1190C59O1183C63O1207C66O1233C70O1226C74O1248C77O1269C81O1262C85O1279C90O1292C94O1301C96O1315,,
code-creation,LazyCompile,10,375804,0xe49886b85e,100,app.<computed> C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:490:25,0x96d321d358,~
code-source-info,0xe49886b85e,144,10877,11145,C0O10877C2O10889C7O10900C12O10923C19O10930C24O10983C29O10983C34O10993C35O11010C40O11010C44O11046C49O11054C54O11054C60O11071C62O11076C66O11085C76O11104C84O11104C91O11085C97O11129C99O11141,,
code-creation,LazyCompile,10,375866,0xe49886ba5e,69,query C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\query.js:25:32,0x2f65a70e0b0,~
code-source-info,0xe49886ba5e,178,414,883,C0O414C5O439C12O439C17O439C19O477C24O480C28O477C30O490C36O531C38O542C40O557C41O562C43O582C50O613C56O683C60O704C64O719C68O881,,
code-creation,LazyCompile,10,375916,0xe49886bbae,53,module.exports C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\utils-merge\\index.js:16:36,0x2f65a709418,~
code-source-info,0xe49886bbae,175,284,379,C0O294C6O303C8O328C21O321C34O321C35O339C37O349C40O346C47O312C50O368C52O377,,
code-creation,LazyCompile,10,375999,0xe49886be66,248,use C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:439:25,0x2bdba123ab8,~
code-source-info,0xe49886be66,159,10445,11460,C0O10445C2O10467C4O10483C7O10551C13O10597C18O10632C22O10619C27O10619C34O10639C40O10646C45O10661C46O10670C50O10606C53O10715C59O10754C62O10772C67O10812C73O10826C78O10826C85O10812C90O10869C96O10876C101O10889C110O10895C115O10889C116O10976C118O10993C122O10981C127O11021C129O11030C134O11040C138O11078C148O11157C152O11155C158O11084C163O11078C164O11207C170O11235C182O11207C187O11275C190O11285C195O11315C211O11275C217O11385C218O11397C222O11420C227O11426C232O11426C237O11002C242O10963C245O11446C247O11458,,
code-creation,LazyCompile,10,376113,0xe49886c186,144,Layer C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\layer.js:33:15,0x2bdba127e90,~
code-source-info,0xe49886c186,162,500,951,C0O524C2O535C7O560C21O567C26O596C27O604C33O604C38O639C44O657C46O669C50O692C61O687C65O717C66O729C70O744C71O754C75O769C78O794C81O810C94O783C99O781C103O856C110O880C113O873C117O895C124O920C129O936C135O940C138O913C143O950,,
code-creation,LazyCompile,10,376257,0xe49886c77e,601,pathtoRegexp C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\path-to-regexp\\index.js:28:22,0x2bdba129100,~
code-source-info,0xe49886c77e
code-creation,RegExp,3,376427,0x225ca7b4940,896,([\\/\\.])
code-creation,RegExp,3,376510,0x225ca7b4d20,2844,(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?
code-creation,LazyCompile,10,376573,0xe49886cdae,14,exports.init C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\init.js:28:24,0x2f65a70d150,~
code-source-info,0xe49886cdae,177,510,850,C0O510C9O519C13O848,,
code-creation,RegExp,3,376647,0x225ca7b58a0,944,\\((?!\\?)
code-creation,LazyCompile,10,376696,0xe49886cfd6,139, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:224:24,0xe49886acc0,~
code-source-info,0xe49886cfd6,144,5211,5758,C0O5211C9O5245C16O5260C25O5274C31O5287C36O5301C49O5301C55O5315C56O5327C69O5327C74O5365C81O5378C85O5390C90O5400C94O5457C99O5464C109O5468C114O5464C120O5731C123O5734C131O5734C138O5757,,
code-creation,LazyCompile,10,376779,0xe49886d22e,86,route C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:502:29,0x2bdba123b08,~
code-source-info,0xe49886d22e,159,11770,12019,C0O11793C5O11793C11O11825C14O11835C19O11863C27O11895C35O11928C40O11937C45O11937C56O11825C62O11954C64O11966C68O11983C73O11989C78O11989C83O12004C85O12017,,
code-creation,LazyCompile,10,376826,0xe49886d3ae,30,Route C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:43:15,0x2bdba125b50,~
code-source-info,0xe49886d3ae,160,677,818,C0O688C2O698C6O708C8O719C12O728C18O728C23O798C24O811C29O817,,
code-creation,LazyCompile,10,376922,0xe49886d5c6,183,Route.<computed> C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:202:37,0x2f65a708038,~
code-source-info,0xe49886d5c6,160,3711,4263,C0O3711C2O3733C12O3747C17O3747C23O3733C28O3783C30O3798C34O3788C39O3832C41O3839C45O3851C49O3906C54O3915C59O3915C65O3947C70O3956C76O3965C82O4012C86O4027C92O4033C97O4027C98O4064C109O4092C114O4064C119O4117C132O4117C138O4147C140O4160C144O4182C153O4198C157O4217C162O4223C167O4223C172O3807C177O3770C180O4247C182O4259,,
code-creation,Function,11,377062,0x225ca7b5cc0,864,Layer C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\layer.js:33:15,0x2bdba127e90,^
code-source-info,0x225ca7b5cc0,162,500,951,,,
code-creation,Function,11,377095,0x225ca7b6080,920,depd C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\depd\\index.js:103:15,0x226457b700,^
code-source-info,0x225ca7b6080,141,1744,2308,,,
code-creation,Function,11,377115,0x225ca7b6480,364, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\express.js:109:37,0x2264577268,^
code-source-info,0x225ca7b6480,139,2105,2406,,,
code-creation,Function,11,377136,0x225ca7b6660,432,forEachOwnPropertyName C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\merge-descriptors\\index.js:48:74,0xe498868498,^
code-source-info,0x225ca7b6660,143,947,1196,,,
code-creation,LazyCompile,10,377204,0xe49886dbf6,33,listen C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:633:29,0x2bdba108780,~
code-source-info,0xe49886dbf6,144,14101,14196,C0O14101C2O14121C5O14126C10O14126C16O14162C21O14169C26O14169C32O14194,,
code-creation,LazyCompile,10,377242,0xe49886dcf6,19,createServer node:http:58:22,0x2bdba12aa98,~
code-source-info,0xe49886dcf6,165,2022,2095,C0O2051C13O2058C18O2092,,
code-creation,LazyCompile,10,377355,0xe49886df66,199,Server node:_http_server:370:16,0x2bdba13ff18,~
code-source-info,0xe49886df66,173,13453,14513,C0O13485C2O13496C7O13516C18O13523C23O13560C24O13566C30O13608C33O13640C38O13664C49O13723C57O13766C73O13772C78O13766C79O13838C82O13855C87O13855C93O13879C98O13883C103O13890C113O13890C119O13932C123O13965C131O13965C137O14231C138O14254C142O14273C153O14273C159O14316C160O14329C164O14337C168O14359C172O14370C173O14391C177O14402C178O14428C182O14436C188O14456C192O14486C193O14506C198O14512,,
code-creation,LazyCompile,10,377443,0xe498870296,191,Server node:net:1191:16,0xbfdd37c4d0,~
code-source-info,0xe498870296,120,32378,33236,C0O32413C2O32424C7O32449C18O32456C23O32496C24O32502C29O32515C34O32515C39O32532C45O32574C48O32609C51O32633C59O32633C67O32681C78O32740C84O32773C90O32833C98O32833C106O32895C122O32901C127O32895C128O32967C129O32985C133O32995C135O33000C140O33017C144O33026C145O33039C149O33050C150O33069C154O33081C156O33095C160O33104C161O33116C165O33159C175O33149C179O33218C185O33206C190O33235,,
code-creation,LazyCompile,10,377520,0xe49887050e,101,storeHTTPOptions node:_http_server:355:26,0x2bdba13fec8,~
code-source-info,0xe49887050e,173,12875,13434,C0O12890C2O12895C5O12923C16O12942C18O12913C22O12962C24O12967C27O12994C38O12984C42O13063C47O13081C49O13119C62O13119C67O13174C69O13193C73O13250C78O13273C80O13316C88O13316C93O13386C95O13410C100O13433,,
code-creation,LazyCompile,10,377708,0xe498870c5e,692,Server.listen node:net:1414:35,0xbfdd37d9b8,~
code-source-info,0xe498870c5e
code-creation,LazyCompile,10,377869,0xe498871256,183,normalizeArgs node:net:217:23,0xbfdd37c020,~
code-source-info,0xe498871256,120,5736,6473,C0O5752C2O5771C8O5778C13O5792C18O5815C20O5819C24O5841C28O5854C30O5865C31O5889C32O5893C36O5915C38O5922C48O6005C55O6031C58O6035C64O6086C66O6099C72O6160C74O6173C78O6195C85O6202C92O6220C99O6247C101O6266C104O6260C108O6309C112O6316C115O6303C119O6325C123O6360C132O6367C143O6396C152O6403C161O6412C170O6422C172O6426C176O6448C180O6459C182O6470,,
code-creation,LazyCompile,10,377927,0xe49887142e,19,isPipeName node:net:162:20,0xbfdd37bf30,~
code-source-info,0xe49887142e,120,4281,4347,C0O4290C9O4322C15O4334C18O4344,,
code-creation,LazyCompile,10,377966,0xe498871596,39,once node:events:528:44,0x25aadb340b0,~
code-source-info,0xe498871596,13,15895,16013,C0O15917C3O15917C7O15952C24O15961C30O15952C36O15998C38O16010,,
code-creation,LazyCompile,10,378007,0xe498871746,60,_onceWrap node:events:514:19,0x25aadb34060,~
code-source-info,0xe498871746,13,15454,15683,C0O15498C6O15522C12O15533C18O15541C24O15547C31O15578C34O15590C39O15590C45O15606C47O15623C51O15638C53O15651C57O15665C59O15680,,
code-creation,LazyCompile,10,378060,0xe49887187e,23,toNumber node:net:1226:18,0xbfdd37c520,~
code-source-info,0xe49887187e,120,33369,33417,C0O33375C5O33387C12O33398C22O33415,,
code-creation,LazyCompile,10,378093,0xe498871976,19,getFlags node:net:133:18,0xbfdd37be40,~
code-source-info,0xe498871976,120,3629,3708,C0O3645C1O3661C8O3672C11O3685C18O3705,,
code-creation,LazyCompile,10,378142,0xe498871b8e,138,addAbortSignalOption node:net:1174:30,0xbfdd37c480,~
code-source-info,0xe498871b8e,120,31933,32359,C0O31933C15O31954C22O31965C31O31996C32O32003C33O32012C40O32040C48O32012C53O32078C59O32119C63O32119C65O32155C68O32166C74O32182C79O32190C87O32190C94O32228C97O32235C108O32235C114O32278C117O32283C130O32283C137O32358,,
code-creation,LazyCompile,10,378206,0xe498871dbe,129,validatePort node:internal/validators:210:22,0x6682e9ac68,~
code-source-info,0xe498871dbe,17,6604,6971,C24O6649C44O6747C47O6747C52O6772C58O6780C65O6797C70O6808C72O6814C75O6803C86O6836C92O6861C99O6871C101O6890C117O6896C122O6890C123O6952C125O6964C128O6968,,
code-creation,LazyCompile,10,378276,0xe4988720de,193,listenInCluster node:net:1372:25,0xbfdd37c6b0,~
code-source-info,0xe4988720de,120,37710,38948,C0O37710C38O37809C44O37839C52O37866C60O37876C69O37874C77O37901C84O37913C92O37926C94O38105C97O38112C120O38112C125O38175C126O38182C127O38213C134O38229C140O38249C146O38273C152O38295C158O38304C165O38378C172O38386C186O38386C192O38947,,
code-creation,LazyCompile,10,378384,0xe498872406,443,setupListenHandle node:net:1287:27,0xbfdd37c5c0,~
code-source-info,0xe
code-creation,LazyCompile,10,378477,0xe49887278e,10, node:net:39:63,0xbfdd37c840,~
code-source-info,0xe49887278e,120,1511,1538,C0O1524C2O1530C9O1537,,
code-creation,LazyCompile,10,378564,0xe4988729de,379,createServerHandle node:net:1229:28,0xbfdd37c570,~
code-source-info,0xe4988729de
code-creation,LazyCompile,10,379231,0xe498872dae,121,defaultTriggerAsyncIdScope node:internal/async_hooks:445:36,0x25aadb3b050,~
script-source,24,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// For performance reasons\x2C only track Promises when a hook is enabled.\x0d\nconst { setPromiseHooks } = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nsetCallbackTrampoline(callbackTrampoline);\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n\x0d\n  const publicResource = resource[owner_symbol];\x0d\n\x0d\n  if (publicResource != null) {\x0d\n    return publicResource;\x0d\n  }\x0d\n\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n}\x0d\n\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  setPromiseHooks(\x0d\n    initHook\x2C\x0d\n    promiseBeforeHook\x2C\x0d\n    promiseAfterHook\x2C\x0d\n    promiseResolveHooksExist() ? promiseResolveHook : undefined\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook) {\x0d\n    setPromiseHooks(undefined\x2C undefined\x2C undefined\x2C undefined);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xe498872dae,24,15616,16087,C0O15616C11O15654C15O15706C22O15706C28O15724C29O15842C36O15858C38O15857C42O15886C49O15902C54O15926C61O15973C68O15973C86O16012C93O16028C98O16052C120O16086,,
code-creation,LazyCompile,10,380153,0xe4988743e6,368,nextTick node:internal/process/task_queues:104:18,0x25aadb3d028,~
script-source,25,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while (tock = queue.shift()) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0xe4988743e
code-creation,LazyCompile,10,380425,0xe498874c56,21, node:internal/validators:221:42,0x6682e9acd8,~
code-source-info,0xe498874c56,17,7016,7120,C0O7035C6O7076C13O7082C18O7076C20O7119,,
code-creation,LazyCompile,10,380463,0xe498874d56,15,isEmpty node:internal/fixed_queue:95:10,0x2ee4c9c6258,~
script-source,28,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xe498874d56,28,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,380664,0xe49887520e,13,isEmpty node:internal/fixed_queue:67:10,0x2ee4c9c5fa0,~
code-source-info,0xe49887520e,28,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,380692,0xe4988752fe,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x25aadb3cf38,~
code-source-info,0xe4988752fe,25,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,380720,0xe4988753f6,23,newAsyncId node:internal/async_hooks:415:20,0x25aadb3aee0,~
code-source-info,0xe4988753f6,24,14740,14793,C0O14748C7O14773C16O14788C22O14790,,
code-creation,LazyCompile,10,380751,0xe49887551e,35,getDefaultTriggerAsyncId node:internal/async_hooks:431:34,0x25aadb3af80,~
code-source-info,0xe49887551e,24,15215,15478,C0O15253C7O15269C9O15268C13O15364C14O15390C19O15400C26O15423C28O15422C31O15442C32O15446C34O15475,,
code-creation,LazyCompile,10,380789,0xe49887562e,13,initHooksExist node:internal/async_hooks:468:24,0x25aadb3b170,~
code-source-info,0xe49887562e,24,16248,16282,C0O16256C5O16272C8O16263C12O16279,,
code-creation,LazyCompile,10,380815,0xe498875716,16,hasHooks node:internal/async_hooks:460:18,0x25aadb3b0d0,~
code-source-info,0xe498875716,24,16108,16156,C0O16119C7O16143C12O16149C15O16153,,
code-creation,LazyCompile,10,380847,0xe498875826,59,push node:internal/fixed_queue:99:7,0x2ee4c9c62a8,~
code-source-info,0xe498875826,28,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,380880,0xe49887596e,24,isFull node:internal/fixed_queue:71:9,0x2ee4c9c6008,~
code-source-info,0xe49887596e,28,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,380911,0xe498875a7e,37,push node:internal/fixed_queue:75:7,0x2ee4c9c6070,~
code-source-info,0xe498875a7e,28,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,381003,0xe498875c2e,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x25aadb3cfd8,~
code-source-info,0xe498875c2e,25,1563,2529,C0O1575C2O1606C7O1614C12O1614C17O1606C19O1648C21O1653C23O1652C27O1678C34O1703C36O1702C46O1678C54O1782C59O1810C65O1843C70O1902C75O1932C110O1963C111O1976C115O1963C119O1982C121O2010C122O2023C128O2032C132O2010C137O2038C139O2066C140O2079C146O2088C152O2097C156O2066C161O2103C163O2131C164O2144C170O2153C176O2162C182O2171C186O2131C191O2177C193O2206C198O2206C215O2277C220O2281C225O2313C230O2313C245O2353C250O2353C256O2385C261O2385C264O2431C269O2421C274O2421C282O2434C285O2434C290O1584C296O2466C301O2466C305O2497C312O2497C317O2528,,
code-creation,LazyCompile,10,381085,0xe498875f0e,43,shift node:internal/fixed_queue:108:8,0x2ee4c9c62f8,~
code-source-info,0xe498875f0e,28,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,381125,0xe498876056,54,shift node:internal/fixed_queue:80:8,0x2ee4c9c60d8,~
code-source-info,0xe498876056,28,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,381169,0xe49887618e,42,emitBeforeScript node:internal/async_hooks:499:26,0x25aadb3b320,~
code-source-info,0xe49887618e,24,16949,17105,C0O16990C12O16990C17O17048C22O17061C25O17052C31O17076C36O17076C41O17104,,
code-creation,LazyCompile,10,381216,0xe4988762de,180,pushAsyncContext node:internal/async_hooks:529:26,0x25aadb3b4c8,~
code-source-info,0xe4988762de,24,17623,18178,C0O17679C7O17697C9O17696C13O17715C20O17749C24O17764C26O17775C32O17782C35O17793C40O17809C44O17779C49O17822C54O17829C59O17872C60O17876C65O17887C72O17910C78O17917C83O17933C85O17932C88O17915C92O17956C97O17967C104O17990C107O17994C113O18001C118O18017C120O18016C123O17999C127O18038C134O18056C142O18069C146O18076C153O18092C158O18111C162O18125C169O18141C174O18158C179O18177,,
code-creation,LazyCompile,10,381283,0xe4988764d6,21,emitListeningNT node:net:1365:25,0xbfdd37c660,~
code-source-info,0xe4988764d6,120,37585,37680,C0O37640C6O37659C14O37659C20O37679,,
code-creation,LazyCompile,10,381322,0xe49887660e,95,onceWrapper node:events:504:21,0x25aadb34010,~
code-source-info,0xe49887660e,13,15180,15432,C0O15180C2O15198C8O15217C13O15224C18O15244C23O15255C28O15224C34O15269C35O15280C39O15307C45O15314C50O15340C55O15349C60O15359C65O15349C70O15367C71O15385C76O15394C81O15405C86O15394C92O15424C94O15431,,
code-creation,LazyCompile,10,381413,0xe4988767ce,307,removeListener node:events:557:28,0x25aadb34178,~
code-source-info,0xe4988767ce
code-creation,LazyCompile,10,381500,0xe498876aae,28, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:77:33,0x22645744a0,~
code-source-info,0xe498876aae,137,2093,2165,C0O2106C4O2114C14O2154C21O2114C27O2164,,
code-creation,LazyCompile,10,381573,0xe498876bbe,38,log node:internal/console/constructor:358:6,0x2ee4c9cc9e0,~
script-source,30,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\n\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (!new.target) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      value: key\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { ...consolePropAttributes\x2C value: stderr }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x0d\n        }\x2C\x0d\n        '_times': { ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = StringPrototypeReplace(string\x2C /\\n/g\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = stream.isTTY && (\x0d\n          typeof stream.getColorDepth === 'function' ?\x0d\n            stream.getColorDepth() > 2 : true);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    if (cliTable === undefined) cliTable = require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = {};\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          if (map[key] === undefined)\x0d\n            map[key] = [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  formatTime // exported for tests\x0d\n};\x0d\n
code-source-info,0xe498876bbe,30,11348,11434,C0O11348C3O11365C5O11370C7O11369C13O11387C18O11404C20O11403C24O11421C30O11386C37O11433,,
code-creation,LazyCompile,10,382551,0xe49887822e,50,value node:internal/console/constructor:320:20,0x2ee4c9cc788,~
code-source-info,0xe49887822e,30,9877,10053,C0O9906C2O9911C4O9910C8O9936C13O9930C19O9953C24O9953C29O9995C36O10015C44O10002C49O10046,,
code-creation,LazyCompile,10,382592,0xe498878346,27,get node:internal/console/constructor:202:14,0x2ee4c9cc458,~
code-source-info,0xe498878346,30,5946,6041,C0O5964C6O5977C9O5993C16O5984C22O6014C26O6028,,
code-creation,LazyCompile,10,382639,0xe498878486,96,value node:internal/console/constructor:299:20,0x2ee4c9cc700,~
code-source-info,0xe498878486,30,9295,9794,C0O9325C2O9330C4O9329C8O9350C10O9360C15O9398C21O9434C29O9485C34O9485C41O9501C48O9548C53O9559C58O9559C64O9577C66O9613C72O9648C74O9663C78O9692C80O9707C81O9726C87O9741C93O9764C95O9787,,
code-creation,LazyCompile,10,382803,0xe49887861e,49,formatWithOptions node:internal/util/inspect:1883:27,0x6682e96768,~
script-source,14,node:internal/util/inspect,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  BigIntPrototypeValueOf\x2C\x0d\n  BooleanPrototypeValueOf\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  DatePrototypeToISOString\x2C\x0d\n  DatePrototypeToString\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  FunctionPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGetSize\x2C\x0d\n  MapPrototypeEntries\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  MathSqrt\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseFloat\x2C\x0d\n  NumberParseInt\x2C\x0d\n  NumberPrototypeValueOf\x2C\x0d\n  Object\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectPrototypePropertyIsEnumerable\x2C\x0d\n  ObjectSeal\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  RegExpPrototypeToString\x2C\x0d\n  SafeStringIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SetPrototypeGetSize\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeNormalize\x2C\x0d\n  StringPrototypePadEnd\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  StringPrototypeValueOf\x2C\x0d\n  SymbolPrototypeToString\x2C\x0d\n  SymbolPrototypeValueOf\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n  Uint8Array\x2C\x0d\n  globalThis\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  getPromiseDetails\x2C\x0d\n  getProxyDetails\x2C\x0d\n  kPending\x2C\x0d\n  kRejected\x2C\x0d\n  previewEntries\x2C\x0d\n  getConstructorName: internalGetConstructorName\x2C\x0d\n  getExternalValue\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x0d\n} = internalBinding('util');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isError\x2C\x0d\n  join\x2C\x0d\n  removeColors\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x0d\n  }\x2C\x0d\n  isStackOverflowError\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isGeneratorFunction\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBuffer\x2C\x0d\n  isArgumentsObject\x2C\x0d\n  isBoxedPrimitive\x2C\x0d\n  isDataView\x2C\x0d\n  isExternal\x2C\x0d\n  isMap\x2C\x0d\n  isMapIterator\x2C\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isNativeError\x2C\x0d\n  isPromise\x2C\x0d\n  isSet\x2C\x0d\n  isSetIterator\x2C\x0d\n  isWeakMap\x2C\x0d\n  isWeakSet\x2C\x0d\n  isRegExp\x2C\x0d\n  isDate\x2C\x0d\n  isTypedArray\x2C\x0d\n  isStringObject\x2C\x0d\n  isNumberObject\x2C\x0d\n  isBooleanObject\x2C\x0d\n  isBigIntObject\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nlet hexSlice;\x0d\n\x0d\nconst builtInObjects = new SafeSet(\x0d\n  ArrayPrototypeFilter(\x0d\n    ObjectGetOwnPropertyNames(globalThis)\x2C\x0d\n    (e) => RegExpPrototypeTest(/^[A-Z][a-zA-Z0-9]+$/\x2C e)\x0d\n  )\x0d\n);\x0d\n\x0d\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\x0d\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\x0d\n\x0d\n// These options must stay in sync with `getUserOptions`. So if any option will\x0d\n// be added or removed\x2C `getUserOptions` must also be updated accordingly.\x0d\nconst inspectDefaultOptions = ObjectSeal({\x0d\n  showHidden: false\x2C\x0d\n  depth: 2\x2C\x0d\n  colors: false\x2C\x0d\n  customInspect: true\x2C\x0d\n  showProxy: false\x2C\x0d\n  maxArrayLength: 100\x2C\x0d\n  maxStringLength: 10000\x2C\x0d\n  breakLength: 80\x2C\x0d\n  compact: 3\x2C\x0d\n  sorted: false\x2C\x0d\n  getters: false\x0d\n});\x0d\n\x0d\nconst kObjectType = 0;\x0d\nconst kArrayType = 1;\x0d\nconst kArrayExtrasType = 2;\x0d\n\x0d\n/* eslint-disable no-control-regex */\x0d\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]/;\x0d\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]/g;\x0d\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]/;\x0d\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]/g;\x0d\n/* eslint-enable no-control-regex */\x0d\n\x0d\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\x0d\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\x0d\n\x0d\nconst coreModuleRegExp = /^    at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\x0d\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\x0d\n\x0d\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\x0d\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\x0d\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\x0d\n\x0d\nconst kMinLineLength = 16;\x0d\n\x0d\n// Constants to map the iterator state.\x0d\nconst kWeak = 0;\x0d\nconst kIterator = 1;\x0d\nconst kMapEntries = 2;\x0d\n\x0d\n// Escaped control characters (plus the single quote and the backslash). Use\x0d\n// empty strings to fill up unused entries.\x0d\nconst meta = [\x0d\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\x0d\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\x0d\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\x0d\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\x0d\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\x0d\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\x0d\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\x0d\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\x0d\n];\x0d\n\x0d\n// Regex used for ansi escape code splitting\x0d\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\x0d\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\x0d\n// Matches all ansi escape code sequences in a string\x0d\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\x0d\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\x0d\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\x0d\n  '|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\x0d\nconst ansi = new RegExp(ansiPattern\x2C 'g');\x0d\n\x0d\nlet getStringWidth;\x0d\n\x0d\nfunction getUserOptions(ctx\x2C isCrossContext) {\x0d\n  const ret = {\x0d\n    stylize: ctx.stylize\x2C\x0d\n    showHidden: ctx.showHidden\x2C\x0d\n    depth: ctx.depth\x2C\x0d\n    colors: ctx.colors\x2C\x0d\n    customInspect: ctx.customInspect\x2C\x0d\n    showProxy: ctx.showProxy\x2C\x0d\n    maxArrayLength: ctx.maxArrayLength\x2C\x0d\n    maxStringLength: ctx.maxStringLength\x2C\x0d\n    breakLength: ctx.breakLength\x2C\x0d\n    compact: ctx.compact\x2C\x0d\n    sorted: ctx.sorted\x2C\x0d\n    getters: ctx.getters\x2C\x0d\n    ...ctx.userOptions\x0d\n  };\x0d\n\x0d\n  // Typically\x2C the target value will be an instance of `Object`. If that is\x0d\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\x0d\n  // to avoid passing it objects from this Context in that case\x2C so we remove\x0d\n  // the prototype from the returned object itself + the `stylize()` function\x2C\x0d\n  // and remove all other non-primitives\x2C including non-primitive user options.\x0d\n  if (isCrossContext) {\x0d\n    ObjectSetPrototypeOf(ret\x2C null);\x0d\n    for (const key of ObjectKeys(ret)) {\x0d\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\x0d\n          ret[key] !== null) {\x0d\n        delete ret[key];\x0d\n      }\x0d\n    }\x0d\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\x0d\n      let stylized;\x0d\n      try {\x0d\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\x0d\n      } catch {}\x0d\n\x0d\n      if (typeof stylized !== 'string') return value;\x0d\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\x0d\n      return stylized;\x0d\n    }\x2C null);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Echos the value of any input. Tries to print the value out\x0d\n * in the best way possible given the different types.\x0d\n *\x0d\n * @param {any} value The value to print out.\x0d\n * @param {Object} opts Optional options object that alters the output.\x0d\n */\x0d\n/* Legacy: value\x2C showHidden\x2C depth\x2C colors */\x0d\nfunction inspect(value\x2C opts) {\x0d\n  // Default options\x0d\n  const ctx = {\x0d\n    budget: {}\x2C\x0d\n    indentationLvl: 0\x2C\x0d\n    seen: []\x2C\x0d\n    currentDepth: 0\x2C\x0d\n    stylize: stylizeNoColor\x2C\x0d\n    showHidden: inspectDefaultOptions.showHidden\x2C\x0d\n    depth: inspectDefaultOptions.depth\x2C\x0d\n    colors: inspectDefaultOptions.colors\x2C\x0d\n    customInspect: inspectDefaultOptions.customInspect\x2C\x0d\n    showProxy: inspectDefaultOptions.showProxy\x2C\x0d\n    maxArrayLength: inspectDefaultOptions.maxArrayLength\x2C\x0d\n    maxStringLength: inspectDefaultOptions.maxStringLength\x2C\x0d\n    breakLength: inspectDefaultOptions.breakLength\x2C\x0d\n    compact: inspectDefaultOptions.compact\x2C\x0d\n    sorted: inspectDefaultOptions.sorted\x2C\x0d\n    getters: inspectDefaultOptions.getters\x0d\n  };\x0d\n  if (arguments.length > 1) {\x0d\n    // Legacy...\x0d\n    if (arguments.length > 2) {\x0d\n      if (arguments[2] !== undefined) {\x0d\n        ctx.depth = arguments[2];\x0d\n      }\x0d\n      if (arguments.length > 3 && arguments[3] !== undefined) {\x0d\n        ctx.colors = arguments[3];\x0d\n      }\x0d\n    }\x0d\n    // Set user-specified options\x0d\n    if (typeof opts === 'boolean') {\x0d\n      ctx.showHidden = opts;\x0d\n    } else if (opts) {\x0d\n      const optKeys = ObjectKeys(opts);\x0d\n      for (let i = 0; i < optKeys.length; ++i) {\x0d\n        const key = optKeys[i];\x0d\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\x0d\n        // this function public or add a new API with a similar or better\x0d\n        // functionality.\x0d\n        if (\x0d\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions\x2C key) ||\x0d\n          key === 'stylize') {\x0d\n          ctx[key] = opts[key];\x0d\n        } else if (ctx.userOptions === undefined) {\x0d\n          // This is required to pass through the actual user input.\x0d\n          ctx.userOptions = opts;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\x0d\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\x0d\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\x0d\n  return formatValue(ctx\x2C value\x2C 0);\x0d\n}\x0d\ninspect.custom = customInspectSymbol;\x0d\n\x0d\nObjectDefineProperty(inspect\x2C 'defaultOptions'\x2C {\x0d\n  get() {\x0d\n    return inspectDefaultOptions;\x0d\n  }\x2C\x0d\n  set(options) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    return ObjectAssign(inspectDefaultOptions\x2C options);\x0d\n  }\x0d\n});\x0d\n\x0d\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\x0d\n// Each color consists of an array with the color code as first entry and the\x0d\n// reset code as second entry.\x0d\nconst defaultFG = 39;\x0d\nconst defaultBG = 49;\x0d\ninspect.colors = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  reset: [0\x2C 0]\x2C\x0d\n  bold: [1\x2C 22]\x2C\x0d\n  dim: [2\x2C 22]\x2C // Alias: faint\x0d\n  italic: [3\x2C 23]\x2C\x0d\n  underline: [4\x2C 24]\x2C\x0d\n  blink: [5\x2C 25]\x2C\x0d\n  // Swap foreground and background colors\x0d\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\x0d\n  hidden: [8\x2C 28]\x2C // Alias: conceal\x0d\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\x0d\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\x0d\n  black: [30\x2C defaultFG]\x2C\x0d\n  red: [31\x2C defaultFG]\x2C\x0d\n  green: [32\x2C defaultFG]\x2C\x0d\n  yellow: [33\x2C defaultFG]\x2C\x0d\n  blue: [34\x2C defaultFG]\x2C\x0d\n  magenta: [35\x2C defaultFG]\x2C\x0d\n  cyan: [36\x2C defaultFG]\x2C\x0d\n  white: [37\x2C defaultFG]\x2C\x0d\n  bgBlack: [40\x2C defaultBG]\x2C\x0d\n  bgRed: [41\x2C defaultBG]\x2C\x0d\n  bgGreen: [42\x2C defaultBG]\x2C\x0d\n  bgYellow: [43\x2C defaultBG]\x2C\x0d\n  bgBlue: [44\x2C defaultBG]\x2C\x0d\n  bgMagenta: [45\x2C defaultBG]\x2C\x0d\n  bgCyan: [46\x2C defaultBG]\x2C\x0d\n  bgWhite: [47\x2C defaultBG]\x2C\x0d\n  framed: [51\x2C 54]\x2C\x0d\n  overlined: [53\x2C 55]\x2C\x0d\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\x0d\n  redBright: [91\x2C defaultFG]\x2C\x0d\n  greenBright: [92\x2C defaultFG]\x2C\x0d\n  yellowBright: [93\x2C defaultFG]\x2C\x0d\n  blueBright: [94\x2C defaultFG]\x2C\x0d\n  magentaBright: [95\x2C defaultFG]\x2C\x0d\n  cyanBright: [96\x2C defaultFG]\x2C\x0d\n  whiteBright: [97\x2C defaultFG]\x2C\x0d\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\x0d\n  bgRedBright: [101\x2C defaultBG]\x2C\x0d\n  bgGreenBright: [102\x2C defaultBG]\x2C\x0d\n  bgYellowBright: [103\x2C defaultBG]\x2C\x0d\n  bgBlueBright: [104\x2C defaultBG]\x2C\x0d\n  bgMagentaBright: [105\x2C defaultBG]\x2C\x0d\n  bgCyanBright: [106\x2C defaultBG]\x2C\x0d\n  bgWhiteBright: [107\x2C defaultBG]\x2C\x0d\n});\x0d\n\x0d\nfunction defineColorAlias(target\x2C alias) {\x0d\n  ObjectDefineProperty(inspect.colors\x2C alias\x2C {\x0d\n    get() {\x0d\n      return this[target];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[target] = value;\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineColorAlias('gray'\x2C 'grey');\x0d\ndefineColorAlias('gray'\x2C 'blackBright');\x0d\ndefineColorAlias('bgGray'\x2C 'bgGrey');\x0d\ndefineColorAlias('bgGray'\x2C 'bgBlackBright');\x0d\ndefineColorAlias('dim'\x2C 'faint');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedout');\x0d\ndefineColorAlias('strikethrough'\x2C 'strikeThrough');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedOut');\x0d\ndefineColorAlias('hidden'\x2C 'conceal');\x0d\ndefineColorAlias('inverse'\x2C 'swapColors');\x0d\ndefineColorAlias('inverse'\x2C 'swapcolors');\x0d\ndefineColorAlias('doubleunderline'\x2C 'doubleUnderline');\x0d\n\x0d\n// TODO(BridgeAR): Add function style support for more complex styles.\x0d\n// Don't use 'blue' not visible on cmd.exe\x0d\ninspect.styles = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  special: 'cyan'\x2C\x0d\n  number: 'yellow'\x2C\x0d\n  bigint: 'yellow'\x2C\x0d\n  boolean: 'yellow'\x2C\x0d\n  undefined: 'grey'\x2C\x0d\n  null: 'bold'\x2C\x0d\n  string: 'green'\x2C\x0d\n  symbol: 'green'\x2C\x0d\n  date: 'magenta'\x2C\x0d\n  // "name": intentionally not styling\x0d\n  // TODO(BridgeAR): Highlight regular expressions properly.\x0d\n  regexp: 'red'\x2C\x0d\n  module: 'underline'\x0d\n});\x0d\n\x0d\nfunction addQuotes(str\x2C quotes) {\x0d\n  if (quotes === -1) {\x0d\n    return `"${str}"`;\x0d\n  }\x0d\n  if (quotes === -2) {\x0d\n    return `\\`${str}\\``;\x0d\n  }\x0d\n  return `'${str}'`;\x0d\n}\x0d\n\x0d\nconst escapeFn = (str) => meta[StringPrototypeCharCodeAt(str)];\x0d\n\x0d\n// Escape control characters\x2C single quotes and the backslash.\x0d\n// This is similar to JSON stringify escaping.\x0d\nfunction strEscape(str) {\x0d\n  let escapeTest = strEscapeSequencesRegExp;\x0d\n  let escapeReplace = strEscapeSequencesReplacer;\x0d\n  let singleQuote = 39;\x0d\n\x0d\n  // Check for double quotes. If not present\x2C do not escape single quotes and\x0d\n  // instead wrap the text in double quotes. If double quotes exist\x2C check for\x0d\n  // backticks. If they do not exist\x2C use those as fallback instead of the\x0d\n  // double quotes.\x0d\n  if (StringPrototypeIncludes(str\x2C "'")) {\x0d\n    // This invalidates the charCode and therefore can not be matched for\x0d\n    // anymore.\x0d\n    if (!StringPrototypeIncludes(str\x2C '"')) {\x0d\n      singleQuote = -1;\x0d\n    } else if (!StringPrototypeIncludes(str\x2C '`') &&\x0d\n               !StringPrototypeIncludes(str\x2C '${')) {\x0d\n      singleQuote = -2;\x0d\n    }\x0d\n    if (singleQuote !== 39) {\x0d\n      escapeTest = strEscapeSequencesRegExpSingle;\x0d\n      escapeReplace = strEscapeSequencesReplacerSingle;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\x0d\n  if (str.length < 5000 && !RegExpPrototypeTest(escapeTest\x2C str))\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  if (str.length > 100) {\x0d\n    str = StringPrototypeReplace(str\x2C escapeReplace\x2C escapeFn);\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  }\x0d\n\x0d\n  let result = '';\x0d\n  let last = 0;\x0d\n  const lastIndex = str.length;\x0d\n  for (let i = 0; i < lastIndex; i++) {\x0d\n    const point = StringPrototypeCharCodeAt(str\x2C i);\x0d\n    if (point === singleQuote ||\x0d\n        point === 92 ||\x0d\n        point < 32 ||\x0d\n        (point > 126 && point < 160)) {\x0d\n      if (last === i) {\x0d\n        result += meta[point];\x0d\n      } else {\x0d\n        result += `${StringPrototypeSlice(str\x2C last\x2C i)}${meta[point]}`;\x0d\n      }\x0d\n      last = i + 1;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (last !== lastIndex) {\x0d\n    result += StringPrototypeSlice(str\x2C last);\x0d\n  }\x0d\n  return addQuotes(result\x2C singleQuote);\x0d\n}\x0d\n\x0d\nfunction stylizeWithColor(str\x2C styleType) {\x0d\n  const style = inspect.styles[styleType];\x0d\n  if (style !== undefined) {\x0d\n    const color = inspect.colors[style];\x0d\n    if (color !== undefined)\x0d\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction stylizeNoColor(str) {\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// Return a new empty array to push in the results of the default formatter.\x0d\nfunction getEmptyFormatArray() {\x0d\n  return [];\x0d\n}\x0d\n\x0d\nfunction isInstanceof(object\x2C proto) {\x0d\n  try {\x0d\n    return object instanceof proto;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\x0d\n  let firstProto;\x0d\n  const tmp = obj;\x0d\n  while (obj || isUndetectableObject(obj)) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '' &&\x0d\n        isInstanceof(tmp\x2C descriptor.value)) {\x0d\n      if (protoProps !== undefined &&\x0d\n         (firstProto !== obj ||\x0d\n         !builtInObjects.has(descriptor.value.name))) {\x0d\n        addPrototypeProperties(\x0d\n          ctx\x2C tmp\x2C firstProto || tmp\x2C recurseTimes\x2C protoProps);\x0d\n      }\x0d\n      return descriptor.value.name;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n    if (firstProto === undefined) {\x0d\n      firstProto = obj;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (firstProto === null) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  const res = internalGetConstructorName(tmp);\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return `${res} <Complex prototype>`;\x0d\n  }\x0d\n\x0d\n  const protoConstr = getConstructorName(\x0d\n    firstProto\x2C ctx\x2C recurseTimes + 1\x2C protoProps);\x0d\n\x0d\n  if (protoConstr === null) {\x0d\n    return `${res} <${inspect(firstProto\x2C {\x0d\n      ...ctx\x2C\x0d\n      customInspect: false\x2C\x0d\n      depth: -1\x0d\n    })}>`;\x0d\n  }\x0d\n\x0d\n  return `${res} <${protoConstr}>`;\x0d\n}\x0d\n\x0d\n// This function has the side effect of adding prototype properties to the\x0d\n// `output` argument (which is an array). This is intended to highlight user\x0d\n// defined prototype properties.\x0d\nfunction addPrototypeProperties(ctx\x2C main\x2C obj\x2C recurseTimes\x2C output) {\x0d\n  let depth = 0;\x0d\n  let keys;\x0d\n  let keySet;\x0d\n  do {\x0d\n    if (depth !== 0 || main === obj) {\x0d\n      obj = ObjectGetPrototypeOf(obj);\x0d\n      // Stop as soon as a null prototype is encountered.\x0d\n      if (obj === null) {\x0d\n        return;\x0d\n      }\x0d\n      // Stop as soon as a built-in object type is detected.\x0d\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n      if (descriptor !== undefined &&\x0d\n          typeof descriptor.value === 'function' &&\x0d\n          builtInObjects.has(descriptor.value.name)) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (depth === 0) {\x0d\n      keySet = new SafeSet();\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(keys\x2C (key) => keySet.add(key));\x0d\n    }\x0d\n    // Get all own property names and symbols.\x0d\n    keys = ReflectOwnKeys(obj);\x0d\n    ArrayPrototypePush(ctx.seen\x2C main);\x0d\n    for (const key of keys) {\x0d\n      // Ignore the `constructor` property and keys that exist on layers above.\x0d\n      if (key === 'constructor' ||\x0d\n          ObjectPrototypeHasOwnProperty(main\x2C key) ||\x0d\n          (depth !== 0 && keySet.has(key))) {\x0d\n        continue;\x0d\n      }\x0d\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n      if (typeof desc.value === 'function') {\x0d\n        continue;\x0d\n      }\x0d\n      const value = formatProperty(\x0d\n        ctx\x2C obj\x2C recurseTimes\x2C key\x2C kObjectType\x2C desc\x2C main);\x0d\n      if (ctx.colors) {\x0d\n        // Faint!\x0d\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\x0d\n      } else {\x0d\n        ArrayPrototypePush(output\x2C value);\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePop(ctx.seen);\x0d\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\x0d\n  // is not a good choice here\x2C because it's as if the properties are declared\x0d\n  // on the current object from the users perspective.\x0d\n  } while (++depth !== 3);\x0d\n}\x0d\n\x0d\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = '') {\x0d\n  if (constructor === null) {\x0d\n    if (tag !== '' && fallback !== tag) {\x0d\n      return `[${fallback}${size}: null prototype] [${tag}] `;\x0d\n    }\x0d\n    return `[${fallback}${size}: null prototype] `;\x0d\n  }\x0d\n\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    return `${constructor}${size} [${tag}] `;\x0d\n  }\x0d\n  return `${constructor}${size} `;\x0d\n}\x0d\n\x0d\n// Look up the keys of the object.\x0d\nfunction getKeys(value\x2C showHidden) {\x0d\n  let keys;\x0d\n  const symbols = ObjectGetOwnPropertySymbols(value);\x0d\n  if (showHidden) {\x0d\n    keys = ObjectGetOwnPropertyNames(value);\x0d\n    if (symbols.length !== 0)\x0d\n      ArrayPrototypePushApply(keys\x2C symbols);\x0d\n  } else {\x0d\n    // This might throw if `value` is a Module Namespace Object from an\x0d\n    // unevaluated module\x2C but we don't want to perform the actual type\x0d\n    // check because it's expensive.\x0d\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\x0d\n    // and modify this logic as needed.\x0d\n    try {\x0d\n      keys = ObjectKeys(value);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\x0d\n             isModuleNamespaceObject(value));\x0d\n      keys = ObjectGetOwnPropertyNames(value);\x0d\n    }\x0d\n    if (symbols.length !== 0) {\x0d\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\x0d\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\x0d\n    }\x0d\n  }\x0d\n  return keys;\x0d\n}\x0d\n\x0d\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\x0d\n  let fallback = '';\x0d\n  if (constructor === null) {\x0d\n    fallback = internalGetConstructorName(value);\x0d\n    if (fallback === tag) {\x0d\n      fallback = 'Object';\x0d\n    }\x0d\n  }\x0d\n  return getPrefix(constructor\x2C tag\x2C fallback);\x0d\n}\x0d\n\x0d\nfunction formatProxy(ctx\x2C proxy\x2C recurseTimes) {\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return ctx.stylize('Proxy [Array]'\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n  ctx.indentationLvl += 2;\x0d\n  const res = [\x0d\n    formatValue(ctx\x2C proxy[0]\x2C recurseTimes)\x2C\x0d\n    formatValue(ctx\x2C proxy[1]\x2C recurseTimes)\x2C\x0d\n  ];\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return reduceToSingleString(\x0d\n    ctx\x2C res\x2C ''\x2C ['Proxy ['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n}\x0d\n\x0d\n// Note: using `formatValue` directly requires the indentation level to be\x0d\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\x0d\n// value afterwards again.\x0d\nfunction formatValue(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  // Primitive types cannot have properties.\x0d\n  if (typeof value !== 'object' &&\x0d\n      typeof value !== 'function' &&\x0d\n      !isUndetectableObject(value)) {\x0d\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\x0d\n  }\x0d\n  if (value === null) {\x0d\n    return ctx.stylize('null'\x2C 'null');\x0d\n  }\x0d\n\x0d\n  // Memorize the context for custom inspection on proxies.\x0d\n  const context = value;\x0d\n  // Always check for proxies to prevent side effects and to prevent triggering\x0d\n  // any proxy handlers.\x0d\n  const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\x0d\n  if (proxy !== undefined) {\x0d\n    if (ctx.showProxy) {\x0d\n      return formatProxy(ctx\x2C proxy\x2C recurseTimes);\x0d\n    }\x0d\n    value = proxy;\x0d\n  }\x0d\n\x0d\n  // Provide a hook for user-specified inspect functions.\x0d\n  // Check that value is an object with an inspect function on it.\x0d\n  if (ctx.customInspect) {\x0d\n    const maybeCustom = value[customInspectSymbol];\x0d\n    if (typeof maybeCustom === 'function' &&\x0d\n        // Filter out the util module\x2C its inspect function is special.\x0d\n        maybeCustom !== inspect &&\x0d\n        // Also filter out any prototype objects using the circular check.\x0d\n        !(value.constructor && value.constructor.prototype === value)) {\x0d\n      // This makes sure the recurseTimes are reported as before while using\x0d\n      // a counter internally.\x0d\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\x0d\n      const isCrossContext =\x0d\n        proxy !== undefined || !(context instanceof Object);\x0d\n      const ret = FunctionPrototypeCall(\x0d\n        maybeCustom\x2C context\x2C depth\x2C getUserOptions(ctx\x2C isCrossContext));\x0d\n      // If the custom inspection method returned `this`\x2C don't go into\x0d\n      // infinite recursion.\x0d\n      if (ret !== context) {\x0d\n        if (typeof ret !== 'string') {\x0d\n          return formatValue(ctx\x2C ret\x2C recurseTimes);\x0d\n        }\x0d\n        return ret.replace(/\\n/g\x2C `\\n${' '.repeat(ctx.indentationLvl)}`);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Using an array here is actually better for the average case than using\x0d\n  // a Set. `seen` will only check for the depth and will never grow too large.\x0d\n  if (ctx.seen.includes(value)) {\x0d\n    let index = 1;\x0d\n    if (ctx.circular === undefined) {\x0d\n      ctx.circular = new SafeMap();\x0d\n      ctx.circular.set(value\x2C index);\x0d\n    } else {\x0d\n      index = ctx.circular.get(value);\x0d\n      if (index === undefined) {\x0d\n        index = ctx.circular.size + 1;\x0d\n        ctx.circular.set(value\x2C index);\x0d\n      }\x0d\n    }\x0d\n    return ctx.stylize(`[Circular *${index}]`\x2C 'special');\x0d\n  }\x0d\n\x0d\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray);\x0d\n}\x0d\n\x0d\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  let keys;\x0d\n  let protoProps;\x0d\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\x0d\n    protoProps = [];\x0d\n  }\x0d\n\x0d\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\x0d\n  // Reset the variable to check for this later on.\x0d\n  if (protoProps !== undefined && protoProps.length === 0) {\x0d\n    protoProps = undefined;\x0d\n  }\x0d\n\x0d\n  let tag = value[SymbolToStringTag];\x0d\n  // Only list the tag in case it's non-enumerable / not an own property.\x0d\n  // Otherwise we'd print this twice.\x0d\n  if (typeof tag !== 'string' ||\x0d\n      (tag !== '' &&\x0d\n      (ctx.showHidden ?\x0d\n        ObjectPrototypeHasOwnProperty :\x0d\n        ObjectPrototypePropertyIsEnumerable)(\x0d\n        value\x2C SymbolToStringTag\x0d\n      ))) {\x0d\n    tag = '';\x0d\n  }\x0d\n  let base = '';\x0d\n  let formatter = getEmptyFormatArray;\x0d\n  let braces;\x0d\n  let noIterator = true;\x0d\n  let i = 0;\x0d\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n\x0d\n  let extrasType = kObjectType;\x0d\n\x0d\n  // Iterators and the rest are split to reduce checks.\x0d\n  // We have to check all values in case the constructor is set to null.\x0d\n  // Otherwise it would not possible to identify all types properly.\x0d\n  if (value[SymbolIterator] || constructor === null) {\x0d\n    noIterator = false;\x0d\n    if (ArrayIsArray(value)) {\x0d\n      // Only set the constructor for non ordinary ("Array [...]") arrays.\x0d\n      const prefix = (constructor !== 'Array' || tag !== '') ?\x0d\n        getPrefix(constructor\x2C tag\x2C 'Array'\x2C `(${value.length})`) :\x0d\n        '';\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${braces[0]}]`;\x0d\n      extrasType = kArrayExtrasType;\x0d\n      formatter = formatArray;\x0d\n    } else if (isSet(value)) {\x0d\n      const size = SetPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Set'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        formatSet.bind(null\x2C value) :\x0d\n        formatSet.bind(null\x2C SetPrototypeValues(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isMap(value)) {\x0d\n      const size = MapPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Map'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        formatMap.bind(null\x2C value) :\x0d\n        formatMap.bind(null\x2C MapPrototypeEntries(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isTypedArray(value)) {\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      let bound = value;\x0d\n      let fallback = '';\x0d\n      if (constructor === null) {\x0d\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\x0d\n        // Reconstruct the array information.\x0d\n        bound = new primordials[fallback](value);\x0d\n      }\x0d\n      const size = TypedArrayPrototypeGetLength(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\x0d\n        return `${braces[0]}]`;\x0d\n      // Special handle the value. The original value is required below. The\x0d\n      // bound function is required to reconstruct missing information.\x0d\n      formatter = formatTypedArray.bind(null\x2C bound\x2C size);\x0d\n      extrasType = kArrayExtrasType;\x0d\n    } else if (isMapIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Map'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = formatIterator.bind(null\x2C braces);\x0d\n    } else if (isSetIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Set'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = formatIterator.bind(null\x2C braces);\x0d\n    } else {\x0d\n      noIterator = true;\x0d\n    }\x0d\n  }\x0d\n  if (noIterator) {\x0d\n    keys = getKeys(value\x2C ctx.showHidden);\x0d\n    braces = ['{'\x2C '}'];\x0d\n    if (constructor === 'Object') {\x0d\n      if (isArgumentsObject(value)) {\x0d\n        braces[0] = '[Arguments] {';\x0d\n      } else if (tag !== '') {\x0d\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Object')}{`;\x0d\n      }\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return `${braces[0]}}`;\x0d\n      }\x0d\n    } else if (typeof value === 'function') {\x0d\n      base = getFunctionBase(value\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return ctx.stylize(base\x2C 'special');\x0d\n    } else if (isRegExp(value)) {\x0d\n      // Make RegExps say that they are RegExps\x0d\n      base = RegExpPrototypeToString(\x0d\n        constructor !== null ? value : new RegExp(value)\x0d\n      );\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'RegExp');\x0d\n      if (prefix !== 'RegExp ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if ((keys.length === 0 && protoProps === undefined) ||\x0d\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\x0d\n        return ctx.stylize(base\x2C 'regexp');\x0d\n      }\x0d\n    } else if (isDate(value)) {\x0d\n      // Make dates with properties first say the date\x0d\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\x0d\n        DatePrototypeToString(value) :\x0d\n        DatePrototypeToISOString(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Date');\x0d\n      if (prefix !== 'Date ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return ctx.stylize(base\x2C 'date');\x0d\n      }\x0d\n    } else if (isError(value)) {\x0d\n      base = formatError(value\x2C constructor\x2C tag\x2C ctx\x2C keys);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return base;\x0d\n    } else if (isAnyArrayBuffer(value)) {\x0d\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\x0d\n      // Can't do the same for DataView because it has a non-primitive\x0d\n      // .buffer property that we need to recurse for.\x0d\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\x0d\n        'SharedArrayBuffer';\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\x0d\n      if (typedArray === undefined) {\x0d\n        formatter = formatArrayBuffer;\x0d\n      } else if (keys.length === 0 && protoProps === undefined) {\x0d\n        return prefix +\x0d\n              `{ byteLength: ${formatNumber(ctx.stylize\x2C value.byteLength)} }`;\x0d\n      }\x0d\n      braces[0] = `${prefix}{`;\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength');\x0d\n    } else if (isDataView(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'DataView')}{`;\x0d\n      // .buffer goes last\x2C it's not a primitive like the others.\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength'\x2C 'byteOffset'\x2C 'buffer');\x0d\n    } else if (isPromise(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Promise')}{`;\x0d\n      formatter = formatPromise;\x0d\n    } else if (isWeakSet(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakSet')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\x0d\n    } else if (isWeakMap(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakMap')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\x0d\n    } else if (isModuleNamespaceObject(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Module')}{`;\x0d\n      // Special handle keys for namespace objects.\x0d\n      formatter = formatNamespaceObject.bind(null\x2C keys);\x0d\n    } else if (isBoxedPrimitive(value)) {\x0d\n      base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return base;\x0d\n      }\x0d\n    } else {\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        if (isExternal(value)) {\x0d\n          const address = getExternalValue(value).toString(16);\x0d\n          return ctx.stylize(`[External: ${address}]`\x2C 'special');\x0d\n        }\x0d\n        return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\x0d\n      }\x0d\n      braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    let constructorName = getCtxStyle(value\x2C constructor\x2C tag).slice(0\x2C -1);\x0d\n    if (constructor !== null)\x0d\n      constructorName = `[${constructorName}]`;\x0d\n    return ctx.stylize(constructorName\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n\x0d\n  ctx.seen.push(value);\x0d\n  ctx.currentDepth = recurseTimes;\x0d\n  let output;\x0d\n  const indentationLvl = ctx.indentationLvl;\x0d\n  try {\x0d\n    output = formatter(ctx\x2C value\x2C recurseTimes);\x0d\n    for (i = 0; i < keys.length; i++) {\x0d\n      output.push(\x0d\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType));\x0d\n    }\x0d\n    if (protoProps !== undefined) {\x0d\n      output.push(...protoProps);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    const constructorName = getCtxStyle(value\x2C constructor\x2C tag).slice(0\x2C -1);\x0d\n    return handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl);\x0d\n  }\x0d\n  if (ctx.circular !== undefined) {\x0d\n    const index = ctx.circular.get(value);\x0d\n    if (index !== undefined) {\x0d\n      const reference = ctx.stylize(`<ref *${index}>`\x2C 'special');\x0d\n      // Add reference always to the very beginning of the output.\x0d\n      if (ctx.compact !== true) {\x0d\n        base = base === '' ? reference : `${reference} ${base}`;\x0d\n      } else {\x0d\n        braces[0] = `${reference} ${braces[0]}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  ctx.seen.pop();\x0d\n\x0d\n  if (ctx.sorted) {\x0d\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\x0d\n    if (extrasType === kObjectType) {\x0d\n      output = output.sort(comparator);\x0d\n    } else if (keys.length > 1) {\x0d\n      const sorted = output.slice(output.length - keys.length).sort(comparator);\x0d\n      output.splice(output.length - keys.length\x2C keys.length\x2C ...sorted);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const res = reduceToSingleString(\x0d\n    ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value);\x0d\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\x0d\n  const newLength = budget + res.length;\x0d\n  ctx.budget[ctx.indentationLvl] = newLength;\x0d\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\x0d\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\x0d\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\x0d\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\x0d\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\x0d\n  // This limit also makes sure that huge objects don't block the event loop\x0d\n  // significantly.\x0d\n  if (newLength > 2 ** 27) {\x0d\n    ctx.depth = -1;\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction getIteratorBraces(type\x2C tag) {\x0d\n  if (tag !== `${type} Iterator`) {\x0d\n    if (tag !== '')\x0d\n      tag += '] [';\x0d\n    tag += `${type} Iterator`;\x0d\n  }\x0d\n  return [`[${tag}] {`\x2C '}'];\x0d\n}\x0d\n\x0d\nfunction getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag) {\x0d\n  let fn;\x0d\n  let type;\x0d\n  if (isNumberObject(value)) {\x0d\n    fn = NumberPrototypeValueOf;\x0d\n    type = 'Number';\x0d\n  } else if (isStringObject(value)) {\x0d\n    fn = StringPrototypeValueOf;\x0d\n    type = 'String';\x0d\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\x0d\n    // since they just noisy up the output and are redundant\x0d\n    // Make boxed primitive Strings look like such\x0d\n    keys.splice(0\x2C value.length);\x0d\n  } else if (isBooleanObject(value)) {\x0d\n    fn = BooleanPrototypeValueOf;\x0d\n    type = 'Boolean';\x0d\n  } else if (isBigIntObject(value)) {\x0d\n    fn = BigIntPrototypeValueOf;\x0d\n    type = 'BigInt';\x0d\n  } else {\x0d\n    fn = SymbolPrototypeValueOf;\x0d\n    type = 'Symbol';\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (type !== constructor) {\x0d\n    if (constructor === null) {\x0d\n      base += ' (null prototype)';\x0d\n    } else {\x0d\n      base += ` (${constructor})`;\x0d\n    }\x0d\n  }\x0d\n  base += `: ${formatPrimitive(stylizeNoColor\x2C fn(value)\x2C ctx)}]`;\x0d\n  if (tag !== '' && tag !== constructor) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\x0d\n    return base;\x0d\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\x0d\n}\x0d\n\x0d\nfunction getClassBase(value\x2C constructor\x2C tag) {\x0d\n  const hasName = ObjectPrototypeHasOwnProperty(value\x2C 'name');\x0d\n  const name = (hasName && value.name) || '(anonymous)';\x0d\n  let base = `class ${name}`;\x0d\n  if (constructor !== 'Function' && constructor !== null) {\x0d\n    base += ` [${constructor}]`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (constructor !== null) {\x0d\n    const superName = ObjectGetPrototypeOf(value).name;\x0d\n    if (superName) {\x0d\n      base += ` extends ${superName}`;\x0d\n    }\x0d\n  } else {\x0d\n    base += ' extends [null prototype]';\x0d\n  }\x0d\n  return `[${base}]`;\x0d\n}\x0d\n\x0d\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\x0d\n  const stringified = FunctionPrototypeToString(value);\x0d\n  if (stringified.slice(0\x2C 5) === 'class' && stringified.endsWith('}')) {\x0d\n    const slice = stringified.slice(5\x2C -1);\x0d\n    const bracketIndex = slice.indexOf('{');\x0d\n    if (bracketIndex !== -1 &&\x0d\n        (!slice.slice(0\x2C bracketIndex).includes('(') ||\x0d\n          // Slow path to guarantee that it's indeed a class.\x0d\n          classRegExp.test(slice.replace(stripCommentsRegExp)))) {\x0d\n      return getClassBase(value\x2C constructor\x2C tag);\x0d\n    }\x0d\n  }\x0d\n  let type = 'Function';\x0d\n  if (isGeneratorFunction(value)) {\x0d\n    type = `Generator${type}`;\x0d\n  }\x0d\n  if (isAsyncFunction(value)) {\x0d\n    type = `Async${type}`;\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (constructor === null) {\x0d\n    base += ' (null prototype)';\x0d\n  }\x0d\n  if (value.name === '') {\x0d\n    base += ' (anonymous)';\x0d\n  } else {\x0d\n    base += `: ${value.name}`;\x0d\n  }\x0d\n  base += ']';\x0d\n  if (constructor !== type && constructor !== null) {\x0d\n    base += ` ${constructor}`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  return base;\x0d\n}\x0d\n\x0d\nfunction formatError(err\x2C constructor\x2C tag\x2C ctx\x2C keys) {\x0d\n  const name = err.name != null ? String(err.name) : 'Error';\x0d\n  let len = name.length;\x0d\n  let stack = err.stack ? String(err.stack) : ErrorPrototypeToString(err);\x0d\n\x0d\n  // Do not "duplicate" error properties that are already included in the output\x0d\n  // otherwise.\x0d\n  if (!ctx.showHidden && keys.length !== 0) {\x0d\n    for (const name of ['name'\x2C 'message'\x2C 'stack']) {\x0d\n      const index = keys.indexOf(name);\x0d\n      // Only hide the property in case it's part of the original stack\x0d\n      if (index !== -1 && stack.includes(err[name])) {\x0d\n        keys.splice(index\x2C 1);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // A stack trace may contain arbitrary data. Only manipulate the output\x0d\n  // for "regular errors" (errors that "look normal") for now.\x0d\n  if (constructor === null ||\x0d\n      (name.endsWith('Error') &&\x0d\n      stack.startsWith(name) &&\x0d\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\x0d\n    let fallback = 'Error';\x0d\n    if (constructor === null) {\x0d\n      const start = stack.match(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/) ||\x0d\n        stack.match(/^([a-z_A-Z0-9-]*Error)$/);\x0d\n      fallback = (start && start[1]) || '';\x0d\n      len = fallback.length;\x0d\n      fallback = fallback || 'Error';\x0d\n    }\x0d\n    const prefix = getPrefix(constructor\x2C tag\x2C fallback).slice(0\x2C -1);\x0d\n    if (name !== prefix) {\x0d\n      if (prefix.includes(name)) {\x0d\n        if (len === 0) {\x0d\n          stack = `${prefix}: ${stack}`;\x0d\n        } else {\x0d\n          stack = `${prefix}${stack.slice(len)}`;\x0d\n        }\x0d\n      } else {\x0d\n        stack = `${prefix} [${name}]${stack.slice(len)}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  // Ignore the error message if it's contained in the stack.\x0d\n  let pos = (err.message && stack.indexOf(err.message)) || -1;\x0d\n  if (pos !== -1)\x0d\n    pos += err.message.length;\x0d\n  // Wrap the error in brackets in case it has no stack trace.\x0d\n  const stackStart = stack.indexOf('\\n    at'\x2C pos);\x0d\n  if (stackStart === -1) {\x0d\n    stack = `[${stack}]`;\x0d\n  } else if (ctx.colors) {\x0d\n    // Highlight userland code and node modules.\x0d\n    let newStack = stack.slice(0\x2C stackStart);\x0d\n    const lines = stack.slice(stackStart + 1).split('\\n');\x0d\n    for (const line of lines) {\x0d\n      const core = line.match(coreModuleRegExp);\x0d\n      if (core !== null && NativeModule.exists(core[1])) {\x0d\n        newStack += `\\n${ctx.stylize(line\x2C 'undefined')}`;\x0d\n      } else {\x0d\n        // This adds underscores to all node_modules to quickly identify them.\x0d\n        let nodeModule;\x0d\n        newStack += '\\n';\x0d\n        let pos = 0;\x0d\n        while (nodeModule = nodeModulesRegExp.exec(line)) {\x0d\n          // '/node_modules/'.length === 14\x0d\n          newStack += line.slice(pos\x2C nodeModule.index + 14);\x0d\n          newStack += ctx.stylize(nodeModule[1]\x2C 'module');\x0d\n          pos = nodeModule.index + nodeModule[0].length;\x0d\n        }\x0d\n        newStack += pos === 0 ? line : line.slice(pos);\x0d\n      }\x0d\n    }\x0d\n    stack = newStack;\x0d\n  }\x0d\n  // The message and the stack have to be indented as well!\x0d\n  if (ctx.indentationLvl !== 0) {\x0d\n    const indentation = ' '.repeat(ctx.indentationLvl);\x0d\n    stack = stack.replace(/\\n/g\x2C `\\n${indentation}`);\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction groupArrayElements(ctx\x2C output\x2C value) {\x0d\n  let totalLength = 0;\x0d\n  let maxLength = 0;\x0d\n  let i = 0;\x0d\n  let outputLength = output.length;\x0d\n  if (ctx.maxArrayLength < output.length) {\x0d\n    // This makes sure the "... n more items" part is not taken into account.\x0d\n    outputLength--;\x0d\n  }\x0d\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\x0d\n  const dataLen = new Array(outputLength);\x0d\n  // Calculate the total length of all output entries and the individual max\x0d\n  // entries length of all output entries. We have to remove colors first\x2C\x0d\n  // otherwise the length would not be calculated properly.\x0d\n  for (; i < outputLength; i++) {\x0d\n    const len = getStringWidth(output[i]\x2C ctx.colors);\x0d\n    dataLen[i] = len;\x0d\n    totalLength += len + separatorSpace;\x0d\n    if (maxLength < len)\x0d\n      maxLength = len;\x0d\n  }\x0d\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\x0d\n  // in-between two entries.\x0d\n  const actualMax = maxLength + separatorSpace;\x0d\n  // Check if at least three entries fit next to each other and prevent grouping\x0d\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\x0d\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\x0d\n  // space in-between small entries would be enormous.\x0d\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\x0d\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\x0d\n\x0d\n    const approxCharHeights = 2.5;\x0d\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\x0d\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\x0d\n    // Dynamically check how many columns seem possible.\x0d\n    const columns = MathMin(\x0d\n      // Ideally a square should be drawn. We expect a character to be about 2.5\x0d\n      // times as high as wide. This is the area formula to calculate a square\x0d\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\x0d\n      // Divide that by `actualMax` to receive the correct number of columns.\x0d\n      // The added bias increases the columns for short entries.\x0d\n      MathRound(\x0d\n        MathSqrt(\x0d\n          approxCharHeights * biasedMax * outputLength\x0d\n        ) / biasedMax\x0d\n      )\x2C\x0d\n      // Do not exceed the breakLength.\x0d\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\x0d\n      // Limit array grouping for small `compact` modes as the user requested\x0d\n      // minimal grouping.\x0d\n      ctx.compact * 4\x2C\x0d\n      // Limit the columns to a maximum of fifteen.\x0d\n      15\x0d\n    );\x0d\n    // Return with the original output if no grouping should happen.\x0d\n    if (columns <= 1) {\x0d\n      return output;\x0d\n    }\x0d\n    const tmp = [];\x0d\n    const maxLineLength = [];\x0d\n    for (let i = 0; i < columns; i++) {\x0d\n      let lineMaxLength = 0;\x0d\n      for (let j = i; j < output.length; j += columns) {\x0d\n        if (dataLen[j] > lineMaxLength)\x0d\n          lineMaxLength = dataLen[j];\x0d\n      }\x0d\n      lineMaxLength += separatorSpace;\x0d\n      maxLineLength[i] = lineMaxLength;\x0d\n    }\x0d\n    let order = StringPrototypePadStart;\x0d\n    if (value !== undefined) {\x0d\n      for (let i = 0; i < output.length; i++) {\x0d\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\x0d\n          order = StringPrototypePadEnd;\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Each iteration creates a single line of grouped entries.\x0d\n    for (let i = 0; i < outputLength; i += columns) {\x0d\n      // The last lines may contain less entries than columns.\x0d\n      const max = MathMin(i + columns\x2C outputLength);\x0d\n      let str = '';\x0d\n      let j = i;\x0d\n      for (; j < max - 1; j++) {\x0d\n        // Calculate extra color padding in case it's active. This has to be\x0d\n        // done line by line as some lines might contain more colors than\x0d\n        // others.\x0d\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\x0d\n        str += order(`${output[j]}\x2C `\x2C padding\x2C ' ');\x0d\n      }\x0d\n      if (order === StringPrototypePadStart) {\x0d\n        const padding = maxLineLength[j - i] +\x0d\n                        output[j].length -\x0d\n                        dataLen[j] -\x0d\n                        separatorSpace;\x0d\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C ' ');\x0d\n      } else {\x0d\n        str += output[j];\x0d\n      }\x0d\n      ArrayPrototypePush(tmp\x2C str);\x0d\n    }\x0d\n    if (ctx.maxArrayLength < output.length) {\x0d\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\x0d\n    }\x0d\n    output = tmp;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl) {\x0d\n  if (isStackOverflowError(err)) {\x0d\n    ctx.seen.pop();\x0d\n    ctx.indentationLvl = indentationLvl;\x0d\n    return ctx.stylize(\x0d\n      `[${constructorName}: Inspection interrupted ` +\x0d\n        'prematurely. Maximum call stack size exceeded.]'\x2C\x0d\n      'special'\x0d\n    );\x0d\n  }\x0d\n  /* c8 ignore next */\x0d\n  assert.fail(err.stack);\x0d\n}\x0d\n\x0d\nfunction formatNumber(fn\x2C value) {\x0d\n  // Format -0 as '-0'. Checking `value === -0` won't distinguish 0 from -0.\x0d\n  return fn(ObjectIs(value\x2C -0) ? '-0' : `${value}`\x2C 'number');\x0d\n}\x0d\n\x0d\nfunction formatBigInt(fn\x2C value) {\x0d\n  return fn(`${value}n`\x2C 'bigint');\x0d\n}\x0d\n\x0d\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\x0d\n  if (typeof value === 'string') {\x0d\n    let trailer = '';\x0d\n    if (value.length > ctx.maxStringLength) {\x0d\n      const remaining = value.length - ctx.maxStringLength;\x0d\n      value = value.slice(0\x2C ctx.maxStringLength);\x0d\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\x0d\n    }\x0d\n    if (ctx.compact !== true &&\x0d\n        // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\x0d\n        // function.\x0d\n        value.length > kMinLineLength &&\x0d\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\x0d\n      return value\x0d\n        .split(/(?<=\\n)/)\x0d\n        .map((line) => fn(strEscape(line)\x2C 'string'))\x0d\n        .join(` +\\n${' '.repeat(ctx.indentationLvl + 2)}`) + trailer;\x0d\n    }\x0d\n    return fn(strEscape(value)\x2C 'string') + trailer;\x0d\n  }\x0d\n  if (typeof value === 'number')\x0d\n    return formatNumber(fn\x2C value);\x0d\n  if (typeof value === 'bigint')\x0d\n    return formatBigInt(fn\x2C value);\x0d\n  if (typeof value === 'boolean')\x0d\n    return fn(`${value}`\x2C 'boolean');\x0d\n  if (typeof value === 'undefined')\x0d\n    return fn('undefined'\x2C 'undefined');\x0d\n  // es6 symbol primitive\x0d\n  return fn(SymbolPrototypeToString(value)\x2C 'symbol');\x0d\n}\x0d\n\x0d\nfunction formatNamespaceObject(keys\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const output = new Array(keys.length);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    try {\x0d\n      output[i] = formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C\x0d\n                                 kObjectType);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError');\x0d\n      // Use the existing functionality. This makes sure the indentation and\x0d\n      // line breaks are always correct. Otherwise it is very difficult to keep\x0d\n      // this aligned\x2C even though this is a hacky way of dealing with this.\x0d\n      const tmp = { [keys[i]]: '' };\x0d\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\x0d\n      const pos = output[i].lastIndexOf(' ');\x0d\n      // We have to find the last whitespace and have to replace that value as\x0d\n      // it will be visualized as a regular string.\x0d\n      output[i] = output[i].slice(0\x2C pos + 1) +\x0d\n                  ctx.stylize('<uninitialized>'\x2C 'special');\x0d\n    }\x0d\n  }\x0d\n  // Reset the keys to an empty array. This prevents duplicated inspection.\x0d\n  keys.length = 0;\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// The array is sparse and/or has extra keys\x0d\nfunction formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C maxLength\x2C output\x2C i) {\x0d\n  const keys = ObjectKeys(value);\x0d\n  let index = i;\x0d\n  for (; i < keys.length && output.length < maxLength; i++) {\x0d\n    const key = keys[i];\x0d\n    const tmp = +key;\x0d\n    // Arrays can only have up to 2^32 - 1 entries\x0d\n    if (tmp > 2 ** 32 - 2) {\x0d\n      break;\x0d\n    }\x0d\n    if (`${index}` !== key) {\x0d\n      if (!numberRegExp.test(key)) {\x0d\n        break;\x0d\n      }\x0d\n      const emptyItems = tmp - index;\x0d\n      const ending = emptyItems > 1 ? 's' : '';\x0d\n      const message = `<${emptyItems} empty item${ending}>`;\x0d\n      output.push(ctx.stylize(message\x2C 'undefined'));\x0d\n      index = tmp;\x0d\n      if (output.length === maxLength) {\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    output.push(formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType));\x0d\n    index++;\x0d\n  }\x0d\n  const remaining = value.length - index;\x0d\n  if (output.length !== maxLength) {\x0d\n    if (remaining > 0) {\x0d\n      const ending = remaining > 1 ? 's' : '';\x0d\n      const message = `<${remaining} empty item${ending}>`;\x0d\n      output.push(ctx.stylize(message\x2C 'undefined'));\x0d\n    }\x0d\n  } else if (remaining > 0) {\x0d\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatArrayBuffer(ctx\x2C value) {\x0d\n  let buffer;\x0d\n  try {\x0d\n    buffer = new Uint8Array(value);\x0d\n  } catch {\x0d\n    return [ctx.stylize('(detached)'\x2C 'special')];\x0d\n  }\x0d\n  if (hexSlice === undefined)\x0d\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    hexSlice(buffer\x2C 0\x2C MathMin(ctx.maxArrayLength\x2C buffer.length))\x2C\x0d\n    /(.{2})/g\x2C '$1 '));\x0d\n  const remaining = buffer.length - ctx.maxArrayLength;\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  return [`${ctx.stylize('[Uint8Contents]'\x2C 'special')}: <${str}>`];\x0d\n}\x0d\n\x0d\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\x0d\n  const valLen = value.length;\x0d\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\x0d\n\x0d\n  const remaining = valLen - len;\x0d\n  const output = [];\x0d\n  for (let i = 0; i < len; i++) {\x0d\n    // Special handle sparse arrays.\x0d\n    if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\x0d\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\x0d\n    }\x0d\n    output.push(formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType));\x0d\n  }\x0d\n  if (remaining > 0)\x0d\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatTypedArray(value\x2C length\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = value.length - maxLength;\x0d\n  const output = new Array(maxLength);\x0d\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\x0d\n    formatNumber :\x0d\n    formatBigInt;\x0d\n  for (let i = 0; i < maxLength; ++i)\x0d\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]);\x0d\n  if (remaining > 0) {\x0d\n    output[maxLength] = `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\x0d\n  }\x0d\n  if (ctx.showHidden) {\x0d\n    // .buffer goes last\x2C it's not a primitive like the others.\x0d\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\x0d\n    ctx.indentationLvl += 2;\x0d\n    for (const key of [\x0d\n      'BYTES_PER_ELEMENT'\x2C\x0d\n      'length'\x2C\x0d\n      'byteLength'\x2C\x0d\n      'byteOffset'\x2C\x0d\n      'buffer'\x2C\x0d\n    ]) {\x0d\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\x0d\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\x0d\n    }\x0d\n    ctx.indentationLvl -= 2;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSet(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (const v of value) {\x0d\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C v\x2C recurseTimes));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMap(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (const { 0: k\x2C 1: v } of value) {\x0d\n    output.push(\x0d\n      `${formatValue(ctx\x2C k\x2C recurseTimes)} => ${formatValue(ctx\x2C v\x2C recurseTimes)}`\x0d\n    );\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\x0d\n  const output = new Array(maxLength);\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (let i = 0; i < maxLength; i++) {\x0d\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (state === kWeak && !ctx.sorted) {\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    ArrayPrototypeSort(output);\x0d\n  }\x0d\n  const remaining = entries.length - maxLength;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C\x0d\n                       `... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\x0d\n  const len = entries.length / 2;\x0d\n  const remaining = len - maxArrayLength;\x0d\n  const maxLength = MathMin(maxArrayLength\x2C len);\x0d\n  let output = new Array(maxLength);\x0d\n  let i = 0;\x0d\n  ctx.indentationLvl += 2;\x0d\n  if (state === kWeak) {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      output[i] =\x0d\n        `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)}`;\x0d\n    }\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    if (!ctx.sorted)\x0d\n      output = output.sort();\x0d\n  } else {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      const res = [\x0d\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\x0d\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\x0d\n      ];\x0d\n      output[i] = reduceToSingleString(\x0d\n        ctx\x2C res\x2C ''\x2C ['['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n    }\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (remaining > 0) {\x0d\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatWeakCollection(ctx) {\x0d\n  return [ctx.stylize('<items unknown>'\x2C 'special')];\x0d\n}\x0d\n\x0d\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const { 0: entries\x2C 1: isKeyValue } = previewEntries(value\x2C true);\x0d\n  if (isKeyValue) {\x0d\n    // Mark entry iterators as such.\x0d\n    braces[0] = braces[0].replace(/ Iterator] {$/\x2C ' Entries] {');\x0d\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\x0d\n  }\x0d\n\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\x0d\n}\x0d\n\x0d\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\x0d\n  let output;\x0d\n  const { 0: state\x2C 1: result } = getPromiseDetails(value);\x0d\n  if (state === kPending) {\x0d\n    output = [ctx.stylize('<pending>'\x2C 'special')];\x0d\n  } else {\x0d\n    ctx.indentationLvl += 2;\x0d\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\x0d\n    ctx.indentationLvl -= 2;\x0d\n    output = [\x0d\n      state === kRejected ?\x0d\n        `${ctx.stylize('<rejected>'\x2C 'special')} ${str}` :\x0d\n        str\x2C\x0d\n    ];\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C type\x2C desc\x2C\x0d\n                        original = value) {\x0d\n  let name\x2C str;\x0d\n  let extra = ' ';\x0d\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\x0d\n    { value: value[key]\x2C enumerable: true };\x0d\n  if (desc.value !== undefined) {\x0d\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\x0d\n    ctx.indentationLvl += diff;\x0d\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\x0d\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\x0d\n      extra = `\\n${' '.repeat(ctx.indentationLvl)}`;\x0d\n    }\x0d\n    ctx.indentationLvl -= diff;\x0d\n  } else if (desc.get !== undefined) {\x0d\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\x0d\n    const s = ctx.stylize;\x0d\n    const sp = 'special';\x0d\n    if (ctx.getters && (ctx.getters === true ||\x0d\n          (ctx.getters === 'get' && desc.set === undefined) ||\x0d\n          (ctx.getters === 'set' && desc.set !== undefined))) {\x0d\n      try {\x0d\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\x0d\n        ctx.indentationLvl += 2;\x0d\n        if (tmp === null) {\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${s('null'\x2C 'null')}${s(']'\x2C sp)}`;\x0d\n        } else if (typeof tmp === 'object') {\x0d\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\x0d\n        } else {\x0d\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s(']'\x2C sp)}`;\x0d\n        }\x0d\n        ctx.indentationLvl -= 2;\x0d\n      } catch (err) {\x0d\n        const message = `<Inspection threw (${err.message})>`;\x0d\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s(']'\x2C sp)}`;\x0d\n      }\x0d\n    } else {\x0d\n      str = ctx.stylize(`[${label}]`\x2C sp);\x0d\n    }\x0d\n  } else if (desc.set !== undefined) {\x0d\n    str = ctx.stylize('[Setter]'\x2C 'special');\x0d\n  } else {\x0d\n    str = ctx.stylize('undefined'\x2C 'undefined');\x0d\n  }\x0d\n  if (type === kArrayType) {\x0d\n    return str;\x0d\n  }\x0d\n  if (typeof key === 'symbol') {\x0d\n    const tmp = StringPrototypeReplace(\x0d\n      SymbolPrototypeToString(key)\x2C\x0d\n      strEscapeSequencesReplacer\x2C escapeFn\x0d\n    );\x0d\n    name = `[${ctx.stylize(tmp\x2C 'symbol')}]`;\x0d\n  } else if (key === '__proto__') {\x0d\n    name = "['__proto__']";\x0d\n  } else if (desc.enumerable === false) {\x0d\n    const tmp = StringPrototypeReplace(key\x2C\x0d\n                                       strEscapeSequencesReplacer\x2C escapeFn);\x0d\n    name = `[${tmp}]`;\x0d\n  } else if (RegExpPrototypeTest(keyStrRegExp\x2C key)) {\x0d\n    name = ctx.stylize(key\x2C 'name');\x0d\n  } else {\x0d\n    name = ctx.stylize(strEscape(key)\x2C 'string');\x0d\n  }\x0d\n  return `${name}:${extra}${str}`;\x0d\n}\x0d\n\x0d\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\x0d\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\x0d\n  // length of at least `output.length`. In addition\x2C some cases have a\x0d\n  // whitespace in-between each other that is added to the total as well.\x0d\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\x0d\n  // function. Check the performance overhead and make it an opt-in in case it's\x0d\n  // significant.\x0d\n  let totalLength = output.length + start;\x0d\n  if (totalLength + output.length > ctx.breakLength)\x0d\n    return false;\x0d\n  for (let i = 0; i < output.length; i++) {\x0d\n    if (ctx.colors) {\x0d\n      totalLength += removeColors(output[i]).length;\x0d\n    } else {\x0d\n      totalLength += output[i].length;\x0d\n    }\x0d\n    if (totalLength > ctx.breakLength) {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n  // Do not line up properties on the same line if `base` contains line breaks.\x0d\n  return base === '' || !StringPrototypeIncludes(base\x2C '\\n');\x0d\n}\x0d\n\x0d\nfunction reduceToSingleString(\x0d\n  ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value) {\x0d\n  if (ctx.compact !== true) {\x0d\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\x0d\n      // Memorize the original output length. In case the output is grouped\x2C\x0d\n      // prevent lining up the entries on a single line.\x0d\n      const entries = output.length;\x0d\n      // Group array elements together if the array contains at least six\x0d\n      // separate entries.\x0d\n      if (extrasType === kArrayExtrasType && entries > 6) {\x0d\n        output = groupArrayElements(ctx\x2C output\x2C value);\x0d\n      }\x0d\n      // `ctx.currentDepth` is set to the most inner depth of the currently\x0d\n      // inspected object part while `recurseTimes` is the actual current depth\x0d\n      // that is inspected.\x0d\n      //\x0d\n      // Example:\x0d\n      //\x0d\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\x0d\n      //\x0d\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\x0d\n      // depth of 1.\x0d\n      //\x0d\n      // Consolidate all entries of the local most inner depth up to\x0d\n      // `ctx.compact`\x2C as long as the properties are smaller than\x0d\n      // `ctx.breakLength`.\x0d\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\x0d\n          entries === output.length) {\x0d\n        // Line up all entries on a single line in case the entries do not\x0d\n        // exceed `breakLength`. Add 10 as constant to start next to all other\x0d\n        // factors that may reduce `breakLength`.\x0d\n        const start = output.length + ctx.indentationLvl +\x0d\n                      braces[0].length + base.length + 10;\x0d\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\x0d\n          return `${base ? `${base} ` : ''}${braces[0]} ${join(output\x2C '\x2C ')}` +\x0d\n            ` ${braces[1]}`;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Line up each entry on an individual line.\x0d\n    const indentation = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\x0d\n      `${join(output\x2C `\x2C${indentation}  `)}${indentation}${braces[1]}`;\x0d\n  }\x0d\n  // Line up all entries on a single line in case the entries do not exceed\x0d\n  // `breakLength`.\x0d\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\x0d\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output\x2C '\x2C ')} ` +\x0d\n      braces[1];\x0d\n  }\x0d\n  const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\x0d\n  // we need to force the first item to be on the next line or the\x0d\n  // items will not line up correctly.\x0d\n  const ln = base === '' && braces[0].length === 1 ?\x0d\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\x0d\n  // Line up each entry on an individual line.\x0d\n  return `${braces[0]}${ln}${join(output\x2C `\x2C\\n${indentation}  `)} ${braces[1]}`;\x0d\n}\x0d\n\x0d\nfunction hasBuiltInToString(value) {\x0d\n  // Prevent triggering proxy traps.\x0d\n  const getFullProxy = false;\x0d\n  const proxyTarget = getProxyDetails(value\x2C getFullProxy);\x0d\n  if (proxyTarget !== undefined) {\x0d\n    value = proxyTarget;\x0d\n  }\x0d\n\x0d\n  // Count objects that have no `toString` function as built-in.\x0d\n  if (typeof value.toString !== 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  // The object has a own `toString` property. Thus it's not not a built-in one.\x0d\n  if (ObjectPrototypeHasOwnProperty(value\x2C 'toString')) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  // Find the object that has the `toString` property as own property in the\x0d\n  // prototype chain.\x0d\n  let pointer = value;\x0d\n  do {\x0d\n    pointer = ObjectGetPrototypeOf(pointer);\x0d\n  } while (!ObjectPrototypeHasOwnProperty(pointer\x2C 'toString'));\x0d\n\x0d\n  // Check closer if the object is a built-in.\x0d\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer\x2C 'constructor');\x0d\n  return descriptor !== undefined &&\x0d\n    typeof descriptor.value === 'function' &&\x0d\n    builtInObjects.has(descriptor.value.name);\x0d\n}\x0d\n\x0d\nconst firstErrorLine = (error) =>\x0d\n  StringPrototypeSplit(error.message\x2C '\\n'\x2C 1)[0];\x0d\nlet CIRCULAR_ERROR_MESSAGE;\x0d\nfunction tryStringify(arg) {\x0d\n  try {\x0d\n    return JSONStringify(arg);\x0d\n  } catch (err) {\x0d\n    // Populate the circular error message lazily\x0d\n    if (!CIRCULAR_ERROR_MESSAGE) {\x0d\n      try {\x0d\n        const a = {}; a.a = a; JSONStringify(a);\x0d\n      } catch (err) {\x0d\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(err);\x0d\n      }\x0d\n    }\x0d\n    if (err.name === 'TypeError' &&\x0d\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\x0d\n      return '[Circular]';\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction format(...args) {\x0d\n  return formatWithOptionsInternal(undefined\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatWithOptions(inspectOptions\x2C ...args) {\x0d\n  if (typeof inspectOptions !== 'object' || inspectOptions === null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'inspectOptions'\x2C 'object'\x2C inspectOptions);\x0d\n  }\x0d\n  return formatWithOptionsInternal(inspectOptions\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatWithOptionsInternal(inspectOptions\x2C args) {\x0d\n  const first = args[0];\x0d\n  let a = 0;\x0d\n  let str = '';\x0d\n  let join = '';\x0d\n\x0d\n  if (typeof first === 'string') {\x0d\n    if (args.length === 1) {\x0d\n      return first;\x0d\n    }\x0d\n    let tempStr;\x0d\n    let lastPos = 0;\x0d\n\x0d\n    for (let i = 0; i < first.length - 1; i++) {\x0d\n      if (StringPrototypeCharCodeAt(first\x2C i) === 37) { // '%'\x0d\n        const nextChar = StringPrototypeCharCodeAt(first\x2C ++i);\x0d\n        if (a + 1 !== args.length) {\x0d\n          switch (nextChar) {\x0d\n            case 115: // 's'\x0d\n              const tempArg = args[++a];\x0d\n              if (typeof tempArg === 'number') {\x0d\n                tempStr = formatNumber(stylizeNoColor\x2C tempArg);\x0d\n              } else if (typeof tempArg === 'bigint') {\x0d\n                tempStr = `${tempArg}n`;\x0d\n              } else if (typeof tempArg !== 'object' ||\x0d\n                         tempArg === null ||\x0d\n                         !hasBuiltInToString(tempArg)) {\x0d\n                tempStr = String(tempArg);\x0d\n              } else {\x0d\n                tempStr = inspect(tempArg\x2C {\x0d\n                  ...inspectOptions\x2C\x0d\n                  compact: 3\x2C\x0d\n                  colors: false\x2C\x0d\n                  depth: 0\x0d\n                });\x0d\n              }\x0d\n              break;\x0d\n            case 106: // 'j'\x0d\n              tempStr = tryStringify(args[++a]);\x0d\n              break;\x0d\n            case 100: // 'd'\x0d\n              const tempNum = args[++a];\x0d\n              if (typeof tempNum === 'bigint') {\x0d\n                tempStr = `${tempNum}n`;\x0d\n              } else if (typeof tempNum === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumber(stylizeNoColor\x2C Number(tempNum));\x0d\n              }\x0d\n              break;\x0d\n            case 79: // 'O'\x0d\n              tempStr = inspect(args[++a]\x2C inspectOptions);\x0d\n              break;\x0d\n            case 111: // 'o'\x0d\n              tempStr = inspect(args[++a]\x2C {\x0d\n                ...inspectOptions\x2C\x0d\n                showHidden: true\x2C\x0d\n                showProxy: true\x2C\x0d\n                depth: 4\x0d\n              });\x0d\n              break;\x0d\n            case 105: // 'i'\x0d\n              const tempInteger = args[++a];\x0d\n              if (typeof tempInteger === 'bigint') {\x0d\n                tempStr = `${tempInteger}n`;\x0d\n              } else if (typeof tempInteger === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumber(stylizeNoColor\x2C\x0d\n                                       NumberParseInt(tempInteger));\x0d\n              }\x0d\n              break;\x0d\n            case 102: // 'f'\x0d\n              const tempFloat = args[++a];\x0d\n              if (typeof tempFloat === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumber(stylizeNoColor\x2C\x0d\n                                       NumberParseFloat(tempFloat));\x0d\n              }\x0d\n              break;\x0d\n            case 99: // 'c'\x0d\n              a += 1;\x0d\n              tempStr = '';\x0d\n              break;\x0d\n            case 37: // '%'\x0d\n              str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n              lastPos = i + 1;\x0d\n              continue;\x0d\n            default: // Any other character is not a correct placeholder\x0d\n              continue;\x0d\n          }\x0d\n          if (lastPos !== i - 1) {\x0d\n            str += StringPrototypeSlice(first\x2C lastPos\x2C i - 1);\x0d\n          }\x0d\n          str += tempStr;\x0d\n          lastPos = i + 1;\x0d\n        } else if (nextChar === 37) {\x0d\n          str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n          lastPos = i + 1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (lastPos !== 0) {\x0d\n      a++;\x0d\n      join = ' ';\x0d\n      if (lastPos < first.length) {\x0d\n        str += StringPrototypeSlice(first\x2C lastPos);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  while (a < args.length) {\x0d\n    const value = args[a];\x0d\n    str += join;\x0d\n    str += typeof value !== 'string' ? inspect(value\x2C inspectOptions) : value;\x0d\n    join = ' ';\x0d\n    a++;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const icu = internalBinding('icu');\x0d\n  // icu.getStringWidth(string\x2C ambiguousAsFullWidth\x2C expandEmojiSequence)\x0d\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\x0d\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\x0d\n  // best thing possible at the moment\x2C since it's difficult to know what\x0d\n  // the receiving end supports.\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars)\x0d\n      str = stripVTControlCharacters(str);\x0d\n    for (let i = 0; i < str.length; i++) {\x0d\n      // Try to avoid calling into C++ by first handling the ASCII portion of\x0d\n      // the string. If it is fully ASCII\x2C we skip the C++ part.\x0d\n      const code = str.charCodeAt(i);\x0d\n      if (code >= 127) {\x0d\n        width += icu.getStringWidth(str.slice(i).normalize('NFC'));\x0d\n        break;\x0d\n      }\x0d\n      width += code >= 32 ? 1 : 0;\x0d\n    }\x0d\n    return width;\x0d\n  };\x0d\n} else {\x0d\n  /**\x0d\n   * Returns the number of columns required to display the given string.\x0d\n   */\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars)\x0d\n      str = stripVTControlCharacters(str);\x0d\n    str = StringPrototypeNormalize(str\x2C 'NFC');\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      const code = StringPrototypeCodePointAt(char\x2C 0);\x0d\n      if (isFullWidthCodePoint(code)) {\x0d\n        width += 2;\x0d\n      } else if (!isZeroWidthCodePoint(code)) {\x0d\n        width++;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return width;\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Returns true if the character represented by a given\x0d\n   * Unicode code point is full-width. Otherwise returns false.\x0d\n   */\x0d\n  const isFullWidthCodePoint = (code) => {\x0d\n    // Code points are partially derived from:\x0d\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\x0d\n    return code >= 0x1100 && (\x0d\n      code <= 0x115f ||  // Hangul Jamo\x0d\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\x0d\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\x0d\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\x0d\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\x0d\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\x0d\n      (code >= 0x3250 && code <= 0x4dbf) ||\x0d\n      // CJK Unified Ideographs .. Yi Radicals\x0d\n      (code >= 0x4e00 && code <= 0xa4c6) ||\x0d\n      // Hangul Jamo Extended-A\x0d\n      (code >= 0xa960 && code <= 0xa97c) ||\x0d\n      // Hangul Syllables\x0d\n      (code >= 0xac00 && code <= 0xd7a3) ||\x0d\n      // CJK Compatibility Ideographs\x0d\n      (code >= 0xf900 && code <= 0xfaff) ||\x0d\n      // Vertical Forms\x0d\n      (code >= 0xfe10 && code <= 0xfe19) ||\x0d\n      // CJK Compatibility Forms .. Small Form Variants\x0d\n      (code >= 0xfe30 && code <= 0xfe6b) ||\x0d\n      // Halfwidth and Fullwidth Forms\x0d\n      (code >= 0xff01 && code <= 0xff60) ||\x0d\n      (code >= 0xffe0 && code <= 0xffe6) ||\x0d\n      // Kana Supplement\x0d\n      (code >= 0x1b000 && code <= 0x1b001) ||\x0d\n      // Enclosed Ideographic Supplement\x0d\n      (code >= 0x1f200 && code <= 0x1f251) ||\x0d\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\x0d\n      // Emoticons 0x1f600 - 0x1f64f\x0d\n      (code >= 0x1f300 && code <= 0x1f64f) ||\x0d\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\x0d\n      (code >= 0x20000 && code <= 0x3fffd)\x0d\n    );\x0d\n  };\x0d\n\x0d\n  const isZeroWidthCodePoint = (code) => {\x0d\n    return code <= 0x1F || // C0 control codes\x0d\n      (code >= 0x7F && code <= 0x9F) || // C1 control codes\x0d\n      (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\x0d\n      (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\x0d\n      // Combining Diacritical Marks for Symbols\x0d\n      (code >= 0x20D0 && code <= 0x20FF) ||\x0d\n      (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\x0d\n      (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\x0d\n      (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove all VT control characters. Use to estimate displayed string width.\x0d\n */\x0d\nfunction stripVTControlCharacters(str) {\x0d\n  validateString(str\x2C 'str');\x0d\n\x0d\n  return str.replace(ansi\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  inspect\x2C\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  getStringWidth\x2C\x0d\n  inspectDefaultOptions\x2C\x0d\n  stripVTControlCharacters\x0d\n};\x0d\n
code-source-info,0xe49887861e,14,65537,65792,C0O65537C8O65568C18O65642C34O65648C39O65642C40O65734C43O65741C48O65789,,
code-creation,LazyCompile,10,386275,0xe49887cb8e,855,formatWithOptionsInternal node:internal/util/inspect:1891:35,0x6682e967e0,~
code-source-info,0xe49887cb8e,14,65830,69793,C0O65872C1O65876C5O65892C7O65908C10O65926C13O65935C19O65982C26O65989C31O66005C33O66018C34O66035C36O66063C38O66086C40O66099C44O66106C47O66091C52O66125C57O66129C65O66165C70O66208C77O66234C80O66208C86O66256C88O66262C92O66275C96O66266C112O66296C180O66377C185O66381C189O66403C195O66455C204O66494C206O66465C214O66526C222O66578C236O66625C246O66686C255O66752C257O66733C263O66781C270O66798C272O66791C279O66849C284O66867C286O66900C294O66944C299O66974C304O67007C308O66859C314O67062C316O67114C321O67137C324O67141C329O67124C334O67164C336O67232C341O67236C345O67258C351O67310C365O67357C373O67409C378O67467C387O67506C393O67513C395O67506C401O67477C407O67556C409O67607C414O67625C417O67629C422O67617C428O67668C430O67720C435O67738C438O67742C443O67771C450O67816C455O67850C461O67880C465O67730C471O67916C473O67988C478O67992C482O68014C488O68070C502O68121C510O68177C515O68235C524O68314C530O68329C532O68314C538O68245C544O68376C546O68446C551O68450C555O68472C561O68526C566O68584C575O68663C581O68680C583O68663C589O68594C595O68725C597O68776C603O68799C606O68828C608O68879C610O68886C623O68886C635O68942C637O68954C641O68974C643O69073C645O69107C647O69125C650O69119C655O69145C657O69152C662O69191C673O69152C685O69221C687O69228C694O69248C696O69260C702O69281C704O69294C709O69315C711O69322C723O69322C735O69374C737O69386C741O66112C746O66073C752O69423C753O69435C758O69451C763O69463C766O69502C770O69494C775O69521C777O69528C780O69528C792O69608C796O69601C801O69637C803O69641C807O69651C809O69658C816O69669C828O69704C837O69737C841O69749C844O69766C849O69592C852O69779C854O69790,,
code-creation,LazyCompile,10,386478,0xe49887d2de,269,value node:internal/console/constructor:257:20,0x2ee4c9cc678,~
code-source-info,0xe49887d2de,30,7734,9210,C0O7792C5O7834C7O7839C9O7838C13O7881C15O7898C17O7894C21O7932C23O7949C29O7964C34O8001C38O8027C44O8054C49O8100C55O8107C60O8125C68O8129C75O8181C80O8213C90O8233C98O8190C105O8269C107O8290C112O8316C122O8341C123O8358C128O8383C133O8383C138O8397C145O8722C153O8722C160O8745C165O8770C176O8770C182O8809C187O8809C206O9009C216O9013C222O9049C224O9049C238O9157C239O9164C250O9164C268O9209,,
code-creation,LazyCompile,10,386561,0xe49887d56e,31,listenerCount node:events:722:23,0x25aadb34420,~
code-source-info,0xe49887d56e,13,21338,21620,C0O21370C5O21384C7O21436C9O21442C13O21457C17O21504C19O21513C20O21526C24O21583C28O21590C29O21608C30O21617,,
code-creation,LazyCompile,10,386620,0xe49887d666,26,Writable.write node:internal/streams/writable:333:36,0x334252ea660,~
code-source-info,0xe49887d666,56,11081,11161,C0O11108C15O11115C22O11149C25O11158,,
code-creation,LazyCompile,10,386703,0xe49887d84e,338,_write node:internal/streams/writable:283:16,0x334252ea610,~
code-source-info,0xe49887d84e
code-creation,LazyCompile,10,386818,0xe49887dc16,217,writeOrBuffer node:internal/streams/writable:365:23,0x334252ea870,~
code-source-info,0xe49887dc16,56,12032,13054,C0O12098C10O12121C15O12134C22O12150C25O12147C29O12218C34O12233C38O12225C42O12324C44O12339C45O12355C49O12378C55O12395C61O12411C67O12429C73O12455C78O12464C90O12471C96O12478C102O12488C106O12464C111O12516C119O12539C124O12562C125O12579C129O12610C137O12630C142O12648C143O12662C149O12695C151O12710C155O12722C157O12736C161O12753C162O12767C166O12780C167O12791C171O12811C176O12841C190O12811C195O12856C196O12867C200O13002C204O13023C211O13041C216O13051,,
code-creation,LazyCompile,10,386891,0xe49887de4e,26,Socket._write node:net:806:35,0xbfdd37d6f8,~
code-source-info,0xe49887de4e,120,21501,21576,C0O21532C19O21532C25O21575,,
code-creation,LazyCompile,10,386949,0xe49887e04e,186,Socket._writeGeneric node:net:769:42,0xbfdd37d5b8,~
code-source-info,0xe49887e04e,120,20574,21356,C0O20574C21O20780C27O20799C29O20817C33O20830C35O20852C39O20874C52O20874C58O20980C59O20987C60O20996C61O21014C65O21025C67O21047C71O21068C77O21084C84O21091C87O21087C93O21084C97O21118C98O21131C99O21147C104O21147C108O21171C110O21179C114O21196C130O21202C138O21246C157O21252C163O21303C169O21315C173O21320C176O21347C180O21341C185O21355,,
code-creation,LazyCompile,10,387018,0xe49887e276,45,_unrefTimer node:net:417:52,0xbfdd37c8e0,~
code-source-info,0xe49887e276,120,11709,11824,C0O11730C5O11738C9O11770C11O11776C13O11775C18O11794C20O11796C22O11795C26O11806C31O11806C35O11754C40O11717C44O11823,,
code-creation,LazyCompile,10,387074,0xe49887e396,55,writeGeneric node:internal/stream_base_commons:151:22,0x1d24e4c36d0,~
script-source,84,node:internal/stream_base_commons,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { FastBuffer } = require('internal/buffer');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kBytesWritten\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { UV_EOF } = internalBinding('uv');\x0d\nconst {\x0d\n  errnoException\x0d\n} = require('internal/errors');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  kTimeout\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x0d\n} = require('internal/timers');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { validateCallback } = require('internal/validators');\x0d\n\x0d\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\x0d\nconst kUpdateTimer = Symbol('kUpdateTimer');\x0d\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kSession = Symbol('kSession');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kBufferGen = Symbol('kBufferGen');\x0d\nconst kBufferCb = Symbol('kBufferCb');\x0d\n\x0d\nfunction handleWriteReq(req\x2C data\x2C encoding) {\x0d\n  const { handle } = req;\x0d\n\x0d\n  switch (encoding) {\x0d\n    case 'buffer':\x0d\n    {\x0d\n      const ret = handle.writeBuffer(req\x2C data);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = data;\x0d\n      return ret;\x0d\n    }\x0d\n    case 'latin1':\x0d\n    case 'binary':\x0d\n      return handle.writeLatin1String(req\x2C data);\x0d\n    case 'utf8':\x0d\n    case 'utf-8':\x0d\n      return handle.writeUtf8String(req\x2C data);\x0d\n    case 'ascii':\x0d\n      return handle.writeAsciiString(req\x2C data);\x0d\n    case 'ucs2':\x0d\n    case 'ucs-2':\x0d\n    case 'utf16le':\x0d\n    case 'utf-16le':\x0d\n      return handle.writeUcs2String(req\x2C data);\x0d\n    default:\x0d\n    {\x0d\n      const buffer = Buffer.from(data\x2C encoding);\x0d\n      const ret = handle.writeBuffer(req\x2C buffer);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = buffer;\x0d\n      return ret;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onWriteComplete(status) {\x0d\n  debug('onWriteComplete'\x2C status\x2C this.error);\x0d\n\x0d\n  let stream = this.handle[owner_symbol];\x0d\n\x0d\n  if (stream.constructor.name === 'ReusedHandle') {\x0d\n    stream = stream.handle;\x0d\n  }\x0d\n\x0d\n  if (stream.destroyed) {\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(null);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // TODO (ronag): This should be moved before if(stream.destroyed)\x0d\n  // in order to avoid swallowing error.\x0d\n  if (status < 0) {\x0d\n    const ex = errnoException(status\x2C 'write'\x2C this.error);\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(ex);\x0d\n    else\x0d\n      stream.destroy(ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n  stream[kAfterAsyncWrite](this);\x0d\n\x0d\n  if (typeof this.callback === 'function')\x0d\n    this.callback(null);\x0d\n}\x0d\n\x0d\nfunction createWriteWrap(handle\x2C callback) {\x0d\n  const req = new WriteWrap();\x0d\n\x0d\n  req.handle = handle;\x0d\n  req.oncomplete = onWriteComplete;\x0d\n  req.async = false;\x0d\n  req.bytes = 0;\x0d\n  req.buffer = null;\x0d\n  req.callback = callback;\x0d\n\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writevGeneric(self\x2C data\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const allBuffers = data.allBuffers;\x0d\n  let chunks;\x0d\n  if (allBuffers) {\x0d\n    chunks = data;\x0d\n    for (let i = 0; i < data.length; i++)\x0d\n      data[i] = data[i].chunk;\x0d\n  } else {\x0d\n    chunks = new Array(data.length << 1);\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const entry = data[i];\x0d\n      chunks[i * 2] = entry.chunk;\x0d\n      chunks[i * 2 + 1] = entry.encoding;\x0d\n    }\x0d\n  }\x0d\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\x0d\n\x0d\n  // Retain chunks\x0d\n  if (err === 0) req._chunks = chunks;\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const err = handleWriteReq(req\x2C data\x2C encoding);\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\x0d\n  req.bytes = streamBaseState[kBytesWritten];\x0d\n  req.async = !!streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n  if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'write'\x2C req.error));\x0d\n\x0d\n  if (!req.async && typeof req.callback === 'function') {\x0d\n    req.callback();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onStreamRead(arrayBuffer) {\x0d\n  const nread = streamBaseState[kReadBytesOrError];\x0d\n\x0d\n  const handle = this;\x0d\n\x0d\n  let stream = this[owner_symbol];\x0d\n\x0d\n  if (stream.constructor.name === 'ReusedHandle') {\x0d\n    stream = stream.handle;\x0d\n  }\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n\x0d\n  if (nread > 0 && !stream.destroyed) {\x0d\n    let ret;\x0d\n    let result;\x0d\n    const userBuf = stream[kBuffer];\x0d\n    if (userBuf) {\x0d\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\x0d\n      const bufGen = stream[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        const nextBuf = bufGen();\x0d\n        if (isUint8Array(nextBuf))\x0d\n          stream[kBuffer] = ret = nextBuf;\x0d\n      }\x0d\n    } else {\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\x0d\n      result = stream.push(buf);\x0d\n    }\x0d\n    if (!result) {\x0d\n      handle.reading = false;\x0d\n      if (!stream.destroyed) {\x0d\n        const err = handle.readStop();\x0d\n        if (err)\x0d\n          stream.destroy(errnoException(err\x2C 'read'));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  if (nread === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (nread !== UV_EOF) {\x0d\n    // CallJSOnreadMethod expects the return value to be a buffer.\x0d\n    // Ref: https://github.com/nodejs/node/pull/34375\x0d\n    stream.destroy(errnoException(nread\x2C 'read'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Defer this until we actually emit end\x0d\n  if (stream._readableState.endEmitted) {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream[kMaybeDestroy]();\x0d\n  } else {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream.on('end'\x2C stream[kMaybeDestroy]);\x0d\n\x0d\n    // TODO(ronag): Without this `readStop`\x2C `onStreamRead`\x0d\n    // will be called once more (i.e. after Readable.ended)\x0d\n    // on Windows causing a ECONNRESET\x2C failing the\x0d\n    // test-https-truncate test.\x0d\n    if (handle.readStop) {\x0d\n      const err = handle.readStop();\x0d\n      if (err) {\x0d\n        // CallJSOnreadMethod expects the return value to be a buffer.\x0d\n        // Ref: https://github.com/nodejs/node/pull/34375\x0d\n        stream.destroy(errnoException(err\x2C 'read'));\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Push a null to signal the end of data.\x0d\n    // Do it before `maybeDestroy` for correct order of events:\x0d\n    // `end` -> `close`\x0d\n    stream.push(null);\x0d\n    stream.read(0);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setStreamTimeout(msecs\x2C callback) {\x0d\n  if (this.destroyed)\x0d\n    return this;\x0d\n\x0d\n  this.timeout = msecs;\x0d\n\x0d\n  // Type checking identical to timers.enroll()\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // Attempt to clear an existing timer in both cases -\x0d\n  //  even if it will be rescheduled we don't want to leak an existing timer.\x0d\n  clearTimeout(this[kTimeout]);\x0d\n\x0d\n  if (msecs === 0) {\x0d\n    if (callback !== undefined) {\x0d\n      validateCallback(callback);\x0d\n      this.removeListener('timeout'\x2C callback);\x0d\n    }\x0d\n  } else {\x0d\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\x0d\n    if (this[kSession]) this[kSession][kUpdateTimer]();\x0d\n\x0d\n    if (callback !== undefined) {\x0d\n      validateCallback(callback);\x0d\n      this.once('timeout'\x2C callback);\x0d\n    }\x0d\n  }\x0d\n  return this;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kMaybeDestroy\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  kHandle\x2C\x0d\n  kSession\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n};\x0d\n
code-source-info,0xe49887e396,84,3830,4020,C0O3874C5O3895C7O3894C11O3874C17O3925C29O3925C35O3967C47O3967C52O4006C54O4017,,
code-creation,LazyCompile,10,387451,0xe49887ee46,47,createWriteWrap node:internal/stream_base_commons:113:25,0x1d24e4c3610,~
code-source-info,0xe49887ee46,84,2914,3139,C0O2950C5O2950C11O2972C13O2983C17O2996C19O3011C23O3033C24O3043C28O3055C29O3065C33O3073C34O3084C38O3095C40O3108C44O3125C46O3136,,
code-creation,LazyCompile,10,387539,0xe49887f04e,215,handleWriteReq node:internal/stream_base_commons:45:24,0x1d24e4c3570,~
code-source-info,0xe49887f04e,84,1218,2083,C0O1253C5O1274C80O1347C85O1347C92O1378C99O1398C101O1397C106O1428C108O1439C112O1454C114O1465C115O1534C120O1534C126O1563C127O1622C132O1622C138O1649C139O1690C144O1690C150O1718C151O1820C156O1820C162O1847C163O1891C168O1898C173O1898C180O1946C185O1946C192O1979C199O1999C201O1998C206O2029C208O2040C212O2057C214O2068,,
code-creation,LazyCompile,10,387631,0xe49887f296,92,afterWriteDispatched node:internal/stream_base_commons:159:30,0x1d24e4c3740,~
code-source-info,0xe49887f296,84,4053,4337,C0O4073C2O4085C7O4101C9O4100C12O4083C16O4120C18O4134C23O4150C25O4149C30O4130C34O4176C35O4184C40O4196C42O4206C48O4239C56O4206C62O4203C66O4247C67O4262C73O4282C81O4318C86O4318C91O4336,,
code-creation,LazyCompile,10,387696,0xe49887f42e,62,Readable.removeListener node:internal/streams/readable:905:45,0x334252dc610,~
code-source-info,0xe49887f42e,49,29679,30251,C0O29705C5O29712C10O29722C15O29737C29O29737C35O29814C37O29821C42O30178C45O30186C53O30186C59O30237C61O30248,,
code-creation,LazyCompile,10,387739,0xe49887f55e,13,destroyHooksExist node:internal/async_hooks:476:27,0x25aadb3b230,~
code-source-info,0xe49887f55e,24,16375,16412,C0O16383C5O16399C8O16390C12O16409,,
code-creation,LazyCompile,10,387769,0xe49887f64e,32,emitAfterScript node:internal/async_hooks:507:25,0x25aadb3b370,~
code-source-info,0xe49887f64e,24,17135,17236,C0O17150C5O17163C8O17154C14O17177C19O17177C23O17208C26O17208C31O17235,,
code-creation,LazyCompile,10,387821,0xe49887f7b6,167,popAsyncContext node:internal/async_hooks:543:25,0x25aadb3b518,~
code-source-info,0xe49887f7b6,24,18271,18873,C0O18306C7O18324C9O18323C13O18342C14O18358C19O18365C20O18378C21O18384C24O18388C31O18411C36O18427C38O18426C44O18446C49O18530C54O18537C58O18563C59O18589C61O18601C65O18609C72O18625C77O18646C80O18657C87O18675C90O18672C93O18644C97O18689C104O18705C109O18724C112O18735C119O18753C122O18762C125O18750C128O18722C132O18771C137O18797C142O18797C146O18807C153O18825C158O18839C162O18852C163O18866C166O18870,,
code-creation,LazyCompile,10,387877,0xe49887f996,13,enabledHooksExist node:internal/async_hooks:464:27,0x25aadb3b120,~
code-source-info,0xe49887f996,24,16186,16221,C0O16194C5O16210C8O16201C12O16218,,
code-creation,LazyCompile,10,388011,0xe49887fbae,439,processPromiseRejections node:internal/process/promises:203:34,0x2ee4c9c1400,~
script-source,26,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst async_hooks = require('async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const asyncId = async_hooks.executionAsyncId();\x0d\n  const triggerAsyncId = async_hooks.triggerAsyncId();\x0d\n  const resource = promise;\x0d\n\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    try {\x0d\n      pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n      if (promiseInfo.domain) {\x0d\n        return promiseInfo.domain.emit('error'\x2C reason);\x0d\n      }\x0d\n      return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n    } finally {\x0d\n      popAsyncContext(asyncId);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (reason instanceof Error) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {}\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    switch (unhandledRejectionsMode) {\x0d\n      case kStrictUnhandledRejections: {\x0d\n        const err = reason instanceof Error ?\x0d\n          reason : generateUnhandledRejectionError(reason);\x0d\n        triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n        const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n        if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n        break;\x0d\n      }\x0d\n      case kIgnoreUnhandledRejections: {\x0d\n        emit(reason\x2C promise\x2C promiseInfo);\x0d\n        break;\x0d\n      }\x0d\n      case kAlwaysWarnUnhandledRejections: {\x0d\n        emit(reason\x2C promise\x2C promiseInfo);\x0d\n        emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n        break;\x0d\n      }\x0d\n      case kThrowUnhandledRejections: {\x0d\n        const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n        if (!handled) {\x0d\n          const err = reason instanceof Error ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      case kWarnWithErrorCodeUnhandledRejections: {\x0d\n        const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n        if (!handled) {\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          process.exitCode = 1;\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0xe49887fbae
code-creation,LazyCompile,10,388513,0x1bb8fb03256,25,setHasRejectionToWarn node:internal/process/promises:71:31,0x25aadb3faa8,~
code-source-info,0x1bb8fb03256,26,2071,2133,C0O2084C7O2093C12O2116C19O2114C24O2132,,
code-creation,LazyCompile,10,388593,0x1bb8fb033be,191,onWriteComplete node:internal/stream_base_commons:80:25,0x1d24e4c35c0,~
code-source-info,0x1bb8fb033be,84,2111,2886,C0O2125C8O2163C16O2125C21O2194C28O2201C30O2200C34O2232C39O2244C46O2249C51O2292C56O2321C62O2355C70O2392C77O2392C82O2413C83O2420C84O2542C85O2553C90O2576C98O2613C106O2576C112O2642C120O2679C125O2679C132O2717C137O2717C142O2735C143O2742C144O2753C146O2760C148O2759C152O2773C156O2780C158O2787C160O2786C164O2804C169O2833C177O2868C184O2868C190O2885,,
code-creation,LazyCompile,10,388665,0x1bb8fb035e6,10, node:internal/stream_base_commons:38:66,0x1d24e4c30a0,~
code-source-info,0x1bb8fb035e6,84,1044,1071,C0O1057C2O1063C9O1070,,
code-creation,LazyCompile,10,388706,0x1bb8fb036fe,35,get node:internal/streams/duplex:94:8,0x334252d0a28,~
code-source-info,0x1bb8fb036fe,48,3367,3582,C0O3388C6O3434C12O3475C13O3488C14O3517C19O3532C25O3550C30O3565C34O3575,,
code-creation,LazyCompile,10,388736,0x1bb8fb0380e,5,get node:net:580:16,0xbfdd37cdd8,~
code-source-info,0x1bb8fb0380e,120,15929,15968,C0O15951C4O15963,,
code-creation,LazyCompile,10,388760,0x1bb8fb038ee,12,Socket.<computed> node:net:765:46,0xbfdd37d528,~
code-source-info,0x1bb8fb038ee,120,20487,20528,C0O20495C2O20500C6O20521C11O20527,,
code-creation,LazyCompile,10,388836,0x1bb8fb03ac6,323,onwrite node:internal/streams/writable:425:17,0x334252ea960,~
code-source-info,0x1bb8fb03ac
code-creation,LazyCompile,10,388927,0x1bb8fb03dde,104,afterWrite node:internal/streams/writable:487:20,0x334252eaa00,~
code-source-info,0x1bb8fb03dde,56,15715,16089,C0O15772C7O15790C14O15809C20O15816C25O15836C30O15850C32O15872C33O15888C37O15909C45O15909C50O15949C60O15949C65O15961C71O15976C75O15985C78O15934C81O16011C87O16029C90O16029C94O16059C97O16059C103O16088,,
code-creation,LazyCompile,10,388984,0x1bb8fb03f8e,87, node:internal/console/constructor:338:10,0x2ee4c9cc990,~
code-source-info,0x1bb8fb03f8e,30,10475,11309,C0O10696C7O10713C9O10709C17O10742C26O10761C31O10775C35O10803C40O10818C46O11220C54O11220C61O11243C66O11268C79O11268C86O11308,,
code-creation,LazyCompile,10,389041,0x1bb8fb040e6,85,finishMaybe node:internal/streams/writable:727:21,0x334252eacd8,~
code-source-info,0x1bb8fb040e6,56,22001,22305,C0O22028C3O22032C9O22058C12O22058C17O22099C23O22109C31O22118C37O22146C43O22161C47O22172C51O22193C54O22201C68O22201C75O22259C78O22259C84O22304,,
code-creation,LazyCompile,10,389094,0x1bb8fb04276,73,needFinish node:internal/streams/writable:650:20,0x334252eabe8,~
tick,0x7fffb2a0d1c4,389147,0,0x0,3,0x7ff6a7f1e5b0,0x1bb8fb040e9,0x1bb8fb03e3f,0x1bb8fb03c02,0x1bb8fb03476
code-source-info,0x1bb8fb04276,56,20010,20311,C0O20037C6O20064C12O20096C18O20103C23O20130C30O20158C35O20167C41O20174C46O20201C53O20231C60O20260C67O20294C72O20308,,
tick,0x7fffb2a0feb4,405162,0,0x0,8
tick,0x7fffb2a0feb4,421157,0,0x0,8
tick,0x7fffb2a0feb4,436838,0,0x0,8
tick,0x7fffb2a0feb4,452871,0,0x0,8
tick,0x7fffb2a0feb4,469016,0,0x0,8
tick,0x7fffb2a0feb4,483906,0,0x0,8
tick,0x7fffb2a0feb4,498888,0,0x0,8
tick,0x7fffb2a0feb4,514943,0,0x0,8
tick,0x7fffb2a0feb4,530829,0,0x0,8
tick,0x7fffb2a0feb4,546852,0,0x0,8
tick,0x7fffb2a0feb4,561836,0,0x0,8
tick,0x7fffb2a0feb4,577890,0,0x0,8
tick,0x7fffb2a0feb4,593849,0,0x0,8
tick,0x7fffb2a0feb4,609873,0,0x0,8
tick,0x7fffb2a0feb4,625857,0,0x0,8
tick,0x7fffb2a0feb4,641879,0,0x0,8
tick,0x7fffb2a0feb4,657838,0,0x0,8
tick,0x7fffb2a0feb4,673862,0,0x0,8
tick,0x7fffb2a0feb4,689899,0,0x0,8
tick,0x7fffb2a0feb4,705422,0,0x0,8
tick,0x7fffb2a0feb4,721395,0,0x0,8
tick,0x7fffb2a0feb4,737421,0,0x0,8
tick,0x7fffb2a0feb4,752828,0,0x0,8
tick,0x7fffb2a0feb4,768842,0,0x0,8
tick,0x7fffb2a0feb4,784951,0,0x0,8
tick,0x7fffb2a0feb4,800973,0,0x0,8
tick,0x7fffb2a0feb4,816957,0,0x0,8
tick,0x7fffb2a0feb4,831995,0,0x0,8
tick,0x7fffb2a0feb4,847818,0,0x0,8
tick,0x7fffb2a0feb4,863858,0,0x0,8
tick,0x7fffb2a0feb4,879831,0,0x0,8
tick,0x7fffb2a0feb4,895865,0,0x0,8
tick,0x7fffb2a0feb4,911828,0,0x0,8
tick,0x7fffb2a0feb4,927846,0,0x0,8
tick,0x7fffb2a0feb4,943827,0,0x0,8
tick,0x7fffb2a0feb4,959025,0,0x0,8
tick,0x7fffb2a0feb4,973828,0,0x0,8
tick,0x7fffb2a0feb4,989859,0,0x0,8
tick,0x7fffb2a0feb4,1005832,0,0x0,8
tick,0x7fffb2a0feb4,1021839,0,0x0,8
tick,0x7fffb2a0feb4,1037842,0,0x0,8
tick,0x7fffb2a0feb4,1053844,0,0x0,8
tick,0x7fffb2a0feb4,1068867,0,0x0,8
tick,0x7fffb2a0feb4,1084893,0,0x0,8
tick,0x7fffb2a0feb4,1100855,0,0x0,8
tick,0x7fffb2a0feb4,1116270,0,0x0,8
tick,0x7fffb2a0feb4,1131834,0,0x0,8
tick,0x7fffb2a0feb4,1147878,0,0x0,8
tick,0x7fffb2a0feb4,1163839,0,0x0,8
tick,0x7fffb2a0feb4,1179882,0,0x0,8
tick,0x7fffb2a0feb4,1195846,0,0x0,8
tick,0x7fffb2a0feb4,1211895,0,0x0,8
tick,0x7fffb2a0feb4,1227855,0,0x0,8
tick,0x7fffb2a0feb4,1243867,0,0x0,8
tick,0x7fffb2a0feb4,1259024,0,0x0,8
tick,0x7fffb2a0feb4,1275073,0,0x0,8
tick,0x7fffb2a0feb4,1290632,0,0x0,8
tick,0x7fffb2a0feb4,1306144,0,0x0,8
tick,0x7fffb2a0feb4,1321798,0,0x0,8
tick,0x7fffb2a0feb4,1337858,0,0x0,8
tick,0x7fffb2a0feb4,1353846,0,0x0,8
tick,0x7fffb2a0feb4,1369036,0,0x0,8
tick,0x7fffb2a0feb4,1385029,0,0x0,8
tick,0x7fffb2a0feb4,1400262,0,0x0,8
tick,0x7fffb2a0feb4,1415993,0,0x0,8
tick,0x7fffb2a0feb4,1431725,0,0x0,8
tick,0x7fffb2a0feb4,1447826,0,0x0,8
tick,0x7fffb2a0feb4,1462991,0,0x0,8
tick,0x7fffb2a0feb4,1479018,0,0x0,8
tick,0x7fffb2a0feb4,1494967,0,0x0,8
tick,0x7fffb2a0feb4,1510932,0,0x0,8
tick,0x7fffb2a0feb4,1526117,0,0x0,8
tick,0x7fffb2a0feb4,1541705,0,0x0,8
tick,0x7fffb2a0feb4,1557374,0,0x0,8
tick,0x7fffb2a0feb4,1572826,0,0x0,8
tick,0x7fffb2a0feb4,1588851,0,0x0,8
tick,0x7fffb2a0feb4,1604276,0,0x0,8
tick,0x7fffb2a0feb4,1619903,0,0x0,8
tick,0x7fffb2a0feb4,1635875,0,0x0,8
tick,0x7fffb2a0feb4,1651948,0,0x0,8
tick,0x7fffb2a0feb4,1666924,0,0x0,8
tick,0x7fffb2a0feb4,1682936,0,0x0,8
tick,0x7fffb2a0feb4,1698394,0,0x0,8
tick,0x7fffb2a0feb4,1713974,0,0x0,8
tick,0x7fffb2a0feb4,1729909,0,0x0,8
tick,0x7fffb2a0feb4,1745921,0,0x0,8
tick,0x7fffb2a0feb4,1761138,0,0x0,8
tick,0x7fffb2a0feb4,1777161,0,0x0,8
tick,0x7fffb2a0feb4,1792716,0,0x0,8
tick,0x7fffb2a0feb4,1808865,0,0x0,8
tick,0x7fffb2a0feb4,1823989,0,0x0,8
tick,0x7fffb2a0feb4,1840006,0,0x0,8
tick,0x7fffb2a0feb4,1855686,0,0x0,8
tick,0x7fffb2a0feb4,1870764,0,0x0,8
tick,0x7fffb2a0feb4,1886712,0,0x0,8
tick,0x7fffb2a0feb4,1902737,0,0x0,8
tick,0x7fffb2a0feb4,1918715,0,0x0,8
tick,0x7fffb2a0feb4,1934855,0,0x0,8
tick,0x7fffb2a0feb4,1950826,0,0x0,8
tick,0x7fffb2a0feb4,1966855,0,0x0,8
tick,0x7fffb2a0feb4,1982836,0,0x0,8
tick,0x7fffb2a0feb4,1998868,0,0x0,8
tick,0x7fffb2a0feb4,2014834,0,0x0,8
tick,0x7fffb2a0feb4,2030854,0,0x0,8
tick,0x7fffb2a0feb4,2046841,0,0x0,8
tick,0x7fffb2a0feb4,2062865,0,0x0,8
tick,0x7fffb2a0feb4,2078834,0,0x0,8
tick,0x7fffb2a0feb4,2094786,0,0x0,8
tick,0x7fffb2a0feb4,2110834,0,0x0,8
tick,0x7fffb2a0feb4,2126856,0,0x0,8
tick,0x7fffb2a0feb4,2141834,0,0x0,8
tick,0x7fffb2a0feb4,2157871,0,0x0,8
tick,0x7fffb2a0feb4,2173854,0,0x0,8
tick,0x7fffb2a0feb4,2189827,0,0x0,8
tick,0x7fffb2a0feb4,2205831,0,0x0,8
tick,0x7fffb2a0feb4,2221830,0,0x0,8
tick,0x7fffb2a0feb4,2236797,0,0x0,8
tick,0x7fffb2a0feb4,2252840,0,0x0,8
tick,0x7fffb2a0feb4,2267539,0,0x0,8
tick,0x7fffb2a0feb4,2282827,0,0x0,8
tick,0x7fffb2a0feb4,2297807,0,0x0,8
tick,0x7fffb2a0feb4,2313836,0,0x0,8
tick,0x7fffb2a0feb4,2329814,0,0x0,8
tick,0x7fffb2a0feb4,2345847,0,0x0,8
tick,0x7fffb2a0feb4,2361818,0,0x0,8
tick,0x7fffb2a0feb4,2377842,0,0x0,8
tick,0x7fffb2a0feb4,2393827,0,0x0,8
tick,0x7fffb2a0feb4,2409852,0,0x0,8
tick,0x7fffb2a0feb4,2425833,0,0x0,8
tick,0x7fffb2a0feb4,2440860,0,0x0,8
tick,0x7fffb2a0feb4,2456828,0,0x0,8
tick,0x7fffb2a0feb4,2472866,0,0x0,8
tick,0x7fffb2a0feb4,2488827,0,0x0,8
tick,0x7fffb2a0feb4,2504847,0,0x0,8
tick,0x7fffb2a0feb4,2520390,0,0x0,8
tick,0x7fffb2a0feb4,2535861,0,0x0,8
tick,0x7fffb2a0feb4,2551840,0,0x0,8
tick,0x7fffb2a0feb4,2567425,0,0x0,8
tick,0x7fffb2a0feb4,2583397,0,0x0,8
tick,0x7fffb2a0feb4,2598434,0,0x0,8
tick,0x7fffb2a0feb4,2614407,0,0x0,8
tick,0x7fffb2a0feb4,2630438,0,0x0,8
tick,0x7fffb2a0feb4,2646414,0,0x0,8
tick,0x7fffb2a0feb4,2662502,0,0x0,8
tick,0x7fffb2a0feb4,2678476,0,0x0,8
tick,0x7fffb2a0feb4,2693803,0,0x0,8
tick,0x7fffb2a0feb4,2709041,0,0x0,8
tick,0x7fffb2a0feb4,2724849,0,0x0,8
tick,0x7fffb2a0feb4,2740004,0,0x0,8
tick,0x7fffb2a0feb4,2756014,0,0x0,8
tick,0x7fffb2a0feb4,2771821,0,0x0,8
tick,0x7fffb2a0feb4,2787868,0,0x0,8
tick,0x7fffb2a0feb4,2803836,0,0x0,8
tick,0x7fffb2a0feb4,2819416,0,0x0,8
tick,0x7fffb2a0feb4,2834879,0,0x0,8
tick,0x7fffb2a0feb4,2850858,0,0x0,8
tick,0x7fffb2a0feb4,2866838,0,0x0,8
tick,0x7fffb2a0feb4,2882848,0,0x0,8
tick,0x7fffb2a0feb4,2898823,0,0x0,8
tick,0x7fffb2a0feb4,2914859,0,0x0,8
tick,0x7fffb2a0feb4,2930819,0,0x0,8
tick,0x7fffb2a0feb4,2946839,0,0x0,8
tick,0x7fffb2a0feb4,2961822,0,0x0,8
tick,0x7fffb2a0feb4,2976837,0,0x0,8
tick,0x7fffb2a0feb4,2991865,0,0x0,8
tick,0x7fffb2a0feb4,3006846,0,0x0,8
tick,0x7fffb2a0feb4,3022836,0,0x0,8
tick,0x7fffb2a0feb4,3038862,0,0x0,8
tick,0x7fffb2a0feb4,3054838,0,0x0,8
tick,0x7fffb2a0feb4,3070881,0,0x0,8
tick,0x7fffb2a0feb4,3086107,0,0x0,8
tick,0x7fffb2a0feb4,3101818,0,0x0,8
tick,0x7fffb2a0feb4,3117802,0,0x0,8
tick,0x7fffb2a0feb4,3133823,0,0x0,8
tick,0x7fffb2a0feb4,3148807,0,0x0,8
tick,0x7fffb2a0feb4,3163834,0,0x0,8
tick,0x7fffb2a0feb4,3178825,0,0x0,8
tick,0x7fffb2a0feb4,3194839,0,0x0,8
tick,0x7fffb2a0feb4,3210818,0,0x0,8
tick,0x7fffb2a0feb4,3226841,0,0x0,8
tick,0x7fffb2a0feb4,3242822,0,0x0,8
tick,0x7fffb2a0feb4,3257859,0,0x0,8
tick,0x7fffb2a0feb4,3273792,0,0x0,8
tick,0x7fffb2a0feb4,3289842,0,0x0,8
tick,0x7fffb2a0feb4,3305820,0,0x0,8
tick,0x7fffb2a0feb4,3321852,0,0x0,8
tick,0x7fffb2a0feb4,3337844,0,0x0,8
tick,0x7fffb2a0feb4,3353860,0,0x0,8
tick,0x7fffb2a0feb4,3369844,0,0x0,8
tick,0x7fffb2a0feb4,3385919,0,0x0,8
tick,0x7fffb2a0feb4,3400816,0,0x0,8
tick,0x7fffb2a0feb4,3416757,0,0x0,8
tick,0x7fffb2a0feb4,3431730,0,0x0,8
tick,0x7fffb2a0feb4,3447765,0,0x0,8
tick,0x7fffb2a0feb4,3463746,0,0x0,8
tick,0x7fffb2a0feb4,3479844,0,0x0,8
tick,0x7fffb2a0feb4,3495803,0,0x0,8
tick,0x7fffb2a0feb4,3511822,0,0x0,8
tick,0x7fffb2a0feb4,3527804,0,0x0,8
tick,0x7fffb2a0feb4,3542824,0,0x0,8
tick,0x7fffb2a0feb4,3558811,0,0x0,8
tick,0x7fffb2a0feb4,3574841,0,0x0,8
tick,0x7fffb2a0feb4,3590835,0,0x0,8
tick,0x7fffb2a0feb4,3606851,0,0x0,8
tick,0x7fffb2a0feb4,3621839,0,0x0,8
tick,0x7fffb2a0feb4,3637851,0,0x0,8
tick,0x7fffb2a0feb4,3653823,0,0x0,8
tick,0x7fffb2a0feb4,3668862,0,0x0,8
tick,0x7fffb2a0feb4,3684851,0,0x0,8
tick,0x7fffb2a0feb4,3700844,0,0x0,8
tick,0x7fffb2a0feb4,3716840,0,0x0,8
tick,0x7fffb2a0feb4,3732874,0,0x0,8
tick,0x7fffb2a0feb4,3747846,0,0x0,8
tick,0x7fffb2a0feb4,3763862,0,0x0,8
tick,0x7fffb2a0feb4,3779754,0,0x0,8
tick,0x7fffb2a0feb4,3795807,0,0x0,8
tick,0x7fffb2a0feb4,3811839,0,0x0,8
tick,0x7fffb2a0feb4,3827777,0,0x0,8
tick,0x7fffb2a0feb4,3843752,0,0x0,8
tick,0x7fffb2a0feb4,3858805,0,0x0,8
tick,0x7fffb2a0feb4,3874831,0,0x0,8
tick,0x7fffb2a0feb4,3890850,0,0x0,8
tick,0x7fffb2a0feb4,3906841,0,0x0,8
tick,0x7fffb2a0feb4,3922873,0,0x0,8
tick,0x7fffb2a0feb4,3938835,0,0x0,8
tick,0x7fffb2a0feb4,3954856,0,0x0,8
tick,0x7fffb2a0feb4,3970823,0,0x0,8
tick,0x7fffb2a0feb4,3986847,0,0x0,8
tick,0x7fffb2a0feb4,4002839,0,0x0,8
tick,0x7fffb2a0feb4,4018859,0,0x0,8
tick,0x7fffb2a0feb4,4034844,0,0x0,8
tick,0x7fffb2a0feb4,4050844,0,0x0,8
tick,0x7fffb2a0feb4,4066837,0,0x0,8
tick,0x7fffb2a0feb4,4082859,0,0x0,8
tick,0x7fffb2a0feb4,4098830,0,0x0,8
tick,0x7fffb2a0feb4,4114860,0,0x0,8
tick,0x7fffb2a0feb4,4130836,0,0x0,8
tick,0x7fffb2a0feb4,4146853,0,0x0,8
tick,0x7fffb2a0feb4,4162862,0,0x0,8
tick,0x7fffb2a0feb4,4178897,0,0x0,8
tick,0x7fffb2a0feb4,4194890,0,0x0,8
tick,0x7fffb2a0feb4,4210877,0,0x0,8
tick,0x7fffb2a0feb4,4225848,0,0x0,8
tick,0x7fffb2a0feb4,4241858,0,0x0,8
tick,0x7fffb2a0feb4,4257760,0,0x0,8
tick,0x7fffb2a0feb4,4272808,0,0x0,8
tick,0x7fffb2a0feb4,4288820,0,0x0,8
tick,0x7fffb2a0feb4,4304865,0,0x0,8
tick,0x7fffb2a0feb4,4320823,0,0x0,8
tick,0x7fffb2a0feb4,4336864,0,0x0,8
tick,0x7fffb2a0feb4,4352830,0,0x0,8
tick,0x7fffb2a0feb4,4368842,0,0x0,8
tick,0x7fffb2a0feb4,4384854,0,0x0,8
tick,0x7fffb2a0feb4,4400839,0,0x0,8
tick,0x7fffb2a0feb4,4416774,0,0x0,8
tick,0x7fffb2a0feb4,4431794,0,0x0,8
tick,0x7fffb2a0feb4,4447762,0,0x0,8
tick,0x7fffb2a0feb4,4463766,0,0x0,8
tick,0x7fffb2a0feb4,4478830,0,0x0,8
tick,0x7fffb2a0feb4,4494888,0,0x0,8
tick,0x7fffb2a0feb4,4510829,0,0x0,8
tick,0x7fffb2a0feb4,4526841,0,0x0,8
tick,0x7fffb2a0feb4,4541819,0,0x0,8
tick,0x7fffb2a0feb4,4557852,0,0x0,8
tick,0x7fffb2a0feb4,4573826,0,0x0,8
tick,0x7fffb2a0feb4,4589862,0,0x0,8
tick,0x7fffb2a0feb4,4604813,0,0x0,8
tick,0x7fffb2a0feb4,4620812,0,0x0,8
tick,0x7fffb2a0feb4,4635797,0,0x0,8
tick,0x7fffb2a0feb4,4651819,0,0x0,8
tick,0x7fffb2a0feb4,4667799,0,0x0,8
tick,0x7fffb2a0feb4,4682849,0,0x0,8
tick,0x7fffb2a0feb4,4698805,0,0x0,8
tick,0x7fffb2a0feb4,4714845,0,0x0,8
tick,0x7fffb2a0feb4,4729823,0,0x0,8
tick,0x7fffb2a0feb4,4745824,0,0x0,8
tick,0x7fffb2a0feb4,4761812,0,0x0,8
tick,0x7fffb2a0feb4,4777853,0,0x0,8
tick,0x7fffb2a0feb4,4793813,0,0x0,8
tick,0x7fffb2a0feb4,4809833,0,0x0,8
tick,0x7fffb2a0feb4,4825870,0,0x0,8
tick,0x7fffb2a0feb4,4841733,0,0x0,8
tick,0x7fffb2a0feb4,4857726,0,0x0,8
tick,0x7fffb2a0feb4,4872994,0,0x0,8
tick,0x7fffb2a0feb4,4888999,0,0x0,8
tick,0x7fffb2a0feb4,4904802,0,0x0,8
tick,0x7fffb2a0feb4,4920786,0,0x0,8
tick,0x7fffb2a0feb4,4936809,0,0x0,8
tick,0x7fffb2a0feb4,4952823,0,0x0,8
tick,0x7fffb2a0feb4,4968822,0,0x0,8
tick,0x7fffb2a0feb4,4984776,0,0x0,8
tick,0x7fffb2a0feb4,5000779,0,0x0,8
tick,0x7fffb2a0feb4,5016819,0,0x0,8
tick,0x7fffb2a0feb4,5032798,0,0x0,8
tick,0x7fffb2a0feb4,5048819,0,0x0,8
tick,0x7fffb2a0feb4,5064860,0,0x0,8
tick,0x7fffb2a0feb4,5080777,0,0x0,8
tick,0x7fffb2a0feb4,5096789,0,0x0,8
tick,0x7fffb2a0feb4,5112785,0,0x0,8
tick,0x7fffb2a0feb4,5128780,0,0x0,8
tick,0x7fffb2a0feb4,5144797,0,0x0,8
tick,0x7fffb2a0feb4,5160822,0,0x0,8
tick,0x7fffb2a0feb4,5176810,0,0x0,8
tick,0x7fffb2a0feb4,5192824,0,0x0,8
tick,0x7fffb2a0feb4,5208821,0,0x0,8
tick,0x7fffb2a0feb4,5224975,0,0x0,8
tick,0x7fffb2a0feb4,5240827,0,0x0,8
tick,0x7fffb2a0feb4,5256847,0,0x0,8
tick,0x7fffb2a0feb4,5272839,0,0x0,8
tick,0x7fffb2a0feb4,5288839,0,0x0,8
tick,0x7fffb2a0feb4,5303967,0,0x0,8
tick,0x7fffb2a0feb4,5319846,0,0x0,8
tick,0x7fffb2a0feb4,5335828,0,0x0,8
tick,0x7fffb2a0feb4,5351861,0,0x0,8
tick,0x7fffb2a0feb4,5367770,0,0x0,8
tick,0x7fffb2a0feb4,5383780,0,0x0,8
tick,0x7fffb2a0feb4,5398753,0,0x0,8
tick,0x7fffb2a0feb4,5414773,0,0x0,8
tick,0x7fffb2a0feb4,5430828,0,0x0,8
tick,0x7fffb2a0feb4,5446853,0,0x0,8
tick,0x7fffb2a0feb4,5462946,0,0x0,8
tick,0x7fffb2a0feb4,5478842,0,0x0,8
tick,0x7fffb2a0feb4,5493806,0,0x0,8
tick,0x7fffb2a0feb4,5509857,0,0x0,8
tick,0x7fffb2a0feb4,5525835,0,0x0,8
tick,0x7fffb2a0feb4,5541046,0,0x0,8
tick,0x7fffb2a0feb4,5557062,0,0x0,8
tick,0x7fffb2a0feb4,5573049,0,0x0,8
tick,0x7fffb2a0feb4,5588814,0,0x0,8
tick,0x7fffb2a0feb4,5604838,0,0x0,8
tick,0x7fffb2a0feb4,5619814,0,0x0,8
tick,0x7fffb2a0feb4,5635789,0,0x0,8
tick,0x7fffb2a0feb4,5651784,0,0x0,8
tick,0x7fffb2a0feb4,5667863,0,0x0,8
tick,0x7fffb2a0feb4,5682961,0,0x0,8
tick,0x7fffb2a0feb4,5698836,0,0x0,8
tick,0x7fffb2a0feb4,5714822,0,0x0,8
tick,0x7fffb2a0feb4,5730865,0,0x0,8
tick,0x7fffb2a0feb4,5746852,0,0x0,8
tick,0x7fffb2a0feb4,5762860,0,0x0,8
tick,0x7fffb2a0feb4,5778836,0,0x0,8
tick,0x7fffb2a0feb4,5794875,0,0x0,8
tick,0x7fffb2a0feb4,5810812,0,0x0,8
tick,0x7fffb2a0feb4,5826872,0,0x0,8
tick,0x7fffb2a0feb4,5842821,0,0x0,8
tick,0x7fffb2a0feb4,5858869,0,0x0,8
tick,0x7fffb2a0feb4,5874839,0,0x0,8
tick,0x7fffb2a0feb4,5890853,0,0x0,8
tick,0x7fffb2a0feb4,5905832,0,0x0,8
tick,0x7fffb2a0feb4,5921851,0,0x0,8
tick,0x7fffb2a0feb4,5937814,0,0x0,8
tick,0x7fffb2a0feb4,5953841,0,0x0,8
tick,0x7fffb2a0feb4,5969613,0,0x0,8
tick,0x7fffb2a0feb4,5985180,0,0x0,8
tick,0x7fffb2a0feb4,6001156,0,0x0,8
tick,0x7fffb2a0feb4,6016839,0,0x0,8
tick,0x7fffb2a0feb4,6031990,0,0x0,8
tick,0x7fffb2a0feb4,6047996,0,0x0,8
tick,0x7fffb2a0feb4,6063990,0,0x0,8
tick,0x7fffb2a0feb4,6079595,0,0x0,8
tick,0x7fffb2a0feb4,6094744,0,0x0,8
tick,0x7fffb2a0feb4,6110053,0,0x0,8
tick,0x7fffb2a0feb4,6125761,0,0x0,8
tick,0x7fffb2a0feb4,6141778,0,0x0,8
tick,0x7fffb2a0feb4,6157821,0,0x0,8
tick,0x7fffb2a0feb4,6172803,0,0x0,8
tick,0x7fffb2a0feb4,6188826,0,0x0,8
tick,0x7fffb2a0feb4,6204837,0,0x0,8
tick,0x7fffb2a0feb4,6220866,0,0x0,8
tick,0x7fffb2a0feb4,6235866,0,0x0,8
tick,0x7fffb2a0feb4,6251871,0,0x0,8
tick,0x7fffb2a0feb4,6267888,0,0x0,8
tick,0x7fffb2a0feb4,6282844,0,0x0,8
tick,0x7fffb2a0feb4,6298869,0,0x0,8
tick,0x7fffb2a0feb4,6314856,0,0x0,8
tick,0x7fffb2a0feb4,6330873,0,0x0,8
tick,0x7fffb2a0feb4,6346855,0,0x0,8
tick,0x7fffb2a0feb4,6362932,0,0x0,8
tick,0x7fffb2a0feb4,6378884,0,0x0,8
tick,0x7fffb2a0feb4,6394920,0,0x0,8
tick,0x7fffb2a0feb4,6410887,0,0x0,8
tick,0x7fffb2a0feb4,6426909,0,0x0,8
tick,0x7fffb2a0feb4,6442892,0,0x0,8
tick,0x7fffb2a0feb4,6458919,0,0x0,8
tick,0x7fffb2a0feb4,6474900,0,0x0,8
tick,0x7fffb2a0feb4,6490928,0,0x0,8
tick,0x7fffb2a0feb4,6506900,0,0x0,8
tick,0x7fffb2a0feb4,6522927,0,0x0,8
tick,0x7fffb2a0feb4,6538940,0,0x0,8
tick,0x7fffb2a0feb4,6554950,0,0x0,8
tick,0x7fffb2a0feb4,6570919,0,0x0,8
tick,0x7fffb2a0feb4,6585998,0,0x0,8
tick,0x7fffb2a0feb4,6601984,0,0x0,8
tick,0x7fffb2a0feb4,6618006,0,0x0,8
tick,0x7fffb2a0feb4,6633976,0,0x0,8
tick,0x7fffb2a0feb4,6650004,0,0x0,8
tick,0x7fffb2a0feb4,6665982,0,0x0,8
tick,0x7fffb2a0feb4,6682043,0,0x0,8
tick,0x7fffb2a0feb4,6697211,0,0x0,8
tick,0x7fffb2a0feb4,6713255,0,0x0,8
tick,0x7fffb2a0feb4,6729233,0,0x0,8
tick,0x7fffb2a0feb4,6745212,0,0x0,8
tick,0x7fffb2a0feb4,6761286,0,0x0,8
tick,0x7fffb2a0feb4,6777271,0,0x0,8
tick,0x7fffb2a0feb4,6792241,0,0x0,8
tick,0x7fffb2a0feb4,6808288,0,0x0,8
tick,0x7fffb2a0feb4,6823279,0,0x0,8
tick,0x7fffb2a0feb4,6839291,0,0x0,8
tick,0x7fffb2a0feb4,6855274,0,0x0,8
tick,0x7fffb2a0feb4,6871300,0,0x0,8
tick,0x7fffb2a0feb4,6887303,0,0x0,8
tick,0x7fffb2a0feb4,6903314,0,0x0,8
tick,0x7fffb2a0feb4,6919269,0,0x0,8
tick,0x7fffb2a0feb4,6935274,0,0x0,8
tick,0x7fffb2a0feb4,6951273,0,0x0,8
tick,0x7fffb2a0feb4,6967282,0,0x0,8
tick,0x7fffb2a0feb4,6983277,0,0x0,8
tick,0x7fffb2a0feb4,6999308,0,0x0,8
tick,0x7fffb2a0feb4,7015287,0,0x0,8
tick,0x7fffb2a0feb4,7031291,0,0x0,8
tick,0x7fffb2a0feb4,7047303,0,0x0,8
tick,0x7fffb2a0feb4,7063324,0,0x0,8
tick,0x7fffb2a0feb4,7079302,0,0x0,8
tick,0x7fffb2a0feb4,7095352,0,0x0,8
tick,0x7fffb2a0feb4,7111314,0,0x0,8
tick,0x7fffb2a0feb4,7127345,0,0x0,8
tick,0x7fffb2a0feb4,7142329,0,0x0,8
tick,0x7fffb2a0feb4,7158374,0,0x0,8
tick,0x7fffb2a0feb4,7174353,0,0x0,8
tick,0x7fffb2a0feb4,7190404,0,0x0,8
tick,0x7fffb2a0feb4,7206356,0,0x0,8
tick,0x7fffb2a0feb4,7222425,0,0x0,8
tick,0x7fffb2a0feb4,7238348,0,0x0,8
tick,0x7fffb2a0feb4,7254377,0,0x0,8
tick,0x7fffb2a0feb4,7270369,0,0x0,8
tick,0x7fffb2a0feb4,7286386,0,0x0,8
tick,0x7fffb2a0feb4,7302361,0,0x0,8
tick,0x7fffb2a0feb4,7318402,0,0x0,8
tick,0x7fffb2a0feb4,7334383,0,0x0,8
tick,0x7fffb2a0feb4,7350414,0,0x0,8
tick,0x7fffb2a0feb4,7366390,0,0x0,8
tick,0x7fffb2a0feb4,7382444,0,0x0,8
tick,0x7fffb2a0feb4,7398380,0,0x0,8
tick,0x7fffb2a0feb4,7414447,0,0x0,8
tick,0x7fffb2a0feb4,7430404,0,0x0,8
tick,0x7fffb2a0feb4,7446449,0,0x0,8
code-creation,LazyCompile,10,7447146,0x1bb8fb044ce,173,onconnection node:net:1548:22,0xbfdd37c7a0,~
code-source-info,0x1bb8fb044ce,120,43561,44231,C0O43601C3O43623C5O43630C7O43629C11O43650C19O43650C23O43678C27O43699C37O43713C43O43713C49O43699C55O43750C56O43757C57O43777C63O43800C68O43821C72O43813C77O43857C82O43857C86O43871C87O43878C88O43904C98O43930C102O43969C110O44009C120O43904C126O44078C132O44095C136O44102C138O44116C142O44127C144O44142C148O44155C153O44155C157O44201C165O44201C172O44230,,
code-creation,LazyCompile,10,7447299,0x1bb8fb047be,71,Socket.read node:net:639:33,0xbfdd37d080,~
code-source-info,0x1bb8fb047be,120,17426,17610,C0O17435C2O17444C4O17443C9O17462C15O17481C21O17505C26O17513C32O17529C35O17529C39O17557C44O17571C49O17578C54O17588C59O17593C64O17593C70O17607,,
code-creation,LazyCompile,10,7447461,0x1bb8fb04ace,587,Readable.read node:internal/streams/readable:394:35,0x334252dc1a0,~
code-source-info,0x1bb8fb04ace
code-creation,LazyCompile,10,7447669,0x1bb8fb04f4e,10, node:internal/streams/readable:49:66,0x334252db3e8,~
code-source-info,0x1bb8fb04f4e,49,1779,1806,C0O1792C2O1798C9O1805,,
code-creation,LazyCompile,10,7447723,0x1bb8fb05046,108,howMuchToRead node:internal/streams/readable:377:23,0x334252dc150,~
code-source-info,0x1bb8fb05046,49,12591,12977,C0O12607C1O12613C6O12628C12O12635C17O12650C23O12663C24O12672C25O12686C31O12703C33O12712C34O12716C39O12720C45O12793C51O12810C57O12838C62O12845C67O12845C72O12852C76O12860C77O12879C81O12886C82O12910C86O12901C91O12923C93O12932C94O12949C100O12963C107O12974,,
code-creation,LazyCompile,10,7447792,0x1bb8fb052b6,111,Socket._read node:net:596:34,0xbfdd37ce60,~
code-source-info,0x1bb8fb052b6,120,16335,16565,C0O16335C13O16344C23O16344C27O16365C30O16374C39O16394C45O16410C55O16410C59O16451C62O16456C75O16456C83O16504C86O16514C91O16522C97O16538C105O16538C110O16564,,
code-creation,LazyCompile,10,7447841,0x1bb8fb054ae,65,tryReadStart node:net:586:22,0xbfdd37c1b0,~
code-source-info,0x1bb8fb054ae,120,16000,16232,C0O16056C8O16056C12O16101C18O16117C22O16147C27O16155C32O16155C37O16171C39O16192C46O16200C52O16200C58O16192C64O16231,,
code-creation,LazyCompile,10,7447901,0x1bb8fb055f6,31,connectionListener node:_http_server:436:28,0x2bdba13ff68,~
code-source-info,0x1bb8fb055f6,173,15452,15573,C0O15466C7O15499C10O15499C24O15466C30O15572,,
code-creation,LazyCompile,10,7447936,0x1bb8fb056fe,44,getOrSetAsyncId node:internal/async_hooks:419:25,0x25aadb3af30,~
code-source-info,0x1bb8fb056fe,24,14821,14993,C0O14835C7O14877C10O14839C17O14902C19O14916C21O14915C24O14933C25O14944C27O14958C33O14977C37O14975C43O14990,,
code-creation,LazyCompile,10,7448077,0x1bb8fb05ba6,693,connectionListenerInternal node:_http_server:442:36,0x2bdba13ffb8,~
code-source-info,0x1bb8fb05ba6,173,15612,19570,C0O15634C8O15634C12O15800C14O15814C18O16001C24O16026C32O16065C37O16083C42O16065C47O16103C58O16103C64O16155C69O16163C74O16163C79O16200C87O16240C90O16240C95O16261C100O16447C107O16464C110O16475C117O16493C128O16489C134O16561C147O16586C151O16596C157O16610C160O16636C168O16447C173O16666C175O16680C179O16693C181O16707C185O16801C193O16869C197O16885C200O16860C204O16915C209O17380C212O17408C231O17408C236O17393C240O17495C243O17521C262O17521C267O17507C271O17606C274O17636C287O17636C292O17620C296O17709C299O17739C312O17739C317O17723C321O17819C329O17836C334O17819C340O17855C351O17855C357O17893C365O17909C370O17893C376O17927C384O17945C389O17927C395O17965C403O17983C408O17965C414O17996C417O18033C433O18033C438O18014C442O18193C453O18193C459O18233C470O18233C476O18327C482O18339C486O18337C490O18379C496O18400C500O18398C504O18449C510O18474C514O18472C518O18527C520O18546C524O18654C530O18672C535O18680C541O18711C546O18719C552O18737C553O18754C557O18774C563O18792C567O18812C572O18827C577O18812C582O18845C584O18852C590O18887C609O18887C614O18864C618O18966C620O18973C626O19008C639O19008C644O18985C648O19198C650O19205C656O19247C669O19247C674O19222C678O19504C681O19504C686O19544C687O19559C692O19569,,
code-creation,LazyCompile,10,7448205,0x1bb8fb060be,10, node:_http_server:84:64,0x2f65a7013c0,~
code-source-info,0x1bb8fb060be,173,2603,2630,C0O2616C2O2622C9O2629,,
code-creation,LazyCompile,10,7448242,0x1bb8fb061ae,56,alloc node:internal/freelist:15:8,0x2bdba137408,~
code-source-info,0x1bb8fb061ae,169,217,335,C0O217C2O239C7O244C13O251C18O269C23O274C28O274C36O289C39O307C50O289C55O330,,
code-creation,LazyCompile,10,7448299,0x1bb8fb062f6,65,parsersCb node:_http_common:170:65,0x2bdba1352f0,~
code-source-info,0x1bb8fb062f6,168,5599,5880,C0O5622C5O5622C11O5645C14O5645C18O5671C20O5678C25O5690C29O5712C31O5719C36O5739C40O5769C42O5776C47O5785C51O5804C53O5811C58O5831C62O5863C64O5877,,
code-creation,LazyCompile,10,7448392,0x1bb8fb06d7e,77,cleanParser node:_http_common:236:21,0x2bdba1351b0,~
code-source-info,0x1bb8fb06d7e,168,7592,7928,C0O7606C2O7622C6O7631C8O7643C12O7652C13O7666C17O7677C18O7693C22O7704C23O7720C27O7731C29O7755C31O7753C35O7776C37O7783C41O7800C45O7811C47O7818C51O7830C55O7841C57O7848C61O7860C65O7871C66O7888C70O7900C71O7918C76O7927,,
code-creation,LazyCompile,10,7448461,0x1bb8fb06f6e,43,isLenient node:_http_common:258:19,0x2bdba135250,~
code-source-info,0x1bb8fb06f6e,168,8181,8354,C0O8189C8O8216C12O8238C16O8252C22O8265C25O8273C33O8273C38O8325C42O8351,,
code-creation,LazyCompile,10,7448498,0x1bb8fb0708e,14,HTTPServerAsyncResource node:_http_server:172:14,0x2f65a701410,~
code-source-info,0x1bb8fb0708e,173,6861,6932,C0O6883C2O6893C6O6906C8O6918C13O6931,,
code-creation,LazyCompile,10,7448571,0x1bb8fb07346,70,Socket.resume node:net:630:35,0xbfdd37cff8,~
code-source-info,0x1bb8fb07346,120,17205,17387,C0O17213C2O17222C4O17221C9O17240C15O17259C21O17283C26O17291C32O17307C35O17307C39O17335C44O17349C49O17356C54O17366C59O17373C64O17373C69O17384,,
code-creation,LazyCompile,10,7448621,0x1bb8fb074b6,53,Readable.resume node:internal/streams/readable:964:37,0x334252dc7d0,~
code-source-info,0x1bb8fb074b6,49,31757,32086,C0O31784C5O31814C11O31830C19O31830C23O31991C28O31982C32O32015C35O32015C40O32044C42O32050C46O32059C50O32071C52O32083,,
code-creation,LazyCompile,10,7448664,0x1bb8fb075e6,35,resume node:internal/streams/readable:978:16,0x334252dc858,~
code-source-info,0x1bb8fb075e6,49,32106,32246,C0O32138C6O32162C7O32184C11O32197C14O32205C28O32205C34O32245,,
code-creation,LazyCompile,10,7448716,0x1bb8fb076f6,19,_getMaxListeners node:events:271:26,0x25aadb33c18,~
code-source-info,0x1bb8fb076f6,13,8039,8167,C0O8060C6O8094C9O8114C13O8134C14O8150C18O8164,,
code-creation,LazyCompile,10,7448756,0x1bb8fb07856,14,generateSocketListenerWrapper node:_http_server:1000:39,0x2f65a701348,~
code-source-info,0x1bb8fb07856,173,33025,33557,C0O33025C9O33047C13O33554,,
code-creation,LazyCompile,10,7448816,0x1bb8fb079c6,80,setRequestTimeout node:_http_server:762:27,0xbfdd37ff50,~
code-source-info,0x1bb8fb079c6,173,26189,26505,C0O26250C2O26268C4O26267C9O26300C15O26325C21O26340C26O26356C34O26356C38O26396C40O26403C45O26429C51O26465C59O26429C65O26488C70O26489C74O26420C79O26504,,
code-creation,LazyCompile,10,7448881,0x1bb8fb07b46,87,resume_ node:internal/streams/readable:985:17,0x334252dc8a8,~
code-source-info,0x1bb8fb07b46,49,32266,32512,C0O32287C8O32309C13O32287C18O32333C24O32356C31O32356C36O32375C37O32397C41O32416C49O32416C54O32435C57O32435C61O32462C67O32480C73O32501C80O32501C86O32511,,
code-creation,LazyCompile,10,7448931,0x1bb8fb07cbe,60,onSocketResume node:_http_server:965:24,0x2f65a701258,~
code-source-info,0x1bb8fb07cbe,173,32054,32569,C0O32399C6O32420C11O32420C15O32434C16O32441C17O32461C23O32478C28O32486C34O32507C40O32523C44O32541C49O32549C54O32549C59O32568,,
code-creation,LazyCompile,10,7448972,0x1bb8fb07e16,45,flow node:internal/streams/readable:1009:14,0x334252dc980,~
code-source-info,0x1bb8fb07e16,49,32837,32975,C0O32872C5O32891C13O32911C18O32891C23O32937C29O32955C34O32955C40O32924C44O32974,,
code-creation,Function,11,7449302,0x225ca7b6880,232,highWaterMarkFrom node:internal/streams/state:10:27,0x334252e0e88,^
code-source-info,0x225ca7b6880,53,177,321,,,
code-creation,Function,11,7449332,0x225ca7b69e0,144,EventEmitter node:events:84:22,0x25aadb32d48,^
code-source-info,0x225ca7b69e0,13,2562,2612,,,
code-creation,Function,11,7449354,0x225ca7b6ae0,152,hasHooks node:internal/async_hooks:460:18,0x25aadb3b0d0,^
code-source-info,0x225ca7b6ae0,24,16108,16156,,,
code-creation,Function,11,7449373,0x225ca7b6be0,108,isEmpty node:internal/fixed_queue:67:10,0x2ee4c9c5fa0,^
code-source-info,0x225ca7b6be0,28,3150,3197,,,
code-creation,Function,11,7449393,0x225ca7b6cc0,168,Stream node:internal/streams/legacy:10:16,0x334252de520,^
code-source-info,0x225ca7b6cc0,50,136,171,,,
code-creation,Function,11,7449462,0x225ca7b6de0,1300,Readable.on node:internal/streams/readable:875:33,0x334252dc5a0,^
code-source-info,0x225ca7b6de0,49,28647,29573,,,
code-creation,Function,11,7449485,0x225ca7b7360,180,generateSocketListenerWrapper node:_http_server:1000:39,0x2f65a701348,^
code-source-info,0x225ca7b7360,173,33025,33557,,,
code-creation,Function,11,7449619,0x225ca7b7480,2404,_addListener node:events:418:22,0x25aadb33e38,^
code-source-info,0x225ca7b7480,13,12396,14471,,,
code-creation,Function,11,7449640,0x225ca7b7e60,112,getDefaultHighWaterMark node:internal/streams/state:15:33,0x334252e0f98,^
code-source-info,0x225ca7b7e60,53,357,413,,,
code-creation,Function,11,7449667,0x225ca7b7f40,1216,EventEmitter.init node:events:194:29,0x25aadb33a48,^
code-source-info,0x225ca7b7f40,13,5772,6380,,,
code-creation,Function,11,7449685,0x225ca7b8460,308,getNewAsyncId node:net:156:23,0xbfdd37bee0,^
code-source-info,0x225ca7b8460,120,4137,4256,,,
code-creation,Function,11,7449701,0x225ca7b8600,116,isEmpty node:internal/fixed_queue:95:10,0x2ee4c9c6258,^
code-source-info,0x225ca7b8600,28,3731,3773,,,
code-creation,Function,11,7449719,0x225ca7b86e0,260,setHasTickScheduled node:internal/process/task_queues:52:29,0x25aadb3cf38,^
code-source-info,0x225ca7b86e0,25,1155,1215,,,
code-creation,Function,11,7450078,0x225ca7b8860,2356,WritableState node:internal/streams/writable:77:23,0x334252ea350,^
code-source-info,0x225ca7b8860,56,2558,7182,,,
code-creation,Function,11,7450104,0x225ca7b9200,308,shift node:internal/fixed_queue:108:8,0x2ee4c9c62f8,^
code-source-info,0x225ca7b9200,28,4061,4295,,,
code-creation,Function,11,7450120,0x225ca7b93a0,104,get node:events:133:16,0x25aadb33838,^
code-source-info,0x225ca7b93a0,13,3955,3997,,,
code-creation,Function,11,7450138,0x225ca7b9480,412,shift node:internal/fixed_queue:80:8,0x2ee4c9c60d8,^
code-source-info,0x225ca7b9480,28,3379,3596,,,
code-creation,Function,11,7450154,0x225ca7b9680,124,BufferList node:internal/streams/buffer_list:14:14,0x334252e0340,^
code-source-info,0x225ca7b9680,52,278,355,,,
code-creation,Function,11,7450170,0x225ca7b9760,176,resetBuffer node:internal/streams/writable:202:21,0x334252ea3a0,^
code-source-info,0x225ca7b9760,56,7206,7323,,,
code-creation,Function,11,7450339,0x225ca7b9880,2520,ReadableState node:internal/streams/readable:78:23,0x334252dbc70,^
code-source-info,0x225ca7b9880,49,2596,6403,,,
code-creation,Function,11,7450364,0x225ca7ba2c0,140,set node:net:1707:6,0xbfdd37ded0,^
code-source-info,0x225ca7ba2c0,120,47276,47309,,,
code-creation,Function,11,7450385,0x225ca7ba3c0,772,undestroy node:internal/streams/destroy:160:19,0x334252cf508,^
code-source-info,0x225ca7ba3c0,47,3223,3849,,,
code-creation,Function,11,7450405,0x225ca7ba740,600,Socket.read node:net:639:33,0xbfdd37d080,^
code-source-info,0x225ca7ba740,120,17426,17610,,,
code-creation,Function,11,7450536,0x225ca7baa00,148,enabledHooksExist node:internal/async_hooks:464:27,0x25aadb3b120,^
code-source-info,0x225ca7baa00,24,16186,16221,,,
code-creation,Function,11,7450559,0x225ca7bab00,228,newAsyncId node:internal/async_hooks:415:20,0x25aadb3aee0,^
code-source-info,0x225ca7bab00,24,14740,14793,,,
code-creation,Function,11,7450576,0x225ca7bac60,148,initHooksExist node:internal/async_hooks:468:24,0x25aadb3b170,^
code-source-info,0x225ca7bac60,24,16248,16282,,,
code-creation,Function,11,7450593,0x225ca7bad60,216,isFull node:internal/fixed_queue:71:9,0x2ee4c9c6008,^
code-source-info,0x225ca7bad60,28,3209,3272,,,
code-creation,Function,11,7450610,0x225ca7baea0,288,push node:internal/fixed_queue:75:7,0x2ee4c9c6070,^
code-source-info,0x225ca7baea0,28,3282,3368,,,
code-creation,Function,11,7450643,0x225ca7bb020,1640,pushAsyncContext node:internal/async_hooks:529:26,0x25aadb3b4c8,^
code-source-info,0x225ca7bb020,24,17623,18178,,,
code-creation,Function,11,7450660,0x225ca7bb700,148,destroyHooksExist node:internal/async_hooks:476:27,0x25aadb3b230,^
code-source-info,0x225ca7bb700,24,16375,16412,,,
code-creation,Function,11,7450801,0x225ca7bb800,556,parsersCb node:_http_common:170:65,0x2bdba1352f0,^
code-source-info,0x225ca7bb800,168,5599,5880,,,
code-creation,Function,11,7450875,0x225ca7bbaa0,1512,popAsyncContext node:internal/async_hooks:543:25,0x25aadb3b518,^
code-source-info,0x225ca7bbaa0,24,18271,18873,,,
code-creation,Function,11,7450897,0x225ca7bc100,772,Duplex node:internal/streams/duplex:52:16,0x334252d0908,^
code-source-info,0x225ca7bc100,48,2002,2430,,,
code-creation,Function,11,7450918,0x225ca7bc480,632,cleanParser node:_http_common:236:21,0x2bdba1351b0,^
code-source-info,0x225ca7bc480,168,7592,7928,,,
code-creation,Function,11,7451023,0x225ca7bc760,4288,connectionListenerInternal node:_http_server:442:36,0x2bdba13ffb8,^
code-source-info,0x225ca7bc760,173,15612,19570,,,
code-creation,Function,11,7451043,0x225ca7bd880,100,HTTPServerAsyncResource node:_http_server:172:14,0x2f65a701410,^
code-source-info,0x225ca7bd880,173,6861,6932,,,
code-creation,Function,11,7451060,0x225ca7bd960,280,listenerCount node:events:722:23,0x25aadb34420,^
code-source-info,0x225ca7bd960,13,21338,21620,,,
code-creation,Function,11,7451077,0x225ca7bdae0,236,resume node:internal/streams/readable:978:16,0x334252dc858,^
code-source-info,0x225ca7bdae0,49,32106,32246,,,
code-creation,Function,11,7451096,0x225ca7bdc40,440,Readable.resume node:internal/streams/readable:964:37,0x334252dc7d0,^
code-source-info,0x225ca7bdc40,49,31757,32086,,,
code-creation,Function,11,7451184,0x225ca7bde60,4088,Readable.read node:internal/streams/readable:394:35,0x334252dc1a0,^
code-source-info,0x225ca7bde60,49,13085,17585,,,
new,MemoryChunk,0x225ca7c0000,262144
code-creation,Function,11,7451246,0x225ca7c3060,940,defaultTriggerAsyncIdScope node:internal/async_hooks:445:36,0x25aadb3b050,^
code-source-info,0x225ca7c3060,24,15616,16087,,,
code-creation,Function,11,7451266,0x225ca7c3480,276,connectionListener node:_http_server:436:28,0x2bdba13ff68,^
code-source-info,0x225ca7c3480,173,15452,15573,,,
code-creation,Function,11,7451497,0x225ca7c3600,344,emitBeforeScript node:internal/async_hooks:499:26,0x25aadb3b320,^
code-source-info,0x225ca7c3600,24,16949,17105,,,
code-creation,Function,11,7451526,0x225ca7c37c0,432,flow node:internal/streams/readable:1009:14,0x334252dc980,^
code-source-info,0x225ca7c37c0,49,32837,32975,,,
code-creation,Function,11,7451544,0x225ca7c39e0,260,setHasRejectionToWarn node:internal/process/promises:71:31,0x25aadb3faa8,^
code-source-info,0x225ca7c39e0,26,2071,2133,,,
code-creation,Function,11,7451574,0x225ca7c3b60,1512,Readable node:internal/streams/readable:181:18,0x334252dbcc0,^
code-source-info,0x225ca7c3b60,49,6426,7336,,,
code-creation,Function,11,7451596,0x225ca7c41c0,752,getHighWaterMark node:internal/streams/state:19:26,0x334252e0fe8,^
code-source-info,0x225ca7c41c0,53,442,862,,,
code-creation,Function,11,7451847,0x225ca7c4520,1872,Writable node:internal/streams/writable:219:18,0x334252ea4b0,^
code-source-info,0x225ca7c4520,56,7627,9195,,,
code-creation,Function,11,7451872,0x225ca7c4ce0,172,_getMaxListeners node:events:271:26,0x25aadb33c18,^
code-source-info,0x225ca7c4ce0,13,8039,8167,,,
code-creation,Function,11,7451890,0x225ca7c4e00,312,emitAfterScript node:internal/async_hooks:507:25,0x25aadb3b370,^
code-source-info,0x225ca7c4e00,24,17135,17236,,,
code-creation,Function,11,7451930,0x225ca7c4fa0,2460,processTicksAndRejections node:internal/process/task_queues:68:35,0x25aadb3cfd8,^
code-source-info,0x225ca7c4fa0,25,1563,2529,,,
code-creation,Function,11,7452031,0x225ca7c59a0,600,resume_ node:internal/streams/readable:985:17,0x334252dc8a8,^
code-source-info,0x225ca7c59a0,49,32266,32512,,,
code-creation,Function,11,7452061,0x225ca7c5c60,1132,initSocketHandle node:net:254:26,0xbfdd37c070,^
code-source-info,0x225ca7c5c60,120,6574,7174,,,
code-creation,Function,11,7452080,0x225ca7c6140,400,alloc node:internal/freelist:15:8,0x2bdba137408,^
code-source-info,0x225ca7c6140,169,217,335,,,
code-creation,Function,11,7452099,0x225ca7c6340,392,getDefaultTriggerAsyncId node:internal/async_hooks:431:34,0x25aadb3af80,^
code-source-info,0x225ca7c6340,24,15215,15478,,,
code-creation,Function,11,7452123,0x225ca7c6540,1216,onconnection node:net:1548:22,0xbfdd37c7a0,^
code-source-info,0x225ca7c6540,120,43561,44231,,,
code-creation,Function,11,7452431,0x225ca7c6a60,2628,nextTick node:internal/process/task_queues:104:18,0x25aadb3d028,^
code-source-info,0x225ca7c6a60,25,2694,3569,,,
code-creation,Function,11,7452461,0x225ca7c7520,488,tryReadStart node:net:586:22,0xbfdd37c1b0,^
code-source-info,0x225ca7c7520,120,16000,16232,,,
code-creation,Function,11,7452491,0x225ca7c7780,844,Socket._read node:net:596:34,0xbfdd37ce60,^
code-source-info,0x225ca7c7780,120,16335,16565,,,
code-creation,Function,11,7452510,0x225ca7c7b40,420,push node:internal/fixed_queue:99:7,0x2ee4c9c62a8,^
code-source-info,0x225ca7c7b40,28,3783,4050,,,
code-creation,Function,11,7452677,0x225ca7c7d60,6104,Socket node:net:283:16,0xbfdd37c0c0,^
code-source-info,0x225ca7c7d60,120,7331,11511,,,
code-creation,Function,11,7452704,0x225ca7c95a0,912,howMuchToRead node:internal/streams/readable:377:23,0x334252dc150,^
code-source-info,0x225ca7c95a0,49,12591,12977,,,
code-creation,Function,11,7453340,0x225ca7c99a0,2880,emit node:events:340:44,0x25aadb33d78,^
code-source-info,0x225ca7c99a0,13,10080,12370,,,
code-creation,Function,11,7453368,0x225ca7ca540,456,getOrSetAsyncId node:internal/async_hooks:419:25,0x25aadb3af30,^
code-source-info,0x225ca7ca540,24,14821,14993,,,
code-creation,Function,11,7453388,0x225ca7ca780,592,Socket.resume node:net:630:35,0xbfdd37cff8,^
code-source-info,0x225ca7ca780,120,17205,17387,,,
code-creation,Function,11,7453406,0x225ca7caa40,448,onSocketResume node:_http_server:965:24,0x2f65a701258,^
code-source-info,0x225ca7caa40,173,32054,32569,,,
code-creation,Function,11,7455594,0x225ca7cac60,3688,processPromiseRejections node:internal/process/promises:203:34,0x2ee4c9c1400,^
code-source-info,0x225ca7cac60,26,6535,8640,,,
code-creation,Function,11,7455622,0x225ca7cbb40,236, node:internal/validators:221:42,0x6682e9acd8,^
code-source-info,0x225ca7cbb40,17,7016,7120,,,
code-creation,Function,11,7455644,0x225ca7cbca0,500,isLenient node:_http_common:258:19,0x2bdba135250,^
code-source-info,0x225ca7cbca0,168,8181,8354,,,
code-creation,Function,11,7455666,0x225ca7cbf00,728,construct node:internal/streams/destroy:225:19,0x334252cf5c8,^
code-source-info,0x225ca7cbf00,47,4850,5261,,,
code-creation,Function,11,7455687,0x225ca7cc240,676,setRequestTimeout node:_http_server:762:27,0xbfdd37ff50,^
code-source-info,0x225ca7cc240,173,26189,26505,,,
tick,0x7fffb2a0db64,7462400,0,0x0,8
new,MemoryChunk,0x38703440000,262144
new,MemoryChunk,0x23b7e180000,262144
new,MemoryChunk,0xbc31700000,262144
new,MemoryChunk,0xf797780000,262144
new,MemoryChunk,0xa0dbd80000,262144
new,MemoryChunk,0x3338f140000,262144
new,MemoryChunk,0x37b7f180000,262144
new,MemoryChunk,0x7b57ac0000,262144
new,MemoryChunk,0x212fbe80000,262144
new,MemoryChunk,0xea60800000,262144
new,MemoryChunk,0x2d09180000,262144
new,MemoryChunk,0xd119000000,262144
new,MemoryChunk,0x1256ff40000,262144
new,MemoryChunk,0x81f72c0000,262144
new,MemoryChunk,0x126ff00000,262144
new,MemoryChunk,0x36143380000,262144
scavenge,begin,0,343750,1671211999826
new,MemoryChunk,0x13cb80c0000,262144
new,MemoryChunk,0x39bd8600000,262144
new,MemoryChunk,0x8cc0300000,262144
new,MemoryChunk,0x38a7b540000,262144
scavenge,end,0,343750,1671211999826
delete,MemoryChunk,0x36143380000
delete,MemoryChunk,0x126ff00000
delete,MemoryChunk,0x81f72c0000
delete,MemoryChunk,0x1256ff40000
delete,MemoryChunk,0xd119000000
delete,MemoryChunk,0x2d09180000
delete,MemoryChunk,0xea60800000
delete,MemoryChunk,0x212fbe80000
delete,MemoryChunk,0x16c88780000
delete,MemoryChunk,0x7b57ac0000
delete,MemoryChunk,0x37b7f180000
delete,MemoryChunk,0x3338f140000
delete,MemoryChunk,0xa0dbd80000
delete,MemoryChunk,0xf797780000
delete,MemoryChunk,0xbc31700000
delete,MemoryChunk,0x23b7e180000
delete,MemoryChunk,0x38703440000
delete,MemoryChunk,0x10a7ddc0000
delete,MemoryChunk,0x2b9fe600000
delete,MemoryChunk,0x2ce29000000
delete,MemoryChunk,0x128982c0000
delete,MemoryChunk,0xa286780000
delete,MemoryChunk,0x14d7db00000
delete,MemoryChunk,0x5446b80000
delete,MemoryChunk,0x37f48880000
code-creation,LazyCompile,10,7467951,0x1bb8fb2a6e6,269,parserOnHeadersComplete node:_http_common:77:33,0x2bdba134f80,~
code-source-info,0x1bb8fb2a6e6,168,3007,4609,C0O3199C3O3216C8O3240C12O3291C18O3306C20O3322C24O3338C28O3381C34O3392C36O3404C40O3491C44O3509C50O3560C57O3567C59O3566C66O3623C69O3662C71O3680C77O3678C84O3718C86O3744C90O3763C92O3789C96O3808C98O3834C108O3850C112O3829C116O3869C118O3882C122O3892C124O3909C128O3925C132O3944C140O3944C144O3993C146O4002C149O4030C156O4037C158O4036C161O4019C165O4069C172O4076C176O4093C180O4132C185O4222C191O4237C196O4247C201O4269C206O4251C212O4300C217O4300C223O4334C229O4393C231O4411C236O4418C239O4409C245O4465C247O4485C251O4504C253O4527C257O4568C262O4568C268O4606,,
code-creation,LazyCompile,10,7468100,0x1bb8fb2ab16,177,IncomingMessage node:_http_incoming:51:25,0x2bdba137e68,~
code-source-info,0x1bb8fb2ab16,170,1847,2812,C0O1865C2O1885C6O1904C11O1951C24O1991C29O2000C34O2000C40O2037C46O2064C50O2077C52O2089C56O2104C57O2126C61O2137C62O2159C66O2170C67O2187C71O2198C72O2212C76O2224C78O2229C82O2239C86O2250C88O2255C92O2270C96O2278C98O2294C102O2303C104O2308C108O2319C112O2330C114O2335C118O2351C122O2359C124O2376C128O2387C129O2400C133O2414C134O2427C138O2468C140O2477C144O2486C145O2498C149O2540C150O2556C154O2567C155O2586C159O2597C161O2609C165O2624C166O2640C170O2788C171O2801C176O2811,,
code-creation,LazyCompile,10,7468174,0x1bb8fb2b96e,10,get node:internal/streams/readable:1200:18,0x334252dce88,~
code-source-info,0x1bb8fb2b96e,49,37561,37621,C0O37585C5O37600C9O37614,,
code-creation,LazyCompile,10,7468262,0x1bb8fb2bbee,10, node:_http_common:43:64,0x2bdba1352a0,~
code-source-info,0x1bb8fb2bbee,168,1715,1742,C0O1728C2O1734C9O1741,,
code-creation,LazyCompile,10,7468320,0x1bb8fb2bcfe,125,_addHeaderLines node:_http_incoming:199:25,0x2bdba137eb8,~
code-source-info,0x1bb8fb2bcfe,170,6108,6562,C0O6126C4O6149C10O6168C12O6188C18O6207C20O6224C24O6242C26O6247C31O6263C35O6275C37O6287C39O6286C45O6320C47O6336C51O6354C53O6359C58O6374C62O6386C64O6398C66O6397C70O6423C74O6455C76O6460C78O6460C83O6489C90O6511C96O6526C99O6523C109O6489C114O6467C120O6442C124O6561,,
code-creation,LazyCompile,10,7468481,0x1bb8fb2c186,680,parserOnIncoming node:_http_server:852:26,0x2f65a7011b8,~
code-source-info,0x1bb8fb2c
code-creation,LazyCompile,10,7468604,0x1bb8fb2c67e,36,resetSocketTimeout node:_http_server:957:28,0x2f65a701208,~
code-source-info,0x1bb8fb2c67e,173,31868,32027,C0O31908C6O31934C7O31941C8O31954C13O31972C24O31954C29O31990C30O32016C35O32026,,
code-creation,LazyCompile,10,7468638,0x1bb8fb2c796,16,get node:internal/streams/writable:833:8,0x334252eb048,~
code-source-info,0x1bb8fb2c796,56,24728,24811,C0O24752C6O24775C11O24790C15O24804,,
code-creation,LazyCompile,10,7468690,0x1bb8fb2ca06,159,ServerResponse node:_http_server:178:24,0x334160bff28,~
code-source-info,0x1bb8fb2ca06,173,6962,7544,C0O6973C5O6989C10O6989C15O7014C22O7021C27O7033C28O7047C32O7061C34O7070C38O7080C39O7094C43O7105C44O7119C48O7131C49O7153C53O7175C60O7192C65O7203C72O7220C77O7232C79O7267C84O7287C87O7368C92O7376C97O7267C102O7265C106O7386C107O7407C111O7426C119O7430C125O7458C127O7463C138O7520C143O7520C153O7490C158O7543,,
code-creation,LazyCompile,10,7468871,0x1bb8fb2ce2e,172,OutgoingMessage node:_http_outgoing:97:25,0x2bdba13adf0,~
code-source-info,0x1bb8fb2ce2e,171,3281,4565,C0O3289C5O3296C10O3296C15O3467C17O3483C21O3792C22O3808C26O3818C27O3832C31O3843C32O3858C36O3872C37O3883C41O3895C42O3916C46O3928C47O3949C51O3960C52O3996C56O4008C57O4031C61O4042C62O4075C66O4086C67O4100C71O4112C72O4136C76O4148C77O4169C81O4181C82O4197C86O4211C87O4231C91O4242C92O4256C96O4267C98O4281C102O4290C104O4295C108O4307C112O4321C113O4335C117O4347C118O4364C122O4376C124O4381C128O4390C132O4398C133O4411C137O4425C138O4437C142O4448C143O4461C147O4472C149O4477C153O4490C157O4503C158O4526C162O4536C164O4558C166O4556C171O4564,,
code-creation,LazyCompile,10,7469021,0x1bb8fb2f016,24,hasObserver node:internal/perf/observe:474:21,0x3f9d3545808,~
script-source,67,node:internal/perf/observe,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeFlatMap\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_GC\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP2\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP\x2C\x0d\n  }\x2C\x0d\n  installGarbageCollectionTracking\x2C\x0d\n  observerCounts\x2C\x0d\n  removeGarbageCollectionTracking\x2C\x0d\n  setupObservers\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nconst {\x0d\n  InternalPerformanceEntry\x2C\x0d\n  isPerformanceEntry\x2C\x0d\n  kBufferNext\x2C\x0d\n} = require('internal/perf/performance_entry');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  deprecate\x2C\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  setImmediate\x2C\x0d\n} = require('timers');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kCallback = Symbol('kCallback');\x0d\nconst kDispatch = Symbol('kDispatch');\x0d\nconst kEntryTypes = Symbol('kEntryTypes');\x0d\nconst kMaybeBuffer = Symbol('kMaybeBuffer');\x0d\nconst kDeprecatedFields = Symbol('kDeprecatedFields');\x0d\nconst kType = Symbol('kType');\x0d\n\x0d\nconst kDeprecationMessage =\x0d\n  'Custom PerformanceEntry accessors are deprecated. ' +\x0d\n  'Please use the detail property.';\x0d\n\x0d\nconst kTypeSingle = 0;\x0d\nconst kTypeMultiple = 1;\x0d\n\x0d\nlet gcTrackingInstalled = false;\x0d\n\x0d\nconst kSupportedEntryTypes = ObjectFreeze([\x0d\n  'function'\x2C\x0d\n  'gc'\x2C\x0d\n  'http'\x2C\x0d\n  'http2'\x2C\x0d\n  'mark'\x2C\x0d\n  'measure'\x2C\x0d\n]);\x0d\n\x0d\n// Performance timeline entry Buffers\x0d\nconst markEntryBuffer = createBuffer();\x0d\nconst measureEntryBuffer = createBuffer();\x0d\nconst kMaxPerformanceEntryBuffers = 1e6;\x0d\nconst kClearPerformanceEntryBuffers = ObjectFreeze({\x0d\n  'mark': 'performance.clearMarks'\x2C\x0d\n  'measure': 'performance.clearMeasures'\x2C\x0d\n});\x0d\nconst kWarnedEntryTypes = new SafeMap();\x0d\n\x0d\nconst kObservers = new SafeSet();\x0d\nconst kPending = new SafeSet();\x0d\nlet isPending = false;\x0d\n\x0d\nfunction queuePending() {\x0d\n  if (isPending) return;\x0d\n  isPending = true;\x0d\n  setImmediate(() => {\x0d\n    isPending = false;\x0d\n    const pendings = ArrayFrom(kPending.values());\x0d\n    kPending.clear();\x0d\n    for (const pending of pendings)\x0d\n      pending[kDispatch]();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction getObserverType(type) {\x0d\n  switch (type) {\x0d\n    case 'gc': return NODE_PERFORMANCE_ENTRY_TYPE_GC;\x0d\n    case 'http2': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP2;\x0d\n    case 'http': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeDecrementObserverCounts(entryTypes) {\x0d\n  for (const type of entryTypes) {\x0d\n    const observerType = getObserverType(type);\x0d\n\x0d\n    if (observerType !== undefined) {\x0d\n      observerCounts[observerType]--;\x0d\n\x0d\n      if (observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC &&\x0d\n          observerCounts[observerType] === 0) {\x0d\n        removeGarbageCollectionTracking();\x0d\n        gcTrackingInstalled = false;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeIncrementObserverCount(type) {\x0d\n  const observerType = getObserverType(type);\x0d\n\x0d\n  if (observerType !== undefined) {\x0d\n    observerCounts[observerType]++;\x0d\n    if (!gcTrackingInstalled &&\x0d\n        observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC) {\x0d\n      installGarbageCollectionTracking();\x0d\n      gcTrackingInstalled = true;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nclass PerformanceObserverEntryList {\x0d\n  constructor(entries) {\x0d\n    this[kBuffer] = ArrayPrototypeSort(entries\x2C (first\x2C second) => {\x0d\n      if (first.startTime < second.startTime) return -1;\x0d\n      if (first.startTime > second.startTime) return 1;\x0d\n      return 0;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  getEntries() {\x0d\n    return ArrayPrototypeSlice(this[kBuffer]);\x0d\n  }\x0d\n\x0d\n  getEntriesByType(type) {\x0d\n    type = `${type}`;\x0d\n    return ArrayPrototypeFilter(\x0d\n      this[kBuffer]\x2C\x0d\n      (entry) => entry.entryType === type);\x0d\n  }\x0d\n\x0d\n  getEntriesByName(name\x2C type) {\x0d\n    name = `${name}`;\x0d\n    if (type != null /** not nullish */) {\x0d\n      return ArrayPrototypeFilter(\x0d\n        this[kBuffer]\x2C\x0d\n        (entry) => entry.name === name && entry.entryType === type);\x0d\n    }\x0d\n    return ArrayPrototypeFilter(\x0d\n      this[kBuffer]\x2C\x0d\n      (entry) => entry.name === name);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `PerformanceObserverEntryList ${inspect(this[kBuffer]\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass PerformanceObserver {\x0d\n  constructor(callback) {\x0d\n    // TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n    // initializers for now:\x0d\n    // https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\n    this[kBuffer] = [];\x0d\n    this[kEntryTypes] = new SafeSet();\x0d\n    this[kType] = undefined;\x0d\n    validateCallback(callback);\x0d\n    this[kCallback] = callback;\x0d\n  }\x0d\n\x0d\n  observe(options = {}) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    const {\x0d\n      entryTypes\x2C\x0d\n      type\x2C\x0d\n      buffered\x2C\x0d\n    } = { ...options };\x0d\n    if (entryTypes === undefined && type === undefined)\x0d\n      throw new ERR_MISSING_ARGS('options.entryTypes'\x2C 'options.type');\x0d\n    if (entryTypes != null && type != null)\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.entryTypes'\x2C\x0d\n                                      entryTypes\x2C\x0d\n                                      'options.entryTypes can not set with ' +\x0d\n                                      'options.type together');\x0d\n\x0d\n    switch (this[kType]) {\x0d\n      case undefined:\x0d\n        if (entryTypes !== undefined) this[kType] = kTypeMultiple;\x0d\n        if (type !== undefined) this[kType] = kTypeSingle;\x0d\n        break;\x0d\n      case kTypeSingle:\x0d\n        if (entryTypes !== undefined)\x0d\n          throw lazyDOMException(\x0d\n            'PerformanceObserver can not change to multiple observations'\x2C\x0d\n            'InvalidModificationError');\x0d\n        break;\x0d\n      case kTypeMultiple:\x0d\n        if (type !== undefined)\x0d\n          throw lazyDOMException(\x0d\n            'PerformanceObserver can not change to single observation'\x2C\x0d\n            'InvalidModificationError');\x0d\n        break;\x0d\n    }\x0d\n\x0d\n    if (this[kType] === kTypeMultiple) {\x0d\n      if (!ArrayIsArray(entryTypes)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'options.entryTypes'\x2C\x0d\n          'string[]'\x2C\x0d\n          entryTypes);\x0d\n      }\x0d\n      maybeDecrementObserverCounts(this[kEntryTypes]);\x0d\n      this[kEntryTypes].clear();\x0d\n      for (let n = 0; n < entryTypes.length; n++) {\x0d\n        if (ArrayPrototypeIncludes(kSupportedEntryTypes\x2C entryTypes[n])) {\x0d\n          this[kEntryTypes].add(entryTypes[n]);\x0d\n          maybeIncrementObserverCount(entryTypes[n]);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      if (!ArrayPrototypeIncludes(kSupportedEntryTypes\x2C type))\x0d\n        return;\x0d\n      this[kEntryTypes].add(type);\x0d\n      maybeIncrementObserverCount(type);\x0d\n      if (buffered) {\x0d\n        const entries = filterBufferMapByNameAndType(undefined\x2C type);\x0d\n        ArrayPrototypePushApply(this[kBuffer]\x2C entries);\x0d\n        kPending.add(this);\x0d\n        if (kPending.size)\x0d\n          queuePending();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this[kEntryTypes].size)\x0d\n      kObservers.add(this);\x0d\n    else\x0d\n      this.disconnect();\x0d\n  }\x0d\n\x0d\n  disconnect() {\x0d\n    maybeDecrementObserverCounts(this[kEntryTypes]);\x0d\n    kObservers.delete(this);\x0d\n    kPending.delete(this);\x0d\n    this[kBuffer] = [];\x0d\n    this[kEntryTypes].clear();\x0d\n    this[kType] = undefined;\x0d\n  }\x0d\n\x0d\n  takeRecords() {\x0d\n    const list = this[kBuffer];\x0d\n    this[kBuffer] = [];\x0d\n    return list;\x0d\n  }\x0d\n\x0d\n  static get supportedEntryTypes() {\x0d\n    return kSupportedEntryTypes;\x0d\n  }\x0d\n\x0d\n  [kMaybeBuffer](entry) {\x0d\n    if (!this[kEntryTypes].has(entry.entryType))\x0d\n      return;\x0d\n    ArrayPrototypePush(this[kBuffer]\x2C entry);\x0d\n    kPending.add(this);\x0d\n    if (kPending.size)\x0d\n      queuePending();\x0d\n  }\x0d\n\x0d\n  [kDispatch]() {\x0d\n    this[kCallback](new PerformanceObserverEntryList(this.takeRecords())\x2C\x0d\n                    this);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `PerformanceObserver ${inspect({\x0d\n      connected: kObservers.has(this)\x2C\x0d\n      pending: kPending.has(this)\x2C\x0d\n      entryTypes: ArrayFrom(this[kEntryTypes])\x2C\x0d\n      buffer: this[kBuffer]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction enqueue(entry) {\x0d\n  if (!isPerformanceEntry(entry))\x0d\n    throw new ERR_INVALID_ARG_TYPE('entry'\x2C 'PerformanceEntry'\x2C entry);\x0d\n\x0d\n  for (const obs of kObservers) {\x0d\n    obs[kMaybeBuffer](entry);\x0d\n  }\x0d\n\x0d\n  const entryType = entry.entryType;\x0d\n  let buffer;\x0d\n  if (entryType === 'mark') {\x0d\n    buffer = markEntryBuffer;\x0d\n  } else if (entryType === 'measure') {\x0d\n    buffer = measureEntryBuffer;\x0d\n  } else {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const count = buffer.count + 1;\x0d\n  buffer.count = count;\x0d\n  if (count === 1) {\x0d\n    buffer.head = entry;\x0d\n    buffer.tail = entry;\x0d\n    return;\x0d\n  }\x0d\n  buffer.tail[kBufferNext] = entry;\x0d\n  buffer.tail = entry;\x0d\n\x0d\n  if (count > kMaxPerformanceEntryBuffers &&\x0d\n    !kWarnedEntryTypes.has(entryType)) {\x0d\n    kWarnedEntryTypes.set(entryType\x2C true);\x0d\n    // No error code for this since it is a Warning\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const w = new Error('Possible perf_hooks memory leak detected. ' +\x0d\n                        `${count} ${entryType} entries added to the global ` +\x0d\n                        'performance entry buffer. Use ' +\x0d\n                        `${kClearPerformanceEntryBuffers[entryType]} to ` +\x0d\n                        'clear the buffer.');\x0d\n    w.name = 'MaxPerformanceEntryBufferExceededWarning';\x0d\n    w.entryType = entryType;\x0d\n    w.count = count;\x0d\n    process.emitWarning(w);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction clearEntriesFromBuffer(type\x2C name) {\x0d\n  let buffer;\x0d\n  if (type === 'mark') {\x0d\n    buffer = markEntryBuffer;\x0d\n  } else if (type === 'measure') {\x0d\n    buffer = measureEntryBuffer;\x0d\n  } else {\x0d\n    return;\x0d\n  }\x0d\n  if (name === undefined) {\x0d\n    resetBuffer(buffer);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let head = null;\x0d\n  let tail = null;\x0d\n  let count = 0;\x0d\n  for (let entry = buffer.head; entry !== null; entry = entry[kBufferNext]) {\x0d\n    if (entry.name !== name) {\x0d\n      head = head ?? entry;\x0d\n      tail = entry;\x0d\n      continue;\x0d\n    }\x0d\n    if (tail === null) {\x0d\n      continue;\x0d\n    }\x0d\n    tail[kBufferNext] = entry[kBufferNext];\x0d\n    count++;\x0d\n  }\x0d\n  buffer.head = head;\x0d\n  buffer.tail = tail;\x0d\n  buffer.count = count;\x0d\n}\x0d\n\x0d\nfunction filterBufferMapByNameAndType(name\x2C type) {\x0d\n  let bufferList;\x0d\n  if (type === 'mark') {\x0d\n    bufferList = [markEntryBuffer];\x0d\n  } else if (type === 'measure') {\x0d\n    bufferList = [measureEntryBuffer];\x0d\n  } else if (type !== undefined) {\x0d\n    // Unrecognized type;\x0d\n    return [];\x0d\n  } else {\x0d\n    bufferList = [markEntryBuffer\x2C measureEntryBuffer];\x0d\n  }\x0d\n  return ArrayPrototypeFlatMap(bufferList\x2C\x0d\n                               (buffer) => filterBufferByName(buffer\x2C name));\x0d\n}\x0d\n\x0d\nfunction filterBufferByName(buffer\x2C name) {\x0d\n  const arr = [];\x0d\n  for (let entry = buffer.head; entry !== null; entry = entry[kBufferNext]) {\x0d\n    if (name === undefined || entry.name === name) {\x0d\n      ArrayPrototypePush(arr\x2C entry);\x0d\n    }\x0d\n  }\x0d\n  return arr;\x0d\n}\x0d\n\x0d\nfunction observerCallback(name\x2C type\x2C startTime\x2C duration\x2C details) {\x0d\n  const entry =\x0d\n    new InternalPerformanceEntry(\x0d\n      name\x2C\x0d\n      type\x2C\x0d\n      startTime\x2C\x0d\n      duration\x2C\x0d\n      details);\x0d\n\x0d\n  if (details !== undefined) {\x0d\n    // GC\x2C HTTP2\x2C and HTTP PerformanceEntry used additional\x0d\n    // properties directly off the entry. Those have been\x0d\n    // moved into the details property. The existing accessors\x0d\n    // are still included but are deprecated.\x0d\n    entry[kDeprecatedFields] = new SafeMap();\x0d\n\x0d\n    const detailKeys = ObjectKeys(details);\x0d\n    const props = {};\x0d\n    for (let n = 0; n < detailKeys.length; n++) {\x0d\n      const key = detailKeys[n];\x0d\n      entry[kDeprecatedFields].set(key\x2C details[key]);\x0d\n      props[key] = {\x0d\n        configurable: true\x2C\x0d\n        enumerable: true\x2C\x0d\n        get: deprecate(() => {\x0d\n          return entry[kDeprecatedFields].get(key);\x0d\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\x0d\n        set: deprecate((value) => {\x0d\n          entry[kDeprecatedFields].set(key\x2C value);\x0d\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\x0d\n      };\x0d\n    }\x0d\n    ObjectDefineProperties(entry\x2C props);\x0d\n  }\x0d\n\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nsetupObservers(observerCallback);\x0d\n\x0d\nfunction hasObserver(type) {\x0d\n  const observerType = getObserverType(type);\x0d\n  return observerCounts[observerType] > 0;\x0d\n}\x0d\n\x0d\nfunction createBuffer() {\x0d\n  return {\x0d\n    head: null\x2C\x0d\n    tail: null\x2C\x0d\n    count: 0\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction resetBuffer(buffer) {\x0d\n  buffer.head = null;\x0d\n  buffer.tail = null;\x0d\n  buffer.count = 0;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  PerformanceObserver\x2C\x0d\n  PerformanceObserverEntryList\x2C\x0d\n  enqueue\x2C\x0d\n  hasObserver\x2C\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n};\x0d\n
code-source-info,0x1bb8fb2f016,67,12680,12782,C0O12713C3O12713C8O12739C15O12760C20O12775C23O12779,,
code-creation,LazyCompile,10,7469748,0x1bb8fb300ee,43,getObserverType node:internal/perf/observe:117:25,0x3f9d3545028,~
code-source-info,0x1bb8fb300ee,67,2590,2800,C0O2602C26O2634C30O2672C31O2692C35O2733C36O2752C40O2792C42O2799,,
code-creation,LazyCompile,10,7469789,0x1bb8fb3020e,2,get hasSubscribers node:diagnostics_channel:82:21,0x2f65a705750,~
code-source-info,0x1bb8fb3020e,174,2016,2044,C0O2026C1O2039,,
code-creation,LazyCompile,10,7469827,0x1bb8fb302fe,69,assignSocket node:_http_server:239:62,0x2f65a7014b0,~
code-source-info,0x1bb8fb302fe,173,9144,9342,C0O9158C5O9173C11O9158C15O9191C17O9211C21O9229C32O9229C38O9268C40O9280C44O9298C52O9298C58O9330C63O9330C68O9341,,
code-creation,LazyCompile,10,7469888,0x1bb8fb3048e,159,socketListenerWrap node:_http_server:1001:37,0x1bb8fb077b0,~
code-source-info,0x1bb8fb3048e,173,33081,33553,C0O33109C7O33113C12O33120C19O33129C23O33146C37O33146C43O33240C49O33257C53O33267C56O33271C61O33278C66O33288C70O33265C74O33299C78O33318C81O33322C86O33329C91O33339C95O33316C99O33359C103O33382C106O33386C111O33393C116O33403C120O33380C124O33427C126O33438C127O33453C129O33460C136O33477C141O33500C146O33515C151O33500C156O33537C158O33548,,
code-creation,LazyCompile,10,7469967,0x1bb8fb30696,79,_flush node:_http_outgoing:933:51,0x2bdba13be78,~
code-source-info,0x1bb8fb30696,171,27980,28410,C0O28008C5O28021C7O28042C13O28143C18O28143C24O28181C30O28282C35O28282C41O28305C47O28321C49O28320C54O28343C56O28348C60O28360C64O28381C72O28381C78O28409,,
code-creation,LazyCompile,10,7470013,0x1bb8fb30816,48,get node:internal/streams/writable:783:8,0x334252eae18,~
code-source-info,0x1bb8fb30816,56,23447,23844,C0O23474C5O23738C9O23754C15O23763C21O23779C28O23795C35O23818C42O23831C47O23837,,
code-creation,LazyCompile,10,7470074,0x1bb8fb30986,170,_flushOutput node:_http_outgoing:950:63,0x2bdba13bec8,~
code-source-info,0x1bb8fb30986,171,28477,29125,C0O28502C2O28503C4O28502C9O28520C11O28525C19O28533C23O28549C28O28549C32O28491C35O28593C40O28604C45O28615C46O28632C51O28643C52O28660C53O28690C58O28712C63O28712C67O28727C69O28852C71O28857C73O28857C78O28922C80O28932C84O28893C89O28899C94O28909C99O28955C116O28955C122O28874C127O28839C130O29003C135O29003C139O29018C141O29034C145O29048C150O29069C154O29063C157O29048C162O29085C163O29101C167O29111C169O29122,,
code-creation,LazyCompile,10,7470161,0x1bb8fb30b9e,97,get node:_http_incoming:108:16,0x2bdba138108,~
code-source-info,0x1bb8fb30b9e,170,3190,3491,C0O3200C2O3210C4O3209C9O3230C11O3235C15O3245C19O3277C24O3308C26O3313C28O3312C32O3346C34O3351C36O3358C38O3357C41O3351C46O3398C53O3419C56O3416C62O3431C65O3428C75O3398C80O3376C86O3333C89O3464C91O3476C93O3475C96O3486,,
code-creation,LazyCompile,10,7470238,0x1bb8fb30da6,172,_addHeaderLine node:_http_incoming:337:24,0x2bdba137f58,~
code-source-info,0x1bb8fb30da6,170,11931,12628,C0O11957C3O11965C9O12006C16O12006C22O12046C23O12055C30O12069C35O12083C43O12091C50O12158C52O12173C59O12204C61O12209C66O12225C86O12246C92O12216C98O12276C100O12288C106O12314C108O12323C113O12399C119O12442C124O12457C129O12457C136O12491C145O12513C151O12510C157O12538C159O12546C164O12600C166O12612C171O12627,,
code-creation,LazyCompile,10,7470418,0x1bb8fb31bee,743,matchKnownFields node:_http_incoming:231:26,0x2bdba137f08,~
code-source-info,0x1bb8fb31bee
code-creation,LazyCompile,10,7470744,0x1bb8fb321f6,24,app C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\express.js:38:21,0xe498868060,~
code-source-info,0x1bb8fb321f6,139,747,801,C0O770C3O774C17O774C23O800,,
code-creation,LazyCompile,10,7470807,0x1bb8fb32386,106,handle C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:165:29,0x2bdba108280,~
code-source-info,0x1bb8fb32386,144,4043,4365,C0O4086C5O4128C12O4158C17O4179C25O4179C37O4213C42O4213C57O4140C63O4248C67O4267C73O4267C77O4306C80O4318C81O4325C82O4340C99O4340C105O4364,,
code-creation,LazyCompile,10,7470880,0x1bb8fb325b6,55,finalhandler C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\finalhandler\\index.js:77:23,0x2bdba10be10,~
code-source-info,0x1bb8fb325b6,145,1477,2786,C0O1477C13O1512C19O1565C25O1572C29O1580C34O1584C42O1560C44O1656C48O1651C50O1667C54O2784,,
code-creation,LazyCompile,10,7470962,0x1bb8fb329c6,243,handle C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:136:31,0x2bdba123988,~
code-source-info,0x1bb8fb329c6,159,3375,8106,C0O3375C25O3406C27O3406C29O3415C40O3446C48O3458C53O3415C58O3477C59O3477C61O3498C69O3515C74O3498C82O3498C84O3542C86O3542C88O3565C89O3565C91O3585C92O3585C94O3607C95O3607C97O3701C99O3701C101O3747C104O3752C108O3747C110O3816C113O3820C117O3816C119O3846C122O3850C130O3846C132O3878C152O3878C157O3878C159O3951C164O3960C168O4046C171O4054C178O4061C183O4082C191O4094C196O4089C201O4087C203O4266C208O4278C212O4293C218O4315C227O4334C231O4309C235O4342C238O4342C242O8105,,
code-creation,LazyCompile,10,7471054,0x1bb8fb32cce,137,getProtohost C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:546:22,0x2bdba123608,~
code-source-info,0x1bb8fb32cce,159,12690,13063,C0O12700C6O12735C12O12742C18O12754C24O12758C29O12773C30O12789C31O12819C39O12819C45O12851C47O12863C56O12898C61O12927C68O12927C75O12947C83O12948C89O12966C91O12983C96O13000C103O13017C116O13032C120O13017C127O13000C136O13061,,
code-creation,LazyCompile,10,7471121,0x1bb8fb32f0e,120,restore C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:631:17,0x2bdba123748,~
code-source-info,0x1bb8fb32f0e,159,14253,14639,C0O14253C15O14279C19O14299C23O14306C29O14279C34O14279C36O14325C40O14345C44O14352C50O14325C55O14325C57O14374C59O14379C62O14387C66O14379C71O14406C76O14429C79O14426C82O14415C86O14439C97O14458C100O14452C103O14447C107O14396C112O14361C115O14471C119O14637,,
code-creation,LazyCompile,10,7471264,0x1bb8fb331fe,609,next C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:177:16,0x1bb8fb32818,~
code-source-info,0x1bb8fb331fe
code-creation,LazyCompile,10,7471395,0x1bb8fb336ee,29,getPathname C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:537:21,0x2bdba1235b8,~
code-source-info,0x1bb8fb336ee,159,12534,12630,C3O12554C6O12561C11O12574C15O12584C27O12607C28O12624,,
code-creation,LazyCompile,10,7471439,0x1bb8fb3382e,50,parseurl C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:35:19,0x2bdba11d240,~
code-source-info,0x1bb8fb3382e,156,485,806,C0O509C5O516C7O569C8O585C9O610C14O624C17O628C24O685C26O698C27O725C30O734C35O751C37O763C41O772C43O795C49O804,,
code-creation,LazyCompile,10,7471484,0x1bb8fb3394e,35,fresh C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:153:16,0x2bdba11d330,~
code-source-info,0x1bb8fb3394e,156,2638,2808,C0O2659C9O2713C19O2761C24O2794C31O2799C34O2806,,
code-creation,LazyCompile,10,7471553,0x1bb8fb33a8e,252,fastparse C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:95:20,0x2bdba11d2e0,~
code-source-info,0x1bb8fb33a8e,156,1451,2477,C0O1461C6O1496C13O1496C21O1510C26O1534C29O1541C33O1551C34O1574C37O1592C39O1612C41O1785C44O1796C48O1790C53O1827C58O1827C135O1878C139O1926C146O1926C153O1964C160O1976C164O1964C170O2004C175O2004C181O2035C183O2241C186O2248C190O2258C191O1805C196O1772C199O2282C206O2306C215O2328C217O2337C221O2345C223O2354C227O2362C229O2375C233O2389C237O2416C239O2426C243O2438C245O2449C249O2465C251O2475,,
code-creation,LazyCompile,10,7471689,0x1bb8fb33ece,62,Url node:url:60:13,0x1d24e4cf510,~
script-source,86,node:url,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Int8Array\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { toASCII } = require('internal/idna');\x0d\nconst { encodeStr\x2C hexTable } = require('internal/querystring');\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// This ensures setURLConstructor() is called before the native\x0d\n// URL::ToObject() method is used.\x0d\nconst { spliceOne } = require('internal/util');\x0d\n\x0d\n// WHATWG URL implementation provided by internal/url\x0d\nconst {\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  fileURLToPath\x2C\x0d\n  formatSymbol\x2C\x0d\n  pathToFileURL\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n} = require('internal/url');\x0d\n\x0d\n// Original url.parse() API\x0d\n\x0d\nfunction Url() {\x0d\n  this.protocol = null;\x0d\n  this.slashes = null;\x0d\n  this.auth = null;\x0d\n  this.host = null;\x0d\n  this.port = null;\x0d\n  this.hostname = null;\x0d\n  this.hash = null;\x0d\n  this.search = null;\x0d\n  this.query = null;\x0d\n  this.pathname = null;\x0d\n  this.path = null;\x0d\n  this.href = null;\x0d\n}\x0d\n\x0d\n// Reference: RFC 3986\x2C RFC 1808\x2C RFC 2396\x0d\n\x0d\n// define these here so at least they only have to be\x0d\n// compiled once on the first module load.\x0d\nconst protocolPattern = /^[a-z0-9.+-]+:/i;\x0d\nconst portPattern = /:[0-9]*$/;\x0d\nconst hostPattern = /^\\/\\/[^@/]+@[^@/]+/;\x0d\n\x0d\n// Special case for a simple path URL\x0d\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/;\x0d\n\x0d\nconst hostnameMaxLen = 255;\x0d\n// Protocols that can allow "unsafe" and "unwise" chars.\x0d\nconst unsafeProtocol = new SafeSet([\x0d\n  'javascript'\x2C\x0d\n  'javascript:'\x2C\x0d\n]);\x0d\n// Protocols that never have a hostname.\x0d\nconst hostlessProtocol = new SafeSet([\x0d\n  'javascript'\x2C\x0d\n  'javascript:'\x2C\x0d\n]);\x0d\n// Protocols that always contain a // bit.\x0d\nconst slashedProtocol = new SafeSet([\x0d\n  'http'\x2C\x0d\n  'http:'\x2C\x0d\n  'https'\x2C\x0d\n  'https:'\x2C\x0d\n  'ftp'\x2C\x0d\n  'ftp:'\x2C\x0d\n  'gopher'\x2C\x0d\n  'gopher:'\x2C\x0d\n  'file'\x2C\x0d\n  'file:'\x2C\x0d\n  'ws'\x2C\x0d\n  'ws:'\x2C\x0d\n  'wss'\x2C\x0d\n  'wss:'\x2C\x0d\n]);\x0d\nconst {\x0d\n  CHAR_SPACE\x2C\x0d\n  CHAR_TAB\x2C\x0d\n  CHAR_CARRIAGE_RETURN\x2C\x0d\n  CHAR_LINE_FEED\x2C\x0d\n  CHAR_FORM_FEED\x2C\x0d\n  CHAR_NO_BREAK_SPACE\x2C\x0d\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\x2C\x0d\n  CHAR_HASH\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LEFT_SQUARE_BRACKET\x2C\x0d\n  CHAR_RIGHT_SQUARE_BRACKET\x2C\x0d\n  CHAR_LEFT_ANGLE_BRACKET\x2C\x0d\n  CHAR_RIGHT_ANGLE_BRACKET\x2C\x0d\n  CHAR_LEFT_CURLY_BRACKET\x2C\x0d\n  CHAR_RIGHT_CURLY_BRACKET\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_0\x2C\x0d\n  CHAR_9\x2C\x0d\n  CHAR_HYPHEN_MINUS\x2C\x0d\n  CHAR_PLUS\x2C\x0d\n  CHAR_UNDERSCORE\x2C\x0d\n  CHAR_DOUBLE_QUOTE\x2C\x0d\n  CHAR_SINGLE_QUOTE\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_SEMICOLON\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_CIRCUMFLEX_ACCENT\x2C\x0d\n  CHAR_GRAVE_ACCENT\x2C\x0d\n  CHAR_VERTICAL_LINE\x2C\x0d\n  CHAR_AT\x2C\x0d\n} = require('internal/constants');\x0d\n\x0d\nfunction urlParse(url\x2C parseQueryString\x2C slashesDenoteHost) {\x0d\n  if (url instanceof Url) return url;\x0d\n\x0d\n  const urlObject = new Url();\x0d\n  urlObject.parse(url\x2C parseQueryString\x2C slashesDenoteHost);\x0d\n  return urlObject;\x0d\n}\x0d\n\x0d\nfunction isIpv6Hostname(hostname) {\x0d\n  return (\x0d\n    StringPrototypeCharCodeAt(hostname\x2C 0) === CHAR_LEFT_SQUARE_BRACKET &&\x0d\n    StringPrototypeCharCodeAt(hostname\x2C hostname.length - 1) ===\x0d\n    CHAR_RIGHT_SQUARE_BRACKET\x0d\n  );\x0d\n}\x0d\n\x0d\nUrl.prototype.parse = function parse(url\x2C parseQueryString\x2C slashesDenoteHost) {\x0d\n  validateString(url\x2C 'url');\x0d\n\x0d\n  // Copy chrome\x2C IE\x2C opera backslash-handling behavior.\x0d\n  // Back slashes before the query string get converted to forward slashes\x0d\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\x0d\n  let hasHash = false;\x0d\n  let start = -1;\x0d\n  let end = -1;\x0d\n  let rest = '';\x0d\n  let lastPos = 0;\x0d\n  for (let i = 0\x2C inWs = false\x2C split = false; i < url.length; ++i) {\x0d\n    const code = url.charCodeAt(i);\x0d\n\x0d\n    // Find first and last non-whitespace characters for trimming\x0d\n    const isWs = code === CHAR_SPACE ||\x0d\n                 code === CHAR_TAB ||\x0d\n                 code === CHAR_CARRIAGE_RETURN ||\x0d\n                 code === CHAR_LINE_FEED ||\x0d\n                 code === CHAR_FORM_FEED ||\x0d\n                 code === CHAR_NO_BREAK_SPACE ||\x0d\n                 code === CHAR_ZERO_WIDTH_NOBREAK_SPACE;\x0d\n    if (start === -1) {\x0d\n      if (isWs)\x0d\n        continue;\x0d\n      lastPos = start = i;\x0d\n    } else if (inWs) {\x0d\n      if (!isWs) {\x0d\n        end = -1;\x0d\n        inWs = false;\x0d\n      }\x0d\n    } else if (isWs) {\x0d\n      end = i;\x0d\n      inWs = true;\x0d\n    }\x0d\n\x0d\n    // Only convert backslashes while we haven't seen a split character\x0d\n    if (!split) {\x0d\n      switch (code) {\x0d\n        case CHAR_HASH:\x0d\n          hasHash = true;\x0d\n        // Fall through\x0d\n        case CHAR_QUESTION_MARK:\x0d\n          split = true;\x0d\n          break;\x0d\n        case CHAR_BACKWARD_SLASH:\x0d\n          if (i - lastPos > 0)\x0d\n            rest += url.slice(lastPos\x2C i);\x0d\n          rest += '/';\x0d\n          lastPos = i + 1;\x0d\n          break;\x0d\n      }\x0d\n    } else if (!hasHash && code === CHAR_HASH) {\x0d\n      hasHash = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Check if string was non-empty (including strings with only whitespace)\x0d\n  if (start !== -1) {\x0d\n    if (lastPos === start) {\x0d\n      // We didn't convert any backslashes\x0d\n\x0d\n      if (end === -1) {\x0d\n        if (start === 0)\x0d\n          rest = url;\x0d\n        else\x0d\n          rest = url.slice(start);\x0d\n      } else {\x0d\n        rest = url.slice(start\x2C end);\x0d\n      }\x0d\n    } else if (end === -1 && lastPos < url.length) {\x0d\n      // We converted some backslashes and have only part of the entire string\x0d\n      rest += url.slice(lastPos);\x0d\n    } else if (end !== -1 && lastPos < end) {\x0d\n      // We converted some backslashes and have only part of the entire string\x0d\n      rest += url.slice(lastPos\x2C end);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!slashesDenoteHost && !hasHash) {\x0d\n    // Try fast path regexp\x0d\n    const simplePath = simplePathPattern.exec(rest);\x0d\n    if (simplePath) {\x0d\n      this.path = rest;\x0d\n      this.href = rest;\x0d\n      this.pathname = simplePath[1];\x0d\n      if (simplePath[2]) {\x0d\n        this.search = simplePath[2];\x0d\n        if (parseQueryString) {\x0d\n          this.query = querystring.parse(this.search.slice(1));\x0d\n        } else {\x0d\n          this.query = this.search.slice(1);\x0d\n        }\x0d\n      } else if (parseQueryString) {\x0d\n        this.search = null;\x0d\n        this.query = ObjectCreate(null);\x0d\n      }\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let proto = protocolPattern.exec(rest);\x0d\n  let lowerProto;\x0d\n  if (proto) {\x0d\n    proto = proto[0];\x0d\n    lowerProto = proto.toLowerCase();\x0d\n    this.protocol = lowerProto;\x0d\n    rest = rest.slice(proto.length);\x0d\n  }\x0d\n\x0d\n  // Figure out if it's got a host\x0d\n  // user@server is *always* interpreted as a hostname\x2C and url\x0d\n  // resolution will treat //foo/bar as host=foo\x2Cpath=bar because that's\x0d\n  // how the browser resolves relative URLs.\x0d\n  let slashes;\x0d\n  if (slashesDenoteHost || proto || hostPattern.test(rest)) {\x0d\n    slashes = rest.charCodeAt(0) === CHAR_FORWARD_SLASH &&\x0d\n              rest.charCodeAt(1) === CHAR_FORWARD_SLASH;\x0d\n    if (slashes && !(proto && hostlessProtocol.has(lowerProto))) {\x0d\n      rest = rest.slice(2);\x0d\n      this.slashes = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!hostlessProtocol.has(lowerProto) &&\x0d\n      (slashes || (proto && !slashedProtocol.has(proto)))) {\x0d\n\x0d\n    // there's a hostname.\x0d\n    // the first instance of /\x2C ?\x2C ;\x2C or # ends the host.\x0d\n    //\x0d\n    // If there is an @ in the hostname\x2C then non-host chars *are* allowed\x0d\n    // to the left of the last @ sign\x2C unless some host-ending character\x0d\n    // comes *before* the @-sign.\x0d\n    // URLs are obnoxious.\x0d\n    //\x0d\n    // ex:\x0d\n    // http://a@b@c/ => user:a@b host:c\x0d\n    // http://a@b?@c => user:a host:b path:/?@c\x0d\n\x0d\n    let hostEnd = -1;\x0d\n    let atSign = -1;\x0d\n    let nonHost = -1;\x0d\n    for (let i = 0; i < rest.length; ++i) {\x0d\n      switch (rest.charCodeAt(i)) {\x0d\n        case CHAR_TAB:\x0d\n        case CHAR_LINE_FEED:\x0d\n        case CHAR_CARRIAGE_RETURN:\x0d\n        case CHAR_SPACE:\x0d\n        case CHAR_DOUBLE_QUOTE:\x0d\n        case CHAR_PERCENT:\x0d\n        case CHAR_SINGLE_QUOTE:\x0d\n        case CHAR_SEMICOLON:\x0d\n        case CHAR_LEFT_ANGLE_BRACKET:\x0d\n        case CHAR_RIGHT_ANGLE_BRACKET:\x0d\n        case CHAR_BACKWARD_SLASH:\x0d\n        case CHAR_CIRCUMFLEX_ACCENT:\x0d\n        case CHAR_GRAVE_ACCENT:\x0d\n        case CHAR_LEFT_CURLY_BRACKET:\x0d\n        case CHAR_VERTICAL_LINE:\x0d\n        case CHAR_RIGHT_CURLY_BRACKET:\x0d\n          // Characters that are never ever allowed in a hostname from RFC 2396\x0d\n          if (nonHost === -1)\x0d\n            nonHost = i;\x0d\n          break;\x0d\n        case CHAR_HASH:\x0d\n        case CHAR_FORWARD_SLASH:\x0d\n        case CHAR_QUESTION_MARK:\x0d\n          // Find the first instance of any host-ending characters\x0d\n          if (nonHost === -1)\x0d\n            nonHost = i;\x0d\n          hostEnd = i;\x0d\n          break;\x0d\n        case CHAR_AT:\x0d\n          // At this point\x2C either we have an explicit point where the\x0d\n          // auth portion cannot go past\x2C or the last @ char is the decider.\x0d\n          atSign = i;\x0d\n          nonHost = -1;\x0d\n          break;\x0d\n      }\x0d\n      if (hostEnd !== -1)\x0d\n        break;\x0d\n    }\x0d\n    start = 0;\x0d\n    if (atSign !== -1) {\x0d\n      this.auth = decodeURIComponent(rest.slice(0\x2C atSign));\x0d\n      start = atSign + 1;\x0d\n    }\x0d\n    if (nonHost === -1) {\x0d\n      this.host = rest.slice(start);\x0d\n      rest = '';\x0d\n    } else {\x0d\n      this.host = rest.slice(start\x2C nonHost);\x0d\n      rest = rest.slice(nonHost);\x0d\n    }\x0d\n\x0d\n    // pull out port.\x0d\n    this.parseHost();\x0d\n\x0d\n    // We've indicated that there is a hostname\x2C\x0d\n    // so even if it's empty\x2C it has to be present.\x0d\n    if (typeof this.hostname !== 'string')\x0d\n      this.hostname = '';\x0d\n\x0d\n    const hostname = this.hostname;\x0d\n\x0d\n    // If hostname begins with [ and ends with ]\x0d\n    // assume that it's an IPv6 address.\x0d\n    const ipv6Hostname = isIpv6Hostname(hostname);\x0d\n\x0d\n    // validate a little.\x0d\n    if (!ipv6Hostname) {\x0d\n      rest = getHostname(this\x2C rest\x2C hostname);\x0d\n    }\x0d\n\x0d\n    if (this.hostname.length > hostnameMaxLen) {\x0d\n      this.hostname = '';\x0d\n    } else {\x0d\n      // Hostnames are always lower case.\x0d\n      this.hostname = this.hostname.toLowerCase();\x0d\n    }\x0d\n\x0d\n    if (!ipv6Hostname) {\x0d\n      // IDNA Support: Returns a punycoded representation of "domain".\x0d\n      // It only converts parts of the domain name that\x0d\n      // have non-ASCII characters\x2C i.e. it doesn't matter if\x0d\n      // you call it with a domain that already is ASCII-only.\x0d\n\x0d\n      // Use lenient mode (`true`) to try to support even non-compliant\x0d\n      // URLs.\x0d\n      this.hostname = toASCII(this.hostname\x2C true);\x0d\n    }\x0d\n\x0d\n    const p = this.port ? ':' + this.port : '';\x0d\n    const h = this.hostname || '';\x0d\n    this.host = h + p;\x0d\n\x0d\n    // strip [ and ] from the hostname\x0d\n    // the host field still retains them\x2C though\x0d\n    if (ipv6Hostname) {\x0d\n      this.hostname = this.hostname.slice(1\x2C -1);\x0d\n      if (rest[0] !== '/') {\x0d\n        rest = '/' + rest;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Now rest is set to the post-host stuff.\x0d\n  // Chop off any delim chars.\x0d\n  if (!unsafeProtocol.has(lowerProto)) {\x0d\n    // First\x2C make 100% sure that any "autoEscape" chars get\x0d\n    // escaped\x2C even if encodeURIComponent doesn't think they\x0d\n    // need to be.\x0d\n    rest = autoEscapeStr(rest);\x0d\n  }\x0d\n\x0d\n  let questionIdx = -1;\x0d\n  let hashIdx = -1;\x0d\n  for (let i = 0; i < rest.length; ++i) {\x0d\n    const code = rest.charCodeAt(i);\x0d\n    if (code === CHAR_HASH) {\x0d\n      this.hash = rest.slice(i);\x0d\n      hashIdx = i;\x0d\n      break;\x0d\n    } else if (code === CHAR_QUESTION_MARK && questionIdx === -1) {\x0d\n      questionIdx = i;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (questionIdx !== -1) {\x0d\n    if (hashIdx === -1) {\x0d\n      this.search = rest.slice(questionIdx);\x0d\n      this.query = rest.slice(questionIdx + 1);\x0d\n    } else {\x0d\n      this.search = rest.slice(questionIdx\x2C hashIdx);\x0d\n      this.query = rest.slice(questionIdx + 1\x2C hashIdx);\x0d\n    }\x0d\n    if (parseQueryString) {\x0d\n      this.query = querystring.parse(this.query);\x0d\n    }\x0d\n  } else if (parseQueryString) {\x0d\n    // No query string\x2C but parseQueryString still requested\x0d\n    this.search = null;\x0d\n    this.query = ObjectCreate(null);\x0d\n  }\x0d\n\x0d\n  const useQuestionIdx =\x0d\n    questionIdx !== -1 && (hashIdx === -1 || questionIdx < hashIdx);\x0d\n  const firstIdx = useQuestionIdx ? questionIdx : hashIdx;\x0d\n  if (firstIdx === -1) {\x0d\n    if (rest.length > 0)\x0d\n      this.pathname = rest;\x0d\n  } else if (firstIdx > 0) {\x0d\n    this.pathname = rest.slice(0\x2C firstIdx);\x0d\n  }\x0d\n  if (slashedProtocol.has(lowerProto) &&\x0d\n      this.hostname && !this.pathname) {\x0d\n    this.pathname = '/';\x0d\n  }\x0d\n\x0d\n  // To support http.request\x0d\n  if (this.pathname || this.search) {\x0d\n    const p = this.pathname || '';\x0d\n    const s = this.search || '';\x0d\n    this.path = p + s;\x0d\n  }\x0d\n\x0d\n  // Finally\x2C reconstruct the href based on what has been validated.\x0d\n  this.href = this.format();\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction getHostname(self\x2C rest\x2C hostname) {\x0d\n  for (let i = 0; i < hostname.length; ++i) {\x0d\n    const code = hostname.charCodeAt(i);\x0d\n    const isValid = (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z) ||\x0d\n                    code === CHAR_DOT ||\x0d\n                    (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n                    (code >= CHAR_0 && code <= CHAR_9) ||\x0d\n                    code === CHAR_HYPHEN_MINUS ||\x0d\n                    code === CHAR_PLUS ||\x0d\n                    code === CHAR_UNDERSCORE ||\x0d\n                    code > 127;\x0d\n\x0d\n    // Invalid host character\x0d\n    if (!isValid) {\x0d\n      self.hostname = hostname.slice(0\x2C i);\x0d\n      return `/${hostname.slice(i)}${rest}`;\x0d\n    }\x0d\n  }\x0d\n  return rest;\x0d\n}\x0d\n\x0d\n// Escaped characters. Use empty strings to fill up unused entries.\x0d\n// Using Array is faster than Object/Map\x0d\nconst escapedCodes = [\x0d\n  /* 0 - 9 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '%09'\x2C\x0d\n  /* 10 - 19 */ '%0A'\x2C ''\x2C ''\x2C '%0D'\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 20 - 29 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 30 - 39 */ ''\x2C ''\x2C '%20'\x2C ''\x2C '%22'\x2C ''\x2C ''\x2C ''\x2C ''\x2C '%27'\x2C\x0d\n  /* 40 - 49 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 50 - 59 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 60 - 69 */ '%3C'\x2C ''\x2C '%3E'\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 70 - 79 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 80 - 89 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 90 - 99 */ ''\x2C ''\x2C '%5C'\x2C ''\x2C '%5E'\x2C ''\x2C '%60'\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 100 - 109 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 110 - 119 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 120 - 125 */ ''\x2C ''\x2C ''\x2C '%7B'\x2C '%7C'\x2C '%7D'\x2C\x0d\n];\x0d\n\x0d\n// Automatically escape all delimiters and unwise characters from RFC 2396.\x0d\n// Also escape single quotes in case of an XSS attack.\x0d\n// Return the escaped string.\x0d\nfunction autoEscapeStr(rest) {\x0d\n  let escaped = '';\x0d\n  let lastEscapedPos = 0;\x0d\n  for (let i = 0; i < rest.length; ++i) {\x0d\n    // `escaped` contains substring up to the last escaped character.\x0d\n    const escapedChar = escapedCodes[rest.charCodeAt(i)];\x0d\n    if (escapedChar) {\x0d\n      // Concat if there are ordinary characters in the middle.\x0d\n      if (i > lastEscapedPos)\x0d\n        escaped += rest.slice(lastEscapedPos\x2C i);\x0d\n      escaped += escapedChar;\x0d\n      lastEscapedPos = i + 1;\x0d\n    }\x0d\n  }\x0d\n  if (lastEscapedPos === 0)  // Nothing has been escaped.\x0d\n    return rest;\x0d\n\x0d\n  // There are ordinary characters at the end.\x0d\n  if (lastEscapedPos < rest.length)\x0d\n    escaped += rest.slice(lastEscapedPos);\x0d\n\x0d\n  return escaped;\x0d\n}\x0d\n\x0d\n// Format a parsed object into a url string\x0d\nfunction urlFormat(urlObject\x2C options) {\x0d\n  // Ensure it's an object\x2C and not a string url.\x0d\n  // If it's an object\x2C this is a no-op.\x0d\n  // this way\x2C you can call urlParse() on strings\x0d\n  // to clean up potentially wonky urls.\x0d\n  if (typeof urlObject === 'string') {\x0d\n    urlObject = urlParse(urlObject);\x0d\n  } else if (typeof urlObject !== 'object' || urlObject === null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('urlObject'\x2C\x0d\n                                   ['Object'\x2C 'string']\x2C urlObject);\x0d\n  } else if (!(urlObject instanceof Url)) {\x0d\n    const format = urlObject[formatSymbol];\x0d\n    return format ?\x0d\n      format.call(urlObject\x2C options) :\x0d\n      Url.prototype.format.call(urlObject);\x0d\n  }\x0d\n  return urlObject.format();\x0d\n}\x0d\n\x0d\n// These characters do not need escaping:\x0d\n// ! - . _ ~\x0d\n// ' ( ) * :\x0d\n// digits\x0d\n// alpha (uppercase)\x0d\n// alpha (lowercase)\x0d\nconst noEscapeAuth = new Int8Array([\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\nUrl.prototype.format = function format() {\x0d\n  let auth = this.auth || '';\x0d\n  if (auth) {\x0d\n    auth = encodeStr(auth\x2C noEscapeAuth\x2C hexTable);\x0d\n    auth += '@';\x0d\n  }\x0d\n\x0d\n  let protocol = this.protocol || '';\x0d\n  let pathname = this.pathname || '';\x0d\n  let hash = this.hash || '';\x0d\n  let host = '';\x0d\n  let query = '';\x0d\n\x0d\n  if (this.host) {\x0d\n    host = auth + this.host;\x0d\n  } else if (this.hostname) {\x0d\n    host = auth + (\x0d\n      this.hostname.includes(':') && !isIpv6Hostname(this.hostname) ?\x0d\n        '[' + this.hostname + ']' :\x0d\n        this.hostname\x0d\n    );\x0d\n    if (this.port) {\x0d\n      host += ':' + this.port;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this.query !== null && typeof this.query === 'object') {\x0d\n    query = querystring.stringify(this.query);\x0d\n  }\x0d\n\x0d\n  let search = this.search || (query && ('?' + query)) || '';\x0d\n\x0d\n  if (protocol && protocol.charCodeAt(protocol.length - 1) !== 58/* : */)\x0d\n    protocol += ':';\x0d\n\x0d\n  let newPathname = '';\x0d\n  let lastPos = 0;\x0d\n  for (let i = 0; i < pathname.length; ++i) {\x0d\n    switch (pathname.charCodeAt(i)) {\x0d\n      case CHAR_HASH:\x0d\n        if (i - lastPos > 0)\x0d\n          newPathname += pathname.slice(lastPos\x2C i);\x0d\n        newPathname += '%23';\x0d\n        lastPos = i + 1;\x0d\n        break;\x0d\n      case CHAR_QUESTION_MARK:\x0d\n        if (i - lastPos > 0)\x0d\n          newPathname += pathname.slice(lastPos\x2C i);\x0d\n        newPathname += '%3F';\x0d\n        lastPos = i + 1;\x0d\n        break;\x0d\n    }\x0d\n  }\x0d\n  if (lastPos > 0) {\x0d\n    if (lastPos !== pathname.length)\x0d\n      pathname = newPathname + pathname.slice(lastPos);\x0d\n    else\x0d\n      pathname = newPathname;\x0d\n  }\x0d\n\x0d\n  // Only the slashedProtocols get the //.  Not mailto:\x2C xmpp:\x2C etc.\x0d\n  // unless they had them to begin with.\x0d\n  if (this.slashes || slashedProtocol.has(protocol)) {\x0d\n    if (this.slashes || host) {\x0d\n      if (pathname && pathname.charCodeAt(0) !== CHAR_FORWARD_SLASH)\x0d\n        pathname = '/' + pathname;\x0d\n      host = '//' + host;\x0d\n    } else if (protocol.length >= 4 &&\x0d\n               protocol.charCodeAt(0) === 102/* f */ &&\x0d\n               protocol.charCodeAt(1) === 105/* i */ &&\x0d\n               protocol.charCodeAt(2) === 108/* l */ &&\x0d\n               protocol.charCodeAt(3) === 101/* e */) {\x0d\n      host = '//';\x0d\n    }\x0d\n  }\x0d\n\x0d\n  search = search.replace(/#/g\x2C '%23');\x0d\n\x0d\n  if (hash && hash.charCodeAt(0) !== CHAR_HASH)\x0d\n    hash = '#' + hash;\x0d\n  if (search && search.charCodeAt(0) !== CHAR_QUESTION_MARK)\x0d\n    search = '?' + search;\x0d\n\x0d\n  return protocol + host + pathname + search + hash;\x0d\n};\x0d\n\x0d\nfunction urlResolve(source\x2C relative) {\x0d\n  return urlParse(source\x2C false\x2C true).resolve(relative);\x0d\n}\x0d\n\x0d\nUrl.prototype.resolve = function resolve(relative) {\x0d\n  return this.resolveObject(urlParse(relative\x2C false\x2C true)).format();\x0d\n};\x0d\n\x0d\nfunction urlResolveObject(source\x2C relative) {\x0d\n  if (!source) return relative;\x0d\n  return urlParse(source\x2C false\x2C true).resolveObject(relative);\x0d\n}\x0d\n\x0d\nUrl.prototype.resolveObject = function resolveObject(relative) {\x0d\n  if (typeof relative === 'string') {\x0d\n    const rel = new Url();\x0d\n    rel.parse(relative\x2C false\x2C true);\x0d\n    relative = rel;\x0d\n  }\x0d\n\x0d\n  const result = new Url();\x0d\n  const tkeys = ObjectKeys(this);\x0d\n  for (let tk = 0; tk < tkeys.length; tk++) {\x0d\n    const tkey = tkeys[tk];\x0d\n    result[tkey] = this[tkey];\x0d\n  }\x0d\n\x0d\n  // Hash is always overridden\x2C no matter what.\x0d\n  // even href="" will remove it.\x0d\n  result.hash = relative.hash;\x0d\n\x0d\n  // If the relative url is empty\x2C then there's nothing left to do here.\x0d\n  if (relative.href === '') {\x0d\n    result.href = result.format();\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  // Hrefs like //foo/bar always cut to the protocol.\x0d\n  if (relative.slashes && !relative.protocol) {\x0d\n    // Take everything except the protocol from relative\x0d\n    const rkeys = ObjectKeys(relative);\x0d\n    for (let rk = 0; rk < rkeys.length; rk++) {\x0d\n      const rkey = rkeys[rk];\x0d\n      if (rkey !== 'protocol')\x0d\n        result[rkey] = relative[rkey];\x0d\n    }\x0d\n\x0d\n    // urlParse appends trailing / to urls like http://www.example.com\x0d\n    if (slashedProtocol.has(result.protocol) &&\x0d\n        result.hostname && !result.pathname) {\x0d\n      result.path = result.pathname = '/';\x0d\n    }\x0d\n\x0d\n    result.href = result.format();\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  if (relative.protocol && relative.protocol !== result.protocol) {\x0d\n    // If it's a known url protocol\x2C then changing\x0d\n    // the protocol does weird things\x0d\n    // first\x2C if it's not file:\x2C then we MUST have a host\x2C\x0d\n    // and if there was a path\x0d\n    // to begin with\x2C then we MUST have a path.\x0d\n    // if it is file:\x2C then the host is dropped\x2C\x0d\n    // because that's known to be hostless.\x0d\n    // anything else is assumed to be absolute.\x0d\n    if (!slashedProtocol.has(relative.protocol)) {\x0d\n      const keys = ObjectKeys(relative);\x0d\n      for (let v = 0; v < keys.length; v++) {\x0d\n        const k = keys[v];\x0d\n        result[k] = relative[k];\x0d\n      }\x0d\n      result.href = result.format();\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    result.protocol = relative.protocol;\x0d\n    if (!relative.host &&\x0d\n        !/^file:?$/.test(relative.protocol) &&\x0d\n        !hostlessProtocol.has(relative.protocol)) {\x0d\n      const relPath = (relative.pathname || '').split('/');\x0d\n      while (relPath.length && !(relative.host = relPath.shift()));\x0d\n      if (!relative.host) relative.host = '';\x0d\n      if (!relative.hostname) relative.hostname = '';\x0d\n      if (relPath[0] !== '') relPath.unshift('');\x0d\n      if (relPath.length < 2) relPath.unshift('');\x0d\n      result.pathname = relPath.join('/');\x0d\n    } else {\x0d\n      result.pathname = relative.pathname;\x0d\n    }\x0d\n    result.search = relative.search;\x0d\n    result.query = relative.query;\x0d\n    result.host = relative.host || '';\x0d\n    result.auth = relative.auth;\x0d\n    result.hostname = relative.hostname || relative.host;\x0d\n    result.port = relative.port;\x0d\n    // To support http.request\x0d\n    if (result.pathname || result.search) {\x0d\n      const p = result.pathname || '';\x0d\n      const s = result.search || '';\x0d\n      result.path = p + s;\x0d\n    }\x0d\n    result.slashes = result.slashes || relative.slashes;\x0d\n    result.href = result.format();\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  const isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/');\x0d\n  const isRelAbs = (\x0d\n    relative.host || (relative.pathname && relative.pathname.charAt(0) === '/')\x0d\n  );\x0d\n  let mustEndAbs = (isRelAbs || isSourceAbs ||\x0d\n                    (result.host && relative.pathname));\x0d\n  const removeAllDots = mustEndAbs;\x0d\n  let srcPath = (result.pathname && result.pathname.split('/')) || [];\x0d\n  const relPath = (relative.pathname && relative.pathname.split('/')) || [];\x0d\n  const noLeadingSlashes = result.protocol &&\x0d\n      !slashedProtocol.has(result.protocol);\x0d\n\x0d\n  // If the url is a non-slashed url\x2C then relative\x0d\n  // links like ../.. should be able\x0d\n  // to crawl up to the hostname\x2C as well.  This is strange.\x0d\n  // result.protocol has already been set by now.\x0d\n  // Later on\x2C put the first path part into the host field.\x0d\n  if (noLeadingSlashes) {\x0d\n    result.hostname = '';\x0d\n    result.port = null;\x0d\n    if (result.host) {\x0d\n      if (srcPath[0] === '') srcPath[0] = result.host;\x0d\n      else srcPath.unshift(result.host);\x0d\n    }\x0d\n    result.host = '';\x0d\n    if (relative.protocol) {\x0d\n      relative.hostname = null;\x0d\n      relative.port = null;\x0d\n      result.auth = null;\x0d\n      if (relative.host) {\x0d\n        if (relPath[0] === '') relPath[0] = relative.host;\x0d\n        else relPath.unshift(relative.host);\x0d\n      }\x0d\n      relative.host = null;\x0d\n    }\x0d\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\x0d\n  }\x0d\n\x0d\n  if (isRelAbs) {\x0d\n    // it's absolute.\x0d\n    if (relative.host || relative.host === '') {\x0d\n      if (result.host !== relative.host) result.auth = null;\x0d\n      result.host = relative.host;\x0d\n      result.port = relative.port;\x0d\n    }\x0d\n    if (relative.hostname || relative.hostname === '') {\x0d\n      if (result.hostname !== relative.hostname) result.auth = null;\x0d\n      result.hostname = relative.hostname;\x0d\n    }\x0d\n    result.search = relative.search;\x0d\n    result.query = relative.query;\x0d\n    srcPath = relPath;\x0d\n    // Fall through to the dot-handling below.\x0d\n  } else if (relPath.length) {\x0d\n    // it's relative\x0d\n    // throw away the existing file\x2C and take the new path instead.\x0d\n    if (!srcPath) srcPath = [];\x0d\n    srcPath.pop();\x0d\n    srcPath = srcPath.concat(relPath);\x0d\n    result.search = relative.search;\x0d\n    result.query = relative.query;\x0d\n  } else if (relative.search !== null && relative.search !== undefined) {\x0d\n    // Just pull out the search.\x0d\n    // like href='?foo'.\x0d\n    // Put this after the other two cases because it simplifies the booleans\x0d\n    if (noLeadingSlashes) {\x0d\n      result.hostname = result.host = srcPath.shift();\x0d\n      // Occasionally the auth can get stuck only in host.\x0d\n      // This especially happens in cases like\x0d\n      // url.resolveObject('mailto:local1@domain1'\x2C 'local2@domain2')\x0d\n      const authInHost =\x0d\n        result.host && result.host.indexOf('@') > 0 && result.host.split('@');\x0d\n      if (authInHost) {\x0d\n        result.auth = authInHost.shift();\x0d\n        result.host = result.hostname = authInHost.shift();\x0d\n      }\x0d\n    }\x0d\n    result.search = relative.search;\x0d\n    result.query = relative.query;\x0d\n    // To support http.request\x0d\n    if (result.pathname !== null || result.search !== null) {\x0d\n      result.path = (result.pathname ? result.pathname : '') +\x0d\n                    (result.search ? result.search : '');\x0d\n    }\x0d\n    result.href = result.format();\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  if (!srcPath.length) {\x0d\n    // No path at all. All other things were already handled above.\x0d\n    result.pathname = null;\x0d\n    // To support http.request\x0d\n    if (result.search) {\x0d\n      result.path = '/' + result.search;\x0d\n    } else {\x0d\n      result.path = null;\x0d\n    }\x0d\n    result.href = result.format();\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  // If a url ENDs in . or ..\x2C then it must get a trailing slash.\x0d\n  // however\x2C if it ends in anything else non-slashy\x2C\x0d\n  // then it must NOT get a trailing slash.\x0d\n  let last = srcPath.slice(-1)[0];\x0d\n  const hasTrailingSlash = (\x0d\n    ((result.host || relative.host || srcPath.length > 1) &&\x0d\n    (last === '.' || last === '..')) || last === '');\x0d\n\x0d\n  // Strip single dots\x2C resolve double dots to parent dir\x0d\n  // if the path tries to go above the root\x2C `up` ends up > 0\x0d\n  let up = 0;\x0d\n  for (let i = srcPath.length - 1; i >= 0; i--) {\x0d\n    last = srcPath[i];\x0d\n    if (last === '.') {\x0d\n      spliceOne(srcPath\x2C i);\x0d\n    } else if (last === '..') {\x0d\n      spliceOne(srcPath\x2C i);\x0d\n      up++;\x0d\n    } else if (up) {\x0d\n      spliceOne(srcPath\x2C i);\x0d\n      up--;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the path is allowed to go above the root\x2C restore leading ..s\x0d\n  if (!mustEndAbs && !removeAllDots) {\x0d\n    while (up--) {\x0d\n      srcPath.unshift('..');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (mustEndAbs && srcPath[0] !== '' &&\x0d\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\x0d\n    srcPath.unshift('');\x0d\n  }\x0d\n\x0d\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\x0d\n    srcPath.push('');\x0d\n  }\x0d\n\x0d\n  const isAbsolute = srcPath[0] === '' ||\x0d\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\x0d\n\x0d\n  // put the host back\x0d\n  if (noLeadingSlashes) {\x0d\n    result.hostname =\x0d\n      result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\x0d\n    // Occasionally the auth can get stuck only in host.\x0d\n    // This especially happens in cases like\x0d\n    // url.resolveObject('mailto:local1@domain1'\x2C 'local2@domain2')\x0d\n    const authInHost = result.host && result.host.indexOf('@') > 0 ?\x0d\n      result.host.split('@') : false;\x0d\n    if (authInHost) {\x0d\n      result.auth = authInHost.shift();\x0d\n      result.host = result.hostname = authInHost.shift();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\x0d\n\x0d\n  if (mustEndAbs && !isAbsolute) {\x0d\n    srcPath.unshift('');\x0d\n  }\x0d\n\x0d\n  if (!srcPath.length) {\x0d\n    result.pathname = null;\x0d\n    result.path = null;\x0d\n  } else {\x0d\n    result.pathname = srcPath.join('/');\x0d\n  }\x0d\n\x0d\n  // To support request.http\x0d\n  if (result.pathname !== null || result.search !== null) {\x0d\n    result.path = (result.pathname ? result.pathname : '') +\x0d\n                  (result.search ? result.search : '');\x0d\n  }\x0d\n  result.auth = relative.auth || result.auth;\x0d\n  result.slashes = result.slashes || relative.slashes;\x0d\n  result.href = result.format();\x0d\n  return result;\x0d\n};\x0d\n\x0d\nUrl.prototype.parseHost = function parseHost() {\x0d\n  let host = this.host;\x0d\n  let port = portPattern.exec(host);\x0d\n  if (port) {\x0d\n    port = port[0];\x0d\n    if (port !== ':') {\x0d\n      this.port = port.slice(1);\x0d\n    }\x0d\n    host = host.slice(0\x2C host.length - port.length);\x0d\n  }\x0d\n  if (host) this.hostname = host;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  // Original API\x0d\n  Url\x2C\x0d\n  parse: urlParse\x2C\x0d\n  resolve: urlResolve\x2C\x0d\n  resolveObject: urlResolveObject\x2C\x0d\n  format: urlFormat\x2C\x0d\n\x0d\n  // WHATWG API\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n\x0d\n  // Utilities\x0d\n  pathToFileURL\x2C\x0d\n  fileURLToPath\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n};\x0d\n
code-source-info,0x1bb8fb33ece,86,2037,2314,C0O2045C1O2059C5O2070C6O2083C10O2094C11O2104C15O2115C16O2125C20O2136C21O2146C25O2157C26O2171C30O2182C31O2192C35O2203C36O2215C40O2226C41O2237C45O2248C46O2262C50O2273C51O2283C55O2294C56O2304C61O2313,,
code-creation,LazyCompile,10,7473094,0x1bb8fb35fbe,28,matchLayer C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:583:20,0x2bdba1236a8,~
code-source-info,0x1bb8fb35fbe,159,13411,13504,C3O13452C8O13452C13O13464C25O13487C27O13498,,
code-creation,LazyCompile,10,7473169,0x1bb8fb36146,206,match C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\layer.js:110:39,0x2bdba127fd0,~
code-source-info,0x1bb8fb36146,162,1957,2872,C0O1981C5O2073C10O2080C16O2100C17O2112C21O2123C23O2133C27O2144C28O2155C29O2231C34O2238C40O2257C50O2277C65O2269C69O2303C71O2313C75O2326C76O2337C77O2384C82O2391C87O2391C93O2409C97O2427C98O2439C102O2456C103O2466C107O2483C108O2496C109O2522C110O2534C114O2542C115O2559C118O2552C122O2582C127O2608C132O2632C135O2645C139O2637C144O2674C146O2681C149O2678C153O2706C158O2726C163O2744C167O2726C172O2754C177O2796C182O2796C190O2825C192O2838C196O2654C201O2619C204O2858C205O2870,,
code-creation,LazyCompile,10,7473266,0x1bb8fb36536,84,process_params C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:338:47,0x2bdba123a38,~
code-source-info,0x1bb8fb36536,159,8217,9887,C0O8217C33O8271C37O8266C39O8356C43O8350C45O8381C52O8399C58O8406C63O8419C66O8426C69O8433C70O8449C71O8449C73O8483C74O8483C76O9877C79O9877C83O9886,,
code-creation,LazyCompile,10,7473320,0x1bb8fb366d6,85, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:280:64,0x1bb8fb330d0,~
code-source-info,0x1bb8fb366d6,159,6633,6861,C0O6647C4O6666C11O6671C16O6666C22O6703C26O6724C29O6730C49O6730C56O6784C73O6784C78O6847C79O6852C84O6860,,
code-creation,LazyCompile,10,7473401,0x1bb8fb368d6,352,trim_prefix C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:293:23,0x1bb8fb32870,~
code-source-info,0x1bb8fb368d6,159,6891,8104,C0O6948C6O6955C11O7034C18O7053C23O7034C29O7025C34O7072C37O7072C41O7097C42O7103C43O7192C47O7181C51O7206C55O7217C62O7230C67O7239C70O7246C74O7262C75O7396C86O7449C94O7396C99O7461C101O7469C103O7488C112O7514C117O7518C125O7534C133O7551C137O7541C141O7518C146O7508C149O7496C153O7596C160O7618C166O7621C172O7625C177O7644C186O7664C190O7658C193O7652C197O7677C198O7688C200O7755C212O7798C216O7805C219O7789C225O7810C233O7836C243O7857C247O7864C251O7836C261O7779C264O7767C268O7900C276O7926C284O7947C292O7900C297O7966C301O7996C321O7996C328O8063C345O8063C351O8103,,
code-creation,LazyCompile,10,7473493,0x1bb8fb36c2e,62,handle C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\layer.js:86:49,0x2bdba127f80,~
code-source-info,0x1bb8fb36c2e,162,1576,1775,C0O1611C5O1629C12O1636C17O1692C20O1699C24O1717C33O1717C51O1759C54O1759C61O1774,,
code-creation,LazyCompile,10,7473537,0x1bb8fb36d56,41,query C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\query.js:39:24,0xe49886b9a8,~
code-source-info,0x1bb8fb36d56,178,740,880,C0O771C6O796C11O796C16O809C21O823C27O835C32O833C36O869C40O879,,
code-creation,LazyCompile,10,7473575,0x1bb8fb36e8e,20,parseExtendedQueryString C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:289:34,0x2f65a7361e0,~
code-source-info,0x1bb8fb36e8e,197,5773,5839,C0O5783C3O5793C8O5799C13O5793C19O5837,,
code-creation,LazyCompile,10,7473646,0x1bb8fb36fbe,213,module.exports C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:239:27,0x2f65a72e8c0,~
code-source-info,0x1bb8fb36fbe,194,8627,9372,C0O8659C3O8659C8O8693C10O8701C25O8780C31O8795C35O8802C42O8802C50O8820C51O8846C60O8872C70O8927C76O8942C80O8949C87O8949C96O9039C100O9046C105O9046C111O9078C113O9090C117O9083C122O9123C124O9127C128O9153C133O9175C148O9153C154O9225C157O9237C171O9237C177O9100C182O9065C185O9289C191O9301C196O9321C198O9332C199O9344C202O9357C207O9357C212O9370,,
code-creation,LazyCompile,10,7473767,0x1bb8fb37426,512,normalizeParseOptions C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:204:59,0x2f65a72e870,~
code-source-info,0x1bb8fb
code-creation,LazyCompile,10,7473863,0x1bb8fb3780e,31,isRegExp C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:214:33,0x2f65a72be80,~
code-source-info,0x1bb8fb3780e,192,5969,6048,C0O5981C4O5995C9O6005C14O6014C19O6014C27O6024C30O6046,,
code-creation,LazyCompile,10,7473985,0x1bb8fb37afe,586,parseQueryStringValues C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:51:50,0x2f65a72e758,~
code-source-info,0x1bb8fb37afe
code-creation,LazyCompile,10,7474120,0x1bb8fb38036,74,decode C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:111:23,0x2f65a72bd68,~
code-source-info,0x1bb8fb38036,192,2922,3294,C0O2977C13O2977C20O3002C22O3014C27O3121C37O3147C41O3121C47O3157C51O3195C55O3202C59O3237C71O3264C73O3286,,
code-creation,LazyCompile,10,7474179,0x1bb8fb3818e,54,parseArrayValue C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:33:32,0x2f65a72e708,~
code-source-info,0x1bb8fb3818e,194,751,907,C0O772C10O818C16O831C24O831C32O844C37O871C45O871C50O882C51O894C53O905,,
code-creation,LazyCompile,10,7474226,0x1bb8fb382ae,61,maybeMap C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:230:33,0x2f65a72bf70,~
code-source-info,0x1bb8fb382ae,192,6363,6571,C0O6379C3O6383C9O6420C12O6445C14O6456C18O6450C23O6493C30O6504C34O6498C39O6493C44O6466C50O6432C53O6529C55O6543C56O6561C60O6569,,
code-creation,LazyCompile,10,7474267,0x1bb8fb383ee,33, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:91:26,0x1bb8fb37940,~
code-source-info,0x1bb8fb383ee,194,3122,3246,C0O3157C3O3172C13O3201C27O3172C32O3228,,
code-creation,LazyCompile,10,7474367,0x1bb8fb385ee,335,parseQueryStringKeys C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:150:46,0x2f65a72e820,~
code-source-info,0x1bb8fb385ee,194,4873,6346,C0O4918C4O4943C5O4950C6O5030C12O5051C25O5051C36O5139C41O5171C46O5238C52O5244C57O5260C62O5260C68O5288C70O5302C77O5319C82O5302C93O5387C96O5395C100O5547C109O5567C114O5572C118O5579C123O5567C131O5626C137O5661C138O5668C139O5707C144O5707C149O5812C151O5834C157O5840C162O5864C167O5864C175O5899C179O5889C184O5916C190O5945C199O5965C204O5970C208O5977C215O5995C219O5999C230O5999C237O5965C245O6041C251O6076C252O6083C253O6121C260O6133C264O6121C269O5819C272O6208C276O6236C284O6251C289O6265C294O6251C299O6245C305O6272C309O6236C314O6291C329O6298C334O6344,,
code-creation,LazyCompile,10,7474553,0x1bb8fb3899e,306,parseObject C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:115:28,0x2f65a72e7d0,~
code-source-info,0x1bb8fb3899e,194,3709,4825,C0O3762C11O3783C17O3838C21O3845C25O3852C26O3852C31O3901C33O3906C37O3920C39O3929C44O3949C50O3976C53O3985C58O3985C66O4042C72O4057C76O4064C83O4064C92O4116C99O4116C107O4126C112O4142C117O4154C121O4161C125O4142C133O4166C138O4181C149O4181C160O4226C167O4226C173O4276C181O4301C186O4327C199O4338C211O4365C215O4387C223O4424C232O4457C239O4471C245O4510C250O4543C256O4575C260O4564C265O4619C268O4645C270O4656C276O4683C278O4697C283O4732C285O4747C289O4788C292O3860C297O3819C303O4811C305O4823,,
code-creation,LazyCompile,10,7474674,0x1bb8fb38dee,341,merge C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:47:27,0x2f65a72bc70,~
code-source-info,0x1bb8fb38dee,192,1108,2706,C0O1108C21O1178C25O1201C27O1215C28O1227C34O1269C42O1273C48O1304C51O1311C59O1311C66O1340C76O1396C83O1421C92O1445C103O1471C108O1476C112O1483C120O1471C128O1521C135O1536C141O1587C150O1595C159O1603C165O1611C166O1631C168O1645C169O1657C179O1710C188O1718C192O1726C203O1726C208O1741C209O1771C212O1783C220O1787C234O1807C240O1834C251O1848C257O1891C265O1895C279O1914C285O1941C288O1948C298O1948C303O2401C305O2415C306O2427C310O2441C318O2441C324O2453C334O2454C340O2704,,
code-creation,LazyCompile,10,7474756,0x1bb8fb390f6,62, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:92:48,0x1bb8fb38c78,~
code-source-info,0x1bb8fb390f6,192,2470,2689,C0O2503C5O2509C9O2525C14O2533C19O2533C27O2563C32O2583C42O2574C47O2572C53O2636C55O2645C59O2672C61O2683,,
code-creation,RegExp,3,7474849,0x225ca7cc560,1000,(\\[[^[\\]]*])
code-creation,RegExp,3,7474897,0x225ca7cc9c0,1036,(\\[[^[\\]]*])
code-creation,LazyCompile,10,7474966,0x1bb8fb393ce,198,compact C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:190:31,0x2f65a72be30,~
code-source-info,0x1bb8fb393ce,192,5342,5934,C0O5368C12O5376C19O5381C38O5419C41O5441C43O5454C47O5446C52O5488C54O5493C58O5521C63O5530C67O5524C71O5557C75O5564C80O5564C86O5596C88O5608C92O5601C97O5645C99O5649C103O5676C105O5679C109O5698C117O5750C122O5750C130O5763C135O5795C147O5807C153O5818C157O5795C162O5847C167O5847C172O5618C177O5583C180O5464C185O5428C188O5893C191O5893C195O5919C197O5932,,
code-creation,LazyCompile,10,7475060,0x1bb8fb39606,112,compactQueue C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:17:41,0x2f65a72bbd0,~
code-source-info,0x1bb8fb39606,192,363,780,C0O390C7O397C12O429C17O429C22O459C27O468C31O462C35O484C38O488C44O532C47O562C49O573C53O567C58O604C60O618C67O671C74O679C78O671C83O583C88O549C91O735C96O744C103O750C107O377C111O779,,
code-creation,LazyCompile,10,7475139,0x1bb8fb39826,123,expressInit C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\init.js:29:30,0xe49886cd08,~
code-source-info,0x1bb8fb39826,177,546,847,C0O568C3O576C11O576C18O605C29O605C35O647C37O655C41O666C43O674C47O685C49O694C53O707C61O731C66O707C71O744C79O768C84O744C89O800C98O810C102O817C109O817C114O794C118O836C122O846,,
code-creation,LazyCompile,10,7475209,0x1bb8fb39a36,113,setHeader node:_http_outgoing:574:57,0x2bdba13b920,~
code-source-info,0x1bb8fb39a36,171,18237,18592,C0O18265C6O18281C16O18287C21O18281C22O18329C27O18329C31O18358C36O18358C41O18411C43O18416C45O18415C49O18433C51O18460C53O18465C58O18490C63O18490C68O18478C72O18515C74O18523C77O18523C91O18560C100O18566C106O18557C110O18577C112O18589,,
code-creation,LazyCompile,10,7475259,0x1bb8fb39bc6,42, node:_http_outgoing:558:44,0x2bdba13b880,~
code-source-info,0x1bb8fb39bc6,171,17697,17847,C0O17712C8O17745C12O17754C15O17754C21O17785C34O17791C39O17785C41O17846,,
code-creation,LazyCompile,10,7475290,0x1bb8fb39cd6,16,checkIsHttpToken node:_http_common:221:26,0x2bdba135110,~
code-source-info,0x1bb8fb39cd6,168,7144,7203,C0O7155C7O7182C10O7162C15O7200,,
code-creation,LazyCompile,10,7475348,0x1bb8fb39f06,68, node:_http_outgoing:564:45,0x2bdba13b8d0,~
code-source-info,0x1bb8fb39f06,171,17897,18175,C0O17919C4O17951C17O17957C22O17951C23O18013C28O18017C34O18055C42O18055C47O18116C60O18122C65O18116C67O18174,,
code-creation,LazyCompile,10,7475386,0x1bb8fb3a046,16,checkInvalidHeaderChar node:_http_common:232:32,0x2bdba135160,~
code-source-info,0x1bb8fb3a046,168,7505,7568,C0O7516C7O7543C10O7523C15O7565,,
code-creation,LazyCompile,10,7475514,0x1bb8fb3a3ce,295,serveStatic C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js:72:31,0xe49886a800,~
code-source-info,0x1bb8fb3a3ce,263,1478,2700,C0O1478C9O1509C16O1516C21O1533C28O1540C33O1560C39O1587C42O1594C45O1600C46O1644C50O1659C54O1675C65O1675C71O1717C82O1717C88O1760C93O1760C97O1772C98O1778C99O1809C104O1809C106O1844C111O1853C116O1853C122O1882C127O1882C132O1895C137O1952C139O1961C144O1984C149O1993C157O1993C165O2004C170O2021C173O2081C189O2081C195O2144C208O2144C214O2206C220O2237C233O2237C239O2315C245O2347C258O2347C264O2513C277O2513C283O2687C288O2687C294O2699,,
code-creation,LazyCompile,10,7475601,0x1bb8fb3a6de,58,originalurl C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:65:22,0x2bdba11d290,~
code-source-info,0x1bb8fb3a6de,156,966,1313,C0O990C5O1005C9O1056C12O1063C16O1076C17O1101C22O1123C25O1127C32O1184C34O1197C35O1224C38O1233C43O1250C45O1262C49O1271C51O1302C57O1311,,
code-creation,LazyCompile,10,7475667,0x1bb8fb3a866,20,send C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:83:15,0x2f65a73db30,~
code-source-info,0x1bb8fb3a866,201,1566,1634,C0O1591C14O1598C19O1632,,
code-creation,LazyCompile,10,7475778,0x1bb8fb3ad7e,570,SendStream C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:96:21,0x2f65a73db80,~
code-source-info,0x1bb8fb3ad7e
code-creation,LazyCompile,10,7476016,0x1bb8fb3b33e,451,pipe C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:506:43,0x2f65a73e5a8,~
code-source-info,0x1bb8fb3b33e
code-creation,LazyCompile,10,7476125,0x1bb8fb3b73e,26,decode C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:997:17,0x2f65a73ddb0,~
code-source-info,0x1bb8fb3b73e,201,20809,20899,C3O20830C7O20837C11O20861C23O20884C25O20893,,
code-creation,LazyCompile,10,7476246,0x1bb8fb3b886,622,normalize node:path:304:12,0x2ee4c9e96c0,~
code-source-info,0x1bb8fb3b
code-creation,LazyCompile,10,7476466,0x1bb8fb3be2e,299,join node:path:421:7,0x2ee4c9e97a0,~
code-source-info,0x1bb8fb3be2e
code-creation,LazyCompile,10,7476567,0x1bb8fb3c0ee,53,containsDotFile C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:925:26,0x2f65a73dc70,~
code-source-info,0x1bb8fb3c0ee,201,19487,19655,C0O19512C2O19525C6O19517C11O19555C13O19560C17O19577C24O19584C30O19595C36O19599C41O19616C42O19627C43O19534C48O19499C51O19641C52O19653,,
code-creation,LazyCompile,10,7476612,0x1bb8fb3c22e,27,hasTrailingSlash C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:301:67,0x2f65a73e210,~
code-source-info,0x1bb8fb3c22e,201,6597,6652,C0O6616C5O6626C10O6631C14O6638C17O6620C23O6643C26O6650,,
code-creation,LazyCompile,10,7476658,0x1bb8fb3c45e,64,sendFile C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:712:51,0x2f65a73e648,~
code-source-info,0x1bb8fb3c45e,201,15225,16062,C0O15225C15O15244C16O15244C18O15259C20O15259C22O15267C33O15267C38O15294C43O15297C51O15302C56O15297C63O16061,,
code-creation,LazyCompile,10,7476719,0x1bb8fb3c63e,113,stat node:fs:1452:14,0x3f9d3568c58,~
code-source-info,0x1bb8fb3c63e,77,38377,38748,C7O38377C19O38428C25O38470C28O38495C30O38517C33O38528C38O38560C43O38567C48O38608C53O38634C60O38608C66O38646C68O38661C72O38676C77O38684C84O38689C87O38700C92O38700C98O38732C106O38684C112O38747,,
code-creation,LazyCompile,10,7476767,0x1bb8fb3c826,28,makeStatsCallback node:fs:194:27,0x3f9d35678b0,~
code-source-info,0x1bb8fb3c826,77,5298,5440,C0O5298C9O5308C19O5308C23O5335C27O5437,,
code-creation,LazyCompile,10,7477093,0x1bb8fb3c9e6,82,parserOnMessageComplete node:_http_common:147:33,0x2bdba135020,~
code-source-info,0x1bb8fb3c9e6,168,5054,5529,C0O5077C3O5108C8O5123C10O5151C11O5167C15O5238C20O5265C26O5289C31O5322C36O5289C42O5338C44O5354C48O5367C50O5379C54O5433C61O5433C66O5501C71O5518C76O5501C81O5528,,
code-creation,LazyCompile,10,7477145,0x1bb8fb3cb36,20,Readable.push node:internal/streams/readable:227:35,0x334252dbe30,~
code-source-info,0x1bb8fb3cb36,49,7847,7927,C0O7870C14O7877C19O7924,,
code-creation,LazyCompile,10,7477252,0x1bb8fb3cd66,510,readableAddChunk node:internal/streams/readable:236:26,0x334252dbf40,~
code-source-info,0x1bb8fb3cd66,49,8143,10454,C0O8186C8O8186C13O8244C18O8269C20O8288C26O8307C32O8347C36O8376C42O8410C49O8419C54O8444C58O8468C64O8632C69O8647C74O8647C81O8668C86O8684C91O8669C100O8724C105O8739C110O8739C118O8773C124O8820C126O8841C128O8830C133O8858C139O8885C144O8896C149O8896C156O8927C161O8942C166O8942C173O8977C179O9004C184O9032C202O9038C208O9143C212O9159C217O9159C224O9198C228O9225C229O9239C233O9253C236O9253C243O9300C251O9315C253O9330C259O9337C264O9350C268O9385C274O9406C281O9433C284O9429C290O9406C297O9493C311O9493C318O9553C324O9569C331O9596C334O9592C340O9569C347O9648C353O9667C359O9685C360O9698C361O9720C362O9734C366O9760C374O9772C376O9807C381O9815C386O9815C393O9848C399O9868C405O9875C410O9893C424O9893C431O9957C434O9957C441O10012C455O10012C462O10077C466O10101C467O10115C471O10129C474O10129C479O10378C486O10399C491O10414C495O10406C500O10437C506O10444C509O10451,,
code-creation,LazyCompile,10,7477378,0x1bb8fb3d18e,132,onEofChunk node:internal/streams/readable:533:20,0x334252dc228,~
code-source-info,0x1bb8fb3d18e,49,17609,18435,C0O17630C8O17630C12O17664C18O17671C19O17678C20O17692C26O17728C31O17736C36O17736C41O17748C43O17767C49O17790C54O17797C59O17797C64O17817C69O17839C82O17862C89O17830C93O17885C94O17897C98O17920C104O18107C107O18107C113O18206C114O18225C118O18239C119O18261C123O18405C126O18405C131O18434,,
tick,0x7ff6a7870bbc,7477488,0,0x0,3,0x7ff6a7f1e5b0,0x1bb8fb3ce52,0x1bb8fb3cb44,0x1bb8fb3ca23
code-creation,LazyCompile,10,7477527,0x1bb8fb3d36e,81,emitReadable node:internal/streams/readable:563:22,0x334252dc278,~
code-source-info,0x1bb8fb3d36e,49,18662,18977,C0O18697C5O18716C13O18744C18O18764C23O18716C28O18785C29O18804C33O18827C39O18851C47O18879C52O18851C57O18894C58O18916C62O18929C65O18937C73O18937C80O18976,,
code-creation,LazyCompile,10,7477610,0x1bb8fb3d51e,27,readStart node:_http_incoming:40:19,0x2bdba137dc8,~
code-source-info,0x1bb8fb3d51e,170,1596,1684,C0O1610C4O1632C10O1650C16O1672C21O1672C26O1683,,
code-creation,LazyCompile,10,7477650,0x1bb8fb3d63e,41,get node:internal/streams/readable:1166:8,0x334252dcc18,~
code-source-info,0x1bb8fb3d63e,49,36607,37001,C0O36634C5O36898C9O36914C15O36923C21O36939C28O36955C35O36983C40O36994,,
code-creation,LazyCompile,10,7477703,0x1bb8fb3d786,49,onParserExecute node:_http_server:633:25,0xbfdd37fdc0,~
code-source-info,0x1bb8fb3d786,173,22011,22494,C0O22354C5O22354C9O22372C17O22372C22O22422C42O22422C48O22493,,
code-creation,LazyCompile,10,7477814,0x1bb8fb3dace,537,onParserExecuteCommon node:_http_server:690:31,0xbfdd37feb0,~
code-source-info,0x1bb8fb3dace
code-creation,LazyCompile,10,7477944,0x1bb8fb3df2e,117,emitReadable_ node:internal/streams/readable:574:23,0x334252dc2c8,~
code-source-info,0x1bb8fb3df2e,49,19003,19654,C0O19038C5O19057C13O19086C18O19103C23O19117C28O19057C33O19139C39O19159C45O19177C51O19193C57O19215C65O19215C70O19238C71O19260C75O19561C85O19584C92O19604C97O19620C101O19611C104O19547C108O19638C111O19638C116O19653,,
code-creation,RegExp,3,7478342,0x225ca7cce40,1036,^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$
code-creation,RegExp,3,7478385,0x225ca7cd2c0,788,[^\\t\\x20-\\x7e\\x80-\\xff]
code-creation,RegExp,3,7478481,0x225ca7cd640,1504,(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)
code-creation,Function,11,7478791,0x225ca7cdc80,992,restore C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:631:17,0x2bdba123748,^
code-source-info,0x225ca7cdc80,159,14253,14639,,,
code-creation,Function,11,7478837,0x225ca7ce0c0,1600,fastparse C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:95:20,0x2bdba11d2e0,^
code-source-info,0x225ca7ce0c0,156,1451,2477,,,
code-creation,Function,11,7478859,0x225ca7ce760,320,fresh C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:153:16,0x2bdba11d330,^
code-source-info,0x225ca7ce760,156,2638,2808,,,
code-creation,Function,11,7478879,0x225ca7ce900,344,parseurl C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:35:19,0x2bdba11d240,^
code-source-info,0x225ca7ce900,156,485,806,,,
code-creation,Function,11,7479178,0x225ca7ceac0,236,getPathname C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:537:21,0x2bdba1235b8,^
code-source-info,0x225ca7ceac0,159,12534,12630,,,
code-creation,Function,11,7479209,0x225ca7cec20,528,decode C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:111:23,0x2f65a72bd68,^
code-source-info,0x225ca7cec20,192,2922,3294,,,
code-creation,Function,11,7479238,0x225ca7ceea0,1068,process_params C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:338:47,0x2bdba123a38,^
code-source-info,0x225ca7ceea0,159,8217,9887,,,
code-creation,Function,11,7479265,0x225ca7cf340,848,get node:_http_incoming:108:16,0x2bdba138108,^
code-source-info,0x225ca7cf340,170,3190,3491,,,
code-creation,Function,11,7479284,0x225ca7cf700,396,Url node:url:60:13,0x1d24e4cf510,^
code-source-info,0x225ca7cf700,86,2037,2314,,,
code-creation,Function,11,7479302,0x225ca7cf900,200, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:91:26,0x1bb8fb37940,^
code-source-info,0x225ca7cf900,194,3122,3246,,,
code-creation,Function,11,7479599,0x225ca7cfa40,3812,next C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:177:16,0x1bb8fb32818,^
code-source-info,0x225ca7cfa40,159,4366,6867,,,
code-creation,Function,11,7479629,0x225ca7d09a0,416,handle C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\layer.js:86:49,0x2bdba127f80,^
code-source-info,0x225ca7d09a0,162,1576,1775,,,
code-creation,Function,11,7479650,0x225ca7d0ba0,224,matchLayer C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:583:20,0x2bdba1236a8,^
code-source-info,0x225ca7d0ba0,159,13411,13504,,,
code-creation,Function,11,7479818,0x225ca7d0ce0,1400,module.exports C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:239:27,0x2f65a72e8c0,^
code-source-info,0x225ca7d0ce0,194,8627,9372,,,
code-creation,Function,11,7479854,0x225ca7d12c0,1484,set C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:359:23,0x2bdba108488,^
code-source-info,0x225ca7d12c0,144,8451,9387,,,
code-creation,Function,11,7479875,0x225ca7d1900,340, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:92:48,0x1bb8fb38c78,^
code-source-info,0x225ca7d1900,192,2470,2689,,,
code-creation,Function,11,7480167,0x225ca7d1ac0,4448,normalize node:path:304:12,0x2ee4c9e96c0,^
code-source-info,0x225ca7d1ac0,35,9867,13021,,,
code-creation,Function,11,7480191,0x225ca7d2c80,148,enabled C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:438:31,0x2bdba108528,^
code-source-info,0x225ca7d2c80,144,10041,10091,,,
code-creation,Function,11,7480214,0x225ca7d2d80,540, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:280:64,0x1bb8fb330d0,^
code-source-info,0x225ca7d2d80,159,6633,6861,,,
code-creation,Function,11,7480343,0x225ca7d3000,1220,OutgoingMessage node:_http_outgoing:97:25,0x2bdba13adf0,^
code-source-info,0x225ca7d3000,171,3281,4565,,,
code-creation,Function,11,7480369,0x225ca7d3540,432,containsDotFile C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:925:26,0x2f65a73dc70,^
code-source-info,0x225ca7d3540,201,19487,19655,,,
code-creation,Function,11,7480388,0x225ca7d3760,92,get node:internal/streams/readable:1200:18,0x334252dce88,^
code-source-info,0x225ca7d3760,49,37561,37621,,,
code-creation,Function,11,7480413,0x225ca7d3820,1232,IncomingMessage node:_http_incoming:51:25,0x2bdba137e68,^
code-source-info,0x225ca7d3820,170,1847,2812,,,
code-creation,Function,11,7480429,0x225ca7d3d60,148,get node:internal/streams/writable:833:8,0x334252eb048,^
code-source-info,0x225ca7d3d60,56,24728,24811,,,
code-creation,Function,11,7480549,0x225ca7d3e60,3964,parseQueryStringValues C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:51:50,0x2f65a72e758,^
code-source-info,0x225ca7d3e60,194,1581,3679,,,
code-creation,Function,11,7480574,0x225ca7d4e40,200,hasObserver node:internal/perf/observe:474:21,0x3f9d3545808,^
code-source-info,0x225ca7d4e40,67,12680,12782,,,
code-creation,Function,11,7480590,0x225ca7d4f80,40,get hasSubscribers node:diagnostics_channel:82:21,0x2f65a705750,^
code-source-info,0x225ca7d4f80,174,2016,2044,,,
code-creation,Function,11,7480611,0x225ca7d5020,484,get node:internal/streams/writable:783:8,0x334252eae18,^
code-source-info,0x225ca7d5020,56,23447,23844,,,
code-creation,Function,11,7480629,0x225ca7d5280,452,assignSocket node:_http_server:239:62,0x2f65a7014b0,^
code-source-info,0x225ca7d5280,173,9144,9342,,,
code-creation,Function,11,7480690,0x225ca7d54c0,208,isRegExp C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:214:33,0x2f65a72be80,^
code-source-info,0x225ca7d54c0,192,5969,6048,,,
code-creation,Function,11,7480778,0x225ca7d5600,1416,compact C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:190:31,0x2f65a72be30,^
code-source-info,0x225ca7d5600,192,5342,5934,,,
code-creation,Function,11,7480818,0x225ca7d5c00,2224,parseQueryStringKeys C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:150:46,0x2f65a72e820,^
code-source-info,0x225ca7d5c00,194,4873,6346,,,
code-creation,Function,11,7480940,0x225ca7d6520,560,sendFile C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:712:51,0x2f65a73e648,^
code-source-info,0x225ca7d6520,201,15225,16062,,,
code-creation,Function,11,7480966,0x225ca7d67c0,156,parseExtendedQueryString C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:289:34,0x2f65a7361e0,^
code-source-info,0x225ca7d67c0,197,5773,5839,,,
code-creation,Function,11,7480986,0x225ca7d68c0,200,checkIsHttpToken node:_http_common:221:26,0x2bdba135110,^
code-source-info,0x225ca7d68c0,168,7144,7203,,,
code-creation,Function,11,7481002,0x225ca7d6a00,200,checkInvalidHeaderChar node:_http_common:232:32,0x2bdba135160,^
code-source-info,0x225ca7d6a00,168,7505,7568,,,
code-creation,Function,11,7481018,0x225ca7d6b40,124,send C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:83:15,0x2f65a73db30,^
code-source-info,0x225ca7d6b40,201,1566,1634,,,
code-creation,Function,11,7481037,0x225ca7d6c20,200,hasTrailingSlash C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:301:67,0x2f65a73e210,^
code-source-info,0x225ca7d6c20,201,6597,6652,,,
code-creation,Function,11,7481057,0x225ca7d6d60,288,makeStatsCallback node:fs:194:27,0x3f9d35678b0,^
code-source-info,0x225ca7d6d60,77,5298,5440,,,
code-creation,Function,11,7481081,0x225ca7d6ee0,824,stat node:fs:1452:14,0x3f9d3568c58,^
code-source-info,0x225ca7d6ee0,77,38377,38748,,,
code-creation,Function,11,7481119,0x225ca7d7280,144,app C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\express.js:38:21,0xe498868060,^
code-source-info,0x225ca7d7280,139,747,801,,,
code-creation,Function,11,7481142,0x225ca7d7380,692,expressInit C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\init.js:29:30,0xe49886cd08,^
code-source-info,0x225ca7d7380,177,546,847,,,
code-creation,Function,11,7481162,0x225ca7d76a0,272,query C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\query.js:39:24,0xe49886b9a8,^
code-source-info,0x225ca7d76a0,178,740,880,,,
code-creation,Function,11,7481197,0x225ca7d7820,2284,handle C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:136:31,0x2bdba123988,^
code-source-info,0x225ca7d7820,159,3375,8106,,,
code-creation,Function,11,7481269,0x225ca7d8180,892,emitReadable_ node:internal/streams/readable:574:23,0x334252dc2c8,^
code-source-info,0x225ca7d8180,49,19003,19654,,,
code-creation,Function,11,7481292,0x225ca7d8560,584,emitReadable node:internal/streams/readable:563:22,0x334252dc278,^
code-source-info,0x225ca7d8560,49,18662,18977,,,
code-creation,Function,11,7481309,0x225ca7d8820,128,Readable.push node:internal/streams/readable:227:35,0x334252dbe30,^
code-source-info,0x225ca7d8820,49,7847,7927,,,
code-creation,Function,11,7481326,0x225ca7d8900,412,get node:internal/streams/readable:1166:8,0x334252dcc18,^
code-source-info,0x225ca7d8900,49,36607,37001,,,
code-creation,Function,11,7481343,0x225ca7d8b00,240,readStart node:_http_incoming:40:19,0x2bdba137dc8,^
code-source-info,0x225ca7d8b00,170,1596,1684,,,
code-creation,Function,11,7481361,0x225ca7d8c60,312,onParserExecute node:_http_server:633:25,0xbfdd37fdc0,^
code-source-info,0x225ca7d8c60,173,22011,22494,,,
code-creation,Function,11,7481586,0x225ca7d8e00,400,originalurl C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:65:22,0x2bdba11d290,^
code-source-info,0x225ca7d8e00,156,966,1313,,,
code-creation,Function,11,7481631,0x225ca7d9000,1996,parseObject C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:115:28,0x2f65a72e7d0,^
code-source-info,0x225ca7d9000,194,3709,4825,,,
code-creation,Function,11,7481658,0x225ca7d9840,944,setHeader node:_http_outgoing:574:57,0x2bdba13b920,^
code-source-info,0x225ca7d9840,171,18237,18592,,,
code-creation,Function,11,7481758,0x225ca7d9c60,1884,parserOnHeadersComplete node:_http_common:77:33,0x2bdba134f80,^
code-source-info,0x225ca7d9c60,168,3007,4609,,,
code-creation,Function,11,7481795,0x225ca7da420,2180,join node:path:421:7,0x2ee4c9e97a0,^
code-source-info,0x225ca7da420,35,13602,15808,,,
code-creation,Function,11,7481815,0x225ca7dad20,624,handle C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:165:29,0x2bdba108280,^
code-source-info,0x225ca7dad20,144,4043,4365,,,
code-creation,Function,11,7482128,0x225ca7db000,624,finalhandler C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\finalhandler\\index.js:77:23,0x2bdba10be10,^
code-source-info,0x225ca7db000,145,1477,2786,,,
code-creation,Function,11,7482159,0x225ca7db2e0,448,_unrefTimer node:net:417:52,0xbfdd37c8e0,^
code-source-info,0x225ca7db2e0,120,11709,11824,,,
code-creation,Function,11,7482179,0x225ca7db500,456,getObserverType node:internal/perf/observe:117:25,0x3f9d3545028,^
code-source-info,0x225ca7db500,67,2590,2800,,,
code-creation,Function,11,7482204,0x225ca7db740,1096,_addHeaderLine node:_http_incoming:337:24,0x2bdba137f58,^
code-source-info,0x225ca7db740,170,11931,12628,,,
code-creation,Function,11,7482223,0x225ca7dbc00,596,app.<computed> C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:490:25,0x96d321d358,^
code-source-info,0x225ca7dbc00,144,10877,11145,,,
code-creation,Function,11,7482297,0x225ca7dbec0,396,parseArrayValue C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:33:32,0x2f65a72e708,^
code-source-info,0x225ca7dbec0,194,751,907,,,
code-creation,Function,11,7482339,0x225ca7dc0c0,3760,normalizeParseOptions C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:204:59,0x2f65a72e870,^
code-source-info,0x225ca7dc0c0,194,6407,8598,,,
code-creation,Function,11,7482727,0x225ca7dcfe0,3672,SendStream C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:96:21,0x2f65a73db80,^
code-source-info,0x225ca7dcfe0,201,1809,3540,,,
code-creation,Function,11,7482771,0x225ca7ddea0,2324,merge C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:47:27,0x2f65a72bc70,^
code-source-info,0x225ca7ddea0,192,1108,2706,,,
code-creation,Function,11,7482793,0x225ca7de820,572,parserOnMessageComplete node:_http_common:147:33,0x2bdba135020,^
code-source-info,0x225ca7de820,168,5054,5529,,,
code-creation,Function,11,7482873,0x225ca7deac0,2108,trim_prefix C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:293:23,0x1bb8fb32870,^
code-source-info,0x225ca7deac0,159,6891,8104,,,
code-creation,Function,11,7482907,0x225ca7df360,1716,serveStatic C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js:72:31,0xe49886a800,^
code-source-info,0x225ca7df360,263,1478,2700,,,
code-creation,Function,11,7483483,0x225ca7dfa80,4196,parserOnIncoming node:_http_server:852:26,0x2f65a7011b8,^
code-source-info,0x225ca7dfa80,173,28779,31837,,,
code-creation,Function,11,7483515,0x225ca7e0b60,1172,ServerResponse node:_http_server:178:24,0x334160bff28,^
code-source-info,0x225ca7e0b60,173,6962,7544,,,
code-creation,Function,11,7483535,0x225ca7e1060,416, node:_http_outgoing:558:44,0x2bdba13b880,^
code-source-info,0x225ca7e1060,171,17697,17847,,,
code-creation,Function,11,7483558,0x225ca7e1260,644,_flush node:_http_outgoing:933:51,0x2bdba13be78,^
code-source-info,0x225ca7e1260,171,27980,28410,,,
code-creation,Function,11,7483578,0x225ca7e1560,484,maybeMap C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:230:33,0x2f65a72bf70,^
code-source-info,0x225ca7e1560,192,6363,6571,,,
code-creation,Function,11,7483599,0x225ca7e17c0,220,decode C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:997:17,0x2f65a73ddb0,^
code-source-info,0x225ca7e17c0,201,20809,20899,,,
code-creation,Function,11,7483880,0x225ca7e1900,2108,debug C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\debug\\src\\debug.js:65:17,0x2bdba117ca8,^
code-source-info,0x225ca7e1900,150,1251,2646,,,
code-creation,Function,11,7483908,0x225ca7e21a0,276,resetSocketTimeout node:_http_server:957:28,0x2f65a701208,^
code-source-info,0x225ca7e21a0,173,31868,32027,,,
code-creation,Function,11,7483933,0x225ca7e2320,1436,match C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\layer.js:110:39,0x2bdba127fd0,^
code-source-info,0x225ca7e2320,162,1957,2872,,,
code-creation,Function,11,7483959,0x225ca7e2920,1072,socketListenerWrap node:_http_server:1001:37,0x1bb8fb077b0,^
code-source-info,0x225ca7e2920,173,33081,33553,,,
code-creation,Function,11,7484289,0x225ca7e2dc0,2624,pipe C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:506:43,0x2f65a73e5a8,^
code-source-info,0x225ca7e2dc0,201,11116,12769,,,
code-creation,Function,11,7484323,0x225ca7e3860,976,_addHeaderLines node:_http_incoming:199:25,0x2bdba137eb8,^
code-source-info,0x225ca7e3860,170,6108,6562,,,
code-creation,Function,11,7486225,0x225ca7e3ca0,5760,matchKnownFields node:_http_incoming:231:26,0x2bdba137f08,^
code-source-info,0x225ca7e3ca0,170,7322,11286,,,
code-creation,Function,11,7486255,0x225ca7e5380,972,onEofChunk node:internal/streams/readable:533:20,0x334252dc228,^
code-source-info,0x225ca7e5380,49,17609,18435,,,
code-creation,Function,11,7486277,0x225ca7e57c0,604, node:_http_outgoing:564:45,0x2bdba13b8d0,^
code-source-info,0x225ca7e57c0,171,17897,18175,,,
code-creation,Function,11,7486298,0x225ca7e5a80,820,getProtohost C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:546:22,0x2bdba123608,^
code-source-info,0x225ca7e5a80,159,12690,13063,,,
scavenge,begin,0,359375,1671211999849
new,MemoryChunk,0x18891340000,262144
scavenge,end,0,359375,1671211999849
delete,MemoryChunk,0x2d09180000
delete,MemoryChunk,0xd119000000
delete,MemoryChunk,0x335a6c80000
delete,MemoryChunk,0x350ffbc0000
delete,MemoryChunk,0x45c2dc0000
delete,MemoryChunk,0x4b384c0000
delete,MemoryChunk,0x32386240000
delete,MemoryChunk,0x34052480000
delete,MemoryChunk,0x19870f00000
code-creation,Function,11,7487737,0x225ca7e5e20,3688,readableAddChunk node:internal/streams/readable:236:26,0x334252dbf40,^
code-source-info,0x225ca7e5e20,49,8143,10454,,,
code-creation,Function,11,7487786,0x225ca7e6d00,3356,onParserExecuteCommon node:_http_server:690:31,0xbfdd37feb0,^
code-source-info,0x225ca7e6d00,173,23781,25806,,,
new,MemoryChunk,0xaf860c0000,262144
code-creation,LazyCompile,13,7490622,0x225ca7e7a80,1720,fastparse C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:95:20,0x2bdba11d2e0,*
code-source-info,0x225ca7e7a80,156,1451,2477,C0O1451C48O1461C75O1496C322O1510C384O1926C394O1790C448O1827C816O1976C820O1878C842O1926C895O2004C907O1926C928O2004C982O1964C1074O2004C1127O1772C1156O1878C1222O2059I0C1226O2083I0C1230O2104I0C1234O2125I0C1238O2146I0C1242O2171I0C1246O2192I0C1250O2215I0C1254O2237I0C1258O2262I0C1262O2304I0C1276O2337C1283O2354C1287O2375C1305O2389C1315O2426C1323O2449C1327O2475C1357O2248C1362O1541C1367O1451C1421O1496C1484O1827C1558O1772,F0O2306,S0x1d24e4cf510
tick,0x7ff6a8355290,7492480,0,0x0,0,0x225ca7d997d,0x225ca7d7456,0x225ca7d0a8b,0x225ca7df2e2,0x225ca7d2f3b,0x225ca7cf1fa,0x225ca7d090a,0x225ca7d7799,0x225ca7d0a8b,0x225ca7df2e2,0x225ca7d2f3b,0x225ca7cf1fa,0x225ca7d090a,0x225ca7d80f2,0x225ca7daf76,0x225ca7d72f6,0x225ca7ca221,0x225ca7e0acd,0x225ca7da3a8
scavenge,begin,0,375000,1671211999855
new,MemoryChunk,0xe258580000,262144
new,MemoryChunk,0x9f66fc0000,262144
new,MemoryChunk,0x2808efc0000,262144
scavenge,end,0,375000,1671211999856
delete,MemoryChunk,0x2b9fe600000
delete,MemoryChunk,0x2ce29000000
delete,MemoryChunk,0x3338f140000
delete,MemoryChunk,0x7b57ac0000
delete,MemoryChunk,0x37b7f180000
delete,MemoryChunk,0xea60800000
delete,MemoryChunk,0x34052480000
delete,MemoryChunk,0x45c2dc0000
delete,MemoryChunk,0x335a6c80000
delete,MemoryChunk,0x32386240000
delete,MemoryChunk,0x2d09180000
delete,MemoryChunk,0xa0dbd80000
delete,MemoryChunk,0x36143380000
delete,MemoryChunk,0x81f72c0000
delete,MemoryChunk,0x126ff00000
delete,MemoryChunk,0x1256ff40000
scavenge,begin,0,375000,1671211999860
scavenge,end,0,375000,1671211999860
delete,MemoryChunk,0x19870f00000
delete,MemoryChunk,0x350ffbc0000
delete,MemoryChunk,0x4b384c0000
delete,MemoryChunk,0xd119000000
scavenge,begin,0,375000,1671211999864
new,MemoryChunk,0x1a5c5440000,262144
new,MemoryChunk,0x2f466500000,262144
scavenge,end,0,375000,1671211999865
code-creation,LazyCompile,10,7506048,0x39bd861014e,34, node:fs:197:10,0x1bb8fb3c778,~
code-source-info,0x39bd861014e,77,5342,5436,C0O5365C4O5374C7O5381C11O5389C12O5395C19O5403C22O5403C27O5395C33O5435,,
code-creation,LazyCompile,10,7506118,0x39bd861028e,151,onstat C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:717:33,0x1bb8fb3c3a0,~
code-source-info,0x39bd861028e,201,15324,15655,C0O15342C4O15357C11O15362C24O15379C36O15406C40O15413C43O15400C51O15418C56O15472C59O15479C63O15488C64O15499C68O15508C71O15520C76O15520C81O15536C82O15550C87O15550C93O15565C96O15577C104O15577C109O15591C110O15596C113O15601C127O15601C132O15630C135O15635C143O15635C150O15654,,
code-creation,LazyCompile,10,7506225,0x39bd86104ce,275,extname node:path:836:10,0x2ee4c9e9998,~
code-source-info,0x39bd86104ce
code-creation,LazyCompile,10,7506330,0x39bd86107fe,157,next C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:728:17,0x1bb8fb3c348,~
code-source-info,0x39bd86107fe,201,15674,16060,C0O15674C5O15686C10O15695C15O15707C24O15714C29O15728C38O15754C43O15754C55O15786C65O15786C70O15796C71O15816C78O15821C87O15834C101O15847C107O15845C110O15827C113O15816C115O15856C126O15856C131O15882C136O15885C144O15890C149O15885C156O16059,,
code-creation,LazyCompile,10,7506392,0x39bd8610a06,66,onStatError C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:412:57,0x2f65a73e468,~
code-source-info,0x39bd8610a06,201,9133,9331,C0O9159C28O9242C38O9242C44O9266C46O9296C56O9296C62O9320C65O9330,,
code-creation,LazyCompile,10,7506459,0x39bd8610c76,214,error C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:267:45,0x2f65a73e1c0,~
code-source-info,0x39bd8610c76,201,5706,6444,C0O5769C6O5773C13O5820C24O5834C30O5820C36O5863C37O5886C42O5902C45O5911C52O5918C61O5930C66O5957C75O5985C80O5957C86O6033C89O6033C93O6077C97O6092C103O6107C106O6127C111O6107C116O6168C118O6183C122O6198C133O6198C139O6258C147O6286C151O6293C156O6293C162O6258C168O6316C179O6316C185O6381C196O6381C202O6434C207O6434C213O6443,,
code-creation,LazyCompile,10,7506523,0x39bd8610ea6,41,hasListeners C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:1031:23,0x2f65a73de50,~
code-source-info,0x39bd8610ea6,201,21494,21662,C0O21541C8O21584C13O21584C19O21599C25O21621C30O21621C36O21644C37O21657C40O21660,,
code-creation,LazyCompile,10,7506580,0x39bd8610fde,50,createHttpError C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:977:26,0x2f65a73dd60,~
code-source-info,0x39bd8610fde,201,20466,20644,C0O20484C4O20500C7O20507C11O20526C12O20556C15O20545C23O20588C34O20568C44O20618C49O20642,,
code-creation,LazyCompile,10,7506690,0x39bd86111ee,427,createError C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:49:22,0x23ad5936ca8,~
code-source-info,0x39bd86111ee,202,957,2422,C0O957C2O1029C7O1047C9O1065C11O1082C15O1070C20O1111C22O1120C26O1139C28O1154C30O1163C35O1194C38O1183C43O1209C46O1238C52O1252C63O1284C65O1293C71O1311C76O1326C83O1350C85O1359C90O1381C97O1402C99O1411C104O1433C111O1464C120O1502C123O1497C129O1507C135O1530C141O1470C146O1464C147O1091C152O1052C155O1551C165O1593C174O1609C179O1624C185O1624C189O1700C198O1749C205O1756C214O1776C223O1792C228O1808C233O1861C238O1872C249O1896C253O1895C257O1918C261O1954C267O1978C274O2009C280O2015C285O2031C292O2038C298O2005C304O2052C308O2058C316O2058C322O2101C328O2125C333O2154C340O2161C345O2218C349O2238C352O2229C356O2248C358O2276C364O2259C368O2308C381O2301C394O2301C395O2321C397O2329C404O2349C409O2375C411O2391C414O2384C421O2292C424O2410C426O2420,,
code-creation,LazyCompile,10,7506810,0x39bd8611586,35,error C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js:115:39,0x1bb8fb3a278,~
code-source-info,0x39bd8611586,263,2540,2661,C0O2554C4O2580C13O2591C18O2609C21O2609C25O2627C26O2633C27O2649C30O2649C34O2660,,
code-creation,LazyCompile,10,7507070,0x39bd8611716,64,_handles_method C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:58:59,0x2bdba125ba0,~
code-source-info,0x39bd8611716,160,949,1157,C0O971C5O979C11O991C12O1003C13O1029C18O1029C23O1047C25O1056C30O1076C35O1083C41O1099C44O1120C48O1140C55O1147C59O1127C63O1155,,
code-creation,LazyCompile,10,7507156,0x39bd861198e,117,dispatch C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:98:45,0x2bdba125c40,~
code-source-info,0x39bd861198e,160,1662,2542,C0O1662C23O1693C24O1693C26O1715C30O1710C32O1735C33O1735C35O1740C38O1750C44O1757C49O1770C52O1777C55O1784C56O1805C59O1809C64O1816C69O1816C73O1805C75O1833C80O1844C85O1864C90O1871C96O1887C98O1894C100O1910C105O1920C109O1931C112O1931C116O2541,,
code-creation,LazyCompile,10,7507237,0x39bd8611b6e,176,next C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:116:16,0x39bd86118a8,~
code-source-info,0x39bd8611b6e,160,1955,2540,C0O1995C6O2010C11O2031C14O2038C17O2045C18O2086C24O2101C29O2123C32O2130C36O2139C37O2163C47O2172C51O2168C55O2181C57O2201C60O2208C64O2218C65O2252C69O2258C74O2263C79O2278C86O2285C91O2308C92O2330C98O2346C105O2353C110O2373C113O2380C117O2390C118O2402C122O2425C142O2425C149O2485C166O2485C171O2528C172O2533C175O2539,,
code-creation,LazyCompile,10,7507325,0x39bd8611e26,164, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:57:25,0x2264574450,~
code-source-info,0x39bd8611e26,137,1463,2055,C0O1463C12O1503C17O1509C25O1499C27O1551C32O1557C41O1578C44O1598C57O1598C63O1587C65O1633C71O1651C77O1664C82O1669C87O1720C90O1731C100O1731C105O1747C106O1762C113O1769C122O1786C127O1791C131O1802C157O1769C163O2054,,
tick,0x7ff6a7f83072,7507455,0,0x0,2,0x7ff6a7f1e5b0,0x39bd8611e8a,0x225ca7d0a8b,0x39bd8611c14,0x39bd86119fe,0x225ca7d0a8b,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x39bd86115a4,0x225ca7ca221,0x39bd8610c94,0x39bd8610a2c,0x39bd8610829,0x39bd86102c9,0x39bd8610155
code-creation,LazyCompile,10,7507483,0x39bd8612166,54,sendStatus C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:369:37,0xe49884da80,~
code-source-info,0x39bd8612166,248,8986,9146,C0O9014C3O9023C10O9030C19O9046C24O9068C26O9084C30O9105C38O9105C43O9133C48O9133C53O9144,,
code-creation,LazyCompile,10,7507553,0x39bd86122b6,54,contentType C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:619:32,0xe49884dc50,~
code-source-info,0x39bd86122b6,248,15941,16063,C0O15966C8O15966C16O15979C24O15997C29O15997C39O16037C47O16037C53O16061,,
code-creation,RegExp,3,7507653,0x225ca7e8220,964,^.*[\\.\\/\\\\]
code-creation,LazyCompile,10,7507720,0x39bd86124ee,246,header C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:777:29,0xe49884ddf8,~
code-source-info,0x39bd86124ee,248,19509,20156,C0O19509C2O19540C9O19547C14O19572C18O19578C23O19578C30O19603C35O19607C39O19603C50O19623C55O19686C60O19686C67O19700C72O19728C76O19738C81O19738C88O19764C97O19770C102O19764C103O19841C106O19860C111O19860C118O19897C121O19902C126O19911C131O19924C139O19924C146O19934C150O19911C156O19948C158O19961C161O19993C166O19993C170O19983C180O20032C185O20032C193O20088C206O20081C219O20081C220O20108C227O20122C231O20108C240O20072C243O20142C245O20154,,
code-creation,LazyCompile,10,7507828,0x39bd8612816,24,lookup C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime\\mime.js:102:19,0xe6a61a9b70,~
code-source-info,0x39bd8612816,226,2546,2698,C0O2607C5O2658C10O2658C23O2694,,
code-creation,LazyCompile,10,7508079,0x39bd8612b36,679,send C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:111:25,0xe49884d990,~
code-source-info,0x39bd8612b
code-creation,LazyCompile,10,7508208,0x39bd861302e,11,res.get C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:811:19,0xe49884de48,~
code-source-info,0x39bd861302e,248,20278,20320,C0O20301C5O20301C10O20318,,
code-creation,LazyCompile,10,7508274,0x39bd8613136,46,getHeader node:_http_outgoing:590:57,0x2bdba13b970,~
code-source-info,0x39bd8613136,171,18655,18868,C0O18667C8O18667C13O18718C15O18723C17O18722C21O18740C23O18767C24O18774C25O18794C27O18802C30O18802C34O18801C38O18840C42O18861C45O18865,,
code-creation,LazyCompile,10,7508393,0x39bd861326e,50,setCharset C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:248:41,0x2f65a7365d0,~
code-source-info,0x39bd861326e,197,5044,5280,C0O5064C6O5078C8O5093C10O5105C11O5142C14O5154C19O5154C25O5194C32O5213C36O5244C39O5263C44O5263C49O5278,,
code-creation,LazyCompile,10,7508543,0x39bd86134d6,354,parse C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:106:16,0x2f65a73bb30,~
code-source-info,0x39bd86134d
code-creation,LazyCompile,10,7508695,0x39bd8613a3e,28,ContentType C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:219:22,0x2f65a73bc20,~
code-source-info,0x39bd8613a3e,200,4739,4808,C0O4768C4O4775C11O4775C16O4766C20O4790C22O4800C27O4807,,
code-creation,RegExp,3,7508860,0x225ca7e8660,2468,; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) *
code-creation,LazyCompile,10,7508933,0x39bd861423e,201,format C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:65:17,0x2f65a73bae0,~
code-source-info,0x39bd861423e,200,1682,2358,C0O1692C10O1735C19O1741C24O1735C25O1811C30O1839C35O1847C40O1873C45O1873C52O1891C61O1897C66O1891C67O1947C70O1978C80O2061C84O2068C89O2068C95O2084C100O2085C105O2110C107O2124C111O2115C116O2145C118O2159C122O2170C125O2188C130O2188C137O2211C146O2217C151O2211C152O2272C157O2287C163O2295C172O2321C176O2303C180O2301C190O2133C195O2097C198O2343C200O2356,,
code-creation,RegExp,3,7509028,0x225ca7e9080,1292,^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$
code-creation,LazyCompile,10,7509091,0x39bd8614846,98,qstring C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:200:18,0x2f65a73bbd0,~
code-source-info,0x39bd8614846,200,4382,4658,C0O4402C4O4402C9O4446C12O4463C17O4463C24O4480C26O4490C27O4506C33O4513C41O4533C46O4533C53O4550C62O4556C67O4550C68O4604C71O4621C82O4621C88O4615C94O4651C97O4656,,
code-creation,RegExp,3,7509164,0x225ca7e9600,1036,^[!#$%&'*+.^_`|~0-9A-Za-z-]+$
code-creation,RegExp,3,7509214,0x225ca7e9a80,1236,;\\s*charset\\s*=
code-creation,LazyCompile,10,7509250,0x39bd8614bbe,6,isBuffer node:buffer:509:36,0x6682ea5f58,~
code-source-info,0x39bd8614bbe,18,14858,14897,C0O14867C2O14876C5O14894,,
code-creation,LazyCompile,10,7509310,0x39bd8614ca6,52,generateETag C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:273:32,0x96d321bd10,~
code-source-info,0x39bd8614ca6,197,5510,5649,C0O5543C5O5551C10O5551C22O5581C27O5581C38O5620C46O5627C51O5645,,
code-creation,LazyCompile,10,7509370,0x39bd8614e7e,128,etag C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js:70:15,0x20cab7a7d48,~
code-source-info,0x39bd8614e7e,207,1105,1679,C0O1127C5O1153C14O1159C19O1153C20O1254C23O1254C28O1283C32O1309C40O1342C49O1387C59O1434C63O1441C68O1441C75O1465C84O1471C89O1465C90O1582C97O1596C106O1618C111O1639C120O1662C127O1677,,
code-creation,LazyCompile,10,7509434,0x39bd8615046,132,isstats C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js:104:18,0x20cab7a7d98,~
code-source-info,0x39bd8615046,207,1812,2226,C0O1844C8O1883C13O1907C14O1918C15O1943C30O1996C38O2015C43O2024C48O2015C56O2031C66O2066C74O2085C79O2094C84O2085C92O2101C102O2134C107O2155C120O2186C125O2207C131O2224,,
code-creation,LazyCompile,10,7509509,0x39bd86151d6,5,get node:internal/bootstrap/pre_execution:326:8,0x3341609cbf0,~
code-source-info,0x39bd86151d6,92,10624,10658,C0O10636C4O10651,,
code-creation,LazyCompile,10,7509562,0x39bd861532e,146,entitytag C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js:39:20,0x20cab7a7cf8,~
code-source-info,0x39bd861532e,207,478,918,C0O502C6O509C11O545C13O585C14O632C17O644C25O644C31O667C39O668C46O695C54O696C60O717C70O718C77O778C83O811C87O818C95O818C103O858C108O868C111O885C119O885C124O879C130O898C136O904C142O911C145O916,,
code-creation,LazyCompile,10,7509615,0x39bd86154d6,19,createHash node:crypto:129:20,0x20cab7a95d8,~
code-source-info,0x39bd86154d6,208,3490,3555,C0O3516C13O3523C18O3552,,
code-creation,LazyCompile,10,7509720,0x39bd8615686,170,Hash node:internal/crypto/hash:58:14,0xe6a619b4c0,~
code-source-info,0x39bd8615686,221,1032,1552,C0O1058C2O1069C7O1092C18O1099C23O1128C24O1132C26O1159C28O1148C33O1172C41O1172C46O1230C56O1293C64O1322C66O1353C74O1353C79O1404C81O1409C86O1424C97O1420C102O1418C106O1453C108O1458C118O1476C123O1489C130O1466C134O1504C141O1517C153O1539C163O1504C169O1551,,
code-creation,LazyCompile,10,7509774,0x39bd8615e2e,8,LazyTransform node:internal/streams/lazy_transform:20:23,0xe6a6197728,~
code-source-info,0x39bd8615e2e,219,509,551,C0O524C2O538C7O550,,
code-creation,LazyCompile,10,7509835,0x39bd8615f86,109,Transform node:internal/streams/transform:81:19,0x334252efeb8,~
script-source,59,node:internal/streams/transform,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a transform stream is a readable/writable stream where you do\x0d\n// something with the data.  Sometimes it's called a "filter"\x2C\x0d\n// but that's not a great name for it\x2C since that implies a thing where\x0d\n// some bits pass through\x2C and others are simply ignored.  (That would\x0d\n// be a valid example of a transform\x2C of course.)\x0d\n//\x0d\n// While the output is causally related to the input\x2C it's not a\x0d\n// necessarily symmetric or synchronous transformation.  For example\x2C\x0d\n// a zlib stream might take multiple plain-text writes()\x2C and then\x0d\n// emit a single compressed chunk some time in the future.\x0d\n//\x0d\n// Here's how this works:\x0d\n//\x0d\n// The Transform stream has all the aspects of the readable and writable\x0d\n// stream classes.  When you write(chunk)\x2C that calls _write(chunk\x2Ccb)\x0d\n// internally\x2C and returns false if there's a lot of pending writes\x0d\n// buffered up.  When you call read()\x2C that calls _read(n) until\x0d\n// there's enough pending readable data buffered up.\x0d\n//\x0d\n// In a transform stream\x2C the written data is placed in a buffer.  When\x0d\n// _read(n) is called\x2C it transforms the queued up data\x2C calling the\x0d\n// buffered _write cb's as it consumes chunks.  If consuming a single\x0d\n// written chunk would result in multiple output chunks\x2C then the first\x0d\n// outputted bit calls the readcb\x2C and subsequent chunks just go into\x0d\n// the read buffer\x2C and will cause it to emit 'readable' if necessary.\x0d\n//\x0d\n// This way\x2C back-pressure is actually determined by the reading side\x2C\x0d\n// since _read has to be called to start processing a new chunk.  However\x2C\x0d\n// a pathological inflate type of transform can cause excessive buffering\x0d\n// here.  For example\x2C imagine a stream where every byte of input is\x0d\n// interpreted as an integer from 0-255\x2C and then results in that many\x0d\n// bytes of output.  Writing the 4 bytes {ff\x2Cff\x2Cff\x2Cff} would result in\x0d\n// 1kb of data being output.  In this case\x2C you could write a very small\x0d\n// amount of input\x2C and end up with a very large amount of output.  In\x0d\n// such a pathological inflating mechanism\x2C there'd be no way to tell\x0d\n// the system to stop doing the transform.  A single 4MB write could\x0d\n// cause the system to run out of memory.\x0d\n//\x0d\n// However\x2C even in such a pathological case\x2C only a single written chunk\x0d\n// would be consumed\x2C and then the rest would wait (un-transformed) until\x0d\n// the results of the previous transformed chunk were consumed.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Transform;\x0d\nconst {\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x0d\n} = require('internal/errors').codes;\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\x0d\nObjectSetPrototypeOf(Transform\x2C Duplex);\x0d\n\x0d\nconst kCallback = Symbol('kCallback');\x0d\n\x0d\nfunction Transform(options) {\x0d\n  if (!(this instanceof Transform))\x0d\n    return new Transform(options);\x0d\n\x0d\n  Duplex.call(this\x2C options);\x0d\n\x0d\n  // We have implemented the _read method\x2C and done the other things\x0d\n  // that Readable wants before the first _read call\x2C so unset the\x0d\n  // sync guard flag.\x0d\n  this._readableState.sync = false;\x0d\n\x0d\n  this[kCallback] = null;\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.transform === 'function')\x0d\n      this._transform = options.transform;\x0d\n\x0d\n    if (typeof options.flush === 'function')\x0d\n      this._flush = options.flush;\x0d\n  }\x0d\n\x0d\n  // When the writable side finishes\x2C then flush out anything remaining.\x0d\n  // Backwards compat. Some Transform streams incorrectly implement _final\x0d\n  // instead of or in addition to _flush. By using 'prefinish' instead of\x0d\n  // implementing _final we continue supporting this unfortunate use case.\x0d\n  this.on('prefinish'\x2C prefinish);\x0d\n}\x0d\n\x0d\nfunction final(cb) {\x0d\n  let called = false;\x0d\n  if (typeof this._flush === 'function' && !this.destroyed) {\x0d\n    const result = this._flush((er\x2C data) => {\x0d\n      called = true;\x0d\n      if (er) {\x0d\n        if (cb) {\x0d\n          cb(er);\x0d\n        } else {\x0d\n          this.destroy(er);\x0d\n        }\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (data != null) {\x0d\n        this.push(data);\x0d\n      }\x0d\n      this.push(null);\x0d\n      if (cb) {\x0d\n        cb();\x0d\n      }\x0d\n    });\x0d\n    if (result !== undefined && result !== null) {\x0d\n      try {\x0d\n        const then = result.then;\x0d\n        if (typeof then === 'function') {\x0d\n          then.call(\x0d\n            result\x2C\x0d\n            (data) => {\x0d\n              if (called)\x0d\n                return;\x0d\n              if (data != null)\x0d\n                this.push(data);\x0d\n              this.push(null);\x0d\n              if (cb)\x0d\n                process.nextTick(cb);\x0d\n            }\x2C\x0d\n            (err) => {\x0d\n              if (cb) {\x0d\n                process.nextTick(cb\x2C err);\x0d\n              } else {\x0d\n                process.nextTick(() => this.destroy(err));\x0d\n              }\x0d\n            });\x0d\n        }\x0d\n      } catch (err) {\x0d\n        process.nextTick(() => this.destroy(err));\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    this.push(null);\x0d\n    if (cb) {\x0d\n      cb();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction prefinish() {\x0d\n  if (this._final !== final) {\x0d\n    final.call(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nTransform.prototype._final = final;\x0d\n\x0d\nTransform.prototype._transform = function(chunk\x2C encoding\x2C callback) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()');\x0d\n};\x0d\n\x0d\nTransform.prototype._write = function(chunk\x2C encoding\x2C callback) {\x0d\n  const rState = this._readableState;\x0d\n  const wState = this._writableState;\x0d\n  const length = rState.length;\x0d\n\x0d\n  let called = false;\x0d\n  const result = this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\x0d\n    called = true;\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (val != null) {\x0d\n      this.push(val);\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      wState.ended || // Backwards compat.\x0d\n      length === rState.length || // Backwards compat.\x0d\n      rState.length < rState.highWaterMark ||\x0d\n      rState.length === 0\x0d\n    ) {\x0d\n      callback();\x0d\n    } else {\x0d\n      this[kCallback] = callback;\x0d\n    }\x0d\n  });\x0d\n  if (result !== undefined && result != null) {\x0d\n    try {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          (val) => {\x0d\n            if (called)\x0d\n              return;\x0d\n\x0d\n            if (val != null) {\x0d\n              this.push(val);\x0d\n            }\x0d\n\x0d\n            if (\x0d\n              wState.ended ||\x0d\n              length === rState.length ||\x0d\n              rState.length < rState.highWaterMark ||\x0d\n              rState.length === 0) {\x0d\n              process.nextTick(callback);\x0d\n            } else {\x0d\n              this[kCallback] = callback;\x0d\n            }\x0d\n          }\x2C\x0d\n          (err) => {\x0d\n            process.nextTick(callback\x2C err);\x0d\n          });\x0d\n      }\x0d\n    } catch (err) {\x0d\n      process.nextTick(callback\x2C err);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nTransform.prototype._read = function() {\x0d\n  if (this[kCallback]) {\x0d\n    const callback = this[kCallback];\x0d\n    this[kCallback] = null;\x0d\n    callback();\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x39bd8615f86,59,3952,4843,C0O3967C2O3978C7O4006C12O4013C17O4036C18O4042C23O4049C28O4049C34O4241C40O4261C44O4275C46O4280C50O4291C54O4304C58O4343C66O4402C70O4392C74O4439C82O4490C86O4480C90O4813C101O4813C108O4842,,
code-creation,LazyCompile,10,7510282,0x39bd8616a06,130,update node:internal/crypto/hash:95:40,0xe6a619b6a0,~
code-source-info,0x39bd8616a06,221,2159,2673,C0O2181C6O2204C9O2204C14O2245C16O2250C18O2249C22O2262C24O2272C26O2271C31O2290C36O2296C41O2290C42O2334C48O2371C53O2371C60O2415C65O2420C71O2452C89O2458C94O2452C95O2564C97O2574C99O2573C103O2583C108O2583C116O2612C121O2618C126O2612C127O2658C129O2670,,
code-creation,LazyCompile,10,7510351,0x39bd8616bce,78,digest node:internal/crypto/hash:115:40,0xe6a619b6f0,~
code-source-info,0x39bd8616bce,221,2719,3059,C0O2755C2O2760C4O2759C8O2772C10O2782C12O2781C17O2800C22O2806C27O2800C28O2842C34O2877C37O2877C42O2970C44O2975C46O2974C50O2984C57O2994C59O2984C65O3016C67O3022C71O3034C75O3045C77O3056,,
code-creation,LazyCompile,10,7510557,0x39bd8616dbe,122, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\request.js:467:36,0x96d321f100,~
code-source-info,0x39bd8616dbe,235,11303,11736,C0O11327C5O11352C10O11375C15O11441C20O11451C30O11472C35O11484C36O11497C37O11538C41O11550C50O11567C62O11581C67O11599C70O11617C80O11646C88O11646C97O11686C105O11686C114O11606C119O11713C120O11721C121O11734,,
code-creation,LazyCompile,10,7510705,0x39bd861708e,442,end node:_http_outgoing:833:45,0x2bdba13bdd8,~
code-source-info,0x39bd861708e
code-creation,LazyCompile,10,7510802,0x39bd861741e,17,Writable.cork node:internal/streams/writable:337:35,0x334252ea6e8,~
code-source-info,0x39bd861741e,56,11200,11240,C0O11213C11O11234C16O11239,,
code-creation,LazyCompile,10,7510958,0x39bd86176be,469,write_ node:_http_outgoing:730:16,0x2bdba13b070,~
code-source-info,0x39bd86176be
code-creation,LazyCompile,10,7511061,0x39bd8617a56,17,_implicitHeader node:_http_server:264:68,0x2f65a7015f0,~
code-source-info,0x39bd8617a56,173,9961,10004,C0O9974C5O9989C10O9974C16O10003,,
code-creation,LazyCompile,10,7511215,0x39bd8617c26,433,writeHead node:_http_server:269:19,0x334160bffc8,~
code-source-info,0x39bd8617c
code-creation,LazyCompile,10,7511466,0x39bd861835e,808,_storeHeader node:_http_outgoing:374:22,0x2bdba13ae90,~
code-source-info,0x39bd861835e
code-creation,LazyCompile,10,7511646,0x39bd8618a36,132,processHeader node:_http_outgoing:501:23,0x2bdba13aee0,~
code-source-info,0x39bd8618a36,171,16024,16535,C0O16065C4O16084C9O16084C13O16112C18O16116C24O16154C31O16161C39O16169C45O16323C47O16336C51O16328C56O16358C61O16393C77O16358C82O16345C87O16310C90O16416C91O16423C92O16436C100O16444C107O16485C125O16485C131O16534,,
code-creation,LazyCompile,10,7511739,0x39bd8618be6,65,storeHeader node:_http_outgoing:517:21,0x2bdba13af30,~
code-source-info,0x39bd8618be6,171,16559,16743,C0O16600C4O16619C9O16619C14O16655C21O16675C27O16682C33O16690C39O16668C43O16703C58O16703C64O16742,,
code-creation,LazyCompile,10,7511835,0x39bd8618dce,194,matchHeader node:_http_outgoing:524:21,0x2bdba13af80,~
code-source-info,0x39bd8618dce,171,16767,17650,C0O16810C7O16817C12O16830C19O16837C24O16848C25O16855C26O16859C31O16867C37O16905C91O16953C92O16970C96O16985C97O17009C101O17025C108O17049C111O17029C118O17081C119O17092C125O17121C126O17142C130O17157C132O17202C133O17211C137O17226C138O17242C142O17258C149O17282C152O17262C159O17314C160O17335C164O17350C166O17392C167O17406C171O17421C172O17442C176O17458C178O17531C179O17544C183O17559C185O17597C186O17620C190O17636C193O17649,,
code-creation,LazyCompile,10,7511914,0x39bd8618fce,17,utcDate node:internal/http:21:17,0x2bdba13faf0,~
code-source-info,0x39bd8618fce,172,382,436,C0O390C6O405C9O405C12O417C16O433,,
code-creation,LazyCompile,10,7511955,0x39bd86192a6,62,cache node:internal/http:26:15,0x2bdba13fb40,~
code-source-info,0x39bd86192a6,172,454,601,C0O472C5O472C11O487C16O498C23O496C29O530C44O565C47O565C51O563C55O530C61O600,,
code-creation,LazyCompile,10,7512552,0x39bd86193f6,48,setUnrefTimeout node:internal/timers:372:25,0x334252febc8,~
script-source,63,node:internal/timers,'use strict';\x0d\n\x0d\n// HOW and WHY the timers implementation works the way it does.\x0d\n//\x0d\n// Timers are crucial to Node.js. Internally\x2C any TCP I/O connection creates a\x0d\n// timer so that we can time out of connections. Additionally\x2C many user\x0d\n// libraries and applications also use timers. As such there may be a\x0d\n// significantly large amount of timeouts scheduled at any given time.\x0d\n// Therefore\x2C it is very important that the timers implementation is performant\x0d\n// and efficient.\x0d\n//\x0d\n// Note: It is suggested you first read through the lib/internal/linkedlist.js\x0d\n// linked list implementation\x2C since timers depend on it extensively. It can be\x0d\n// somewhat counter-intuitive at first\x2C as it is not actually a class. Instead\x2C\x0d\n// it is a set of helpers that operate on an existing object.\x0d\n//\x0d\n// In order to be as performant as possible\x2C the architecture and data\x0d\n// structures are designed so that they are optimized to handle the following\x0d\n// use cases as efficiently as possible:\x0d\n\x0d\n// - Adding a new timer. (insert)\x0d\n// - Removing an existing timer. (remove)\x0d\n// - Handling a timer timing out. (timeout)\x0d\n//\x0d\n// Whenever possible\x2C the implementation tries to make the complexity of these\x0d\n// operations as close to constant-time as possible.\x0d\n// (So that performance is not impacted by the number of scheduled timers.)\x0d\n//\x0d\n// Object maps are kept which contain linked lists keyed by their duration in\x0d\n// milliseconds.\x0d\n//\x0d\n/* eslint-disable node-core/non-ascii-character */\x0d\n//\x0d\n// \u2554\u2550\u2550\u2550\u2550 > Object Map\x0d\n// \u2551\x0d\n// \u2560\u2550\u2550\x0d\n// \u2551 lists: { '40': { }\x2C '320': { etc } } (keys of millisecond duration)\x0d\n// \u255a\u2550\u2550          \u250c\u2500\u2500\u2500\u2500\u2518\x0d\n//              \u2502\x0d\n// \u2554\u2550\u2550          \u2502\x0d\n// \u2551 TimersList { _idleNext: { }\x2C _idlePrev: (self) }\x0d\n// \u2551         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\x0d\n// \u2551    \u2554\u2550\u2550  \u2502                              ^\x0d\n// \u2551    \u2551    { _idleNext: { }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\x0d\n// \u2551    \u2551      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\x0d\n// \u2551    \u2551      \u2502                                  ^\x0d\n// \u2551    \u2551      { _idleNext: { etc }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\x0d\n// \u2560\u2550\u2550  \u2560\u2550\u2550\x0d\n// \u2551    \u2551\x0d\n// \u2551    \u255a\u2550\u2550\u2550\u2550 >  Actual JavaScript timeouts\x0d\n// \u2551\x0d\n// \u255a\u2550\u2550\u2550\u2550 > Linked List\x0d\n//\x0d\n/* eslint-enable node-core/non-ascii-character */\x0d\n//\x0d\n// With this\x2C virtually constant-time insertion (append)\x2C removal\x2C and timeout\x0d\n// is possible in the JavaScript layer. Any one list of timers is able to be\x0d\n// sorted by just appending to it because all timers within share the same\x0d\n// duration. Therefore\x2C any timer added later will always have been scheduled to\x0d\n// timeout later\x2C thus only needing to be appended.\x0d\n// Removal from an object-property linked list is also virtually constant-time\x0d\n// as can be seen in the lib/internal/linkedlist.js implementation.\x0d\n// Timeouts only need to process any timers currently due to expire\x2C which will\x0d\n// always be at the beginning of the list for reasons stated above. Any timers\x0d\n// after the first one encountered that does not yet need to timeout will also\x0d\n// always be due to timeout at a later time.\x0d\n//\x0d\n// Less-than constant time operations are thus contained in two places:\x0d\n// The PriorityQueue \u2014 an efficient binary heap implementation that does all\x0d\n// operations in worst-case O(log n) time \u2014 which manages the order of expiring\x0d\n// Timeout lists and the object map lookup of a specific list by the duration of\x0d\n// timers within (or creation of a new list). However\x2C these operations combined\x0d\n// have shown to be trivial in comparison to other timers architectures.\x0d\n\x0d\nconst {\x0d\n  MathMax\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  scheduleTimer\x2C\x0d\n  toggleTimerRef\x2C\x0d\n  getLibuvNow\x2C\x0d\n  immediateInfo\x2C\x0d\n  toggleImmediateRef\x0d\n} = internalBinding('timers');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  // The needed emit*() functions.\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\n// Symbols for storing async id state.\x0d\nconst async_id_symbol = Symbol('asyncId');\x0d\nconst trigger_async_id_symbol = Symbol('triggerId');\x0d\n\x0d\nconst kHasPrimitive = Symbol('kHasPrimitive');\x0d\n\x0d\nconst {\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateNumber\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst L = require('internal/linkedlist');\x0d\nconst PriorityQueue = require('internal/priority_queue');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\n// *Must* match Environment::ImmediateInfo::Fields in src/env.h.\x0d\nconst kCount = 0;\x0d\nconst kRefCount = 1;\x0d\nconst kHasOutstanding = 2;\x0d\n\x0d\n// Timeout values > TIMEOUT_MAX are set to 1.\x0d\nconst TIMEOUT_MAX = 2 ** 31 - 1;\x0d\n\x0d\nlet timerListId = NumberMIN_SAFE_INTEGER;\x0d\n\x0d\nconst kRefed = Symbol('refed');\x0d\n\x0d\n// Create a single linked list instance only once at startup\x0d\nconst immediateQueue = new ImmediateList();\x0d\n\x0d\nlet nextExpiry = Infinity;\x0d\nlet refCount = 0;\x0d\n\x0d\n// This is a priority queue with a custom sorting function that first compares\x0d\n// the expiry times of two lists and if they're the same then compares their\x0d\n// individual IDs to determine which list was created first.\x0d\nconst timerListQueue = new PriorityQueue(compareTimersLists\x2C setPosition);\x0d\n\x0d\n// Object map containing linked lists of timers\x2C keyed and sorted by their\x0d\n// duration in milliseconds.\x0d\n//\x0d\n// - key = time in milliseconds\x0d\n// - value = linked list\x0d\nconst timerListMap = ObjectCreate(null);\x0d\n\x0d\nfunction initAsyncResource(resource\x2C type) {\x0d\n  const asyncId = resource[async_id_symbol] = newAsyncId();\x0d\n  const triggerAsyncId =\x0d\n    resource[trigger_async_id_symbol] = getDefaultTriggerAsyncId();\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n// Timer constructor function.\x0d\n// The entire prototype is defined in lib/timers.js\x0d\nfunction Timeout(callback\x2C after\x2C args\x2C isRepeat\x2C isRefed) {\x0d\n  after *= 1; // Coalesce to number or NaN\x0d\n  if (!(after >= 1 && after <= TIMEOUT_MAX)) {\x0d\n    if (after > TIMEOUT_MAX) {\x0d\n      process.emitWarning(`${after} does not fit into` +\x0d\n                          ' a 32-bit signed integer.' +\x0d\n                          '\\nTimeout duration was set to 1.'\x2C\x0d\n                          'TimeoutOverflowWarning');\x0d\n    }\x0d\n    after = 1; // Schedule on next tick\x2C follows browser behavior\x0d\n  }\x0d\n\x0d\n  this._idleTimeout = after;\x0d\n  this._idlePrev = this;\x0d\n  this._idleNext = this;\x0d\n  this._idleStart = null;\x0d\n  // This must be set to null first to avoid function tracking\x0d\n  // on the hidden class\x2C revisit in V8 versions after 6.2\x0d\n  this._onTimeout = null;\x0d\n  this._onTimeout = callback;\x0d\n  this._timerArgs = args;\x0d\n  this._repeat = isRepeat ? after : null;\x0d\n  this._destroyed = false;\x0d\n\x0d\n  if (isRefed)\x0d\n    incRefCount();\x0d\n  this[kRefed] = isRefed;\x0d\n  this[kHasPrimitive] = false;\x0d\n\x0d\n  initAsyncResource(this\x2C 'Timeout');\x0d\n}\x0d\n\x0d\n// Make sure the linked list only shows the minimal necessary information.\x0d\nTimeout.prototype[inspect.custom] = function(_\x2C options) {\x0d\n  return inspect(this\x2C {\x0d\n    ...options\x2C\x0d\n    // Only inspect one level.\x0d\n    depth: 0\x2C\x0d\n    // It should not recurse.\x0d\n    customInspect: false\x0d\n  });\x0d\n};\x0d\n\x0d\nTimeout.prototype.refresh = function() {\x0d\n  if (this[kRefed])\x0d\n    active(this);\x0d\n  else\x0d\n    unrefActive(this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nTimeout.prototype.unref = function() {\x0d\n  if (this[kRefed]) {\x0d\n    this[kRefed] = false;\x0d\n    if (!this._destroyed)\x0d\n      decRefCount();\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nTimeout.prototype.ref = function() {\x0d\n  if (!this[kRefed]) {\x0d\n    this[kRefed] = true;\x0d\n    if (!this._destroyed)\x0d\n      incRefCount();\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nTimeout.prototype.hasRef = function() {\x0d\n  return this[kRefed];\x0d\n};\x0d\n\x0d\nfunction TimersList(expiry\x2C msecs) {\x0d\n  this._idleNext = this; // Create the list with the linkedlist properties to\x0d\n  this._idlePrev = this; // Prevent any unnecessary hidden class changes.\x0d\n  this.expiry = expiry;\x0d\n  this.id = timerListId++;\x0d\n  this.msecs = msecs;\x0d\n  this.priorityQueuePosition = null;\x0d\n}\x0d\n\x0d\n// Make sure the linked list only shows the minimal necessary information.\x0d\nTimersList.prototype[inspect.custom] = function(_\x2C options) {\x0d\n  return inspect(this\x2C {\x0d\n    ...options\x2C\x0d\n    // Only inspect one level.\x0d\n    depth: 0\x2C\x0d\n    // It should not recurse.\x0d\n    customInspect: false\x0d\n  });\x0d\n};\x0d\n\x0d\n// A linked list for storing `setImmediate()` requests\x0d\nfunction ImmediateList() {\x0d\n  this.head = null;\x0d\n  this.tail = null;\x0d\n}\x0d\n\x0d\n// Appends an item to the end of the linked list\x2C adjusting the current tail's\x0d\n// next pointer and the item's previous pointer where applicable\x0d\nImmediateList.prototype.append = function(item) {\x0d\n  if (this.tail !== null) {\x0d\n    this.tail._idleNext = item;\x0d\n    item._idlePrev = this.tail;\x0d\n  } else {\x0d\n    this.head = item;\x0d\n  }\x0d\n  this.tail = item;\x0d\n};\x0d\n\x0d\n// Removes an item from the linked list\x2C adjusting the pointers of adjacent\x0d\n// items and the linked list's head or tail pointers as necessary\x0d\nImmediateList.prototype.remove = function(item) {\x0d\n  if (item._idleNext) {\x0d\n    item._idleNext._idlePrev = item._idlePrev;\x0d\n  }\x0d\n\x0d\n  if (item._idlePrev) {\x0d\n    item._idlePrev._idleNext = item._idleNext;\x0d\n  }\x0d\n\x0d\n  if (item === this.head)\x0d\n    this.head = item._idleNext;\x0d\n  if (item === this.tail)\x0d\n    this.tail = item._idlePrev;\x0d\n\x0d\n  item._idleNext = null;\x0d\n  item._idlePrev = null;\x0d\n};\x0d\n\x0d\nfunction incRefCount() {\x0d\n  if (refCount++ === 0)\x0d\n    toggleTimerRef(true);\x0d\n}\x0d\n\x0d\nfunction decRefCount() {\x0d\n  if (--refCount === 0)\x0d\n    toggleTimerRef(false);\x0d\n}\x0d\n\x0d\n// Schedule or re-schedule a timer.\x0d\n// The item must have been enroll()'d first.\x0d\nfunction active(item) {\x0d\n  insertGuarded(item\x2C true);\x0d\n}\x0d\n\x0d\n// Internal APIs that need timeouts should use `unrefActive()` instead of\x0d\n// `active()` so that they do not unnecessarily keep the process open.\x0d\nfunction unrefActive(item) {\x0d\n  insertGuarded(item\x2C false);\x0d\n}\x0d\n\x0d\n// The underlying logic for scheduling or re-scheduling a timer.\x0d\n//\x0d\n// Appends a timer onto the end of an existing timers list\x2C or creates a new\x0d\n// list if one does not already exist for the specified timeout duration.\x0d\nfunction insertGuarded(item\x2C refed\x2C start) {\x0d\n  const msecs = item._idleTimeout;\x0d\n  if (msecs < 0 || msecs === undefined)\x0d\n    return;\x0d\n\x0d\n  insert(item\x2C msecs\x2C start);\x0d\n\x0d\n  const isDestroyed = item._destroyed;\x0d\n  if (isDestroyed || !item[async_id_symbol]) {\x0d\n    item._destroyed = false;\x0d\n    initAsyncResource(item\x2C 'Timeout');\x0d\n  }\x0d\n\x0d\n  if (isDestroyed) {\x0d\n    if (refed)\x0d\n      incRefCount();\x0d\n  } else if (refed === !item[kRefed]) {\x0d\n    if (refed)\x0d\n      incRefCount();\x0d\n    else\x0d\n      decRefCount();\x0d\n  }\x0d\n  item[kRefed] = refed;\x0d\n}\x0d\n\x0d\nfunction insert(item\x2C msecs\x2C start = getLibuvNow()) {\x0d\n  // Truncate so that accuracy of sub-millisecond timers is not assumed.\x0d\n  msecs = MathTrunc(msecs);\x0d\n  item._idleStart = start;\x0d\n\x0d\n  // Use an existing list if there is one\x2C otherwise we need to make a new one.\x0d\n  let list = timerListMap[msecs];\x0d\n  if (list === undefined) {\x0d\n    debug('no %d list was found in insert\x2C creating a new one'\x2C msecs);\x0d\n    const expiry = start + msecs;\x0d\n    timerListMap[msecs] = list = new TimersList(expiry\x2C msecs);\x0d\n    timerListQueue.insert(list);\x0d\n\x0d\n    if (nextExpiry > expiry) {\x0d\n      scheduleTimer(msecs);\x0d\n      nextExpiry = expiry;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  L.append(list\x2C item);\x0d\n}\x0d\n\x0d\nfunction setUnrefTimeout(callback\x2C after) {\x0d\n  // Type checking identical to setTimeout()\x0d\n  validateCallback(callback);\x0d\n\x0d\n  const timer = new Timeout(callback\x2C after\x2C undefined\x2C false\x2C false);\x0d\n  insert(timer\x2C timer._idleTimeout);\x0d\n\x0d\n  return timer;\x0d\n}\x0d\n\x0d\n// Type checking used by timers.enroll() and Socket#setTimeout()\x0d\nfunction getTimerDuration(msecs\x2C name) {\x0d\n  validateNumber(msecs\x2C name);\x0d\n  if (msecs < 0 || !NumberIsFinite(msecs)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'a non-negative finite number'\x2C msecs);\x0d\n  }\x0d\n\x0d\n  // Ensure that msecs fits into signed int32\x0d\n  if (msecs > TIMEOUT_MAX) {\x0d\n    process.emitWarning(`${msecs} does not fit into a 32-bit signed integer.` +\x0d\n                        `\\nTimer duration was truncated to ${TIMEOUT_MAX}.`\x2C\x0d\n                        'TimeoutOverflowWarning');\x0d\n    return TIMEOUT_MAX;\x0d\n  }\x0d\n\x0d\n  return msecs;\x0d\n}\x0d\n\x0d\nfunction compareTimersLists(a\x2C b) {\x0d\n  const expiryDiff = a.expiry - b.expiry;\x0d\n  if (expiryDiff === 0) {\x0d\n    if (a.id < b.id)\x0d\n      return -1;\x0d\n    if (a.id > b.id)\x0d\n      return 1;\x0d\n  }\x0d\n  return expiryDiff;\x0d\n}\x0d\n\x0d\nfunction setPosition(node\x2C pos) {\x0d\n  node.priorityQueuePosition = pos;\x0d\n}\x0d\n\x0d\nfunction getTimerCallbacks(runNextTicks) {\x0d\n  // If an uncaught exception was thrown during execution of immediateQueue\x2C\x0d\n  // this queue will store all remaining Immediates that need to run upon\x0d\n  // resolution of all error handling (if process is still alive).\x0d\n  const outstandingQueue = new ImmediateList();\x0d\n\x0d\n  function processImmediate() {\x0d\n    const queue = outstandingQueue.head !== null ?\x0d\n      outstandingQueue : immediateQueue;\x0d\n    let immediate = queue.head;\x0d\n\x0d\n    // Clear the linked list early in case new `setImmediate()`\x0d\n    // calls occur while immediate callbacks are executed\x0d\n    if (queue !== outstandingQueue) {\x0d\n      queue.head = queue.tail = null;\x0d\n      immediateInfo[kHasOutstanding] = 1;\x0d\n    }\x0d\n\x0d\n    let prevImmediate;\x0d\n    let ranAtLeastOneImmediate = false;\x0d\n    while (immediate !== null) {\x0d\n      if (ranAtLeastOneImmediate)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneImmediate = true;\x0d\n\x0d\n      // It's possible for this current Immediate to be cleared while executing\x0d\n      // the next tick queue above\x2C which means we need to use the previous\x0d\n      // Immediate's _idleNext which is guaranteed to not have been cleared.\x0d\n      if (immediate._destroyed) {\x0d\n        outstandingQueue.head = immediate = prevImmediate._idleNext;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      immediate._destroyed = true;\x0d\n\x0d\n      immediateInfo[kCount]--;\x0d\n      if (immediate[kRefed])\x0d\n        immediateInfo[kRefCount]--;\x0d\n      immediate[kRefed] = null;\x0d\n\x0d\n      prevImmediate = immediate;\x0d\n\x0d\n      const asyncId = immediate[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C immediate[trigger_async_id_symbol]\x2C immediate);\x0d\n\x0d\n      try {\x0d\n        const argv = immediate._argv;\x0d\n        if (!argv)\x0d\n          immediate._onImmediate();\x0d\n        else\x0d\n          immediate._onImmediate(...argv);\x0d\n      } finally {\x0d\n        immediate._onImmediate = null;\x0d\n\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n\x0d\n        outstandingQueue.head = immediate = immediate._idleNext;\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n\x0d\n    if (queue === outstandingQueue)\x0d\n      outstandingQueue.head = null;\x0d\n    immediateInfo[kHasOutstanding] = 0;\x0d\n  }\x0d\n\x0d\n\x0d\n  function processTimers(now) {\x0d\n    debug('process timer lists %d'\x2C now);\x0d\n    nextExpiry = Infinity;\x0d\n\x0d\n    let list;\x0d\n    let ranAtLeastOneList = false;\x0d\n    while (list = timerListQueue.peek()) {\x0d\n      if (list.expiry > now) {\x0d\n        nextExpiry = list.expiry;\x0d\n        return refCount > 0 ? nextExpiry : -nextExpiry;\x0d\n      }\x0d\n      if (ranAtLeastOneList)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneList = true;\x0d\n      listOnTimeout(list\x2C now);\x0d\n    }\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  function listOnTimeout(list\x2C now) {\x0d\n    const msecs = list.msecs;\x0d\n\x0d\n    debug('timeout callback %d'\x2C msecs);\x0d\n\x0d\n    let ranAtLeastOneTimer = false;\x0d\n    let timer;\x0d\n    while (timer = L.peek(list)) {\x0d\n      const diff = now - timer._idleStart;\x0d\n\x0d\n      // Check if this loop iteration is too early for the next timer.\x0d\n      // This happens if there are more timers scheduled for later in the list.\x0d\n      if (diff < msecs) {\x0d\n        list.expiry = MathMax(timer._idleStart + msecs\x2C now + 1);\x0d\n        list.id = timerListId++;\x0d\n        timerListQueue.percolateDown(1);\x0d\n        debug('%d list wait because diff is %d'\x2C msecs\x2C diff);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (ranAtLeastOneTimer)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneTimer = true;\x0d\n\x0d\n      // The actual logic for when a timeout happens.\x0d\n      L.remove(timer);\x0d\n\x0d\n      const asyncId = timer[async_id_symbol];\x0d\n\x0d\n      if (!timer._onTimeout) {\x0d\n        if (!timer._destroyed) {\x0d\n          timer._destroyed = true;\x0d\n\x0d\n          if (timer[kRefed])\x0d\n            refCount--;\x0d\n\x0d\n          if (destroyHooksExist())\x0d\n            emitDestroy(asyncId);\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      emitBefore(asyncId\x2C timer[trigger_async_id_symbol]\x2C timer);\x0d\n\x0d\n      let start;\x0d\n      if (timer._repeat)\x0d\n        start = getLibuvNow();\x0d\n\x0d\n      try {\x0d\n        const args = timer._timerArgs;\x0d\n        if (args === undefined)\x0d\n          timer._onTimeout();\x0d\n        else\x0d\n          ReflectApply(timer._onTimeout\x2C timer\x2C args);\x0d\n      } finally {\x0d\n        if (timer._repeat && timer._idleTimeout !== -1) {\x0d\n          timer._idleTimeout = timer._repeat;\x0d\n          insert(timer\x2C timer._idleTimeout\x2C start);\x0d\n        } else if (!timer._idleNext && !timer._idlePrev && !timer._destroyed) {\x0d\n          timer._destroyed = true;\x0d\n\x0d\n          if (timer[kRefed])\x0d\n            refCount--;\x0d\n\x0d\n          if (destroyHooksExist())\x0d\n            emitDestroy(asyncId);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n\x0d\n    // If `L.peek(list)` returned nothing\x2C the list was either empty or we have\x0d\n    // called all of the timer timeouts.\x0d\n    // As such\x2C we can remove the list from the object map and\x0d\n    // the PriorityQueue.\x0d\n    debug('%d list empty'\x2C msecs);\x0d\n\x0d\n    // The current list may have been removed and recreated since the reference\x0d\n    // to `list` was created. Make sure they're the same instance of the list\x0d\n    // before destroying.\x0d\n    if (list === timerListMap[msecs]) {\x0d\n      delete timerListMap[msecs];\x0d\n      timerListQueue.shift();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x0d\n  };\x0d\n}\x0d\n\x0d\nclass Immediate {\x0d\n  constructor(callback\x2C args) {\x0d\n    this._idleNext = null;\x0d\n    this._idlePrev = null;\x0d\n    this._onImmediate = callback;\x0d\n    this._argv = args;\x0d\n    this._destroyed = false;\x0d\n    this[kRefed] = false;\x0d\n\x0d\n    initAsyncResource(this\x2C 'Immediate');\x0d\n\x0d\n    this.ref();\x0d\n    immediateInfo[kCount]++;\x0d\n\x0d\n    immediateQueue.append(this);\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kRefed] === false) {\x0d\n      this[kRefed] = true;\x0d\n      if (immediateInfo[kRefCount]++ === 0)\x0d\n        toggleImmediateRef(true);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kRefed] === true) {\x0d\n      this[kRefed] = false;\x0d\n      if (--immediateInfo[kRefCount] === 0)\x0d\n        toggleImmediateRef(false);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  hasRef() {\x0d\n    return !!this[kRefed];\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  TIMEOUT_MAX\x2C\x0d\n  kTimeout: Symbol('timeout')\x2C // For hiding Timeouts on other internals.\x0d\n  async_id_symbol\x2C\x0d\n  trigger_async_id_symbol\x2C\x0d\n  Timeout\x2C\x0d\n  Immediate\x2C\x0d\n  kRefed\x2C\x0d\n  kHasPrimitive\x2C\x0d\n  initAsyncResource\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x2C\x0d\n  immediateQueue\x2C\x0d\n  getTimerCallbacks\x2C\x0d\n  immediateInfoFields: {\x0d\n    kCount\x2C\x0d\n    kRefCount\x2C\x0d\n    kHasOutstanding\x0d\n  }\x2C\x0d\n  active\x2C\x0d\n  unrefActive\x2C\x0d\n  insert\x2C\x0d\n  timerListMap\x2C\x0d\n  timerListQueue\x2C\x0d\n  decRefCount\x2C\x0d\n  incRefCount\x0d\n};\x0d\n
code-source-info,0x39bd86193f6,63,11417,11647,C0O11486C5O11486C9O11533C26O11533C32O11591C35O11611C40O11591C45O11631C47O11644,,
code-creation,LazyCompile,10,7513545,0x39bd861ac0e,180,Timeout node:internal/timers:167:17,0x334252fe468,~
code-source-info,0x39bd861ac0e,63,5944,6955,C0O5992C7O6036C9O6048C16O6065C18O6062C23O6086C25O6098C27O6096C32O6120C35O6128C42O6143C52O6169C58O6226C65O6128C71O6357C75O6429C77O6447C81O6459C83O6474C87O6485C89O6500C93O6511C94O6527C98O6662C99O6678C103O6689C105O6705C109O6720C111O6736C115O6747C120O6762C127O6760C131O6790C132O6806C136O6820C140O6838C143O6838C146O6856C148O6861C153O6869C157O6883C159O6888C163O6903C167O6917C173O6917C179O6954,,
code-creation,LazyCompile,10,7513640,0x39bd861ae7e,76,initAsyncResource node:internal/timers:157:27,0x334252fe418,~
code-source-info,0x39bd861ae7e,63,5581,5839,C0O5619C2O5628C7O5647C10O5647C14O5645C21O5692C23O5701C28O5728C31O5728C35O5726C42O5759C47O5763C52O5786C69O5786C75O5838,,
code-creation,LazyCompile,10,7513714,0x39bd861b076,159,insert node:internal/timers:350:16,0x334252feb78,~
code-source-info,0x39bd861b076,63,10733,11389,C12O10755C15O10755C23O10849C28O10857C33O10878C35O10894C39O11000C46O11012C50O11024C52O11055C60O11055C65O11143C67O11149C71O11163C87O11192C93O11183C97O11228C102O11243C107O11243C112O11264C119O11279C124O11298C129O11298C133O11327C135O11338C141O11365C146O11367C151O11367C158O11388,,
code-creation,LazyCompile,10,7513776,0x39bd861b24e,10, node:internal/timers:123:65,0x334252fdea8,~
code-source-info,0x39bd861b24e,63,4553,4580,C0O4566C2O4572C9O4579,,
code-creation,LazyCompile,10,7513838,0x39bd861b376,55,TimersList node:internal/timers:241:20,0x334252fe750,~
code-source-info,0x39bd861b376,63,7813,8101,C0O7834C2O7849C6O7913C8O7928C12O7988C14O8000C18O8013C30O8034C38O8021C42O8041C44O8052C48O8064C49O8091C54O8100,,
code-creation,LazyCompile,10,7513911,0x39bd861b50e,67,insert node:internal/priority_queue:34:9,0x2ee4c9fd438,~
script-source,64,node:internal/priority_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kCompare = Symbol('compare');\x0d\nconst kHeap = Symbol('heap');\x0d\nconst kSetPosition = Symbol('setPosition');\x0d\nconst kSize = Symbol('size');\x0d\n\x0d\n// The PriorityQueue is a basic implementation of a binary heap that accepts\x0d\n// a custom sorting function via its constructor. This function is passed\x0d\n// the two nodes to compare\x2C similar to the native Array#sort. Crucially\x0d\n// this enables priority queues that are based on a comparison of more than\x0d\n// just a single criteria.\x0d\n\x0d\nmodule.exports = class PriorityQueue {\x0d\n  constructor(comparator\x2C setPosition) {\x0d\n    if (comparator !== undefined)\x0d\n      this[kCompare] = comparator;\x0d\n    if (setPosition !== undefined)\x0d\n      this[kSetPosition] = setPosition;\x0d\n\x0d\n    this[kHeap] = new Array(64);\x0d\n    this[kSize] = 0;\x0d\n  }\x0d\n\x0d\n  [kCompare](a\x2C b) {\x0d\n    return a - b;\x0d\n  }\x0d\n\x0d\n  insert(value) {\x0d\n    const heap = this[kHeap];\x0d\n    const pos = ++this[kSize];\x0d\n    heap[pos] = value;\x0d\n\x0d\n    if (heap.length === pos)\x0d\n      heap.length *= 2;\x0d\n\x0d\n    this.percolateUp(pos);\x0d\n  }\x0d\n\x0d\n  peek() {\x0d\n    return this[kHeap][1];\x0d\n  }\x0d\n\x0d\n  percolateDown(pos) {\x0d\n    const compare = this[kCompare];\x0d\n    const setPosition = this[kSetPosition];\x0d\n    const heap = this[kHeap];\x0d\n    const size = this[kSize];\x0d\n    const item = heap[pos];\x0d\n\x0d\n    while (pos * 2 <= size) {\x0d\n      let childIndex = pos * 2 + 1;\x0d\n      if (childIndex > size || compare(heap[pos * 2]\x2C heap[childIndex]) < 0)\x0d\n        childIndex = pos * 2;\x0d\n      const child = heap[childIndex];\x0d\n      if (compare(item\x2C child) <= 0)\x0d\n        break;\x0d\n      if (setPosition !== undefined)\x0d\n        setPosition(child\x2C pos);\x0d\n      heap[pos] = child;\x0d\n      pos = childIndex;\x0d\n    }\x0d\n    heap[pos] = item;\x0d\n    if (setPosition !== undefined)\x0d\n      setPosition(item\x2C pos);\x0d\n  }\x0d\n\x0d\n  percolateUp(pos) {\x0d\n    const heap = this[kHeap];\x0d\n    const compare = this[kCompare];\x0d\n    const setPosition = this[kSetPosition];\x0d\n    const item = heap[pos];\x0d\n\x0d\n    while (pos > 1) {\x0d\n      const parent = heap[pos / 2 | 0];\x0d\n      if (compare(parent\x2C item) <= 0)\x0d\n        break;\x0d\n      heap[pos] = parent;\x0d\n      if (setPosition !== undefined)\x0d\n        setPosition(parent\x2C pos);\x0d\n      pos = pos / 2 | 0;\x0d\n    }\x0d\n    heap[pos] = item;\x0d\n    if (setPosition !== undefined)\x0d\n      setPosition(item\x2C pos);\x0d\n  }\x0d\n\x0d\n  removeAt(pos) {\x0d\n    const heap = this[kHeap];\x0d\n    const size = --this[kSize];\x0d\n    heap[pos] = heap[size + 1];\x0d\n    heap[size + 1] = undefined;\x0d\n\x0d\n    if (size > 0 && pos <= size) {\x0d\n      if (pos > 1 && this[kCompare](heap[pos / 2 | 0]\x2C heap[pos]) > 0)\x0d\n        this.percolateUp(pos);\x0d\n      else\x0d\n        this.percolateDown(pos);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const heap = this[kHeap];\x0d\n    const value = heap[1];\x0d\n    if (value === undefined)\x0d\n      return;\x0d\n\x0d\n    this.removeAt(1);\x0d\n\x0d\n    return value;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x39bd861b50e,64,898,1086,C0O926C2O931C4O930C8O956C10O963C19O968C26O976C28O986C32O1011C39O1018C44O1034C51O1046C55O1064C60O1064C66O1085,,
code-creation,LazyCompile,10,7514116,0x39bd861ba26,108,percolateUp node:internal/priority_queue:73:14,0x2ee4c9fd548,~
code-source-info,0x39bd861ba26,64,1846,2344,C0O1872C2O1877C4O1876C8O1906C10O1911C12O1910C16O1947C18O1952C20O1951C24O1985C26O1989C30O2014C32O2014C37O2043C39O2052C42O2056C45O2047C49O2073C56O2095C61O2110C63O2124C65O2134C69O2151C73O2191C78O2224C80O2234C83O2238C88O2003C91O2255C93O2265C97O2278C101O2316C107O2343,,
code-creation,LazyCompile,10,7514169,0x39bd861bbbe,8,setPosition node:internal/timers:411:21,0x334252fed00,~
code-source-info,0x39bd861bbbe,63,12502,12555,C0O12519C2O12546C7O12554,,
code-creation,LazyCompile,10,7514210,0x39bd861bca6,52,append node:internal/linkedlist:29:16,0x334252f45a8,~
script-source,62,node:internal/linkedlist,'use strict';\x0d\n\x0d\nfunction init(list) {\x0d\n  list._idleNext = list;\x0d\n  list._idlePrev = list;\x0d\n}\x0d\n\x0d\n// Show the most idle item.\x0d\nfunction peek(list) {\x0d\n  if (list._idlePrev === list) return null;\x0d\n  return list._idlePrev;\x0d\n}\x0d\n\x0d\n// Remove an item from its list.\x0d\nfunction remove(item) {\x0d\n  if (item._idleNext) {\x0d\n    item._idleNext._idlePrev = item._idlePrev;\x0d\n  }\x0d\n\x0d\n  if (item._idlePrev) {\x0d\n    item._idlePrev._idleNext = item._idleNext;\x0d\n  }\x0d\n\x0d\n  item._idleNext = null;\x0d\n  item._idlePrev = null;\x0d\n}\x0d\n\x0d\n// Remove an item from its list and place at the end.\x0d\nfunction append(list\x2C item) {\x0d\n  if (item._idleNext || item._idlePrev) {\x0d\n    remove(item);\x0d\n  }\x0d\n\x0d\n  // Items are linked  with _idleNext -> (older) and _idlePrev -> (newer).\x0d\n  // Note: This linkage (next being older) may seem counter-intuitive at first.\x0d\n  item._idleNext = list._idleNext;\x0d\n  item._idlePrev = list;\x0d\n\x0d\n  // The list _idleNext points to tail (newest) and _idlePrev to head (oldest).\x0d\n  list._idleNext._idlePrev = item;\x0d\n  list._idleNext = item;\x0d\n}\x0d\n\x0d\nfunction isEmpty(list) {\x0d\n  return list._idleNext === list;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  init\x2C\x0d\n  peek\x2C\x0d\n  remove\x2C\x0d\n  append\x2C\x0d\n  isEmpty\x0d\n};\x0d\n
code-source-info,0x39bd861bca6,62,571,1021,C0O598C6O616C12O634C15O634C19O837C23O830C27O851C29O866C33O965C40O985C44O996C46O1011C51O1020,,
code-creation,LazyCompile,10,7514374,0x39bd861bf9e,50,remove node:internal/linkedlist:15:16,0x334252f4558,~
code-source-info,0x39bd861bf9e,62,274,497,C0O295C6O318C11O345C15O338C19O375C25O398C30O425C34O418C38O446C39O461C43O472C44O487C49O496,,
code-creation,LazyCompile,10,7514478,0x39bd861c15e,134,_send node:_http_outgoing:319:49,0x2bdba13b830,~
code-source-info,0x39bd861c15e,171,9665,10419,C0O9910C6O9930C14O9981C21O10004C28O10021C30O10053C37O10061C44O10110C49O10131C54O10142C66O10167C70O10142C75O10246C80O10272C87O10262C91O10292C96O10314C101O10292C106O10335C107O10352C111O10380C128O10380C133O10416,,
code-creation,LazyCompile,10,7514539,0x39bd861c2fe,24,updateOutgoingData node:_http_server:553:28,0xbfdd37fb40,~
code-source-info,0x39bd861c2fe,173,19679,19771,C0O19707C7O19729C10O19726C14O19739C17O19739C23O19770,,
code-creation,LazyCompile,10,7514595,0x39bd861c436,104,socketOnDrain node:_http_server:558:23,0xbfdd37fb90,~
code-source-info,0x39bd861c436,173,19797,20245,C0O19842C5O19864C9O19855C13O19960C21O19972C23O19990C24O20005C28O20030C34O20052C39O20059C44O20059C48O20081C53O20081C57O20120C62O20137C64O20153C72O20169C74O20168C79O20189C81O20193C85O20205C89O20223C97O20223C103O20244,,
code-creation,LazyCompile,10,7514685,0x39bd861c676,175,_writeRaw node:_http_outgoing:344:19,0x2bdba13ae40,~
code-source-info,0x39bd861c676,171,10494,11341,C0O10544C5O10555C7O10572C13O10716C14O10729C15O10740C21O10783C24O10809C27O10836C31O10853C38O10866C43O10883C49O10972C54O10983C60O11005C65O11005C70O11083C87O11083C92O11115C93O11175C98O11186C110O11193C116O11199C122O11209C126O11186C131O11225C136O11249C143O11241C147O11265C152O11285C157O11265C162O11309C169O11322C171O11320C174O11338,,
code-creation,LazyCompile,10,7514816,0x39bd861cace,488,slowCases node:internal/util:165:19,0x25aadb2ad98,~
code-source-info,0x39bd861cace
code-creation,LazyCompile,10,7514974,0x39bd861cefe,37,Writable.uncork node:internal/streams/writable:341:37,0x334252ea770,~
code-source-info,0x39bd861cefe,56,11281,11437,C0O11308C5O11339C11O11354C17O11366C21O11388C27O11404C30O11404C36O11436,,
code-creation,LazyCompile,10,7515075,0x39bd861d136,402,clearBuffer node:internal/streams/writable:529:21,0x334252eaaa0,~
code-source-info,0x39bd861d
code-creation,LazyCompile,10,7515188,0x39bd861d4ee,10, node:_http_outgoing:78:64,0x2bdba13b160,~
code-source-info,0x39bd861d4ee,171,2757,2784,C0O2770C2O2776C9O2783,,
code-creation,LazyCompile,10,7515251,0x39bd861d5fe,109,doWrite node:internal/streams/writable:398:17,0x334252ea8c0,~
code-source-info,0x39bd861d5fe,56,13074,13448,C0O13129C2O13144C6O13154C8O13168C12O13177C13O13191C17O13202C18O13213C22O13234C28O13256C35O13268C43O13264C49O13256C56O13308C60O13332C65O13353C70O13332C78O13383C83O13413C97O13383C102O13426C103O13437C108O13447,,
code-creation,LazyCompile,10,7515333,0x39bd861d786,26,Socket._writev node:net:801:36,0xbfdd37d670,~
code-source-info,0x39bd861d786,120,21398,21460,C0O21421C19O21421C25O21459,,
code-creation,LazyCompile,10,7515415,0x39bd861d8ce,200,writevGeneric node:internal/stream_base_commons:126:23,0x1d24e4c3660,~
code-source-info,0x39bd861d8ce,84,3165,3805,C0O3199C5O3220C7O3219C11O3199C17O3262C22O3281C24O3292C28O3315C31O3348C33O3360C37O3353C42O3380C44O3394C48O3398C52O3388C56O3369C61O3335C66O3422C71O3446C75O3453C81O3431C87O3478C89O3490C93O3483C98O3526C100O3530C104O3542C106O3551C110O3564C114O3556C118O3578C120O3587C123O3591C127O3604C131O3596C135O3499C140O3465C143O3645C148O3652C162O3652C168O3710C169O3718C174O3725C176O3737C180O3752C192O3752C197O3791C199O3802,,
code-creation,LazyCompile,10,7515582,0x39bd861db26,58,_finish node:_http_server:203:52,0x2f65a701460,~
code-source-info,0x39bd861db26,173,7731,7884,C0O7739C5O7772C10O7739C14O7784C21O7804C23O7803C27O7784C31O7836C36O7852C41O7862C46O7870C51O7870C57O7883,,
code-creation,LazyCompile,10,7515703,0x39bd861dca6,132,emitStatistics node:internal/http:36:24,0x2bdba13fbe0,~
code-source-info,0x39bd861dca6,172,683,1050,C0O701C8O706C19O749C20O756C21O789C26O816C29O824C34O824C40O860C52O937C55O941C64O959C67O963C77O948C82O979C85O983C94O996C97O1000C107O990C115O860C121O1032C126O1032C131O1049,,
code-creation,LazyCompile,10,7515756,0x39bd861de5e,29,_finish node:_http_outgoing:908:53,0x2bdba13be28,~
code-source-info,0x39bd861de5e,171,27084,27142,C0O27092C5O27104C10O27092C14O27121C22O27121C28O27141,,
code-creation,LazyCompile,10,7515839,0x39bd861df76,46,afterWriteTick node:internal/streams/writable:482:24,0x334252ea9b0,~
code-source-info,0x39bd861df76,56,15573,15692,C0O15576C5O15584C10O15591C15O15598C20O15609C21O15634C25O15645C40O15652C45O15689,,
code-creation,LazyCompile,10,7515903,0x39bd861e09e,50,callback node:internal/streams/writable:550:44,0x39bd861cff8,~
code-source-info,0x39bd861e09e,56,17307,17420,C0O17338C5O17343C7O17345C10O17354C14O17343C19O17378C26O17386C30O17390C35O17390C40O17364C45O17325C49O17419,,
code-creation,LazyCompile,10,7515945,0x39bd861e19e,2,nop node:internal/streams/writable:73:13,0x334252e9d68,~
code-source-info,0x39bd861e19e,56,2481,2486,C1O2485,,
code-creation,LazyCompile,10,7515996,0x39bd861e23e,2,nop node:_http_outgoing:86:13,0x2bdba13b1b0,~
code-source-info,0x39bd861e23e,171,2893,2901,C1O2900,,
code-creation,LazyCompile,10,7516030,0x39bd861e30e,38,onFinish node:_http_outgoing:828:18,0x2bdba13b110,~
code-source-info,0x39bd861e30e,171,25094,25200,C0O25108C4O25129C10O25146C15O25153C21O25164C22O25171C23O25182C31O25182C37O25199,,
code-creation,LazyCompile,10,7516116,0x39bd861e556,294,resOnFinish node:_http_server:788:21,0x2f65a701118,~
code-source-info,0x39bd861e556,173,26780,28475,C0O26819C5O26847C11O26870C16O26894C28O26920C34O26942C40O26954C46O26969C50O26894C55O27165C60O27178C65O27187C71O27194C76O27209C82O27217C88O27221C92O27165C96O27242C101O27251C106O27251C110O27448C116O27467C121O27482C127O27508C132O27508C136O27838C139O27838C143O27873C148O27873C153O27898C156O27898C160O27921C163O27929C171O27929C177O27970C183O28002C191O28046C196O28046C202O28089C207O28089C213O28123C218O28132C224O28139C229O28164C235O28198C243O28241C248O28259C253O28241C258O28285C259O28311C265O28398C270O28407C275O28407C280O28421C282O28439C287O28439C293O28474,,
code-creation,LazyCompile,10,7516197,0x39bd861e81e,35,_dump node:_http_incoming:364:49,0x2bdba138418,~
code-source-info,0x39bd861e81e,170,12770,13005,C0O12788C6O12804C7O12817C11O12950C19O12950C24O12988C29O12988C34O13004,,
code-creation,LazyCompile,10,7516255,0x39bd861e956,60,Readable.removeAllListeners node:internal/streams/readable:923:49,0x334252dc6a0,~
code-source-info,0x39bd861e956,49,30365,30966,C0O30365C2O30387C7O30394C12O30404C17O30423C22O30423C29O30509C31O30516C40O30893C43O30901C51O30901C57O30952C59O30963,,
code-creation,LazyCompile,10,7516388,0x39bd861eb16,363,removeAllListeners node:events:617:32,0x25aadb341e8,~
code-source-info,0x39bd861eb
code-creation,LazyCompile,10,7516520,0x39bd861ee6e,61,clearRequestTimeout node:_http_server:774:29,0xbfdd37ffa0,~
code-source-info,0x39bd861ee6e,173,26537,26756,C0O26548C4O26565C9O26587C11O26596C13O26595C18O26621C19O26628C20O26639C28O26639C32O26681C39O26698C41O26697C45O26681C49O26720C51O26724C55O26741C60O26755,,
code-creation,LazyCompile,10,7516597,0x39bd861efc6,49,detachSocket node:_http_server:248:62,0x2f65a701500,~
code-source-info,0x39bd861efc6,173,9408,9574,C0O9422C5O9436C12O9449C16O9422C20O9470C31O9470C37O9521C38O9541C42O9552C43O9564C48O9573,,
code-creation,LazyCompile,10,7516664,0x39bd861f0ee,47,spliceOne node:internal/util:394:19,0x25aadb2b2a8,~
code-source-info,0x39bd861f0ee,12,11318,11431,C0O11354C2O11350C6O11361C10O11354C15O11383C17O11408C20O11401C23O11395C27O11374C33O11337C36O11422C41O11422C46O11430,,
code-creation,LazyCompile,10,7516732,0x39bd861f246,70,clearIncoming node:_http_server:749:23,0xbfdd37ff00,~
code-source-info,0x39bd861f246,173,25832,26159,C0O25843C8O25884C14O25898C19O25905C24O25992C26O26013C33O26022C38O26046C44O26070C45O26086C51O26119C62O26119C69O26158,,
code-creation,LazyCompile,10,7516806,0x39bd861f396,19,get node:internal/streams/readable:1268:8,0x334252dd3a0,~
code-source-info,0x39bd861f396,49,38997,39084,C0O39021C6O39043C11O39058C18O39077,,
code-creation,LazyCompile,10,7516907,0x39bd861f4f6,176,setStreamTimeout node:internal/stream_base_commons:254:26,0x1d24e4c37e0,~
code-source-info,0x39bd861f4f6,84,6660,7449,C0O6692C6O6708C8O6720C9O6726C11O6739C15O6802C23O6810C30O6985C37O7003C39O7002C43O6985C47O7020C48O7030C53O7044C57O7081C62O7081C66O7121C74O7121C82O7182C84O7187C89O7199C92O7220C97O7231C102O7231C108O7199C113O7197C117O7256C119O7265C121O7264C126O7276C128O7281C130O7280C136O7291C138O7290C142O7304C146O7315C150O7352C155O7352C159O7392C167O7392C173O7434C175O7446,,
code-creation,LazyCompile,10,7516994,0x39bd861f816,114,getTimerDuration node:internal/timers:383:26,0x334252fec38,~
code-source-info,0x39bd861f816,63,11742,12260,C0O11761C5O11761C10O11793C11O11803C18O11811C21O11811C27O11841C43O11847C48O11841C49O11971C51O11983C53O11981C58O12003C61O12011C68O12026C81O12141C93O12077C100O12011C106O12214C110O12233C111O12244C113O12257,,
code-creation,LazyCompile,10,7517117,0x39bd861f9b6,63,clearTimeout node:timers:184:22,0x334252f3a60,~
script-source,61,node:timers,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  MathTrunc\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SymbolToPrimitive\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  immediateInfo\x2C\x0d\n  toggleImmediateRef\x0d\n} = internalBinding('timers');\x0d\nconst L = require('internal/linkedlist');\x0d\nconst {\x0d\n  async_id_symbol\x2C\x0d\n  Timeout\x2C\x0d\n  Immediate\x2C\x0d\n  decRefCount\x2C\x0d\n  immediateInfoFields: {\x0d\n    kCount\x2C\x0d\n    kRefCount\x0d\n  }\x2C\x0d\n  kRefed\x2C\x0d\n  kHasPrimitive\x2C\x0d\n  getTimerDuration\x2C\x0d\n  timerListMap\x2C\x0d\n  timerListQueue\x2C\x0d\n  immediateQueue\x2C\x0d\n  active\x2C\x0d\n  unrefActive\x2C\x0d\n  insert\x0d\n} = require('internal/timers');\x0d\nconst {\x0d\n  promisify: { custom: customPromisify }\x2C\x0d\n  deprecate\x0d\n} = require('internal/util');\x0d\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { validateCallback } = require('internal/validators');\x0d\n\x0d\nlet timersPromises;\x0d\n\x0d\nconst {\x0d\n  destroyHooksExist\x2C\x0d\n  // The needed emit*() functions.\x0d\n  emitDestroy\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\n// This stores all the known timer async ids to allow users to clearTimeout and\x0d\n// clearInterval using those ids\x2C to match the spec and the rest of the web\x0d\n// platform.\x0d\nconst knownTimersById = ObjectCreate(null);\x0d\n\x0d\n// Remove a timer. Cancels the timeout and resets the relevant timer properties.\x0d\nfunction unenroll(item) {\x0d\n  if (item._destroyed)\x0d\n    return;\x0d\n\x0d\n  item._destroyed = true;\x0d\n\x0d\n  if (item[kHasPrimitive])\x0d\n    delete knownTimersById[item[async_id_symbol]];\x0d\n\x0d\n  // Fewer checks may be possible\x2C but these cover everything.\x0d\n  if (destroyHooksExist() && item[async_id_symbol] !== undefined)\x0d\n    emitDestroy(item[async_id_symbol]);\x0d\n\x0d\n  L.remove(item);\x0d\n\x0d\n  // We only delete refed lists because unrefed ones are incredibly likely\x0d\n  // to come from http and be recreated shortly after.\x0d\n  // TODO: Long-term this could instead be handled by creating an internal\x0d\n  // clearTimeout that makes it clear that the list should not be deleted.\x0d\n  // That function could then be used by http and other similar modules.\x0d\n  if (item[kRefed]) {\x0d\n    // Compliment truncation during insert().\x0d\n    const msecs = MathTrunc(item._idleTimeout);\x0d\n    const list = timerListMap[msecs];\x0d\n    if (list !== undefined && L.isEmpty(list)) {\x0d\n      debug('unenroll: list empty');\x0d\n      timerListQueue.removeAt(list.priorityQueuePosition);\x0d\n      delete timerListMap[list.msecs];\x0d\n    }\x0d\n\x0d\n    decRefCount();\x0d\n  }\x0d\n\x0d\n  // If active is called later\x2C then we want to make sure not to insert again\x0d\n  item._idleTimeout = -1;\x0d\n}\x0d\n\x0d\n// Make a regular object able to act as a timer by setting some properties.\x0d\n// This function does not start the timer\x2C see `active()`.\x0d\n// Using existing objects as timers slightly reduces object overhead.\x0d\nfunction enroll(item\x2C msecs) {\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // If this item was already in a list somewhere\x0d\n  // then we should unenroll it from that\x0d\n  if (item._idleNext) unenroll(item);\x0d\n\x0d\n  L.init(item);\x0d\n  item._idleTimeout = msecs;\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Schedules the execution of a one-time `callback`\x0d\n * after `after` milliseconds.\x0d\n * @param {Function} callback\x0d\n * @param {number} [after]\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Timeout}\x0d\n */\x0d\nfunction setTimeout(callback\x2C after\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n    case 2:\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 4:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 5; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 2] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  const timeout = new Timeout(callback\x2C after\x2C args\x2C false\x2C true);\x0d\n  insert(timeout\x2C timeout._idleTimeout);\x0d\n\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(setTimeout\x2C customPromisify\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!timersPromises)\x0d\n      timersPromises = require('timers/promises');\x0d\n    return timersPromises.setTimeout;\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Cancels a timeout.\x0d\n * @param {Timeout | string | number} timer\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearTimeout(timer) {\x0d\n  if (timer && timer._onTimeout) {\x0d\n    timer._onTimeout = null;\x0d\n    unenroll(timer);\x0d\n    return;\x0d\n  }\x0d\n  if (typeof timer === 'number' || typeof timer === 'string') {\x0d\n    const timerInstance = knownTimersById[timer];\x0d\n    if (timerInstance !== undefined) {\x0d\n      timerInstance._onTimeout = null;\x0d\n      unenroll(timerInstance);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Schedules repeated execution of `callback`\x0d\n * every `repeat` milliseconds.\x0d\n * @param {Function} callback\x0d\n * @param {number} [repeat]\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Timeout}\x0d\n */\x0d\nfunction setInterval(callback\x2C repeat\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n    case 2:\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 4:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 5; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 2] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  const timeout = new Timeout(callback\x2C repeat\x2C args\x2C true\x2C true);\x0d\n  insert(timeout\x2C timeout._idleTimeout);\x0d\n\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Cancels an interval.\x0d\n * @param {Timeout | string | number} timer\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearInterval(timer) {\x0d\n  // clearTimeout and clearInterval can be used to clear timers created from\x0d\n  // both setTimeout and setInterval\x2C as specified by HTML Living Standard:\x0d\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\x0d\n  clearTimeout(timer);\x0d\n}\x0d\n\x0d\nTimeout.prototype.close = function() {\x0d\n  clearTimeout(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Coerces a `Timeout` to a primitive.\x0d\n * @returns {number}\x0d\n */\x0d\nTimeout.prototype[SymbolToPrimitive] = function() {\x0d\n  const id = this[async_id_symbol];\x0d\n  if (!this[kHasPrimitive]) {\x0d\n    this[kHasPrimitive] = true;\x0d\n    knownTimersById[id] = this;\x0d\n  }\x0d\n  return id;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Schedules the immediate execution of `callback`\x0d\n * after I/O events' callbacks.\x0d\n * @param {Function} callback\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Immediate}\x0d\n */\x0d\nfunction setImmediate(callback\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n      break;\x0d\n    case 2:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 4; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 1] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  return new Immediate(callback\x2C args);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(setImmediate\x2C customPromisify\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!timersPromises)\x0d\n      timersPromises = require('timers/promises');\x0d\n    return timersPromises.setImmediate;\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Cancels an immediate.\x0d\n * @param {Immediate} immediate\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearImmediate(immediate) {\x0d\n  if (!immediate || immediate._destroyed)\x0d\n    return;\x0d\n\x0d\n  immediateInfo[kCount]--;\x0d\n  immediate._destroyed = true;\x0d\n\x0d\n  if (immediate[kRefed] && --immediateInfo[kRefCount] === 0)\x0d\n    toggleImmediateRef(false);\x0d\n  immediate[kRefed] = null;\x0d\n\x0d\n  if (destroyHooksExist() && immediate[async_id_symbol] !== undefined) {\x0d\n    emitDestroy(immediate[async_id_symbol]);\x0d\n  }\x0d\n\x0d\n  immediate._onImmediate = null;\x0d\n\x0d\n  immediateQueue.remove(immediate);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setTimeout\x2C\x0d\n  clearTimeout\x2C\x0d\n  setImmediate\x2C\x0d\n  clearImmediate\x2C\x0d\n  setInterval\x2C\x0d\n  clearInterval\x2C\x0d\n  _unrefActive: deprecate(\x0d\n    unrefActive\x2C\x0d\n    'timers._unrefActive() is deprecated.' +\x0d\n    ' Please use timeout.refresh() instead.'\x2C\x0d\n    'DEP0127')\x2C\x0d\n  active: deprecate(\x0d\n    active\x2C\x0d\n    'timers.active() is deprecated. Please use timeout.refresh() instead.'\x2C\x0d\n    'DEP0126')\x2C\x0d\n  unenroll: deprecate(\x0d\n    unenroll\x2C\x0d\n    'timers.unenroll() is deprecated. Please use clearTimeout instead.'\x2C\x0d\n    'DEP0096')\x2C\x0d\n  enroll: deprecate(\x0d\n    enroll\x2C\x0d\n    'timers.enroll() is deprecated. Please use setTimeout instead.'\x2C\x0d\n    'DEP0095')\x0d\n};\x0d\n
code-source-info,0x39bd861f9b6,61,5367,5725,C0O5380C4O5399C10O5418C11O5435C15O5448C18O5448C22O5470C23O5477C24O5486C36O5575C43O5590C47O5604C49O5646C50O5671C54O5686C57O5686C62O5724,,
code-creation,LazyCompile,10,7517622,0x39bd862067e,56,compareTimersLists node:internal/timers:400:28,0x334252fec88,~
code-source-info,0x39bd862067e,63,12291,12478,C0O12324C5O12335C9O12331C13O12346C14O12361C19O12381C24O12388C28O12384C33O12399C35O12409C36O12421C41O12428C45O12424C50O12439C52O12448C53O12457C55O12475,,
code-creation,LazyCompile,10,7517704,0x39bd86207ee,58,endReadable node:internal/streams/readable:1326:21,0x334252dd530,~
code-source-info,0x39bd86207ee,49,40356,40565,C0O40391C5O40412C13O40439C18O40412C23O40466C29O40485C30O40497C34O40510C37O40518C51O40518C57O40564,,
code-creation,LazyCompile,10,7517777,0x39bd8620966,25,emitCloseNT node:_http_server:843:21,0x2f65a701168,~
code-source-info,0x39bd8620966,173,28499,28583,C0O28511C1O28526C5O28537C6O28550C10O28566C18O28566C24O28582,,
code-creation,LazyCompile,10,7517844,0x39bd8620ae6,155,endReadableNT node:internal/streams/readable:1336:23,0x334252dd580,~
code-source-info,0x39bd8620ae6,49,40591,41521,C0O40612C8O40641C13O40659C18O40612C23O40733C29O40756C35O40786C41O40806C47O40813C52O40827C53O40844C57O40864C65O40864C70O40895C76O40914C82O40928C87O40948C90O40956C98O40956C106O41011C112O41180C117O41223C120O41252C126O41394C132O41413C138O41422C142O41452C144O41487C149O41487C154O41520,,
code-creation,LazyCompile,10,7517924,0x39bd8620e4e,322,arrayClone node:events:747:20,0x25aadb344e0,~
code-source-info,0x39bd8620e4e,13,21902,22367,C0O22044C42O22067C50O22078C62O22086C71O22091C72O22105C80O22116C92O22124C104O22132C113O22137C114O22151C122O22162C134O22170C146O22178C158O22186C167O22191C168O22205C176O22216C188O22224C200O22232C212O22240C224O22248C233O22253C234O22267C242O22278C254O22286C266O22294C278O22302C290O22310C302O22318C311O22323C312O22332C317O22339C321O22364,,
code-creation,LazyCompile,10,7518037,0x39bd8621196,153,destroy node:internal/streams/destroy:32:17,0x334252cf360,~
code-source-info,0x39bd8621196,47,703,1522,C0O703C13O733C18O767C23O858C28O871C32O883C40O898C42O905C48O924C54O963C57O963C60O983C62O995C63O1157C77O1157C82O1185C86O1199C87O1211C91O1227C95O1241C96O1253C100O1335C106O1360C115O1365C123O1360C131O1472C145O1472C150O1507C152O1519,,
code-creation,LazyCompile,10,7518106,0x39bd862137e,42,checkError node:internal/streams/destroy:16:20,0x334252cf0a8,~
code-source-info,0x39bd862137e,47,269,573,C0O286C4O394C8O453C12O465C18O483C20O493C24O512C28O524C34O542C36O552C41O572,,
code-creation,LazyCompile,10,7518192,0x39bd862166e,119,_destroy node:internal/streams/destroy:70:18,0x334252cf3c8,~
code-source-info,0x39bd862166e,47,1543,2522,C0O1543C22O1577C23O1577C28O2105C31O2110C38O2119C45O2110C52O2149C55O2198C60O2211C64O2259C69O2276C85O2259C103O2499C111O2499C118O2521,,
code-creation,LazyCompile,10,7518256,0x39bd862195e,177,_destroy node:_http_incoming:176:55,0x2bdba1383c8,~
code-source-info,0x39bd862195e,170,5333,6017,C0O5333C17O5348C20O5358C29O5381C35O5398C39O5411C43O5424C46O5429C54O5429C59O5762C62O5771C71O5787C76O5794C85O5812C98O5828C103O5833C108O5840C118O5840C123O5875C135O5889C145O5875C150O5875C156O5986C170O5986C176O6016,,
code-creation,LazyCompile,10,7518328,0x39bd8621b5e,31,onError node:_http_incoming:374:17,0x2bdba137fa8,~
code-source-info,0x39bd8621b5e,170,13026,13265,C0O13187C8O13187C15O13210C20O13224C25O13247C30O13264,,
code-creation,LazyCompile,10,7518401,0x39bd8621c7e,142,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,~
code-source-info,0x39bd8621c7e,47,1607,2075,C0O1620C6O1641C7O1648C8O1661C12O1668C18O1693C21O1698C26O1729C29O1734C34O1757C48O1757C53O1787C57O1803C58O1812C62O1832C66O1848C67O1857C71O1879C77O1918C80O1918C84O1941C88O1959C93O1967C109O1967C116O2027C121O2035C134O2035C141O2074,,
code-creation,LazyCompile,10,7518475,0x39bd8621e46,61,emitCloseNT node:internal/streams/destroy:126:21,0x334252cf468,~
code-source-info,0x39bd8621e46,47,2640,2894,C0O2667C5O2701C10O2722C12O2736C13O2751C17O2767C21O2781C22O2796C26O2814C30O2826C38O2841C40O2848C46O2872C54O2872C60O2893,,
code-creation,RegExp,3,7518634,0x225ca7e9fc0,1124,^\\/getUsers\\/?$
code-creation,RegExp,3,7518681,0x225ca7ea4a0,1104,^\\/newUser\\/?$
code-creation,RegExp,3,7518719,0x225ca7ea960,1140,^\\/auth-bloq\\/?$
code-creation,RegExp,3,7518784,0x225ca7eae40,1184,^\\/auth-nobloq\\/?$
code-creation,RegExp,3,7518853,0x225ca7eb340,872,[!@#$%^&*]
code-creation,RegExp,3,7518910,0x225ca7eb720,1336,^text\\/|^application\\/(javascript|json)
code-creation,Function,11,7519216,0x225ca7ebcc0,2004,extname node:path:836:10,0x2ee4c9e9998,^
code-source-info,0x225ca7ebcc0,35,26916,29044,,,
code-creation,Function,11,7519250,0x225ca7ec500,1220,_flushOutput node:_http_outgoing:950:63,0x2bdba13bec8,^
code-source-info,0x225ca7ec500,171,28477,29125,,,
code-creation,Function,11,7519301,0x225ca7eca40,860,compactQueue C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\utils.js:17:41,0x2f65a72bbd0,^
code-source-info,0x225ca7eca40,192,363,780,,,
code-creation,Function,11,7519328,0x225ca7ece00,40,testEnabled node:internal/util/debuglog:32:19,0x33416091b48,^
code-source-info,0x225ca7ece00,40,1004,1015,,,
code-creation,Function,11,7519370,0x225ca7ecea0,300,get node:internal/streams/duplex:94:8,0x334252d0a28,^
code-source-info,0x225ca7ecea0,48,3367,3582,,,
code-creation,Function,11,7519683,0x225ca7ed040,172,get node:internal/streams/readable:1268:8,0x334252dd3a0,^
code-source-info,0x225ca7ed040,49,38997,39084,,,
code-creation,Function,11,7519712,0x225ca7ed160,452,getHeader node:_http_outgoing:590:57,0x2bdba13b970,^
code-source-info,0x225ca7ed160,171,18655,18868,,,
code-creation,Function,11,7519734,0x225ca7ed3a0,92,res.get C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:811:19,0xe49884de48,^
code-source-info,0x225ca7ed3a0,248,20278,20320,,,
code-creation,Function,11,7519792,0x225ca7ed460,64,isBuffer node:buffer:509:36,0x6682ea5f58,^
code-source-info,0x225ca7ed460,18,14858,14897,,,
code-creation,Function,11,7519841,0x225ca7ed500,412,storeHeader node:_http_outgoing:517:21,0x2bdba13af30,^
code-source-info,0x225ca7ed500,171,16559,16743,,,
code-creation,Function,11,7519863,0x225ca7ed700,152,Writable.write node:internal/streams/writable:333:36,0x334252ea660,^
code-source-info,0x225ca7ed700,56,11081,11161,,,
code-creation,Function,11,7519888,0x225ca7ed800,488,callback node:internal/streams/writable:550:44,0x39bd861cff8,^
code-source-info,0x225ca7ed800,56,17307,17420,,,
code-creation,Function,11,7519934,0x225ca7eda60,408,endReadable node:internal/streams/readable:1326:21,0x334252dd530,^
code-source-info,0x225ca7eda60,49,40356,40565,,,
code-creation,Function,11,7520424,0x225ca7edc60,1476,matchHeader node:_http_outgoing:524:21,0x2bdba13af80,^
code-source-info,0x225ca7edc60,171,16767,17650,,,
code-creation,Function,11,7520460,0x225ca7ee2a0,1656,header C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:777:29,0xe49884ddf8,^
code-source-info,0x225ca7ee2a0,248,19509,20156,,,
code-creation,Function,11,7520482,0x225ca7ee980,136,Writable.cork node:internal/streams/writable:337:35,0x334252ea6e8,^
code-source-info,0x225ca7ee980,56,11200,11240,,,
code-creation,Function,11,7520775,0x225ca7eea80,1472,fromStringFast node:buffer:412:24,0x6682ea5d28,^
code-source-info,0x225ca7eea80,18,12324,12864,,,
code-creation,Function,11,7520800,0x225ca7ef0a0,164,updateOutgoingData node:_http_server:553:28,0xbfdd37fb40,^
code-source-info,0x225ca7ef0a0,173,19679,19771,,,
code-creation,Function,11,7520825,0x225ca7ef1c0,1520,writeOrBuffer node:internal/streams/writable:365:23,0x334252ea870,^
code-source-info,0x225ca7ef1c0,56,12032,13054,,,
code-creation,Function,11,7520868,0x225ca7ef820,288,Writable.uncork node:internal/streams/writable:341:37,0x334252ea770,^
code-source-info,0x225ca7ef820,56,11281,11437,,,
code-creation,Function,11,7520892,0x225ca7ef9a0,496,clearIncoming node:_http_server:749:23,0xbfdd37ff00,^
code-source-info,0x225ca7ef9a0,173,25832,26159,,,
code-creation,Function,11,7521372,0x225ca7efc00,1164,endReadableNT node:internal/streams/readable:1336:23,0x334252dd580,^
code-source-info,0x225ca7efc00,49,40591,41521,,,
code-creation,Function,11,7521407,0x225ca7f0100,1336,writevGeneric node:internal/stream_base_commons:126:23,0x1d24e4c3660,^
code-source-info,0x225ca7f0100,84,3165,3805,,,
code-creation,Function,11,7521425,0x225ca7f06a0,136,write node:buffer:592:12,0x6682ea6138,^
code-source-info,0x225ca7f06a0,18,17116,17180,,,
code-creation,Function,11,7521479,0x225ca7f07a0,948,processHeader node:_http_outgoing:501:23,0x2bdba13aee0,^
code-source-info,0x225ca7f07a0,171,16024,16535,,,
code-creation,Function,11,7521777,0x225ca7f0bc0,324,setUnrefTimeout node:internal/timers:372:25,0x334252febc8,^
code-source-info,0x225ca7f0bc0,63,11417,11647,,,
code-creation,Function,11,7521823,0x225ca7f0d80,2516,_write node:internal/streams/writable:283:16,0x334252ea610,^
code-source-info,0x225ca7f0d80,56,9665,11042,,,
code-creation,Function,11,7521851,0x225ca7f17c0,328,createWriteWrap node:internal/stream_base_commons:113:25,0x1d24e4c3610,^
code-source-info,0x225ca7f17c0,84,2914,3139,,,
code-creation,Function,11,7521875,0x225ca7f1980,376,remove node:internal/linkedlist:15:16,0x334252f4558,^
code-source-info,0x225ca7f1980,62,274,497,,,
code-creation,Function,11,7522076,0x225ca7f1b60,100,get node:internal/bootstrap/pre_execution:326:8,0x3341609cbf0,^
code-source-info,0x225ca7f1b60,92,10624,10658,,,
code-creation,Function,11,7522117,0x225ca7f1c40,808,afterWrite node:internal/streams/writable:487:20,0x334252eaa00,^
code-source-info,0x225ca7f1c40,56,15715,16089,,,
code-creation,Function,11,7522139,0x225ca7f1fe0,352,Mime.lookup C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime\\mime.js:69:33,0xe6a61a9a58,^
code-source-info,0x225ca7f1fe0,226,1860,1999,,,
code-creation,Function,11,7522160,0x225ca7f21a0,192,lookup C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\mime\\mime.js:102:19,0xe6a61a9b70,^
code-source-info,0x225ca7f21a0,226,2546,2698,,,
code-creation,Function,11,7522181,0x225ca7f22c0,324,contentType C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:619:32,0xe49884dc50,^
code-source-info,0x225ca7f22c0,248,15941,16063,,,
code-creation,Function,11,7522208,0x225ca7f2480,188,ContentType C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:219:22,0x2f65a73bc20,^
code-source-info,0x225ca7f2480,200,4739,4808,,,
code-creation,Function,11,7522233,0x225ca7f25a0,324,setCharset C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:248:41,0x2f65a7365d0,^
code-source-info,0x225ca7f25a0,197,5044,5280,,,
code-creation,Function,11,7522398,0x225ca7f2760,156,Socket._writev node:net:801:36,0xbfdd37d670,^
code-source-info,0x225ca7f2760,120,21398,21460,,,
code-creation,Function,11,7522421,0x225ca7f2860,72,LazyTransform node:internal/streams/lazy_transform:20:23,0xe6a6197728,^
code-source-info,0x225ca7f2860,219,509,551,,,
code-creation,Function,11,7522467,0x225ca7f2920,164,createHash node:crypto:129:20,0x20cab7a95d8,^
code-source-info,0x225ca7f2920,208,3490,3555,,,
code-creation,Function,11,7522507,0x225ca7f2a40,124,_implicitHeader node:_http_server:264:68,0x2f65a7015f0,^
code-source-info,0x225ca7f2a40,173,9961,10004,,,
code-creation,Function,11,7522551,0x225ca7f2b20,848,_send node:_http_outgoing:319:49,0x2bdba13b830,^
code-source-info,0x225ca7f2b20,171,9665,10419,,,
code-creation,Function,11,7522590,0x225ca7f2ee0,1176,_writeRaw node:_http_outgoing:344:19,0x2bdba13ae40,^
code-source-info,0x225ca7f2ee0,171,10494,11341,,,
code-creation,Function,11,7522704,0x225ca7f33e0,308,onFinish node:_http_outgoing:828:18,0x2bdba13b110,^
code-source-info,0x225ca7f33e0,171,25094,25200,,,
code-creation,Function,11,7522727,0x225ca7f3580,228,_finish node:_http_outgoing:908:53,0x2bdba13be28,^
code-source-info,0x225ca7f3580,171,27084,27142,,,
code-creation,Function,11,7522747,0x225ca7f36e0,512,_finish node:_http_server:203:52,0x2f65a701460,^
code-source-info,0x225ca7f36e0,173,7731,7884,,,
code-creation,Function,11,7522785,0x225ca7f3940,40,nop node:internal/streams/writable:73:13,0x334252e9d68,^
code-source-info,0x225ca7f3940,56,2481,2486,,,
code-creation,Function,11,7522803,0x225ca7f39e0,40,nop node:_http_outgoing:86:13,0x2bdba13b1b0,^
code-source-info,0x225ca7f39e0,171,2893,2901,,,
code-creation,Function,11,7522854,0x225ca7f3a80,244,_dump node:_http_incoming:364:49,0x2bdba138418,^
code-source-info,0x225ca7f3a80,170,12770,13005,,,
code-creation,Function,11,7522898,0x225ca7f3be0,336,detachSocket node:_http_server:248:62,0x2f65a701500,^
code-source-info,0x225ca7f3be0,173,9408,9574,,,
code-creation,Function,11,7522918,0x225ca7f3da0,364,append node:internal/linkedlist:29:16,0x334252f45a8,^
code-source-info,0x225ca7f3da0,62,571,1021,,,
code-creation,Function,11,7523060,0x225ca7f3f80,2960,createError C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:49:22,0x23ad5936ca8,^
code-source-info,0x225ca7f3f80,202,957,2422,,,
code-creation,Function,11,7523087,0x225ca7f4b80,276,afterWriteTick node:internal/streams/writable:482:24,0x334252ea9b0,^
code-source-info,0x225ca7f4b80,56,15573,15692,,,
code-creation,Function,11,7523121,0x225ca7f4d00,172,emitCloseNT node:_http_server:843:21,0x2f65a701168,^
code-source-info,0x225ca7f4d00,173,28499,28583,,,
code-creation,Function,11,7523365,0x225ca7f4e20,340,sendStatus C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:369:37,0xe49884da80,^
code-source-info,0x225ca7f4e20,248,8986,9146,,,
tick,0x7fffb299f25f,7523448,0,0x0,0,0x7ff6a7f15050,0x39bd861219b,0x39bd8611e8a,0x225ca7d0a8b,0x39bd8611c14,0x39bd86119fe,0x225ca7d0a8b,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x39bd86115a4,0x225ca7ca221,0x39bd8610c94,0x39bd8610a2c,0x39bd8610829,0x39bd86102c9,0x39bd8610155
code-creation,Function,11,7523491,0x225ca7f4fe0,1368,format C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:65:17,0x2f65a73bae0,^
code-source-info,0x225ca7f4fe0,200,1682,2358,,,
code-creation,Function,11,7523541,0x225ca7f55a0,828,entitytag C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js:39:20,0x20cab7a7cf8,^
code-source-info,0x225ca7f55a0,207,478,918,,,
code-creation,Function,11,7523572,0x225ca7f5940,812,socketOnDrain node:_http_server:558:23,0xbfdd37fb90,^
code-source-info,0x225ca7f5940,173,19797,20245,,,
code-creation,Function,11,7523972,0x225ca7f5ce0,1368,Hash node:internal/crypto/hash:58:14,0xe6a619b4c0,^
code-source-info,0x225ca7f5ce0,221,1032,1552,,,
code-creation,Function,11,7524007,0x225ca7f62a0,1184,dispatch C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:98:45,0x2bdba125c40,^
code-source-info,0x225ca7f62a0,160,1662,2542,,,
code-creation,Function,11,7524058,0x225ca7f67a0,220,onError node:_http_incoming:374:17,0x2bdba137fa8,^
code-source-info,0x225ca7f67a0,170,13026,13265,,,
code-creation,Function,11,7524095,0x225ca7f68e0,480,emitCloseNT node:internal/streams/destroy:126:21,0x334252cf468,^
code-source-info,0x225ca7f68e0,47,2640,2894,,,
code-creation,Function,11,7524152,0x225ca7f6b20,460,_handles_method C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:58:59,0x2bdba125ba0,^
code-source-info,0x225ca7f6b20,160,949,1157,,,
code-creation,Function,11,7524482,0x225ca7f6d60,352,createHttpError C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:977:26,0x2f65a73dd60,^
code-source-info,0x225ca7f6d60,201,20466,20644,,,
code-creation,Function,11,7524519,0x225ca7f6f20,728,digest node:internal/crypto/hash:115:40,0xe6a619b6f0,^
code-source-info,0x225ca7f6f20,221,2719,3059,,,
code-creation,Function,11,7524602,0x225ca7f7260,832,afterWriteDispatched node:internal/stream_base_commons:159:30,0x1d24e4c3740,^
code-source-info,0x225ca7f7260,84,4053,4337,,,
code-creation,Function,11,7524637,0x225ca7f7600,252,error C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js:115:39,0x1bb8fb3a278,^
code-source-info,0x225ca7f7600,263,2540,2661,,,
code-creation,Function,11,7524664,0x225ca7f7760,396,Readable.removeListener node:internal/streams/readable:905:45,0x334252dc610,^
code-source-info,0x225ca7f7760,49,29679,30251,,,
code-creation,Function,11,7524713,0x225ca7f7960,648,initAsyncResource node:internal/timers:157:27,0x334252fe418,^
code-source-info,0x225ca7f7960,63,5581,5839,,,
code-creation,Function,11,7525224,0x225ca7f7c60,2244,parse C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:106:16,0x2f65a73bb30,^
code-source-info,0x225ca7f7c60,200,2482,3754,,,
code-creation,Function,11,7525255,0x225ca7f85a0,220,utcDate node:internal/http:21:17,0x2bdba13faf0,^
code-source-info,0x225ca7f85a0,172,382,436,,,
code-creation,Function,11,7525275,0x225ca7f86e0,412,Readable.removeAllListeners node:internal/streams/readable:923:49,0x334252dc6a0,^
code-source-info,0x225ca7f86e0,49,30365,30966,,,
code-creation,Function,11,7525301,0x225ca7f88e0,1168,Timeout node:internal/timers:167:17,0x334252fe468,^
code-source-info,0x225ca7f88e0,63,5944,6955,,,
code-creation,Function,11,7525353,0x225ca7f8de0,940,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,^
code-source-info,0x225ca7f8de0,47,1607,2075,,,
code-creation,Function,11,7525729,0x225ca7f9200,2000,resOnFinish node:_http_server:788:21,0x2f65a701118,^
code-source-info,0x225ca7f9200,173,26780,28475,,,
code-creation,Function,11,7525764,0x225ca7f9a40,916,etag C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js:70:15,0x20cab7a7d48,^
code-source-info,0x225ca7f9a40,207,1105,1679,,,
code-creation,Function,11,7525788,0x225ca7f9e40,292,generateETag C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\utils.js:273:32,0x96d321bd10,^
code-source-info,0x225ca7f9e40,197,5510,5649,,,
code-creation,Function,11,7525821,0x225ca7f9fe0,1300, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:57:25,0x2264574450,^
code-source-info,0x225ca7f9fe0,137,1463,2055,,,
code-creation,Function,11,7526105,0x225ca7fa560,6240,_storeHeader node:_http_outgoing:374:22,0x2bdba13ae90,^
code-source-info,0x225ca7fa560,171,11424,15998,,,
code-creation,Function,11,7526138,0x225ca7fbe20,1120,destroy node:internal/streams/destroy:32:17,0x334252cf360,^
code-source-info,0x225ca7fbe20,47,703,1522,,,
code-creation,Function,11,7526186,0x225ca7fc2e0,292,hasListeners C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:1031:23,0x2f65a73de50,^
code-source-info,0x225ca7fc2e0,201,21494,21662,,,
code-creation,Function,11,7526220,0x225ca7fc480,900,fromString node:buffer:431:20,0x6682ea5dc8,^
code-source-info,0x225ca7fc480,18,12887,13336,,,
code-creation,Function,11,7526448,0x225ca7fc880,1416,setStreamTimeout node:internal/stream_base_commons:254:26,0x1d24e4c37e0,^
code-source-info,0x225ca7fc880,84,6660,7449,,,
code-creation,Function,11,7526495,0x225ca7fce80,2932,clearBuffer node:internal/streams/writable:529:21,0x334252eaaa0,^
code-source-info,0x225ca7fce80,56,16794,18321,,,
code-creation,Function,11,7526515,0x225ca7fda60,408,onStatError C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:412:57,0x2f65a73e468,^
code-source-info,0x225ca7fda60,201,9133,9331,,,
code-creation,Function,11,7526834,0x225ca7fdc60,2936,end node:_http_outgoing:833:45,0x2bdba13bdd8,^
code-source-info,0x225ca7fdc60,171,25248,27025,,,
code-creation,Function,11,7526910,0x225ca7fe840,588,clearRequestTimeout node:_http_server:774:29,0xbfdd37ffa0,^
code-source-info,0x225ca7fe840,173,26537,26756,,,
new,MemoryChunk,0x225ca800000,262144
code-creation,Function,11,7527304,0x225ca803060,1440,Socket._writeGeneric node:net:769:42,0xbfdd37d5b8,^
code-source-info,0x225ca803060,120,20574,21356,,,
code-creation,Function,11,7527328,0x225ca803660,368,spliceOne node:internal/util:394:19,0x25aadb2b2a8,^
code-source-info,0x225ca803660,12,11318,11431,,,
code-creation,Function,11,7527379,0x225ca803840,3216,writeHead node:_http_server:269:19,0x334160bffc8,^
code-source-info,0x225ca803840,173,10076,12734,,,
code-creation,Function,11,7527668,0x225ca804540,1244,update node:internal/crypto/hash:95:40,0xe6a619b6a0,^
code-source-info,0x225ca804540,221,2159,2673,,,
code-creation,Function,11,7527697,0x225ca804a80,696,doWrite node:internal/streams/writable:398:17,0x334252ea8c0,^
code-source-info,0x225ca804a80,56,13074,13448,,,
code-creation,Function,11,7527727,0x225ca804da0,1288,next C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:116:16,0x39bd86118a8,^
code-source-info,0x225ca804da0,160,1955,2540,,,
code-creation,Function,11,7527767,0x225ca805320,1292,insert node:internal/timers:350:16,0x334252feb78,^
code-source-info,0x225ca805320,63,10733,11389,,,
code-creation,Function,11,7528010,0x225ca8058a0,1024,_destroy node:internal/streams/destroy:70:18,0x334252cf3c8,^
code-source-info,0x225ca8058a0,47,1543,2522,,,
code-creation,Function,11,7528055,0x225ca805d00,2188,removeListener node:events:557:28,0x25aadb34178,^
code-source-info,0x225ca805d00,13,16670,17989,,,
code-creation,Function,11,7528081,0x225ca806600,1340,_destroy node:_http_incoming:176:55,0x2bdba1383c8,^
code-source-info,0x225ca806600,170,5333,6017,,,
code-creation,Function,11,7528399,0x225ca806ba0,4296,send C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:111:25,0xe49884d990,^
code-source-info,0x225ca806ba0,248,2432,5591,,,
code-creation,Function,11,7528445,0x225ca807ce0,744, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\request.js:467:36,0x96d321f100,^
code-source-info,0x225ca807ce0,235,11303,11736,,,
code-creation,Function,11,7528494,0x225ca808040,2064,onwrite node:internal/streams/writable:425:17,0x334252ea960,^
code-source-info,0x225ca808040,56,13868,15546,,,
code-creation,Function,11,7530191,0x225ca8088c0,896,next C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:728:17,0x1bb8fb3c348,^
code-source-info,0x225ca8088c0,201,15674,16060,,,
code-creation,Function,11,7530234,0x225ca808ca0,928,onstat C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:717:33,0x1bb8fb3c3a0,^
code-source-info,0x225ca808ca0,201,15324,15655,,,
code-creation,Function,11,7530259,0x225ca8090a0,276, node:fs:197:10,0x1bb8fb3c778,^
code-source-info,0x225ca8090a0,77,5342,5436,,,
code-creation,Function,11,7530333,0x225ca809220,928,getTimerDuration node:internal/timers:383:26,0x334252fec38,^
code-source-info,0x225ca809220,63,11742,12260,,,
code-creation,Function,11,7531424,0x225ca809620,524,clearTimeout node:timers:184:22,0x334252f3a60,^
code-source-info,0x225ca809620,61,5367,5725,,,
code-creation,Function,11,7531482,0x225ca8098a0,3268,write_ node:_http_outgoing:730:16,0x2bdba13b070,^
code-source-info,0x225ca8098a0,171,22495,24093,,,
code-creation,Function,11,7531756,0x225ca80a5e0,3492,slowCases node:internal/util:165:19,0x25aadb2ad98,^
code-source-info,0x225ca80a5e0,12,4495,6280,,,
code-creation,Function,11,7531783,0x225ca80b400,340,checkError node:internal/streams/destroy:16:20,0x334252cf0a8,^
code-source-info,0x225ca80b400,47,269,573,,,
code-creation,Function,11,7531847,0x225ca80b5c0,632,qstring C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:200:18,0x2f65a73bbd0,^
code-source-info,0x225ca80b5c0,200,4382,4658,,,
code-creation,Function,11,7538255,0x225ca80b8a0,1852,arrayClone node:events:747:20,0x25aadb344e0,^
code-source-info,0x225ca80b8a0,13,21902,22367,,,
code-creation,Function,11,7538308,0x225ca80c040,944,isstats C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js:104:18,0x20cab7a7d98,^
code-source-info,0x225ca80c040,207,1812,2226,,,
code-creation,Function,11,7538337,0x225ca80c460,1232,error C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:267:45,0x2f65a73e1c0,^
code-source-info,0x225ca80c460,201,5706,6444,,,
code-creation,Function,11,7538359,0x225ca80c9a0,560,finishMaybe node:internal/streams/writable:727:21,0x334252eacd8,^
code-source-info,0x225ca80c9a0,56,22001,22305,,,
scavenge,begin,0,390625,1671211999901
new,MemoryChunk,0x137ee9c0000,262144
tick,0x7ff6a816a0bd,7539455,0,0x0,1
scavenge,end,0,390625,1671211999902
code-creation,Function,11,7542465,0x225ca80cc40,2756,removeAllListeners node:events:617:32,0x25aadb341e8,^
code-source-info,0x225ca80cc40,13,18348,19690,,,
code-creation,Function,11,7542507,0x225ca80d780,1524,from node:buffer:295:28,0x6682ea59e0,^
code-source-info,0x225ca80d780,18,8700,9683,,,
code-creation,Function,11,7542533,0x225ca80dde0,836,emitStatistics node:internal/http:36:24,0x2bdba13fbe0,^
code-source-info,0x225ca80dde0,172,683,1050,,,
code-creation,LazyCompile,10,7546031,0x137ee9d8706,190, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:32:23,0x2264574400,~
code-source-info,0x137ee9d8706,137,821,1434,C0O861C5O867C14O909C19O915C28O956C41O956C48O991C52O1009C56O1022C61O1027C66O1089C76O1089C81O1105C82O1166C89O1171C93O1137C98O1152C103O1210C108O1217C132O1217C138O1274C143O1285C148O1285C156O1336C166O1336C173O1408C183O1408C189O1433,,
tick,0x7ff6a7c98b45,7554415,0,0x0,5
scavenge,begin,0,390625,1671211999918
new,MemoryChunk,0x114d35c0000,262144
new,MemoryChunk,0x2a57ad00000,262144
new,MemoryChunk,0xf0e0fc0000,262144
scavenge,end,0,390625,1671211999918
code-creation,LazyCompile,10,7564436,0x137ee9f3096,200,unenroll node:timers:78:18,0x334252f38e8,~
code-source-info,0x137ee9f3096,61,2426,3628,C0O2447C6O2464C7O2471C8O2477C9O2493C13O2506C15O2515C17O2514C22O2536C29O2564C31O2563C36O2652C41O2656C48O2684C50O2683C55O2721C62O2738C64O2737C68O2721C72O2762C77O2764C82O2764C87O3141C89O3150C91O3149C96O3227C101O3242C106O3227C111O3275C118O3287C122O3301C126O3327C129O3329C134O3329C141O3353C149O3353C153O3391C158O3406C163O3420C168O3406C173O3451C178O3476C184O3498C189O3498C192O3602C194O3620C199O3627,,
code-creation,LazyCompile,10,7564695,0x137ee9f34b6,28,Timeout.refresh node:internal/timers:210:37,0x334252fe548,~
code-source-info,0x137ee9f34b6,63,7291,7388,C0O7299C2O7308C4O7307C9O7322C12O7322C18O7349C21O7349C25O7373C27O7385,,
code-creation,LazyCompile,10,7564734,0x137ee9f359e,12,unrefActive node:internal/timers:317:21,0x334252fead8,~
code-source-info,0x137ee9f359e,63,9906,9948,C0O9918C5O9918C11O9947,,
code-creation,LazyCompile,10,7564783,0x137ee9f36a6,126,insertGuarded node:internal/timers:325:23,0x334252feb28,~
code-source-info,0x137ee9f36a6,63,10197,10714,C0O10242C5O10259C6O10269C15O10302C16O10309C17O10315C29O10315C34O10373C39O10388C43O10413C45O10412C50O10438C51O10454C55O10468C61O10468C66O10514C70O10538C74O10556C77O10556C82O10581C84O10601C86O10600C90O10591C95O10617C99O10635C102O10635C107O10667C110O10667C113O10690C115O10695C120O10703C125O10713,,
code-creation,Function,11,7567054,0x225ca80e1a0,1900,unenroll node:timers:78:18,0x334252f38e8,^
code-source-info,0x225ca80e1a0,61,2426,3628,,,
code-creation,Function,11,7567087,0x225ca80e980,664,needFinish node:internal/streams/writable:650:20,0x334252eabe8,^
code-source-info,0x225ca80e980,56,20010,20311,,,
code-creation,Function,11,7567117,0x225ca80ec80,1276, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:32:23,0x2264574400,^
code-source-info,0x225ca80ec80,137,821,1434,,,
code-creation,Function,11,7567137,0x225ca80f1e0,100,unrefActive node:internal/timers:317:21,0x334252fead8,^
code-source-info,0x225ca80f1e0,63,9906,9948,,,
code-creation,Function,11,7567154,0x225ca80f2c0,252,Timeout.refresh node:internal/timers:210:37,0x334252fe548,^
code-source-info,0x225ca80f2c0,63,7291,7388,,,
scavenge,begin,0,390625,1671211999931
new,MemoryChunk,0x7950500000,262144
new,MemoryChunk,0x3fab2540000,262144
new,MemoryChunk,0x29cb9a80000,262144
scavenge,end,0,406250,1671211999932
tick,0x7ff6a834acb2,7570459,0,0x0,0,0x225ca7d0a8b,0x225ca7df2e2,0x225ca7d2f3b,0x225ca7cf1fa,0x225ca7d090a,0x225ca7d761c,0x225ca7d0a8b,0x225ca7df2e2,0x225ca7d2f3b,0x225ca7cf1fa,0x225ca7d090a,0x225ca7d7799,0x225ca7d0a8b,0x225ca7df2e2,0x225ca7d2f3b,0x225ca7cf1fa,0x225ca7d090a,0x225ca7d80f2,0x225ca7daf76,0x225ca7d72f6,0x225ca7ca221,0x225ca7e0acd,0x225ca7da3a8
code-creation,LazyCompile,13,7578460,0x225ca80f420,212,isPathSeparator node:path:52:25,0x2ee4c9e90f0,*
code-source-info,0x225ca80f420,35,1794,1876,C0O1794C48O1818C80O1873C142O1794,,
tick,0x7ff6a839353b,7585710,0,0x0,0,0x225ca7f18b2,0x225ca7f01a1,0x225ca80349b,0x225ca7f27e4,0x225ca804c80,0x225ca7fd4fd,0x225ca7ef92c,0x225ca7fe5b0,0x225ca807c4e,0x225ca7f4f5f,0x225ca7fa37a,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca7d0a8b,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,7590716,0x225ca80f580,1632,nextTick node:internal/process/task_queues:104:18,0x25aadb3d028,*
code-source-info,0x225ca80f580,25,2694,3569,C0O2694C56O7035I0C93O2755C208O2694C219O2814C283O3070C343O2857C421O2874C501O2900C592O2917C610O2931C631O3176I2C652O3183C661O1196I3C685O14773I4C725O14788I4C731O15268I9C737O15390I9C751O15422I9C795O3335C852O3361C902O3402C930O3423C938O3438C956O16143I6C966O3456C985O3350I10C989O3355I10C995O3811I7C1004O3316I10C1078O3338I10C1086O3568C1117O3973I7C1122O3479C1127O2957C1185O2974C1190O2777C1196O7082I0C1201O2694C1255O2755,F0O2710F1O3183F2O3758I1F3O3199F4O3245F5O3456F6O16263I5F7O3549F8O3811I7F9O3285F10O4034I7,S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
scavenge,begin,0,421875,1671211999957
new,MemoryChunk,0x129ec880000,262144
new,MemoryChunk,0x2f3127c0000,262144
new,MemoryChunk,0x3016c700000,262144
scavenge,end,0,421875,1671211999958
code-creation,LazyCompile,13,7598776,0x225ca80fca0,868,pushAsyncContext node:internal/async_hooks:529:26,0x25aadb3b4c8,*
code-source-info,0x225ca80fca0,24,17623,18178,C0O17623C48O17696C71O17749C205O17775C226O17809C240O17779C262O17932C287O17915C313O17994C323O18016C329O17999C345O18056C351O18069C354O18111C421O18158C486O18177C517O17829C522O17623C576O17749,,
tick,0x7fffb06fcd60,7600698,0,0x0,8
code-creation,LazyCompile,13,7602162,0x225ca8100a0,2468,processTicksAndRejections node:internal/process/task_queues:68:35,0x25aadb3cfd8,*
code-source-info,0x225ca8100ax25aadb3b230S0x25aadb3b0d0S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3faa8S0x2ee4c9c62f8S0x2ee4c9c60d8S0x25aadb3b370S0x25aadb3b320S0x25aadb3b4c8S0x25aadb3b518S0x25aadb3b120
tick,0x7ff6a8089ce6,7616674,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca7f2651,0x225ca807486,0x225ca7f4f5f,0x225ca80eed3,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca7d0a8b,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,7619476,0x225ca810b40,7364,next C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:177:16,0x1bb8fb32818,*
code-source-info,0x225ca810bx2bdba1236a8S0x2bdba127fd0S0x2bdba123a38S0x2bdba1235b8S0x1bb8fb330d0S0x2bdba11d240S0x2bdba11d330S0x2bdba127f80S0x2bdba125ba0
scavenge,begin,0,453125,1671211999986
new,MemoryChunk,0x34dd0380000,262144
new,MemoryChunk,0x109ba8c0000,262144
new,MemoryChunk,0x18eb900000,262144
new,MemoryChunk,0x2b628580000,262144
new,MemoryChunk,0x22893440000,262144
scavenge,end,0,453125,1671211999987
code-creation,LazyCompile,13,7629989,0x225ca812a20,272,isWindowsDeviceRoot node:path:60:29,0x2ee4c9e9568,*
code-source-info,0x225ca812a20,35,1991,2136,C0O1991C48O2016C87O2044C115O2084C134O2133C202O1991,,
tick,0x7ff6a7ad1784,7632699,0,0x0,8
tick,0x7ff6a88c35bb,7648686,0,0x0,4,0x7ff6a7f16560,0x225ca7f2873,0x225ca7f6220,0x225ca7f29af,0x225ca7f566e,0x225ca7f9d61,0x225ca7f9f50,0x225ca807833,0x225ca7f4f5f,0x225ca7fa37a,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,7649257,0x225ca812bc0,4120,resolve node:path:158:10,0x2ee4c9e9670,*
code-source-info,0x225ca812bc0,35,4875,9786,C0O4875C100O5012C200O5019C210O5267C218O5063C232O5274C242O5307C352O5091C374O3533I3C405O5186C441O5193C459O6234C489O6341C782O6424C809O1818I1C832O2016I2C850O2044I2C872O2084I2C882O8161C907O8209C1166O8244C1191O8409C1203O8313C1264O8386C1298O8409C1550O1818I0C1612O8644C1635O8686C1648O9261C1652O8987C1674O9123C1729O9163C1740O9123C1753O9163C1766O9123C1791O9163C1807O9228C1829O9268C1859O5027C1867O4987C1891O5721C1912O2445I4C1992O3202I4C1996O2404I4C2014O2438I4C2036O1818I5C2112O2467I4C2316O1818I6C2368O2661I4C2372O2655I4C2381O2673I4C2416O3900I4C2420O3863I4C2469O3825I4C2478O3942I4C2487O3863I4C2493O3942I4C2520O3863I4C2654O4019I4C2662O4031I4C2700O2755I4C2713O2780I4C2723O2967I4C2732O3010I4C2816O3086I4C2837O9575C2849O3202I4C2905O3304I4C2909O3311I4C2913O3317I4C2992O3315I4C3072O4126I4C3094O4143I4C3129O2422I4C3136O2386I4C3151O9660C3161O9759C3166O9696C3178O9715C3182O9696C3195O9715C3208O9696C3234O9715C3250O9781C3277O2844I4C3282O3483I4C3287O9046C3292O8708C3301O6852C3306O6446C3311O3575I3C3319O4875C3374O6341C3433O8209C3498O8409C3559O4987C3620O2467I4C3713O3086I4C3730O3202I4C3767O3315I4C3796O2386I4,F0O8393F0O6606F1O8161F2O5105F3O9544F0O2517I4F0O2609I4,S0x2ee4c9e90f0S0x2ee4c9e9568S0x6682e9a8e0S0x2ee4c9e95b8
code-creation,LazyCompile,13,7651324,0x225ca813da0,3764,normalize node:path:304:12,0x2ee4c9e96c0,*
code-source-info,0x225ca813dax2ee4c9e90f0S0x2ee4c9e95b8S0x2ee4c9e9568S0x6682e9a8e0
new,MemoryChunk,0x1e800a00000,262144
new,MemoryChunk,0x30143180000,262144
new,MemoryChunk,0xe072f00000,262144
new,MemoryChunk,0x4737d00000,262144
new,MemoryChunk,0x1fbc3c0000,262144
new,MemoryChunk,0xaa17840000,262144
new,MemoryChunk,0x7649a00000,262144
new,MemoryChunk,0x712d280000,262144
new,MemoryChunk,0x20408280000,262144
new,MemoryChunk,0x3931ea80000,262144
new,MemoryChunk,0x3997500000,262144
new,MemoryChunk,0x34af2c40000,262144
new,MemoryChunk,0x166409c0000,262144
new,MemoryChunk,0x24cbeac0000,262144
new,MemoryChunk,0x268a40000,262144
new,MemoryChunk,0x28de7180000,262144
new,MemoryChunk,0x2c62c040000,262144
new,MemoryChunk,0xb99e440000,262144
new,MemoryChunk,0xa1c7d80000,262144
new,MemoryChunk,0x28cfeb80000,262144
new,MemoryChunk,0x3115b9c0000,262144
new,MemoryChunk,0x3ac83640000,262144
new,MemoryChunk,0x1cd36c00000,262144
new,MemoryChunk,0x2f98c040000,262144
new,MemoryChunk,0x4d06c00000,262144
new,MemoryChunk,0x2c04fd80000,262144
new,MemoryChunk,0x13ccbb80000,262144
new,MemoryChunk,0xa553a00000,262144
new,MemoryChunk,0x1655400000,262144
new,MemoryChunk,0x1dceb80000,262144
new,MemoryChunk,0x240f7c40000,262144
new,MemoryChunk,0x24763100000,262144
scavenge,begin,0,484375,1671212000014
new,MemoryChunk,0x26c2a500000,262144
new,MemoryChunk,0x25246e00000,262144
new,MemoryChunk,0x14dd4e80000,262144
new,MemoryChunk,0x1f733c40000,262144
scavenge,end,0,484375,1671212000016
code-creation,LazyCompile,13,7662794,0x225ca814de0,1408,_addListener node:events:418:22,0x25aadb33e38,*
code-source-info,0x225ca814de0,13,12396,14471,C0O12396C56O7463I3C91O12525C130O12537C144O12811C192O12854C197O13129C227O13147C241O13330C274O13472C379O13330C389O13593C399O13673C404O13624C409O13472C458O13493C544O13506C548O13516C556O13461C593O8060I1C652O8150I1C703O3965I2C730O13776C748O13792C776O13799C785O13816C790O13472C851O13483C856O13273C887O13290C945O13299C988O14468C1019O12596C1024O7507I3C1029O12396C1092O13472C1188O3965I2,F0O12479F1O13739F2O8114I1F3O3812I0,S0x25aadb33798S0x25aadb33c18S0x25aadb33838S0x6682e9ad78
tick,0x7ff6a8355290,7664747,0,0x0,0,0x225ca7f9c2d,0x225ca7f9f50,0x225ca807833,0x225ca7f4f5f,0x225ca7fa37a,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a818feab,7680741,0,0x0,1
code-creation,LazyCompile,10,7688221,0x1f733c7892e,140,processTimers node:internal/timers:485:25,0x334252fef18,~
code-source-info,0x1f733c7892e,63,14769,15239,C0O14782C10O14782C15O14825C23O14836C31O14859C33O14894C35O14918C42O14935C47O14935C52O14918C54O14961C61O14968C66O15004C75O14997C83O15021C91O15037C100O15043C108O15057C110O15056C112O15068C113O15085C117O15117C120O15117C125O15154C127O15187C130O15187C135O14906C138O15225C139O15234,,
code-creation,LazyCompile,13,7688595,0x225ca815480,1204,emit node:events:340:44,0x25aadb33d78,*
code-source-info,0x225ca815480,13,10080,12370,C0O10080C98O10121C154O10160C197O10172C214O10205C233O10226C275O10269C280O10333C332O10459C342O11422C368O11435C378O11551C388O11486C421O11551C521O11710C541O11764C551O11844C585O11875C624O11919C728O11964C770O11968C834O12237C854O11928C862O11901C877O12367C908O12293C913O11480C919O10365C929O10397C935O10501C940O10080C995O11901,,
code-creation,LazyCompile,10,7688662,0x1f733c7982e,14,peek node:internal/priority_queue:45:7,0x2ee4c9fd488,~
code-source-info,0x1f733c7982e,64,1096,1133,C0O1106C2O1118C4O1117C10O1124C13O1128,,
code-creation,LazyCompile,10,7688780,0x1f733c79ae6,599,listOnTimeout node:internal/timers:505:25,0x334252fef88,~
code-source-info,0x1f733c79ae
code-creation,LazyCompile,10,7688894,0x1f733c79f36,19,peek node:internal/linkedlist:9:14,0x334252f44f0,~
code-source-info,0x1f733c79f36,62,139,221,C0O160C7O170C12O180C13O192C14O208C18O218,,
code-creation,LazyCompile,10,7688927,0x1f733c7a026,12,resetCache node:internal/http:32:20,0x2bdba13fb90,~
code-source-info,0x1f733c7a026,172,624,656,C0O632C4O641C11O655,,
code-creation,LazyCompile,10,7688971,0x1f733c7a106,34,shift node:internal/priority_queue:107:8,0x2ee4c9fd620,~
code-source-info,0x1f733c7a106,64,2706,2865,C0O2729C2O2734C4O2733C8O2761C10O2765C14O2775C16O2807C17O2814C18O2827C26O2827C31O2847C33O2860,,
code-creation,LazyCompile,10,7689025,0x1f733c7a236,132,removeAt node:internal/priority_queue:93:11,0x2ee4c9fd5b8,~
code-source-info,0x1f733c7a236,64,2358,2695,C0O2384C2O2389C4O2388C8O2415C10O2422C19O2427C26O2435C28O2457C31O2451C34O2445C38O2468C40O2478C45O2483C49O2503C50O2512C57O2523C62O2541C64O2549C71O2561C73O2560C79O2580C82O2584C85O2575C91O2594C95O2570C103O2601C108O2620C113O2620C120O2664C125O2664C131O2694,,
code-creation,LazyCompile,10,7689107,0x1f733c7a426,160,percolateDown node:internal/priority_queue:49:16,0x2ee4c9fd4d8,~
code-source-info,0x1f733c7a426,64,1152,1829,C0O1181C2O1186C4O1185C8O1222C10O1227C12O1226C16O1260C18O1265C20O1264C24O1291C26O1296C28O1295C32O1322C34O1326C38O1355C40O1351C46O1355C51O1390C53O1394C56O1398C60O1410C62O1425C69O1452C72O1447C78O1462C82O1435C89O1476C94O1490C96O1507C100O1533C102O1537C106O1562C113O1583C118O1598C120O1612C124O1652C129O1684C131O1694C135O1710C140O1340C143O1740C145O1750C149O1763C153O1801C159O1828,,
markcompact,begin,0,515625,1671212000051
delete,MemoryChunk,0x25246e00000
delete,MemoryChunk,0x14dd4e80000
delete,MemoryChunk,0x22893440000
delete,MemoryChunk,0xafeaf40000
delete,MemoryChunk,0x129ec880000
delete,MemoryChunk,0x3016c700000
markcompact,end,0,515625,1671212000053
tick,0x7ff6a83590a1,7696713,0,0x0,0,0x225ca815157,0x225ca79f18a,0x225ca7df85d,0x225ca7d0a8b,0x225ca7df2e2,0x225ca811be5,0x225ca7d761c,0x225ca7d0a8b,0x225ca7df2e2,0x225ca811be5,0x225ca7d7799,0x225ca7d0a8b,0x225ca7df2e2,0x225ca811be5,0x225ca7d80f2,0x225ca7daf76,0x225ca7d72f6,0x225ca815689,0x225ca7e0acd,0x225ca7da3a8
code-creation,LazyCompile,13,7703273,0x225ca815a20,1216,addListener node:events:486:58,0x25aadb33ed8,*
code-source-info,0x225ca815a20,13,14677,14751,C0O14677C56O7463I4C91O12525I0C146O12537I0C160O12811I0C224O12854I0C229O13129I0C275O13147I0C285O13330I0C355O13493I0C441O13506I0C445O13516I0C453O13461I0C506O8060I2C562O8150I2C613O3965I3C640O13776I0C658O13792I0C686O13799I0C695O13816I0C700O13673I0C705O13273I0C752O13290I0C826O13299I0C885O14748C916O12596I0C921O7507I4C926O14677C1016O3965I3,F0O14706F1O12479I0F2O13739I0F3O8114I2F4O3812I1,S0x25aadb33e38S0x25aadb33798S0x25aadb33c18S0x25aadb33838S0x6682e9ad78
code-creation,LazyCompile,13,7704087,0x225ca816000,3576,parseQueryStringValues C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:51:50,0x2f65a72e758,*
code-source-info,0x225cax2f65a72bf70S0x2f65a72e708S0x2f65a72bd68S0x1bb8fb37940
tick,0x7ff6a81bcf1f,7712699,0,0x0,0,0x7ff6a8153cd0,0x225ca7ee730,0x225ca7f23f1,0x225ca7f4f2b,0x225ca7fa37a,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a83f3372,7728733,0,0x0,0,0x225ca7f2e5b,0x225ca7fe4c9,0x225ca807c4e,0x225ca7f4f5f,0x225ca80eed3,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,7730508,0x225ca816fa0,1520,extname node:path:836:10,0x2ee4c9e9998,*
code-source-info,0x225ca816fa0,35,26916,29044,C0O26916C48O3533I2C76O27416C94O27423C110O27440C322O27475C338O27522C578O2016I1C594O2044I1C617O2084I1C626O27502C647O27630C704O27637C712O27674C974O1818I0C1008O28014C1018O28171C1028O28201C1056O27891C1066O27649C1069O27605C1084O28315C1089O28977C1120O3575I2C1125O26916C1179O27440C1237O27522C1292O27674C1380O27605,F0O27721F1O27502F2O26930,S0x2ee4c9e90f0S0x2ee4c9e9568S0x6682e9a8e0
code-creation,LazyCompile,13,7734700,0x225ca817640,424,slowCases node:internal/util:165:19,0x25aadb2ad98,*
code-source-info,0x225ca817640,12,4495,6280,C0O4495C48O4518C102O6250C107O4812C112O4556C117O4952C122O5372C161O5418C180O5438C185O5468C212O5772C217O5928C222O6085C227O4495,,
tick,0x7fffb2a0d1a4,7744707,0,0x0,8
code-creation,LazyCompile,13,7751567,0x225ca817860,928,matchKnownFields node:_http_incoming:231:26,0x2bdba137f08,*
code-source-info,0x225ca817860,170,7322,11286,C0O7322C48O7361C107O7401C112O7489C147O7509C152O7535C189O7848C194O8249C199O8501C209O8705C241O8731C277O8796C313O8822C349O8883C385O8909C390O8962C405O8865C420O8778C435O9008C440O9130C445O9352C450O9792C455O9923C460O10287C465O10545C470O11162C548O11242C553O11201C558O10921C563O7322C617O11162,,
scavenge,begin,0,578125,1671212000115
scavenge,end,0,578125,1671212000116
tick,0x7ff6a7b6b115,7760735,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca7f6018,0x225ca7f29af,0x225ca7f566e,0x225ca7f9d61,0x225ca7f9f50,0x225ca807833,0x225ca7f4f5f,0x225ca7fa37a,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,7771212,0x225ca817ce0,5080,_storeHeader node:_http_outgoing:374:22,0x2bdba13ae90,*
code-source-info,0x225ca817cex2bdba13faf0S0x2bdba13aee0S0x2bdba13af30S0x2bdba13af80
tick,0x7ff6a80407e5,7776694,0,0x0,0,0x7ff6a7f0aef0,0x225ca7f6114,0x225ca7f29af,0x225ca7f566e,0x225ca7f9d61,0x225ca7f9f50,0x225ca807833,0x225ca7f4f5f,0x225ca80eed3,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,7789559,0x225ca8193a0,3816,Readable.read node:internal/streams/readable:394:35,0x334252dc1a0,*
code-source-info,0x225ca8193ax2ee4c9fc888S0x334252dc150S0x334252dd530
tick,0x7fffb299f23b,7792780,1,0x7ff6a79fa6e0,6,0x7ff6a82ef2d0,0x225ca7d7200,0x225ca7d6737,0x225ca7e37e9,0x225ca7df9fa,0x225ca7d0a8b,0x225ca7df2e2,0x225ca811be5,0x225ca7d761c,0x225ca7d0a8b,0x225ca7df2e2,0x225ca811be5,0x225ca7d7799,0x225ca7d0a8b,0x225ca7df2e2,0x225ca811be5,0x225ca7d80f2,0x225ca7daf76,0x225ca7d72f6,0x225ca815689,0x225ca7e0acd,0x225ca7da3a8
scavenge,begin,0,625000,1671212000159
scavenge,end,0,625000,1671212000160
code-creation,LazyCompile,13,7802282,0x225ca81a3e0,1036,normalizeParseOptions C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:204:59,0x2f65a72e870,*
code-source-info,0x225ca81a3e0,194,6407,8598,C0O6407C48O6420C139O6457C176O6478C251O6941C350O7037C358O7085C405O7149C414O7255C422O7353C436O7382C450O7492C454O7580C458O7665C472O6014I0C526O6024I0C554O7737C596O7769C624O7790C673O7903C683O7972C697O8029C705O8167C709O8290C723O8344C731O8447C738O8571C745O8596C750O6407C804O6420,F0O7737,S0x2f65a72be80
code-creation,LazyCompile,13,7806144,0x225ca81a880,648,fresh C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:153:16,0x2bdba11d330,*
code-source-info,0x225ca81a880,156,2638,2808,C0O2638C48O2659C145O2806C176O2713C186O2761C320O2806C329O2794C362O2799C419O2806C433O2638C495O2761,,
tick,0x7ff6a8150624,7808712,0,0x0,0,0x7ff6a8153cd0,0x225ca80449b,0x225ca7f2aa8,0x225ca809f14,0x225ca7fdf9e,0x225ca807c4e,0x225ca7f4f5f,0x225ca7fa37a,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,7809583,0x225ca81aba0,6924,SendStream C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:96:21,0x2f65a73db80,*
code-source-info,0x225ca81abax334252de520S0x25aadb32d48S0x25aadb33a48
code-creation,LazyCompile,13,7814133,0x225ca81c900,1904,writeOrBuffer node:internal/streams/writable:365:23,0x334252ea870,*
code-source-info,0x225ca81c900,56,12032,13054,C0O12032C48O12098C169O12121C253O12150C291O12147C302O12233C306O12225C324O12324C334O12355C339O12378C409O12395C423O12411C491O12455C498O12121C510O12464C636O12471C650O12478C668O12488C686O12464C796O12516C864O12539C899O12579C910O12610C978O12630C997O12662C1008O13023C1076O13051C1107O13041C1197O13051C1224O12429C1229O12032C1283O12098C1325O12378C1369O12411C1472O12464C1566O12516C1610O12610C1652O13023C1694O13041,,
tick,0x7ff6a83a3aed,7824764,0,0x0,0,0x225ca8090fe
code-creation,LazyCompile,10,7826678,0x2a57ad32d16,77,Buffer node:buffer:269:16,0x6682ea5940,~
code-source-info,0x2a57ad32d16,18,7965,8293,C0O8002C3O8002C6O8050C12O8086C18O8137C34O8143C39O8137C40O8206C43O8220C48O8220C53O8231C54O8240C57O8254C71O8254C76O8290,,
code-creation,LazyCompile,13,7826734,0x225ca81d100,2920,_write node:internal/streams/writable:283:16,0x334252ea610,*
code-source-info,0x225ca81dx334252ea870S0x6682ea6010S0x25aadb2ad20
tick,0x7ff6a86b4ab8,7840734,0,0x0,4,0x7ff6a7f1e700,0x225ca7c3d47,0x225ca7d3946,0x225ca7d9eaf
code-creation,LazyCompile,13,7844459,0x225ca81dd20,3480,ReadableState node:internal/streams/readable:78:23,0x334252dbc70,*
code-source-info,0x225ca81ddx334252e0340S0x334252e0fe8S0x334252e0e88S0x334252e0f98
new,MemoryChunk,0xce9d100000,262144
new,MemoryChunk,0x2e732640000,262144
new,MemoryChunk,0x34bc1580000,262144
new,MemoryChunk,0x1b97a580000,262144
new,MemoryChunk,0x3159ca00000,262144
new,MemoryChunk,0x166e79c0000,262144
new,MemoryChunk,0x184a4680000,262144
new,MemoryChunk,0xf7c5640000,262144
new,MemoryChunk,0x1dc93340000,262144
new,MemoryChunk,0xe16b300000,262144
new,MemoryChunk,0x3249bec0000,262144
new,MemoryChunk,0x11ce7a40000,262144
new,MemoryChunk,0x3b32a880000,262144
new,MemoryChunk,0x15781c80000,262144
new,MemoryChunk,0x264fda40000,262144
new,MemoryChunk,0x380d2c0000,262144
new,MemoryChunk,0x2f33de80000,262144
new,MemoryChunk,0x2315f500000,262144
new,MemoryChunk,0x1ba7fec0000,262144
new,MemoryChunk,0x1433f940000,262144
new,MemoryChunk,0xa9623c0000,262144
new,MemoryChunk,0x1fbedb40000,262144
new,MemoryChunk,0x3ceb5540000,262144
new,MemoryChunk,0x39fec140000,262144
new,MemoryChunk,0x1cfad280000,262144
new,MemoryChunk,0x92f140000,262144
new,MemoryChunk,0x2b200d80000,262144
new,MemoryChunk,0x8ae12c0000,262144
new,MemoryChunk,0x3132b040000,262144
new,MemoryChunk,0x27927100000,262144
new,MemoryChunk,0x1de12b40000,262144
new,MemoryChunk,0x176a7b40000,262144
new,MemoryChunk,0x249ee540000,262144
new,MemoryChunk,0x10138040000,262144
new,MemoryChunk,0x2c7e1140000,262144
new,MemoryChunk,0x121a8b40000,262144
new,MemoryChunk,0x2b104b80000,262144
new,MemoryChunk,0x60a4200000,262144
new,MemoryChunk,0x31ea21c0000,262144
new,MemoryChunk,0x354a9ec0000,262144
new,MemoryChunk,0x1e909240000,262144
new,MemoryChunk,0x15a6b600000,262144
new,MemoryChunk,0x1ed204c0000,262144
new,MemoryChunk,0x2b304600000,262144
new,MemoryChunk,0x29a0780000,262144
new,MemoryChunk,0x1eb33d40000,262144
new,MemoryChunk,0x397b4ac0000,262144
new,MemoryChunk,0x4653000000,262144
new,MemoryChunk,0x38a4d6c0000,262144
new,MemoryChunk,0x18ec9680000,262144
new,MemoryChunk,0x305193c0000,262144
new,MemoryChunk,0x3c207740000,262144
new,MemoryChunk,0x2aab7240000,262144
new,MemoryChunk,0x2eeb6400000,262144
new,MemoryChunk,0x27a5d40000,262144
new,MemoryChunk,0x26fa1e00000,262144
new,MemoryChunk,0x2b8ae200000,262144
new,MemoryChunk,0x2c362300000,262144
new,MemoryChunk,0x4983640000,262144
new,MemoryChunk,0x255b4980000,262144
new,MemoryChunk,0x329156c0000,262144
new,MemoryChunk,0x11e700000,262144
new,MemoryChunk,0x5457f40000,262144
new,MemoryChunk,0x388ab8c0000,262144
scavenge,begin,0,671875,1671212000212
scavenge,end,0,687500,1671212000213
code-creation,LazyCompile,13,7851423,0x225ca81ec00,1784,toNamespacedPath node:path:618:19,0x2ee4c9e9858,*
code-source-info,0x225ca81ec00,35,20087,21202,C0O20087C48O20153C75O20190C90O20197C100O20258C145O20297C171O20304C180O20341C450O20384C512O20866C706O2016I0C724O2044I0C746O2084I0C756O20846C766O20920C1026O20963C1036O20988C1282O21031C1291O21197C1322O21155C1394O21170C1396O20450C1401O20329C1407O20223C1409O20087C1463O20341C1532O20866C1592O20920C1652O20988,F0O20846,S0x2ee4c9e9568
code-creation,LazyCompile,13,7855568,0x225ca81f3e0,3692,parseQueryStringKeys C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:150:46,0x2f65a72e820,*
code-source-info,0x225ca81f3ex2f65a72e7d0
tick,0x7ff6a82ef4f2,7856750,0,0x0,0,0x7ff6a82ef2d0,0x225ca7f6018,0x225ca7f29af,0x225ca7f566e,0x225ca7f9d61,0x225ca7f9f50,0x225ca807833,0x225ca7f4f5f,0x225ca7fa37a,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a871d4e2,7872745,0,0x0,4,0x7ff6a7f1e700,0x225ca7f4f5f,0x225ca80eed3,0x225ca7d0a8b,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,7874310,0x225ca820380,2608,header C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:777:29,0xe49884ddf8,*
code-source-info,0x225caxe6a61a9b70S0x2bdba13b920S0x2bdba13b8d0S0x2bdba135160S0x2bdba13b880S0x2bdba135110
code-creation,LazyCompile,13,7880579,0x225ca820f60,8220,send C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:111:25,0xe49884d990,*
code-source-info,0x225ca820fxe49884de48S0x6682ea5f58S0x2bdba13bdd8S0x334252ea6e8S0x2ee4c9fc888S0xe49884ddf8S0xe6a61a9b70S0x96d321bd10S0x2f65a7365d0
code-creation,LazyCompile,13,7887272,0x225ca8233a0,1404,setHeader node:_http_outgoing:574:57,0x2bdba13b920,*
code-source-info,0x225ca8233a0,171,18237,18592,C0O18237C56O18265C163O17712I2C191O17745I2C252O7162I3C301O17754I2C320O17919I0C334O7523I1C381O18017I0C391O18415C427O18433C446O18490C473O18478C535O18523C715O18560C758O18566C798O18557C831O18589C862O18055I0C894O17957I0C899O17791I2C904O18287C909O18237C964O18265C1009O17745I2C1079O18055I0,F0O18358F1O18017I0F2O18329F3O17754I2,S0x2bdba13b8d0S0x2bdba135160S0x2bdba13b880S0x2bdba135110
tick,0x7ff6a7f00e93,7888790,0,0x0,0,0x7ff6a7f055e0,0x7ff6a83b671b,0x225ca81619d,0x225ca7d0ecc,0x225ca7d6846,0x225ca7d776b,0x225ca7d0a8b,0x225ca7df2e2,0x225ca811be5,0x225ca7d80f2,0x225ca7daf76,0x225ca7d72f6,0x225ca815689,0x225ca7e0acd,0x225ca7da3a8
code-creation,LazyCompile,13,7894085,0x225ca823a20,596,_unrefTimer node:net:417:52,0xbfdd37c8e0,*
code-source-info,0x225ca823a20,120,11709,11824,C0O11709C64O11738C74O11775C189O11806C209O7307I0C279O10242I2C283O10269I2C300O11754C304O11717C319O7322I0C324O10315I2C329O11823C360O11709C414O11775C456O7307I0C498O11717,F0O11806F1O7349I0F2O9918I1,S0x334252fe548S0x334252fead8S0x334252feb28
code-creation,LazyCompile,13,7894308,0x225ca823d00,728,remove node:internal/linkedlist:15:16,0x334252f4558,*
code-source-info,0x225ca823d00,62,274,497,C0O274C48O295C146O345C150O338C207O375C272O418C355O461C363O487C367O496C398O274C452O295C494O375,,
tick,0x7ff6a802b4b2,7904752,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
new,MemoryChunk,0x3b81f940000,262144
code-creation,LazyCompile,13,7920839,0x225ca824060,4492,createError C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\http-errors\\index.js:49:22,0x23ad5936ca8,*
code-source-info,0x225ca
tick,0x7ff6a82bb361,7920942,0,0x0,4,0x7ff6a7f16560,0x225ca8090b6
code-creation,LazyCompile,13,7935815,0x225ca825320,2360,restore C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:631:17,0x2bdba123748,*
code-source-info,0x225ca825320,159,14253,14639,C0O14253C152O14352C160O14253C176O14279C459O14325C480O14279C523O14325C685O14379C699O14426C713O14415C766O14452C794O14447C883O14361C967O14379C975O14387C995O14379C1016O14429C1025O14426C1040O14415C1101O14439C1109O14452C1135O14447C1241O14396C1246O14361C1310O14471C1389O14637C1419O14253C1787O14361,,
tick,0x7ff6a8355290,7936760,0,0x0,0,0x225ca7fc8b2,0x225ca7e227f,0x225ca7dfae9,0x225ca7da3a8
code-creation,LazyCompile,13,7938443,0x225ca825d60,1788,Readable.resume node:internal/streams/readable:964:37,0x334252dc7d0,*
code-source-info,0x225ca825dx2ee4c9fc888S0x334252dc858S0x25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
code-creation,LazyCompile,13,7939024,0x225ca826520,3500,module.exports C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\qs\\lib\\parse.js:239:27,0x2f65a72e8c0,*
code-source-info,0x225cax2f65a72bc70S0x1bb8fb38c78S0x2f65a72be30S0x2f65a72bbd0
code-creation,LazyCompile,13,7939443,0x225ca827460,1492,join node:path:421:7,0x2ee4c9e97a0,*
code-source-info,0x225ca827460,35,13602,15808,C0O13602C92O13635C196O13723C210O13768C215O3533I2C242O13824C259O13831C279O13847C293O13950C465O13740C469O13705C484O13980C498O14871C770O1818I0C790O15499C816O15490C832O15539C1026O1818I1C1049O15785C1095O15803C1122O15598C1127O14922C1132O14024C1141O3575I2C1146O13660C1155O13602C1209O13705C1266O14871C1324O15539,F0O14855F0O15523F1O13780,S0x2ee4c9e90f0S0x6682e9a8e0
code-creation,LazyCompile,13,7941801,0x225ca827b20,388,handle C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\layer.js:86:49,0x2bdba127f80,*
code-source-info,0x225ca827b20,162,1576,1775,C0O1576C48O1611C108O1629C141O1636C168O1717C217O1774C248O1692C253O1576C308O1717C319O1759,,
new,MemoryChunk,0x308b6500000,262144
code-creation,LazyCompile,13,7946963,0x225ca827d40,1276,parseurl C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:35:19,0x2bdba11d240,*
code-source-info,0x225ca827d40,156,485,806,C0O485C56O509C89O516C103O610C139O2659I0C236O2713I0C246O2761I0C376O2799I0C384O2761I0C394O2794I0C428O2799I0C492O628C502O698C533O734C570O763C672O795C769O804C774O585C783O485C846O2761I0,F0O628,S0x2bdba11d330
code-creation,LazyCompile,13,7950175,0x225ca828300,5516,parserOnIncoming node:_http_server:852:26,0x2f65a7011b8,*
code-source-info,0x225cax334252eb048S0x2f65a705750S0x25aadb33ed8S0x25aadb33d78S0x334252dc5a0S0x2f65a7014b0S0x6682e98098S0x334160bff28S0x3f9d3545808
tick,0x225ca815484,7952800,0,0x0,0,0x225ca7f38ca,0x225ca8226d0,0x225ca7f4f5f,0x225ca7fa37a,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,7955937,0x225ca829a40,9080,parserOnHeadersComplete node:_http_common:77:33,0x2bdba134f80,*
code-source-info,0x225ca829ax2ee4c9fc888S0x2bdba137eb8S0x2bdba137e68S0x334252dce88S0x334252dbcc0S0x334252de520S0x25aadb32d48S0x334252cf5c8S0x25aadb33a48
code-creation,LazyCompile,13,7956589,0x225ca82bfc0,1716,Readable.on node:internal/streams/readable:875:33,0x334252dc5a0,*
code-source-info,0x225ca82bfc0,49,28647,29573,C0O28647C56O28693C86O7463I5C121O12525I1C176O12537I1C190O12811I1C254O12854I1C259O13129I1C305O13147I1C315O13330I1C385O13493I1C471O13506I1C475O13516I1C483O13461I1C536O8060I3C592O8150I3C643O3965I4C670O13776I1C688O13792I1C716O13799I1C725O13816I1C730O13673I1C735O13273I1C782O13290I1C856O13299I1C915O28735C951O28763C1010O29128C1029O29162C1034O28948C1112O28974C1120O28941C1213O29070C1221O29078C1231O29101C1289O29570C1320O12596I1C1325O7507I5C1330O28647C1420O3965I4,F0O28693F1O14706I0F2O12479I1F3O13739I1F4O8114I3F5O3812I2,S0x25aadb33ed8S0x25aadb33e38S0x25aadb33798S0x25aadb33c18S0x25aadb33838S0x6682e9ad78
new,MemoryChunk,0x1d49d300000,262144
code-creation,LazyCompile,13,7967637,0x225ca82c7c0,880,flow node:internal/streams/readable:1009:14,0x334252dc980,*
code-source-info,0x225ca82c7c0,49,32837,32975,C0O32837C48O32872C81O32891C112O32911C150O32891C169O32937C231O32955C308O32924C320O32937C410O32955C481O32924C496O32974C527O32837C582O32937C622O32924C659O32937C703O32924C737O32891,,
tick,0x7ff6a7fd9024,7968777,0,0x0,0,0x7ff6a8358ff5,0x225ca820a78,0x225ca7f23f1,0x225ca7f4f2b,0x225ca80eed3,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,0,812500,1671212000344
new,MemoryChunk,0x2e056f00000,262144
new,MemoryChunk,0x34578bc0000,262144
new,MemoryChunk,0x3cfe9580000,262144
new,MemoryChunk,0x16624bc0000,262144
scavenge,end,0,812500,1671212000345
tick,0x7ff6a8029f49,7984789,0,0x0,5
code-creation,LazyCompile,13,7987967,0x225ca82cc20,4700,handle C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:136:31,0x2bdba123988,*
code-source-info,0x225ca82ccx2bdba123748S0x2bdba123608S0x2bdba117ca8
tick,0x7ff6a804387f,8000767,0,0x0,0,0x7ff6a8153cd0,0x225ca818573,0x225ca8044b8,0x225ca7f2aa8,0x225ca809f14,0x225ca822115,0x225ca7f4f5f,0x225ca7fa37a,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8007701,0x225ca82dfa0,2264,writeHead node:_http_server:269:19,0x334160bffc8,*
code-source-info,0x225ca82dfa0,173,10076,12734,C0O10076C48O10151C78O10186C96O10206C109O10292C155O10405C160O10483C270O10538C404O10524C443O10608C488O10651C611O10759C682O11026C758O11347C865O11471C902O11592C935O7523I0C990O11564C1000O11694C1114O11713C1256O11754C1290O11806C1300O11827C1313O12591C1420O12679C1504O12731C1535O12617C1540O12418C1545O11619C1550O11371C1555O11057C1560O10795C1565O10226C1570O10076C1625O10483C1691O10538C1750O10651C1807O10759C1877O11026C1936O11347C1993O12591,F0O11564,S0x2bdba135160
new,MemoryChunk,0x3757f840000,262144
tick,0x7fffb2a0d1c4,8016826,0,0x0,1
code-creation,LazyCompile,13,8017093,0x225ca82ea00,3464,writevGeneric node:internal/stream_base_commons:126:23,0x1d24e4c3660,*
code-source-info,0x225ca82ea00,84,3165,3805,C0O3165C48O3219C108O2950I1C155O2983I1C339O3011I1C354O3043I1C401O3065I1C495O3084I1C539O3108I1C592O3262C636O3292C714O3453C722O3431C947O3483C960O3530C969O3564C1003O3556C1050O3604C1054O3596C1088O3465C1152O3483C1160O3530C1165O3564C1175O3587C1179O3564C1193O3556C1210O3591C1214O3556C1239O3604C1243O3596C1285O3499C1288O3465C1333O3652C1391O3718C1453O3737C1709O4100I0C1734O4083I0C1756O4130I0C1821O4184I0C1831O4239I0C1836O4262I0C1906O4282I0C1947O4318I0C1975O3802C2006O3360C2013O3353C2018O3165C2073O2983I1C2144O3292C2352O3465C2628O4262I0,F0O3752F1O3199,S0x1d24e4c3740S0x1d24e4c3610
code-creation,LazyCompile,13,8024286,0x225ca82f8a0,812,trim_prefix C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:293:23,0x1bb8fb32870,*
code-source-info,0x225ca82f8a0,159,6891,8104,C0O6891C52O6948C86O6955C96O7034C101O7900C113O7926C157O7947C252O7966C351O7900C370O7966C379O8063C390O1611I0C395O1629I0C455O1636I0C482O1717I0C531O8103C562O1692I0C567O7996C572O6891C627O7966C684O1717I0C695O1759I0,F0O8063F1O7900,S0x2bdba127f80S0x2bdba117ca8
tick,0x225ca82af42,8032815,0,0x0,0
code-creation,LazyCompile,13,8035091,0x225ca82fc80,3404,sendFile C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:712:51,0x2f65a73e648,*
code-source-info,0x225ca82fcx3f9d3568c58S0x2bdba117ca8S0x2ee4c9e9858S0x3f9d3572eb0S0x2ee4c9dc0f8S0x2ee4c9dc0a8S0x3f9d35678b0S0x6682e9acd8S0x2ee4c9e9568
tick,0x7ff6a801c4d6,8048809,0,0x0,0,0x7ff6a8153cd0,0x225ca7f2a70,0x225ca809f14,0x225ca822115,0x225ca7f4f5f,0x225ca7fa37a,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8058649,0x225ca830b20,5336,resOnFinish node:_http_server:788:21,0x2f65a701118,*
code-source-info,0x225ca830bx2f65a705750S0x6682e98098S0x1d24e4c37e0S0xbfdd37ff00S0x2f65a701500S0xbfdd37ffa0S0x2bdba138418S0x334252f3a60S0x334252fec38S0x334252dc6a0S0x334252dc610S0x6682e9a980S0x334252febc8S0x6682e9acd8S0x334252d0a28
code-creation,LazyCompile,13,8059085,0x225ca8321e0,1728,writeOrBuffer node:internal/streams/writable:365:23,0x334252ea870,*
code-source-info,0x225ca8321e0,56,12032,13054,C0O12032C48O12098C169O12121C253O12150C291O12147C302O12233C306O12225C324O12324C338O12355C343O12378C414O12395C428O12411C497O12455C504O12121C516O12464C643O12471C657O12478C675O12488C691O12464C731O12516C823O12539C862O12579C873O12610C941O12630C961O12662C972O13023C1040O13051C1071O13041C1162O13051C1189O12429C1194O12032C1248O12098C1292O12378C1338O12411C1439O12516C1483O12610C1527O13023C1571O13041,,
new,MemoryChunk,0x4b32bc0000,262144
code-creation,LazyCompile,13,8064403,0x225ca832940,5476,endReadableNT node:internal/streams/readable:1336:23,0x334252dd580,*
code-source-info,0x225cax2ee4c9fc888S0x334252cf360S0x25aadb33d78S0x334252cf3c8S0x334252cf0a8S0x2bdba1383c8S0x2bdba137fa8
tick,0x7fffb2a0d1a4,8064835,0,0x0,0,0x9ce61ce500,0x225ca82ef6f,0x225ca80349b,0x225ca7f27e4,0x225ca804c80,0x225ca7fd4fd,0x225ca7ef92c,0x225ca82248f,0x225ca7f4f5f,0x225ca80eed3,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8072955,0x225ca8340e0,1252,containsDotFile C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:925:26,0x2f65a73dc70,*
code-source-info,0x225ca8340e0,201,19487,19655,C0O19487C48O19525C81O19517C94O19560C102O19577C132O19584C150O19595C386O19599C396O19499C448O19517C456O19560C461O19577C491O19584C501O19595C782O19599C792O19534C795O19499C810O19653C841O19627C847O19487C901O19595C971O19499C1031O19595C1109O19499,,
scavenge,begin,0,890625,1671212000442
new,MemoryChunk,0x2b847cc0000,262144
new,MemoryChunk,0x3727a300000,262144
new,MemoryChunk,0x11bbff40000,262144
new,MemoryChunk,0x1cfddb80000,262144
new,MemoryChunk,0x215b4700000,262144
new,MemoryChunk,0x13160840000,262144
new,MemoryChunk,0x1ff59440000,262144
new,MemoryChunk,0x1a1a8dc0000,262144
new,MemoryChunk,0xbe36e00000,262144
new,MemoryChunk,0x30010000000,262144
new,MemoryChunk,0x7779c40000,262144
tick,0x7ff6a8167993,8080825,0,0x0,1
scavenge,end,0,890625,1671212000443
code-creation,LazyCompile,13,8081471,0x225ca834680,2696,OutgoingMessage node:_http_outgoing:97:25,0x2bdba13adf0,*
code-source-info,0x225ca834680,171,3281,4565,C0O3281C56O5832I2C71O2592I1C101O5795I2C160O5832I2C198O5840I2C208O5902I2C235O5900I2C689O5945I2C1019O5986I2C1145O5979I2C1197O6337I2C1292O3467C1329O3483C1388O3808C1396O3832C1404O3858C1412O3883C1416O3916C1420O3949C1424O3996C1428O4031C1432O4075C1436O4100C1443O4136C1450O4169C1457O4197C1464O4231C1475O4256C1482O4281C1493O4307C1500O4335C1507O4364C1514O4390C1525O4411C1532O4437C1539O4461C1546O4490C1553O4526C1564O4556C1637O4564C1668O3281C1723O5986I2,F0O3296F1O151I0F2O2592I1,S0x334252de520S0x25aadb32d48S0x25aadb33a48
code-creation,LazyCompile,13,8085273,0x225ca8351e0,496,set C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:359:23,0x2bdba108488,*
code-source-info,0x225ca8351e0,144,8451,9387,C0O8451C59O8491C73O8792C78O8548C123O8578C188O8590C207O8639C280O8732C285O8689C315O8698C342O8784C348O8451C403O8578,,
code-creation,LazyCompile,13,8092582,0x225ca835460,6692,clearBuffer node:internal/streams/writable:529:21,0x334252eaaa0,*
code-source-info,0x225cax334252ea3a0S0x334252ea8c0S0xbfdd37d670S0xbfdd37d5b8S0xbfdd37de80S0x1d24e4c3660S0xbfdd37c8e0S0x1d24e4c3740S0x1d24e4c3610S0x334252fe548S0x334252fead8
tick,0x7ff6a80293ab,8095983,0,0x0,0,0x7ff6a81557b0,0x225ca7f6707,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8098793,0x225ca837040,2920,_write node:internal/streams/writable:283:16,0x334252ea610,*
code-source-info,0x225cax334252ea870S0x6682ea6010S0x25aadb2ad20
code-creation,LazyCompile,13,8103174,0x225ca837c60,4396,_flushOutput node:_http_outgoing:950:63,0x2bdba13bec8,*
code-source-info,0x225ca837cx334252ea6e8S0x334252ea660S0x334252ea770S0x334252ea610S0x334252ea870S0x6682ea6010S0x25aadb2ad20
new,MemoryChunk,0xf79c700000,262144
tick,0x225ca813380,8112043,0,0x0,0,0x225ca8301a0,0x225ca7e37e9,0x225ca7df9fa,0x225ca82fab3,0x225ca811be5,0x225ca7d761c,0x225ca82fab3,0x225ca811be5,0x225ca7d7799,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca7daf76,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
code-creation,LazyCompile,13,8116684,0x225ca838ee0,4184,pipe C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:506:43,0x2f65a73e5a8,*
code-source-info,0x225ca838eex2f65a73ddb0S0x2f65a73e210S0x2f65a73dc70S0x2ee4c9e97a0S0x2ee4c9e90f0S0x6682e9a8e0
code-creation,LazyCompile,13,8117217,0x225ca83a0e0,1408,_addListener node:events:418:22,0x25aadb33e38,*
code-source-info,0x225ca83a0e0,13,12396,14471,C0O12396C56O7463I3C91O12525C130O12537C144O12811C192O12854C197O13129C227O13147C241O13330C274O13472C379O13330C389O13593C399O13673C404O13624C409O13472C458O13493C544O13506C548O13516C556O13461C593O8060I1C652O8150I1C703O3965I2C730O13776C748O13792C776O13799C785O13816C790O13472C851O13483C856O13273C887O13290C945O13299C988O14468C1019O12596C1024O7507I3C1029O12396C1092O13472C1188O3965I2,F0O12479F1O13739F2O8114I1F3O3812I0,S0x25aadb33798S0x25aadb33c18S0x25aadb33838S0x6682e9ad78
code-creation,LazyCompile,13,8119028,0x225ca83a780,5748,serveStatic C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js:72:31,0xe49886a800,*
code-source-info,0x225ca83ax2f65a73db30S0x25aadb33ed8S0x2f65a73e5a8S0x2f65a73ddb0S0x2f65a73e210S0x2bdba11d240S0x2bdba11d290S0x2bdba11d330S0x2f65a73dc70
code-creation,LazyCompile,13,8121460,0x225ca83c020,2096,get node:_http_incoming:108:16,0x2bdba138108,*
code-source-info,0x225ca83c020,170,3190,3491,C0O3190C48O3209C192O3235C241O3245C266O3277C352O3357C362O3351C387O3416C415O3431C418O3416C431O3428C444O11965I0C485O12006I0C782O12055I0C816O12546I0C859O12612I0C944O12091I0C1002O12173I0C1049O12288I0C1111O3376C1118O3333C1133O3475C1137O3486C1164O12399I0C1169O3190C1224O3209C1301O12006I0C1367O12546I0C1539O12173I0C1694O3333,F0O3398,S0x2bdba137f58
tick,0x7ff6a815af41,8127994,0,0x0,0,0x7ff6a8153cd0,0x225ca810e1c,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8136077,0x225ca83c920,2092,format C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:65:17,0x2f65a73bae0,*
code-source-info,0x225ca83c920,200,1682,2358,C0O1682C48O1692C223O1735C255O1741C260O1811C294O1839C298O1847C367O1873C481O1978C628O2356C659O2068C728O2084C756O2085C790O2124C874O2115C905O2159C914O2188C1028O2287C1040O2295C1044O2287C1057O2295C1070O2287C1099O2295C1121O2321C1155O4402I0C1199O4463I0C1298O2301C1409O2133C1417O2097C1432O2356C1441O2211C1470O2217C1475O4506I0C1480O2356C1489O1891C1518O1897C1523O1682C1578O1692C1657O1847C1699O1978C1749O2097,F0O2303,S0x2f65a73bbd0
tick,0x7ff6a7a9da44,8144057,0,0x0,5,0x9ce61ce770,0x225ca836111,0x225ca7ef92c,0x225ca82248f,0x225ca7f4f5f,0x225ca80eed3,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8148456,0x225ca83d2a0,4288,_writeRaw node:_http_outgoing:344:19,0x2bdba13ae40,*
code-source-info,0x225ca83d2ax334252ea660S0x334252ea610S0x334252ea870S0x6682ea6010S0x25aadb2ad20S0x334252eae18S0x334252d0a28
tick,0x7ff6a88d0140,8160012,0,0x0,4,0x7ff6a7f16560,0x225ca81e680,0x225ca829f4d
code-creation,LazyCompile,13,8160090,0x225ca83e460,852,onParserExecute node:_http_server:633:25,0xbfdd37fdc0,*
code-source-info,0x225ca83e460,173,22011,22494,C0O22011C56O22354C128O11738I1C138O11775I1C246O11806I1C266O7307I2C337O10242I4C341O10269I4C358O11754I1C362O11717I1C377O7322I2C382O10315I4C387O22372C433O22422C481O22493C512O22011C566O11775I1C610O7307I2C656O11717I1C715O22372,F0O22372F1O22354F2O11806I1F3O7349I2F4O9918I3,S0x2ee4c9fc888S0xbfdd37c8e0S0x334252fe548S0x334252fead8S0x334252feb28
code-creation,LazyCompile,13,8163476,0x225ca83e860,296,processPromiseRejections node:internal/process/promises:203:34,0x2ee4c9c1400,*
code-source-info,0x225ca83e860,26,6535,8640,C0O6535C48O6604C78O6611C91O6658C100O6890C120O6911C149O6938C154O8637C200O6699C205O6535,,
new,MemoryChunk,0x105cd800000,262144
code-creation,LazyCompile,13,8175295,0x225ca83ea00,924,callback node:internal/streams/writable:550:44,0x39bd861cff8,*
code-source-info,0x225ca83ea00,56,17307,17420,C0O17307C52O17338C74O17343C78O17345C88O17354C122O17343C140O17386C165O17390C232O17364C249O17325C320O17343C332O17345C362O17354C382O17343C399O17386C417O17390C471O17364C484O17325C499O17419C530O17307C584O17325C671O17345C737O17338,,
tick,0x225ca835c5a,8176040,0,0x0,0,0x225ca7ef92c,0x225ca82248f,0x225ca7f4f5f,0x225ca80eed3,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,0,984375,1671212000548
new,MemoryChunk,0x17f2d780000,262144
new,MemoryChunk,0x1e6932c0000,262144
new,MemoryChunk,0x6a6ce00000,262144
new,MemoryChunk,0x351a9a80000,262144
new,MemoryChunk,0x1d31d840000,262144
new,MemoryChunk,0x359386c0000,262144
new,MemoryChunk,0x3bf3fc0000,262144
new,MemoryChunk,0x2e8863c0000,262144
new,MemoryChunk,0x310455c0000,262144
new,MemoryChunk,0x3d816400000,262144
new,MemoryChunk,0x36c12dc0000,262144
scavenge,end,0,984375,1671212000549
new,MemoryChunk,0x225ca840000,262144
code-creation,LazyCompile,13,8191220,0x225ca843060,5552,write_ node:_http_outgoing:730:16,0x2bdba13b070,*
code-source-info,0x225cax6682e97658S0x2f65a7015f0S0x2ee4c9fc888S0x2bdba13b830S0x334160bffc8S0x2bdba135160
tick,0x7ff6a81b38a2,8191990,0,0x0,5
code-creation,LazyCompile,13,8201763,0x225ca844900,2060,onwrite node:internal/streams/writable:425:17,0x334252ea960,*
code-source-info,0x225cax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a7c94b2b,8207016,0,0x0,0,0x7ff6a81557b0,0x225ca7f6707,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8212455,0x225ca8451e0,1080,removeListener node:events:557:28,0x25aadb34178,*
code-source-info,0x225ca8451e0,13,16670,17989,C0O16670C56O7463I2C93O16750C151O16766C165O16842C194O16857C204O16921C239O16942C259O16951C273O17239C296O17330C300O17337C314O17344C335O17376C353O17380C388O17400C396O17524C406O17577C416O17636C453O17737C472O11350I1C476O11354I1C485O11422I1C503O17376C514O11422I1C554O17802C568O17839C586O17833C616O17866C662O17912C672O11408I1C677O17690C682O17600C687O17552C718O17982C728O16976C733O16902C739O16813C741O7507I2C746O16670C801O11422I1C858O17636,F0O16696F1O17737F2O3812I0,S0x25aadb33798S0x25aadb2b2a8S0x6682e9ad78
tick,0x7ff6a8232eca,8223000,0,0x0,5
new,MemoryChunk,0x1c4ee5c0000,262144
tick,0x7ff6a8029d08,8238704,0,0x0,0,0x7ff6a8153cd0,0x225ca843eeb,0x225ca822115,0x225ca7f4f5f,0x225ca7fa37a,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8248439,0x225ca8456e0,1432,Hash node:internal/crypto/hash:58:14,0xe6a619b4c0,*
code-source-info,0x225ca8456e0,221,1032,1552,C0O1032C48O1069C107O1099C112O1148C256O3533I1C285O1230C398O1293C403O1420C442O1418C595O1458C626O1489C648O1466C709O538I0C783O1551C814O3575I1C819O1032C874O1148,F0O1504F1O1172,S0xe6a6197728S0x6682e9a8e0
code-creation,LazyCompile,13,8251382,0x225ca845d40,2120,fromStringFast node:buffer:412:24,0x6682ea5d28,*
code-source-info,0x225ca845dx6682ea6138S0x6682ea5760S0x6682eb2d30
tick,0x7ff6a83f3368,8254651,0,0x0,0,0x225ca7f2392,0x225ca7f4f2b,0x225ca80eed3,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8261943,0x225ca846700,624,get node:internal/streams/readable:1166:8,0x334252dcc18,*
code-source-info,0x225ca846700,49,36607,37001,C0O36607C48O36634C107O36914C127O36939C194O36994C225O36955C292O36994C298O36983C388O36994C415O36607C469O36939C511O36955C553O36983,,
code-creation,LazyCompile,13,8262137,0x225ca846a00,1688,query C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\query.js:39:24,0xe49886b9a8,*
code-source-info,0x225ca846a00,178,740,880,C0O740C56O771C89O509I1C96O516I1C110O610I1C117O2761I2C256O2794I2C280O2799I2C329O628I1C343O734I1C378O763I1C470O795I1C584O809C618O823C632O835C699O5799I0C736O5793I0C785O833C900O869C982O879C1013O740C1067O2761I2,F0O835F1O796F2O628I1,S0x2f65a7361e0S0x2bdba11d240S0x2bdba11d330
code-creation,LazyCompile,13,8262349,0x225ca847160,712,get node:internal/streams/writable:783:8,0x334252eae18,*
code-source-info,0x225ca847160,56,23447,23844,C0O23447C48O23474C110O23779C174O23837C205O23795C272O23837C278O23818C342O23837C351O23831C441O23837C468O23447C522O23779C564O23795C606O23818C648O23831,,
code-creation,LazyCompile,13,8263217,0x225ca8474a0,2312,expressInit C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\middleware\\init.js:29:30,0xe49886cd08,*
code-source-info,0x225ca8474a0,177,546,847,C0O546C56O8639I6C147O8732I6C152O655C167O8689I6C229O10062I0C298O605C332O18265I1C400O18287I1C405O7162I5C464O17754I4C474O17791I4C479O7523I3C536O18017I2C546O18415I1C595O18433I1C624O18490I1C651O18478I1C746O18523I1C865O18560I1C904O18566I1C939O18557I1C988O655C1117O674C1162O694C1199O707C1251O744C1300O800C1324O817C1382O794C1418O836C1500O846C1531O18055I2C1563O546C1618O576C1636O10062I0C1641O576C1675O18265I1C1749O18055I2,F0O576F1O605F2O18358I1F3O18017I2F4O18329I1F5O17754I4F6O10075I0,S0x2bdba108528S0x2bdba13b920S0x2bdba13b8d0S0x2bdba135160S0x2bdba13b880S0x2bdba135110S0x2bdba108488
code-creation,LazyCompile,13,8268235,0x225ca847f00,2396,resetSocketTimeout node:_http_server:957:28,0x2f65a701208,*
code-source-info,0x225ca847f00,173,31868,32027,C0O31868C56O31908C154O31954C188O31972C257O3388I10C261O3532I10C288O6692I0C349O3550I10C354O6739I0C370O11803I2C384O7002I0C388O5380I1C448O5399I1C532O5435I1C540O2447I4C609O2493I4C617O2514I4C681O2563I4C686O16143I6C696O2656I4C716O295I7C780O345I7C784O338I7C850O375I7C914O418I7C1007O461I7C1011O487I7C1015O3149I4C1079O3242I4C1084O3620I4C1107O2683I4C1112O5486I1C1152O7030I0C1162O7231I0C1272O11533I8C1338O11611I8C1362O11591I8C1408O7197I0C1482O32016C1500O32026C1531O5590I1C1536O11847I2C1541O31941C1547O31868C1601O31908C1639O3532I10C1658O6692I0C1664O3532I10C1683O5380I1C1725O5399I1C1767O2447I4C1809O2514I4C1851O295I7C1893O375I7C1935O3149I4,F0O31954F1O6985I0F2O6810I0F3O11761I2F4O5448I1F5O2656I4F6O16390I5F7O2764I4F8O7199I0F9O11486I8F10O6692I0,S0x1d24e4c37e0S0x334252f3a60S0x334252fec38S0x6682e9a980S0x334252f38e8S0x25aadb3b230S0x25aadb3b0d0S0x334252f4558S0x334252febc8S0x6682e9acd8S0x334252d0a28
code-creation,LazyCompile,13,8268416,0x225ca848900,536,getHeader node:_http_outgoing:590:57,0x2bdba13b970,*
code-source-info,0x225ca848900,171,18655,18868,C0O18655C48O3533I0C75O18722C114O18740C128O18802C166O18801C195O18840C280O18865C307O18861C358O18865C360O18774C366O3575I0C371O18655C425O18840,F0O18667,S0x6682e9a8e0
code-creation,LazyCompile,13,8270593,0x225ca848bc0,344,get node:internal/streams/duplex:94:8,0x334252d0a28,*
code-source-info,0x225ca848bc0,48,3367,3582,C0O3367C48O3388C107O3532C194O3550C199O3575C226O3367C280O3532,,
tick,0x7ff6a843883a,8270702,0,0x0,0,0x7ff6a8420841,0x225ca7f7e68,0x225ca821324,0x225ca7f4f5f,0x225ca7fa37a,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,1,78125,1671212000637
new,MemoryChunk,0x105e140000,262144
new,MemoryChunk,0xc7fc5c0000,262144
new,MemoryChunk,0x5264000000,262144
new,MemoryChunk,0x3f4fbe80000,262144
new,MemoryChunk,0xd367c80000,262144
new,MemoryChunk,0x347e9a00000,262144
new,MemoryChunk,0x13aaed80000,262144
new,MemoryChunk,0x3b289740000,262144
new,MemoryChunk,0x2de96900000,262144
scavenge,end,1,78125,1671212000639
code-creation,LazyCompile,13,8285860,0x225ca848da0,2408,entitytag C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js:39:20,0x20cab7a7cf8,*
code-source-info,0x225ca848dax20cab7a95d8S0xe6a619b6f0S0xe6a619b6a0S0xe6a619b4c0S0xe6a6197728S0x6682e9a8e0
tick,0x7ff6a78a4e88,8286647,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca848f01,0x225ca7f9d61,0x225ca821882,0x225ca7f4f5f,0x225ca80eed3,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7fe4cd4,8302684,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca7f4f5f,0x225ca7fa37a,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8309888,0x225ca849840,2072,Timeout node:internal/timers:167:17,0x334252fe468,*
code-source-info,0x225ca849840,63,5944,6955,C0O5944C48O5992C78O6048C91O6062C103O6096C108O6760C115O6762C207O6820C223O6447C259O6474C283O6500C307O6527C315O6678C354O6705C392O6736C465O6760C500O6806C544O6820C621O6869C657O6903C696O14773I1C737O14788I1C783O5645I0C858O15268I4C865O15390I4C879O15422I4C900O5726I0C968O16143I3C978O5763I0C997O6954C1028O5786I0C1033O6838C1038O5944C1092O6762C1151O6820,F0O6917F1O5647I0F2O5763I0F3O16263I2F4O5728I0,S0x334252fe418S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x25aadb3af80
tick,0x7ff6a83884b1,8318688,0,0x0,0,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
new,MemoryChunk,0x2d6b6a80000,262144
code-creation,LazyCompile,13,8333085,0x225ca84a0e0,1196,_flush node:_http_outgoing:933:51,0x2bdba13be78,*
code-source-info,0x225ca84a0e0,171,27980,28410,C0O27980C48O28008C88O28021C149O28042C191O23474I0C198O23779I0C269O23795I0C343O23818I0C414O23831I0C510O28042C520O28143C556O28181C648O28282C653O28305C722O28320C727O28409C758O27980C812O28021C850O23779I0C896O23795I0C942O23818I0C988O23831I0C1036O28181C1080O28305,F0O28042,S0x334252eae18
tick,0x7ff6a81efcdd,8333701,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a83b6095,8349679,0,0x0,0,0x225ca80edd5,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,1,156250,1671212000718
new,MemoryChunk,0x158462c0000,262144
new,MemoryChunk,0x2a0f62c0000,262144
new,MemoryChunk,0x1125f540000,262144
new,MemoryChunk,0x3742ea00000,262144
new,MemoryChunk,0x2ee3a580000,262144
new,MemoryChunk,0x1e9df0c0000,262144
new,MemoryChunk,0x30de2e80000,262144
new,MemoryChunk,0x137ea400000,262144
new,MemoryChunk,0x294c0e40000,262144
new,MemoryChunk,0x1148640000,262144
scavenge,end,1,156250,1671212000719
new,MemoryChunk,0x31ddbc80000,262144
code-creation,LazyCompile,13,8362292,0x225ca84a620,2676,emitReadable_ node:internal/streams/readable:574:23,0x334252dc2c8,*
code-source-info,0x225ca84ax2ee4c9fc888S0x334252dc980S0x25aadb33d78
code-creation,LazyCompile,13,8364985,0x225ca84b200,1788,onParserExecuteCommon node:_http_server:690:31,0xbfdd37feb0,*
code-source-info,0x225ca84b200,173,23781,25806,C0O23781C56O23826C99O23882C170O23907C175O24081C280O24109C409O24171C441O24186C468O24225C473O25281C554O25309C583O25316C671O25334C703O25588C871O25561C938O25642C1057O25660C1062O25805C1092O23781C1147O23882C1226O24081C1268O24109C1325O24186C1380O25281C1422O25334C1525O25642,,
tick,0x7fffb299b7f0,8365708,0,0x0,0,0x7ff6a82d7030,0x225ca83b021,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca7daf76,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
tick,0x225ca843a9f,8381681,0,0x0,0,0x225ca822115,0x225ca7f4f5f,0x225ca80eed3,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a814dde8,8397703,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca7f4f5f,0x225ca7fa37a,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8406091,0x225ca84b9e0,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca84b9ex25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
new,MemoryChunk,0x3e054600000,262144
tick,0x7ff6a801c4d6,8413669,0,0x0,0,0x7ff6a8153cd0,0x225ca7f5b2a,0x225ca7ef12a,0x225ca843e85,0x225ca822115,0x225ca7f4f5f,0x225ca80eed3,0x225ca827bf9,0x225ca80524f,0x225ca7f6727,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8418330,0x225ca84c340,1088,_send node:_http_outgoing:319:49,0x2bdba13b830,*
code-source-info,0x225ca84c340,171,9665,10419,C0O9665C48O9910C155O9930C185O9981C190O10110C223O10131C260O10142C386O10167C404O10142C443O10246C476O10272C524O10262C571O10292C648O10352C685O10380C772O10416C799O9665C854O9910,,
code-creation,LazyCompile,13,8427696,0x225ca84c8a0,3112,readableAddChunk node:internal/streams/readable:236:26,0x334252dbf40,*
code-source-info,0x225ca84c8ax2ee4c9fc888S0x6682e97658S0x334252dc228S0x334252dc278
tick,0x7ff6a7fd6025,8429737,0,0x0,0,0x225ca8120fd,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,1,234375,1671212000799
new,MemoryChunk,0xefb0000000,262144
new,MemoryChunk,0x2eb2e7c0000,262144
new,MemoryChunk,0x1cebbcc0000,262144
new,MemoryChunk,0x3d7571c0000,262144
new,MemoryChunk,0x21e9b800000,262144
new,MemoryChunk,0x23df5d40000,262144
new,MemoryChunk,0x662bd80000,262144
new,MemoryChunk,0x17ff6ec0000,262144
new,MemoryChunk,0xaa82ac0000,262144
scavenge,end,1,234375,1671212000801
code-creation,LazyCompile,13,8439072,0x225ca84d5c0,1884,dispatch C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\route.js:98:45,0x2bdba125c40,*
code-source-info,0x225ca84d5cx39bd86118a8S0x2bdba127f80
code-creation,LazyCompile,13,8445468,0x225ca84de20,2032,afterWrite node:internal/streams/writable:487:20,0x334252eaa00,*
code-source-info,0x225ca84dex334252eacd8S0x39bd861cff8S0x334252eabe8S0x334252d0a28
tick,0x225ca835af4,8445696,0,0x0,0,0x225ca7ef92c,0x225ca82248f,0x225ca7f4f5f,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8456423,0x225ca84e6e0,1420,handle C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:165:29,0x2bdba108280,*
code-source-info,0x225ca84e6e0,144,4043,4365,C0O4043C56O4086C101O4128C186O4179C209O10983I1C232O8548I2C239O8578I2C304O8590I2C323O8639I2C404O8732I2C409O8689I2C490O4179C502O4213C630O1477I0C714O1565I0C782O1560I0C786O1651I0C805O1667I0C879O1572I0C936O1580I0C952O4340C1017O4364C1048O4043C1103O4128C1164O8578I2C1269O1565I0,F0O4140F1O4179F2O10983I1,S0x2bdba10be10S0x96d321d358S0x2bdba108488
tick,0x225ca822322,8461723,0,0x0,0,0x225ca7f4f5f,0x225ca7fa37a,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
new,MemoryChunk,0x31861080000,262144
new,MemoryChunk,0x3138f680000,262144
code-creation,LazyCompile,13,8476629,0x225ca84ed40,2616,resume_ node:internal/streams/readable:985:17,0x334252dc8a8,*
code-source-info,0x225ca84edx2ee4c9fc888S0x334252dc980S0x25aadb33d78
tick,0x7ff6a78e98b4,8476802,0,0x0,4,0x7ff6a7f16560,0x225ca7ef0b6,0x225ca843e85,0x225ca822115,0x225ca7f4f5f,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a8157006,8491743,0,0x0,0,0x7ff6a81557b0,0x225ca8224fa,0x225ca7f4f5f,0x225ca7fa37a,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
new,MemoryChunk,0x16b62940000,262144
code-creation,LazyCompile,13,8504164,0x225ca84f900,884,socketOnDrain node:_http_server:558:23,0xbfdd37fb90,*
code-source-info,0x225ca84f900,173,19797,20245,C0O19797C48O19842C86O19864C142O24752I0C149O24790I0C153O19960C222O19855C230O19972C239O20005C244O20120C252O20137C317O20153C422O20168C526O20205C531O20244C562O19797C616O19960C662O20137C704O20153C761O20168,F0O19864,S0x334252eb048
tick,0x7ff6a88b41d3,8506713,0,0x0,5,0x9ce61ce830,0x225ca836111,0x225ca7ef92c,0x225ca82248f,0x225ca7f4f5f,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8514260,0x225ca84fd20,3956,etag C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\etag\\index.js:70:15,0x20cab7a7d48,*
code-source-info,0x225ca84fdx6682ea5f58S0x20cab7a7cf8S0x20cab7a95d8S0x20cab7a7d98S0xe6a619b6f0S0xe6a619b6a0S0xe6a619b4c0S0xe6a6197728S0x6682e9a8e0
scavenge,begin,1,312500,1671212000879
new,MemoryChunk,0x304c7d00000,262144
new,MemoryChunk,0x10a42fc0000,262144
new,MemoryChunk,0x34384ec0000,262144
new,MemoryChunk,0x2e7630c0000,262144
new,MemoryChunk,0x15bd0900000,262144
new,MemoryChunk,0x665ac40000,262144
new,MemoryChunk,0x30c6eb00000,262144
new,MemoryChunk,0x2092d5c0000,262144
new,MemoryChunk,0x21b52f40000,262144
new,MemoryChunk,0x17460180000,262144
scavenge,end,1,312500,1671212000880
tick,0x7ff6a81db5e0,8522730,0,0x0,5
tick,0x7ff6a841cb15,8538742,0,0x0,0,0x225ca8208ce,0x225ca8213f3,0x225ca7f4f5f,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a791a5d5,8554740,0,0x0,8
tick,0x7ff6a7f10e17,8570762,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca7f4f5f,0x225ca7fa37a,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8572224,0x225ca850e20,408,getEncodingOps node:buffer:678:24,0x6682ea7868,*
code-source-info,0x225ca850e20,18,20608,22457,C0O20608C48O20624C76O20660C102O22456C133O22172C138O20703C177O20760C182O20739C194O21014C199O21777C204O21447C209O21611C214O22313C219O20608,,
new,MemoryChunk,0x3a60b2c0000,262144
markcompact,begin,1,359375,1671212000948
delete,MemoryChunk,0x109ba8c0000
delete,MemoryChunk,0x26c2a500000
delete,MemoryChunk,0x34dd0380000
delete,MemoryChunk,0x34578bc0000
delete,MemoryChunk,0x2b847cc0000
delete,MemoryChunk,0x11bbff40000
delete,MemoryChunk,0x13160840000
delete,MemoryChunk,0x3727a300000
delete,MemoryChunk,0x1cfddb80000
delete,MemoryChunk,0x351a9a80000
delete,MemoryChunk,0x1d31d840000
delete,MemoryChunk,0x359386c0000
delete,MemoryChunk,0x2e8863c0000
delete,MemoryChunk,0x310455c0000
tick,0x7fffb2a0d1c4,8586770,0,0x0,1
delete,MemoryChunk,0x36c12dc0000
delete,MemoryChunk,0x3bf3fc0000
delete,MemoryChunk,0xc7fc5c0000
delete,MemoryChunk,0x3d816400000
delete,MemoryChunk,0x105e140000
delete,MemoryChunk,0x5264000000
delete,MemoryChunk,0x3f4fbe80000
delete,MemoryChunk,0xd367c80000
delete,MemoryChunk,0x347e9a00000
delete,MemoryChunk,0x13aaed80000
delete,MemoryChunk,0x3b289740000
delete,MemoryChunk,0x2a0f62c0000
delete,MemoryChunk,0x3742ea00000
delete,MemoryChunk,0x1e9df0c0000
delete,MemoryChunk,0x158462c0000
delete,MemoryChunk,0x1125f540000
delete,MemoryChunk,0x2ee3a580000
delete,MemoryChunk,0x30de2e80000
delete,MemoryChunk,0x294c0e40000
delete,MemoryChunk,0x1148640000
delete,MemoryChunk,0xefb0000000
delete,MemoryChunk,0x2eb2e7c0000
delete,MemoryChunk,0x1cebbcc0000
delete,MemoryChunk,0x3d7571c0000
delete,MemoryChunk,0x21e9b800000
delete,MemoryChunk,0x23df5d40000
delete,MemoryChunk,0x662bd80000
delete,MemoryChunk,0x17ff6ec0000
delete,MemoryChunk,0x2092d5c0000
delete,MemoryChunk,0x17460180000
delete,MemoryChunk,0x1c4ee5c0000
delete,MemoryChunk,0x31ddbc80000
markcompact,end,1,359375,1671212000950
code-creation,LazyCompile,13,8600682,0x225ca851040,2064,clearIncoming node:_http_server:749:23,0xbfdd37ff00,*
code-source-info,0x225cax334252dc5a0S0x25aadb33ed8S0x25aadb33e38S0x25aadb33798S0x6682e9ad78
tick,0x7ff6a8151236,8601731,0,0x0,0,0x7ff6a8153cd0,0x225ca831424,0x225ca815689,0x225ca7f34fc,0x225ca84e238,0x225ca7f4c81,0x225ca81049c
tick,0x7fffb2995b80,8617766,0,0x0,0,0x9ce61ce830,0x225ca836111,0x225ca7ef92c,0x225ca82248f,0x225ca7f4f5f,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7fffb2a0d1a4,8632743,0,0x0,0,0x9ce61ce840,0x225ca836111,0x225ca7ef92c,0x225ca82248f,0x225ca7f4f5f,0x225ca7fa37a,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7fffb29b01a5,8648768,0,0x0,8
tick,0x7ff6a8158e82,8664757,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,1,437500,1671212001041
scavenge,end,1,437500,1671212001042
tick,0x225ca816567,8680784,0,0x0,0,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8028261,8696751,0,0x0,0,0x7ff6a8153cd0,0x225ca810e1c,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8706163,0x225ca851980,2380,insert node:internal/timers:350:16,0x334252feb78,*
code-source-info,0x225ca851980,63,10733,11389,C0O10733C79O10755C137O10857C209O11012C237O10894C307O11012C446O11024C465O11055C550O11149C591O11192C657O11183C697O11243C745O11264C772O11279C799O11298C852O11327C869O11338C890O598I0C980O345I1C984O338I1C1056O375I1C1122O418I1C1201O461I1C1209O487I1C1213O837I0C1239O830I0C1265O866I0C1291O985I0C1338O1011I0C1363O11388C1394O616I0C1399O10733C1454O11012C1540O598I0C1584O375I1C1630O11338C1677O11264C1725O11055,F0O11367F1O634I0,S0x334252f45a8S0x334252f4558
tick,0x7fffb2995932,8712788,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
code-creation,LazyCompile,13,8716419,0x225ca8523e0,2320,socketListenerWrap node:_http_server:1001:37,0x1bb8fb077b0,*
code-source-info,0x225ca8523ex334252dc5a0S0x25aadb33ed8S0x25aadb33e38S0x25aadb33798S0x25aadb33c18S0x25aadb33838S0x6682e9ad78
tick,0x7ff6a801c499,8728746,0,0x0,0,0x7ff6a8153cd0,0x225ca84d76a,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,1,484375,1671212001103
scavenge,end,1,500000,1671212001105
tick,0x7fffb2a0deb4,8744767,0,0x0,0,0x9ce61ce640,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8153d27,8760800,0,0x0,0,0x7ff6a8153cd0,0x225ca7f4f03,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,8766268,0x225ca852e60,3768,onstat C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:717:33,0x1bb8fb3c3a0,*
code-source-info,0x225ca852ex1bb8fb3c348S0x2ee4c9e9998S0x2ee4c9e90f0S0x2f65a73e468S0x2f65a73e1c0S0x2f65a73dd60S0x2f65a73de50S0x25aadb34420S0x2ee4c9e9568
tick,0x7ff6a83872e8,8776785,0,0x0,0,0x225ca82248f,0x225ca7f4f5f,0x225ca7fa37a,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a7a9c761,8792765,0,0x0,8
code-creation,LazyCompile,13,8801345,0x225ca853e80,192,Readable.push node:internal/streams/readable:227:35,0x334252dbe30,*
code-source-info,0x225ca853e80,49,7847,7927,C0O7847C48O7877C96O7924C123O7847,,
tick,0x7ff6a8395375,8807802,0,0x0,0,0x225ca820a78,0x225ca8213f3,0x225ca7f4f5f,0x225ca7fa37a,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,1,562500,1671212001184
tick,0x7fffb2a10ab4,8822829,0,0x0,1
scavenge,end,1,562500,1671212001185
tick,0x7ff6a8387331,8837835,0,0x0,0,0x225ca836351,0x225ca7ef92c,0x225ca82248f,0x225ca7f4f5f,0x225ca7fa37a,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,8851228,0x225ca853fe0,276,getObserverType node:internal/perf/observe:117:25,0x3f9d3545028,*
code-source-info,0x225ca853fe0,67,2590,2800,C0O2590C48O2602C138O2799C169O2792C181O2733C193O2672C197O2590,,
tick,0x7ff6a7e38bc6,8853792,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
code-creation,LazyCompile,13,8861738,0x225ca854180,1448,_finish node:_http_server:203:52,0x2f65a701460,*
code-source-info,0x225ca854180,173,7731,7884,C0O7731C56O7772C89O7739C143O7803C179O12760I3C189O706I2C233O7870C263O27104I0C312O204I1C386O254I1C391O27121I0C459O10160I4C508O10172I4C518O11422I4C572O11435I4C582O11551I4C592O11486I4C625O11551I4C720O11710I4C740O11764I4C750O11844I4C784O11875I4C823O11919I4C930O11964I4C972O11968I4C1021O12237I4C1041O11928I4C1049O11901I4C1064O12293I4C1069O7883C1100O789I2C1105O7731C1160O204I1C1217O11901I4,F0O7870F1O27092I0F2O7784F3O706I2F4O27121I0F5O12713I3,S0x2bdba13be28S0x6682e98098S0x2bdba13fbe0S0x3f9d3545808S0x25aadb33d78S0x3f9d3545028
tick,0x7ff6a86a3022,8869865,0,0x0,4,0x7ff6a7f1e700,0x225ca821483,0x225ca7f4f5f,0x225ca7fa37a,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,8871005,0x225ca854840,616,app.<computed> C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\application.js:490:25,0x96d321d358,*
code-source-info,0x225ca854840,144,10877,11145,C0O10877C52O10889C60O10900C105O10877C116O10930C130O11010C135O10983C197O8548I0C205O8578I0C270O8590I0C289O8639I0C362O8732I0C367O8689I0C413O10993C446O10877C501O8578I0,F0O10983,S0x2bdba108488
code-creation,LazyCompile,13,8874688,0x225ca854b40,468, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\request.js:467:36,0x96d321f100,*
code-source-info,0x225ca854b40,235,11303,11736,C0O11303C48O11327C81O11352C118O11375C154O11451C226O11472C231O11550C270O11567C293O11581C312O11734C343O11617C348O11303,,
tick,0x7ff6a8359b0e,8885829,0,0x0,0,0x225ca81b0f5,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
scavenge,begin,1,593750,1671212001256
scavenge,end,1,593750,1671212001257
tick,0x7ff6a8356cdd,8901860,0,0x0,0,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,8915611,0x225ca854dc0,672, node:internal/fs/utils:357:35,0x3f9d35724d8,*
code-source-info,0x225ca854dc0,78,8925,9534,C0O8925C79O8990C114O289I0C308O336I0C323O9141C337O9164C352O9210C412O9336C455O9262C465O9359C470O9283C475O8925,F0O9044,S0x6682e97658
tick,0x7ff6a80283d2,8917795,0,0x0,0,0x7ff6a8153cd0,0x225ca83a9bd,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
code-creation,LazyCompile,13,8920827,0x225ca855100,1388,parserOnMessageComplete node:_http_common:147:33,0x2bdba135020,*
code-source-info,0x225ca855100,168,5054,5529,C0O5054C48O5108C90O5123C104O5167C140O5238C172O5265C206O5289C211O5433C266O7877I0C316O5518C348O1610I1C413O1632I1C529O36634I3C533O36914I3C553O36939I3C627O36955I3C701O36983I3C793O1650I1C802O17221I2C868O17240I2C873O17373I2C925O5528C956O5054C1011O1610I1C1049O1632I1C1093O36939I3C1139O36955I3C1185O36983I3C1229O17221I2,F0O5433F1O5501F2O1672I1F3O1650I1,S0x334252dbe30S0x2bdba137dc8S0xbfdd37cff8S0x334252dcc18
tick,0x7ff6a820f004,8933841,0,0x0,0,0x7ff6a7f15050,0x7ff6a8355554,0x225ca833486,0x225ca8104ff
code-creation,LazyCompile,13,8934586,0x225ca855720,400,get node:internal/streams/readable:1268:8,0x334252dd3a0,*
code-source-info,0x225ca855720,49,38997,39084,C0O38997C48O39021C154O39077C185O39043C218O39058C250O39077C252O38997C306O39021,,
tick,0x7ff6a7f177d3,8949838,0,0x0,0,0x7ff6a7f15050,0x7ff6a8355554
tick,0x7ff6a7d8dc50,8965836,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,1,671875,1671212001334
new,MemoryChunk,0x1ecb3d00000,262144
new,MemoryChunk,0x1dd63040000,262144
new,MemoryChunk,0x13fcde00000,262144
new,MemoryChunk,0x6dd4b80000,262144
new,MemoryChunk,0x1f44cd00000,262144
new,MemoryChunk,0x27cf3800000,262144
new,MemoryChunk,0x97c7300000,262144
new,MemoryChunk,0x33c2d040000,262144
new,MemoryChunk,0x12da7200000,262144
new,MemoryChunk,0x266f6a40000,262144
scavenge,end,1,671875,1671212001335
tick,0x7ff6a801c4a3,8981800,0,0x0,0,0x7ff6a8153cd0,0x225ca843786,0x225ca822115,0x225ca7f4f5f,0x225ca7fa37a,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,8984146,0x225ca855940,2916,contentType C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:619:32,0xe49884dc50,*
code-source-info,0x225ca855940,248,15941,16063,C0O15941C56O15966C111O15979C176O1896I2C296O1922I2C320O1923I2C335O1958I2C463O1984I2C472O16037C524O19578I0C608O19603I0C613O19623I0C651O19686I0C677O19700I0C722O19738I0C756O19860I0C854O19924I0C905O19934I0C1030O2607I1C1103O2658I1C1187O19948I0C1252O19993I0C1280O19983I0C1379O20032I0C1450O18265I3C1570O7162I7C1630O17754I6C1640O17791I6C1645O7523I5C1693O18017I4C1703O18415I3C1755O18433I3C1774O18490I3C1801O18478I3C1902O18523I3C1988O18560I3C2002O18566I3C2010O18557I3C2058O16061C2089O18055I4C2121O18287I3C2126O15941C2208O1958I2C2265O19578I0C2366O19948I0C2408O18265I3C2497O18055I4,F0O16037F1O19911I0F2O15997F3O20032I0F4O18358I3F5O18017I4F6O18329I3F7O17754I6,S0xe49884ddf8S0xe6a61a9b70S0xe6a61a9a58S0x2bdba13b920S0x2bdba13b8d0S0x2bdba135160S0x2bdba13b880S0x2bdba135110
code-creation,LazyCompile,13,8994646,0x225ca856680,5048, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:57:25,0x2264574450,*
code-source-info,0x225ca856680,137,1463,2055,C0O1463C161O1503C197O1509C305O1499C345O1551C371O1557C481O1578C489O1598C682O1587C719O1633C800O1651C875O1669C924O1720C928O1731C976O9030I0C1173O9046I0C1178O9084I0C1240O9105I0C1308O15966I1C1345O15979I1C1416O1896I4C1541O1922I4C1565O1923I4C1580O1958I4C1708O1984I4C1717O16037I1C1782O19578I2C1866O19603I2C1871O19623I2C1909O19686I2C1935O19700I2C1980O19738I2C2014O19860I2C2112O19924I2C2163O19934I2C2288O2607I3C2361O2658I3C2445O19948I2C2510O19993I2C2538O19983I2C2637O20032I2C2705O18265I5C2825O7162I9C2885O17754I8C2895O17791I8C2900O7523I7C2948O18017I6C2958O18415I5C3010O18433I5C3029O18490I5C3056O18478I5C3157O18523I5C3243O18560I5C3257O18566I5C3265O18557I5C3313O9133I0C3410O1747C3437O18055I6C3469O18287I5C3474O1463C3556O1509C3600O1557C3676O1633C3733O1651C3792O1669C3982O9030I0C4065O1958I4C4122O19578I2C4223O19948I2C4265O18265I5C4357O18055I6,F0O1731F1O9105I0F2O16037I1F3O19911I2F4O15997I1F5O20032I2F6O18358I5F7O18017I6F8O18329I5F9O17754I8,S0xe49884da80S0xe49884dc50S0xe49884ddf8S0xe6a61a9b70S0xe6a61a9a58S0x2bdba13b920S0x2bdba13b8d0S0x2bdba135160S0x2bdba13b880S0x2bdba135110
tick,0x7ff6a8157006,8997855,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca7f4f5f,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a801c4d6,9013822,0,0x0,0,0x7ff6a7f0bd80,0x7ff6a83b6631,0x225ca856ef3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x14c9d940000,262144
code-creation,LazyCompile,13,9023035,0x225ca857cc0,1532,emitCloseNT node:internal/streams/destroy:126:21,0x334252cf468,*
code-source-info,0x225ca857cc0,47,2640,2894,C0O2640C56O2667C89O2701C126O2722C200O2767C287O2796C328O2848C406O2872C458O10160I0C510O10172I0C520O11422I0C574O11435I0C584O11551I0C594O11486I0C627O11551I0C722O11710I0C742O11764I0C752O11844I0C786O11875I0C825O11919I0C920O11964I0C962O11968I0C1021O12237I0C1041O11928I0C1049O11901I0C1064O12293I0C1069O2893C1100O2751C1105O2640C1160O2722C1205O2767C1264O2848C1308O11901I0,F0O2872,S0x25aadb33d78
tick,0x7ff6a7ad0ff7,9029858,0,0x0,8
tick,0x7ff6a88b4350,9045855,0,0x0,5
scavenge,begin,1,750000,1671212001409
new,MemoryChunk,0x26e33540000,262144
new,MemoryChunk,0x1155500000,262144
new,MemoryChunk,0xccc6c0000,262144
new,MemoryChunk,0x38598780000,262144
new,MemoryChunk,0x3cf0b5c0000,262144
new,MemoryChunk,0x13d9d440000,262144
new,MemoryChunk,0x1ffad8c0000,262144
new,MemoryChunk,0x3c1d6f40000,262144
new,MemoryChunk,0x20b1ee80000,262144
new,MemoryChunk,0x353bfec0000,262144
scavenge,end,1,750000,1671212001411
code-creation,LazyCompile,13,9048812,0x225ca8583c0,2384,fromString node:buffer:431:20,0x6682ea5dc8,*
code-source-info,0x225ca8583c0,18,12887,13336,C0O12887C56O12923C86O12968C102O12975C113O13125C149O13156C163O13244C193O13251C204O12362I0C324O12409I0C342O12418I0C349O12398I0C356O12418I0C373O12398I0C396O12486I0C413O12500I0C430O12511I0C440O12509I0C477O12497I0C486O12529I0C534O12554I0C541O12569I0C562O12580I0C576O27365I3C619O12623I0C667O17150I1C739O12666I0C757O12752I0C774O12771I0C791O12782I0C801O12756I0C806O12811I0C833O12825I0C870O12822I0C891O4191I2C908O4206I2C981O4220I2C1072O4231I2C1093O4244I2C1144O4254I2C1165O13333C1196O12467I0C1201O13272C1206O13192C1211O13000C1245O13007C1250O12887C1305O12362I0C1341O12782I0C1400O12771I0C1452O4254I2C1500O4244I2C1548O4231I2C1596O4220I2C1644O4191I2C1692O12822I0C1740O12811I0C1792O12580I0C1836O12569I0C1880O12511I0C1932O12500I0,F0O13305F1O12623I0F2O12836I0F3O12554I0,S0x6682ea5d28S0x6682ea6138S0x6682ea5760S0x6682eb2d30
new,MemoryChunk,0x9b9b1c0000,262144
tick,0x7fffb29c9936,9061870,0,0x0,0,0x9ce61ce640,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
code-creation,LazyCompile,13,9072327,0x225ca858e80,964,updateOutgoingData node:_http_server:553:28,0xbfdd37fb40,*
code-source-info,0x225ca858e80,173,19679,19771,C0O19679C48O19707C82O19729C116O19726C127O19864I0C183O24752I1C190O24790I1C195O19960I0C263O19855I0C267O19972I0C276O20005I0C281O20120I0C289O20137I0C354O20153I0C475O20168I0C595O20205I0C600O19770C631O19679C685O19960I0C729O20137I0C771O20153I0C828O20168I0,F0O19739F1O19864I0,S0xbfdd37fb90S0x334252eb048
tick,0x7ff6a81bcf1f,9077833,0,0x0,0,0x7ff6a8153cd0,0x225ca821e8f,0x225ca7f4f5f,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8029a06,9093853,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,9098014,0x225ca8592e0,408,Writable.uncork node:internal/streams/writable:341:37,0x334252ea770,*
code-source-info,0x225ca8592e0,56,11281,11437,C0O11281C48O11308C110O11354C114O11339C124O11354C134O11366C142O11388C212O11404C249O11436C280O11281C334O11388,,
tick,0x7ff6a834ad32,9109867,0,0x0,0,0x225ca821324,0x225ca7f4f5f,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,1,828125,1671212001478
new,MemoryChunk,0x389ced80000,262144
new,MemoryChunk,0x1f4c83c0000,262144
new,MemoryChunk,0x8a4c2c0000,262144
new,MemoryChunk,0x3b6c1680000,262144
new,MemoryChunk,0x39f479c0000,262144
new,MemoryChunk,0x21e9f00000,262144
new,MemoryChunk,0xaf31140000,262144
new,MemoryChunk,0x3bc14380000,262144
new,MemoryChunk,0x1fc25a40000,262144
new,MemoryChunk,0x369f3800000,262144
scavenge,end,1,828125,1671212001479
tick,0x7ff6a7b64666,9125885,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,9126979,0x225ca859500,2092,afterWriteTick node:internal/streams/writable:482:24,0x334252ea9b0,*
code-source-info,0x225cax334252eaa00S0x334252eacd8S0x39bd861cff8S0x334252eabe8S0x334252d0a28
tick,0x7ff6a81bcd47,9141847,0,0x0,0,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x2c980a80000,262144
tick,0x7ff6a81ed1cb,9157962,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0xe32adc0000,262144
tick,0x7ff6a8349a49,9173875,0,0x0,0,0x225ca80fb7b,0x225ca84cfa6,0x225ca85523c
code-creation,LazyCompile,13,9184190,0x225ca859e20,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca859ex25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a801c4ea,9189922,0,0x0,0,0x7ff6a8153cd0,0x225ca843ade,0x225ca822115,0x225ca7f4f5f,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,1,890625,1671212001555
new,MemoryChunk,0x1b022fc0000,262144
new,MemoryChunk,0x4491900000,262144
new,MemoryChunk,0x328ca40000,262144
new,MemoryChunk,0x201aa340000,262144
new,MemoryChunk,0x32774c80000,262144
new,MemoryChunk,0xe460180000,262144
new,MemoryChunk,0xc244e40000,262144
new,MemoryChunk,0x519fbc0000,262144
new,MemoryChunk,0xc7f6640000,262144
new,MemoryChunk,0x2a652f80000,262144
new,MemoryChunk,0x26eb6500000,262144
scavenge,end,1,890625,1671212001557
tick,0x7ff6a7d8dc55,9205875,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8048c30,9221906,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca7f4f5f,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7fffb2a0d1a4,9236869,0,0x0,0,0x9ce61cea38,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,9246581,0x225ca85a780,784,arrayClone node:events:747:20,0x25aadb344e0,*
code-source-info,0x225ca85a780,13,21902,22367,C0O21902C48O22044C111O22339C155O22067C236O22078C258O22086C276O22091C306O22105C364O22116C369O22151C421O22162C426O22205C478O22216C483O22267C535O22278C540O21902,,
code-creation,LazyCompile,13,9250545,0x225ca85ab60,3664,sendStatus C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\response.js:369:37,0xe49884da80,*
code-source-info,0x225ca85ab60,248,8986,9146,C0O8986C56O9030C260O9046C265O9084C307O9105C359O15966I0C396O15979I0C467O1896I3C595O1922I3C619O1923I3C634O1958I3C762O1984I3C771O16037I0C839O19578I1C923O19603I1C928O19623I1C966O19686I1C992O19700I1C1037O19738I1C1071O19860I1C1169O19924I1C1220O19934I1C1345O2607I2C1418O2658I2C1502O19948I1C1567O19993I1C1595O19983I1C1694O20032I1C1762O18265I4C1882O7162I8C1942O17754I7C1952O17791I7C1957O7523I6C2005O18017I5C2015O18415I4C2067O18433I4C2086O18490I4C2113O18478I4C2213O18523I4C2299O18560I4C2313O18566I4C2321O18557I4C2369O9133C2450O9144C2477O18055I5C2509O18287I4C2514O8986C2569O9030C2863O1958I3C2920O19578I1C3021O19948I1C3063O18265I4C3155O18055I5,F0O9105F1O16037I0F2O19911I1F3O15997I0F4O20032I1F5O18358I4F6O18017I5F7O18329I4F8O17754I7,S0xe49884dc50S0xe49884ddf8S0xe6a61a9b70S0xe6a61a9a58S0x2bdba13b920S0x2bdba13b8d0S0x2bdba135160S0x2bdba13b880S0x2bdba135110
tick,0x225ca843691,9252909,0,0x0,0,0x225ca822115,0x225ca85b4f2,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x1d961f80000,262144
scavenge,begin,1,968750,1671212001624
new,MemoryChunk,0x38bffc40000,262144
new,MemoryChunk,0x394fd440000,262144
new,MemoryChunk,0x51f5580000,262144
new,MemoryChunk,0x2d5e46c0000,262144
new,MemoryChunk,0x18f848c0000,262144
new,MemoryChunk,0x3aeb7b00000,262144
new,MemoryChunk,0x2b05db40000,262144
new,MemoryChunk,0x200b7f80000,262144
new,MemoryChunk,0x397ab180000,262144
new,MemoryChunk,0x115b5b40000,262144
scavenge,end,1,968750,1671212001626
tick,0x7ff6a77f731b,9268872,0,0x0,0,0x9ce61ceae0,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a802a316,9284911,0,0x0,0,0x7ff6a7f0bd80,0x7ff6a83b6631,0x225ca81619d,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
code-creation,LazyCompile,13,9289773,0x225ca85bbc0,664, node:internal/fs/utils:668:38,0x3f9d3572e60,*
code-source-info,0x225ca85bbc0,78,18808,19088,C0O18808C85O18842C139O18875C144O289I1C338O336I1C353O9210I0C417O19087C448O9262I0C458O9359I0C463O9283I0C468O18808,F0O19001F1O9044I0,S0x3f9d35724d8S0x6682e97658
tick,0x7fffb2a0d1a4,9300878,0,0x0,0,0x9ce61ce9a8,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85b4f2,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7fffb2a0d1a4,9316905,0,0x0,0,0x9ce61ce9a8,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85b4f2,0x225ca80eed3,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x2d802280000,262144
tick,0x7ff6a80497b5,9332883,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,2,31250,1671212001698
new,MemoryChunk,0x3f15e2c0000,262144
new,MemoryChunk,0x6058940000,262144
new,MemoryChunk,0x19e37e80000,262144
new,MemoryChunk,0x23115280000,262144
new,MemoryChunk,0x24e699c0000,262144
new,MemoryChunk,0x2430f340000,262144
new,MemoryChunk,0x17033180000,262144
new,MemoryChunk,0x5c99200000,262144
new,MemoryChunk,0x1387e540000,262144
scavenge,end,2,31250,1671212001699
tick,0x7ff6a801c518,9348917,0,0x0,0,0x7ff6a8153cd0,0x225ca832d4b,0x225ca8104ff
new,MemoryChunk,0x36f3c680000,262144
new,MemoryChunk,0x35d53500000,262144
code-creation,LazyCompile,13,9361409,0x225ca85bee0,4724, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:32:23,0x2264574400,*
code-source-info,0x225ca85beexe49884da80S0xe49884dc50S0xe49884ddf8S0xe6a61a9b70S0xe6a61a9a58S0x2bdba13b920S0x2bdba13b8d0S0x2bdba135160S0x2bdba13b880S0x2bdba135110
tick,0x7ff6a8156115,9364895,0,0x0,0,0x7ff6a8153cd0,0x225ca831424,0x225ca815689,0x225ca7f34fc,0x225ca859959,0x225ca81049c
tick,0x7ff6a88e1b2f,9380950,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x20b500000,262144
tick,0x7ff6a80aaf90,9396928,0,0x0,5
scavenge,begin,2,78125,1671212001768
new,MemoryChunk,0x2c0d9400000,262144
new,MemoryChunk,0x388f19c0000,262144
new,MemoryChunk,0x20719a00000,262144
new,MemoryChunk,0x36e6c7c0000,262144
new,MemoryChunk,0xe7c8000000,262144
new,MemoryChunk,0x1dc52a80000,262144
new,MemoryChunk,0x38bb3bc0000,262144
new,MemoryChunk,0x2de742c0000,262144
new,MemoryChunk,0x2a95ff80000,262144
scavenge,end,2,78125,1671212001769
tick,0x7ff6a8356c15,9412909,0,0x0,0,0x9ce61cec28,0x225ca851a01,0x225ca8318f5,0x225ca815689,0x225ca7f34fc,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x1ed94c40000,262144
tick,0x7ff6a8088afe,9428941,0,0x0,0,0x7ff6a8153cd0,0x225ca8182cd,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8048d28,9444953,0,0x0,0,0x7ff6a81557b0,0x225ca7f4d34,0x225ca81049c
new,MemoryChunk,0x28b64140000,262144
new,MemoryChunk,0x2a469d40000,262144
tick,0x7ff6a8158c91,9460924,0,0x0,0,0x7ff6a8153cd0,0x225ca854bda,0x7ff6a83c2541,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,9463252,0x225ca85d3a0,1500,onFinish node:_http_outgoing:828:18,0x2bdba13b110,*
code-source-info,0x225ca85d3a0,171,25094,25200,C0O25094C56O25108C130O25129C228O25146C258O25153C373O25171C404O25182C456O10160I0C508O10172I0C518O11422I0C572O11435I0C582O11551I0C592O11486I0C625O11551I0C720O11710I0C740O11764I0C750O11844I0C784O11875I0C823O11919I0C920O11964I0C962O11968I0C1021O12237I0C1041O11928I0C1049O11901I0C1064O12293I0C1069O25199C1078O25094C1133O25108C1190O25129C1247O25153C1291O11901I0,F0O25182,S0x25aadb33d78
code-creation,LazyCompile,13,9469673,0x225ca85da80,364,removeAllListeners node:events:617:32,0x25aadb341e8,*
code-source-info,0x225ca85da80,13,18348,19690,C0O18348C48O18384C81O18400C95O18528C143O19003C148O18348C159O18590C172O18705C212O18740C217O18901C248O18625C253O18447C259O18348,,
scavenge,begin,2,140625,1671212001838
new,MemoryChunk,0xec3e180000,262144
new,MemoryChunk,0x24bf1b00000,262144
new,MemoryChunk,0x1d91e140000,262144
new,MemoryChunk,0x39c72780000,262144
new,MemoryChunk,0x3ad5a100000,262144
new,MemoryChunk,0x3c709d00000,262144
new,MemoryChunk,0x151ce900000,262144
new,MemoryChunk,0x17c11b40000,262144
tick,0x7fffb2a10ab4,9476954,0,0x0,1
new,MemoryChunk,0x307d7300000,262144
new,MemoryChunk,0x2db980000,262144
scavenge,end,2,140625,1671212001840
tick,0x7ff6a80497b5,9492945,0,0x0,0,0x7ff6a81557b0,0x225ca856b58,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8160e96,9507961,0,0x0,1
tick,0x7ff6a8184bd5,9523924,0,0x0,0,0x7ff6a8349ec1,0x225ca84507e,0x225ca836351,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0xbb17880000,262144
markcompact,begin,2,203125,1671212001902
tick,0x7ff6a819f1ba,9539982,0,0x0,1
delete,MemoryChunk,0x34384ec0000
delete,MemoryChunk,0x10a42fc0000
delete,MemoryChunk,0x30c6eb00000
delete,MemoryChunk,0x665ac40000
delete,MemoryChunk,0x1ecb3d00000
delete,MemoryChunk,0x13fcde00000
delete,MemoryChunk,0x1f44cd00000
delete,MemoryChunk,0x27cf3800000
delete,MemoryChunk,0x97c7300000
delete,MemoryChunk,0x33c2d040000
delete,MemoryChunk,0x12da7200000
delete,MemoryChunk,0x266f6a40000
delete,MemoryChunk,0x1dd63040000
delete,MemoryChunk,0x26e33540000
delete,MemoryChunk,0xccc6c0000
delete,MemoryChunk,0x3cf0b5c0000
delete,MemoryChunk,0x1ffad8c0000
delete,MemoryChunk,0x1155500000
delete,MemoryChunk,0x15bd0900000
delete,MemoryChunk,0x38598780000
delete,MemoryChunk,0x13d9d440000
delete,MemoryChunk,0x3c1d6f40000
delete,MemoryChunk,0x8a4c2c0000
delete,MemoryChunk,0x3b6c1680000
delete,MemoryChunk,0x21e9f00000
delete,MemoryChunk,0xaf31140000
delete,MemoryChunk,0x3bc14380000
delete,MemoryChunk,0x1fc25a40000
delete,MemoryChunk,0x369f3800000
delete,MemoryChunk,0x389ced80000
delete,MemoryChunk,0x39f479c0000
delete,MemoryChunk,0xe32adc0000
delete,MemoryChunk,0x1b022fc0000
delete,MemoryChunk,0x201aa340000
delete,MemoryChunk,0x32774c80000
delete,MemoryChunk,0xe460180000
delete,MemoryChunk,0x519fbc0000
delete,MemoryChunk,0xc7f6640000
delete,MemoryChunk,0x26eb6500000
delete,MemoryChunk,0x328ca40000
delete,MemoryChunk,0xc244e40000
delete,MemoryChunk,0x394fd440000
delete,MemoryChunk,0x2d5e46c0000
delete,MemoryChunk,0x3aeb7b00000
delete,MemoryChunk,0x200b7f80000
delete,MemoryChunk,0x115b5b40000
delete,MemoryChunk,0x2a652f80000
delete,MemoryChunk,0x38bffc40000
delete,MemoryChunk,0x51f5580000
delete,MemoryChunk,0x18f848c0000
delete,MemoryChunk,0x2b05db40000
delete,MemoryChunk,0x2d802280000
delete,MemoryChunk,0x6058940000
delete,MemoryChunk,0x3f15e2c0000
delete,MemoryChunk,0x19e37e80000
delete,MemoryChunk,0x23115280000
delete,MemoryChunk,0x24e699c0000
delete,MemoryChunk,0x2430f340000
delete,MemoryChunk,0x17033180000
delete,MemoryChunk,0x5c99200000
delete,MemoryChunk,0x1387e540000
delete,MemoryChunk,0x20b500000
delete,MemoryChunk,0x2c0d9400000
delete,MemoryChunk,0x388f19c0000
delete,MemoryChunk,0x20719a00000
delete,MemoryChunk,0x36e6c7c0000
delete,MemoryChunk,0xe7c8000000
delete,MemoryChunk,0x1dc52a80000
delete,MemoryChunk,0x38bb3bc0000
delete,MemoryChunk,0x2de742c0000
delete,MemoryChunk,0x2a95ff80000
delete,MemoryChunk,0x1ed94c40000
delete,MemoryChunk,0x3138f680000
delete,MemoryChunk,0x9b9b1c0000
delete,MemoryChunk,0x2c980a80000
delete,MemoryChunk,0x1d961f80000
delete,MemoryChunk,0x35d53500000
markcompact,end,2,203125,1671212001904
tick,0x7ff6a7fd85a0,9555943,0,0x0,0,0x225ca8575b7,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,9559687,0x225ca758560,292,listenerCount node:events:722:23,0x25aadb34420,*
code-source-info,0x225ca758560,13,21338,21620,C0O21338C48O21370C81O21384C91O21442C123O21457C151O21513C188O21526C198O21583C203O21617C207O21338,,
tick,0x225ca81dd24,9571980,0,0x0,0,0x225ca829f4d
tick,0x7ff6a8008393,9587956,0,0x0,0,0x7ff6a8153cd0,0x225ca8313a9,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a8356c2f,9603975,0,0x0,0,0x9ce61cee70,0x225ca8101ea
tick,0x7ff6a7fd60dc,9619962,0,0x0,0,0x7ff6a8358ff5,0x225ca820a78,0x225ca8217c1,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,2,281250,1671212001986
scavenge,end,2,281250,1671212001987
tick,0x7ff6a80884b9,9635988,0,0x0,0,0x7ff6a81557b0,0x225ca8436ca,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x225ca83a135,9651986,0,0x0,0,0x225ca83ae90,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,9668001,0,0x0,0,0x9ce61cea40,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,2,328125,1671212002045
scavenge,end,2,328125,1671212002046
tick,0x7ff6a8028261,9683981,0,0x0,0,0x7ff6a7f0bd80,0x7ff6a83b6631,0x225ca81619d,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a802172e,9700001,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8438623,9716014,0,0x0,0,0x225ca856bc1,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a835995a,9732022,0,0x0,0,0x225ca81fce0,0x225ca826897,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a832174b,9747990,0,0x0,0,0x9ce61cea40,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,2,390625,1671212002119
scavenge,end,2,390625,1671212002120
tick,0x7ff6a88e1af7,9764030,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7ec5b26,9780013,0,0x0,0,0x7ff6a8390058,0x225ca851b3e,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a81dad12,9796021,0,0x0,0,0x7ff6a82e9b20,0x225ca843d8b,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a7fd0fa4,9812006,0,0x0,0,0x7ff6a84384fc,0x7ff6a842058a,0x225ca85bd57,0x225ca82ffda,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
scavenge,begin,2,453125,1671212002186
scavenge,end,2,453125,1671212002187
tick,0x7ff6a7f10d8d,9828033,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a81bcb92,9844015,0,0x0,0,0x7ff6a8153cd0,0x225ca84a7df,0x225ca81049c
tick,0x7ff6a835216a,9860045,0,0x0,0,0x225ca7f807d,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8393b8b,9876014,0,0x0,0,0x225ca7f900e,0x225ca8337d2,0x225ca8104ff
scavenge,begin,2,515625,1671212002254
tick,0x7ff6a7edaabb,9892058,0,0x0,1
scavenge,end,2,515625,1671212002255
code-creation,LazyCompile,13,9907869,0x225ca758720,592,ContentType C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\content-type\\index.js:219:22,0x2f65a73bc20,*
code-source-info,0x225ca758720,200,4739,4808,C0O4739C48O4775C109O4766C200O4800C272O4807C303O4739,,
tick,0x225ca7e87b3,9908040,0,0x0,0,0x7ff6a84116cd,0x225ca7f811d,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a83877e9,9924076,0,0x0,0,0x225ca85256f,0x225ca828bd6,0x225ca82af3e
tick,0x7fffb2a0d1a4,9940037,0,0x0,0,0x9ce61cea40,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a83a3d72,9956054,0,0x0,0,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,2,593750,1671212002325
new,MemoryChunk,0xc990a40000,262144
new,MemoryChunk,0x2fe34340000,262144
new,MemoryChunk,0x1738c2c0000,262144
new,MemoryChunk,0x1bfcde80000,262144
new,MemoryChunk,0x47287c0000,262144
new,MemoryChunk,0xf4de980000,262144
new,MemoryChunk,0x30262240000,262144
scavenge,end,2,593750,1671212002326
new,MemoryChunk,0x34ce1000000,262144
tick,0x7fffb2a0deb4,9972048,0,0x0,0,0x9ce61ce640,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8048dc5,9988072,0,0x0,0,0x7ff6a8153cd0,0x225ca8116d4,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a832aa4b,10004045,0,0x0,8
tick,0x7ff6a8151381,10020083,0,0x0,0,0x7ff6a8153cd0,0x225ca85437c,0x225ca8226d0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,2,656250,1671212002392
new,MemoryChunk,0xc74e640000,262144
new,MemoryChunk,0x357b2d80000,262144
new,MemoryChunk,0x1669c80000,262144
new,MemoryChunk,0x3f84df80000,262144
new,MemoryChunk,0x696b540000,262144
new,MemoryChunk,0x134dac40000,262144
new,MemoryChunk,0x14361f00000,262144
new,MemoryChunk,0x3548cdc0000,262144
new,MemoryChunk,0x2e5cdf00000,262144
new,MemoryChunk,0x9f90b80000,262144
new,MemoryChunk,0x2b77a200000,262144
scavenge,end,2,656250,1671212002393
tick,0x7ff6a8438692,10036117,0,0x0,0,0x7ff6a8420841,0x225ca7f7e68,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca7f76e4,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7fffb2a0d1a4,10052107,0,0x0,8
code-creation,LazyCompile,13,10060888,0x225ca758a00,476,error C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\serve-static\\index.js:115:39,0x1bb8fb3a278,*
code-source-info,0x225ca758a00,263,2540,2661,C0O2540C52O2554C136O2580C174O2591C191O2649C273O2660C308O2609C317O2540C371O2554,,
new,MemoryChunk,0x2b1d0900000,262144
tick,0x7ff6a79181b2,10068064,0,0x0,0,0x9ce61ceae8,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8358f78,10084107,0,0x0,0,0x225ca83c469,0x225ca828e35,0x225ca82af3e
new,MemoryChunk,0x726b240000,262144
code-creation,LazyCompile,13,10091983,0x225ca85dca0,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca85dcax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a81e0f12,10100087,0,0x0,5
scavenge,begin,2,734375,1671212002467
new,MemoryChunk,0xe034f00000,262144
new,MemoryChunk,0x15c6e880000,262144
new,MemoryChunk,0xfc7b940000,262144
new,MemoryChunk,0xa7d4300000,262144
new,MemoryChunk,0x2a86b4c0000,262144
new,MemoryChunk,0x258c8f00000,262144
new,MemoryChunk,0x389e1780000,262144
new,MemoryChunk,0x32d14d80000,262144
new,MemoryChunk,0x36dc62c0000,262144
new,MemoryChunk,0x28db8040000,262144
new,MemoryChunk,0x1b0cbcc0000,262144
scavenge,end,2,734375,1671212002469
tick,0x7ff6a8048d24,10116115,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a81f294c,10132098,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,10146135,0x225ca85e600,1092,emitCloseNT node:_http_server:843:21,0x2f65a701168,*
code-source-info,0x225ca85e600,173,28499,28583,C0O28499C56O28526C93O28550C130O28566C185O10160I0C237O10172I0C247O11422I0C301O11435I0C311O11551I0C321O11486I0C354O11551I0C449O11710I0C469O11764I0C479O11844I0C513O11875I0C552O11919I0C664O11964I0C706O11968I0C765O12237I0C785O11928I0C793O11901I0C808O12293I0C813O28582C844O28499C899O11901I0,F0O28566,S0x25aadb33d78
tick,0x225ca7e8956,10148129,0,0x0,0,0x7ff6a84116cd,0x225ca7f811d,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7fffb2a0deb4,10164092,0,0x0,0,0x9ce61ce640,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x2faa1b80000,262144
scavenge,begin,2,796875,1671212002536
new,MemoryChunk,0xf366f00000,262144
new,MemoryChunk,0x1c5017c0000,262144
new,MemoryChunk,0x257b1580000,262144
new,MemoryChunk,0x155dbcc0000,262144
new,MemoryChunk,0x16db2c40000,262144
new,MemoryChunk,0x171eb080000,262144
new,MemoryChunk,0x10c03dc0000,262144
new,MemoryChunk,0x22dd2f80000,262144
new,MemoryChunk,0x13ff6800000,262144
scavenge,end,2,796875,1671212002538
tick,0x7fffb29fc347,10180155,0,0x0,8
tick,0x7fffb2a0deb4,10196103,0,0x0,0,0x9ce61ce640,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca84ead9,0x225ca7d72f6,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8028e04,10212144,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x124c1f00000,262144
code-creation,LazyCompile,13,10222175,0x225ca85eb40,1132,app C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\express.js:38:21,0xe498868060,*
code-source-info,0x225ca85eb40,139,747,801,C0O747C56O4128I0C136O8639I3C227O8732I3C232O8689I3C290O4179I0C303O4213I0C453O1477I1C537O1565I1C605O1560I1C609O1651I1C628O1667I1C699O1572I1C753O1580I1C770O4340I0C818O800C849O747C904O4128I0C1014O1565I1,F0O774F1O4140I0F2O4179I0F3O10983I2,S0x2bdba108280S0x2bdba10be10S0x96d321d358S0x2bdba108488
tick,0x7ff6a82adce1,10228101,0,0x0,0,0x7ff6a8390058,0x225ca851b3e,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x26eb5f80000,262144
tick,0x225ca853fe4,10244107,0,0x0,0,0x225ca82af3e
scavenge,begin,2,859375,1671212002607
new,MemoryChunk,0x2888f800000,262144
new,MemoryChunk,0x24c45440000,262144
new,MemoryChunk,0x3d285940000,262144
new,MemoryChunk,0x3a88b0c0000,262144
new,MemoryChunk,0xc0b3080000,262144
new,MemoryChunk,0xf3d1600000,262144
new,MemoryChunk,0x154ac400000,262144
new,MemoryChunk,0x3e563e80000,262144
new,MemoryChunk,0x3710fb00000,262144
new,MemoryChunk,0x2f905600000,262144
scavenge,end,2,859375,1671212002608
tick,0x7ff6a81f090a,10260119,0,0x0,0,0x7ff6a7f02870,0x225ca820582,0x225ca8213f3,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x19bea900000,262144
tick,0x7ff6a8393be0,10276167,0,0x0,0,0x225ca83a4bc,0x225ca83ad63,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a83310ec,10292032,0,0x0,5
tick,0x7ff6a80497b0,10308056,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x2363b4c0000,262144
scavenge,begin,2,906250,1671212002677
new,MemoryChunk,0x3f8d6980000,262144
new,MemoryChunk,0x36598400000,262144
new,MemoryChunk,0x1bc0cb80000,262144
new,MemoryChunk,0x15cf8680000,262144
new,MemoryChunk,0x16a784c0000,262144
new,MemoryChunk,0x2453c280000,262144
new,MemoryChunk,0x2bf2f840000,262144
new,MemoryChunk,0x34aa83c0000,262144
new,MemoryChunk,0x5ce1dc0000,262144
scavenge,end,2,906250,1671212002679
tick,0x7ff6a81df367,10324069,0,0x0,0,0x7ff6a8153cd0,0x225ca830dcd,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a7d3f418,10340064,0,0x0,5,0x9ce61cea40,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a838f17d,10356052,0,0x0,0,0x225ca826d4e,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x1eca7480000,262144
new,MemoryChunk,0x1a4d6a80000,262144
tick,0x7ff6a801c499,10372093,0,0x0,0,0x7ff6a8153cd0,0x225ca8334f6,0x225ca8104ff
scavenge,begin,2,953125,1671212002746
new,MemoryChunk,0x2ae95480000,262144
new,MemoryChunk,0x2d8ea80000,262144
new,MemoryChunk,0xc0aff00000,262144
new,MemoryChunk,0x4a05c00000,262144
new,MemoryChunk,0x2c087100000,262144
new,MemoryChunk,0x525d700000,262144
new,MemoryChunk,0x232a2fc0000,262144
new,MemoryChunk,0x3229ce80000,262144
new,MemoryChunk,0x2decac40000,262144
new,MemoryChunk,0xc892600000,262144
scavenge,end,2,953125,1671212002747
tick,0x7ff6a800a2cc,10388056,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a834a72e,10404072,0,0x0,0,0x225ca8216a3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8388858,10420060,0,0x0,0,0x225ca812d79,0x225ca81bb6a,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x1011aa40000,262144
tick,0x7ff6a88b2da7,10436098,0,0x0,5
markcompact,begin,3,15625,1671212002806
delete,MemoryChunk,0x18eb900000
delete,MemoryChunk,0x17c11b40000
delete,MemoryChunk,0xec3e180000
delete,MemoryChunk,0x151ce900000
delete,MemoryChunk,0x24bf1b00000
delete,MemoryChunk,0x307d7300000
delete,MemoryChunk,0x3c709d00000
delete,MemoryChunk,0x3ad5a100000
delete,MemoryChunk,0x39c72780000
delete,MemoryChunk,0x2fe34340000
delete,MemoryChunk,0x1bfcde80000
delete,MemoryChunk,0xf4de980000
delete,MemoryChunk,0xbb17880000
delete,MemoryChunk,0xc990a40000
delete,MemoryChunk,0x1738c2c0000
delete,MemoryChunk,0x47287c0000
delete,MemoryChunk,0x30262240000
delete,MemoryChunk,0x3f84df80000
delete,MemoryChunk,0x134dac40000
delete,MemoryChunk,0x3548cdc0000
delete,MemoryChunk,0x9f90b80000
delete,MemoryChunk,0x2b77a200000
delete,MemoryChunk,0x357b2d80000
delete,MemoryChunk,0x696b540000
delete,MemoryChunk,0x14361f00000
delete,MemoryChunk,0xfc7b940000
delete,MemoryChunk,0x2a86b4c0000
delete,MemoryChunk,0x258c8f00000
delete,MemoryChunk,0x32d14d80000
delete,MemoryChunk,0x36dc62c0000
delete,MemoryChunk,0x1b0cbcc0000
delete,MemoryChunk,0xe034f00000
delete,MemoryChunk,0xa7d4300000
delete,MemoryChunk,0x2e5cdf00000
delete,MemoryChunk,0x1c5017c0000
delete,MemoryChunk,0x389e1780000
delete,MemoryChunk,0x155dbcc0000
delete,MemoryChunk,0x1669c80000
delete,MemoryChunk,0x171eb080000
delete,MemoryChunk,0x22dd2f80000
delete,MemoryChunk,0xf366f00000
delete,MemoryChunk,0x28db8040000
delete,MemoryChunk,0x257b1580000
delete,MemoryChunk,0x16db2c40000
delete,MemoryChunk,0x10c03dc0000
delete,MemoryChunk,0x13ff6800000
delete,MemoryChunk,0x26eb5f80000
delete,MemoryChunk,0x2888f800000
delete,MemoryChunk,0x3d285940000
delete,MemoryChunk,0xc0b3080000
delete,MemoryChunk,0xf3d1600000
delete,MemoryChunk,0x154ac400000
delete,MemoryChunk,0x3e563e80000
delete,MemoryChunk,0x3710fb00000
delete,MemoryChunk,0x2f905600000
delete,MemoryChunk,0x24c45440000
delete,MemoryChunk,0x3a88b0c0000
delete,MemoryChunk,0x2363b4c0000
delete,MemoryChunk,0x3f8d6980000
delete,MemoryChunk,0x36598400000
delete,MemoryChunk,0x1bc0cb80000
delete,MemoryChunk,0x15cf8680000
delete,MemoryChunk,0x16a784c0000
delete,MemoryChunk,0x2453c280000
delete,MemoryChunk,0x2bf2f840000
delete,MemoryChunk,0x34aa83c0000
delete,MemoryChunk,0x5ce1dc0000
delete,MemoryChunk,0x1a4d6a80000
delete,MemoryChunk,0xc892600000
delete,MemoryChunk,0x28b64140000
delete,MemoryChunk,0x34ce1000000
delete,MemoryChunk,0x2b1d0900000
delete,MemoryChunk,0x2faa1b80000
delete,MemoryChunk,0x19bea900000
markcompact,end,3,15625,1671212002808
tick,0x7fffb2a0feb4,10452088,0,0x0,8
tick,0x7ff6a8153e2c,10468118,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a834ad32,10483090,0,0x0,0,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,10491093,0x225ca81c900,564,clearRequestTimeout node:_http_server:774:29,0xbfdd37ffa0,*
code-source-info,0x225ca81c900,173,26537,26756,C0O26537C48O26548C145O26595C251O26628C282O26639C314O26537C368O26548C425O26595C482O26639,,
tick,0x7fffb2a0d1a4,10499130,0,0x0,0,0x9ce61cea48,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a7f10d39,10515086,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,3,62500,1671212002891
scavenge,end,3,62500,1671212002892
tick,0x7ff6a832b19e,10531139,1,0x7ff6a79f5d10,6,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a80497c1,10547092,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a7f05711,10563120,0,0x0,0,0x7ff6a7f055e0,0x7ff6a83b671b,0x225ca856ef3,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a80350a2,10579104,0,0x0,0,0x7ff6a7f18ee0,0x225ca817e53,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,3,125000,1671212002948
scavenge,end,3,125000,1671212002950
tick,0x7ff6a7fc2197,10595156,0,0x0,0,0x7ff6a8153cd0,0x225ca843586,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7fffb2a0d1a4,10611106,0,0x0,8
tick,0x7ff6a814e445,10627140,0,0x0,0,0x7ff6a8153cd0,0x225ca854bb6,0x7ff6a83c2541,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8419788,10643134,0,0x0,0,0x7ff6a83b60c4,0x225ca856c85,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,3,187500,1671212003020
tick,0x7fffb2a10ab4,10659149,0,0x0,1
scavenge,end,3,187500,1671212003022
tick,0x7ff6a838a74b,10675146,0,0x0,0,0x225ca853854,0x225ca8090fe
tick,0x7fffb2a0d1a4,10691189,0,0x0,8
tick,0x225ca810e3f,10707165,0,0x0,0,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a791a4bd,10723168,1,0x7ff6a791a4a0,6,0x7ff6a82ef2d0,0x225ca835c50,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,3,250000,1671212003088
scavenge,end,3,265625,1671212003089
tick,0x7ff6a801c495,10739162,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a814ceb8,10755176,0,0x0,0,0x7ff6a8153cd0,0x225ca82c206,0x225ca831469,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7fffb299b39e,10771158,0,0x0,0,0x7ff6a82d7030,0x225ca83b021,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca85bf71,10787210,0,0x0,0,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,3,328125,1671212003154
scavenge,end,3,328125,1671212003155
tick,0x7ff6a801c4ca,10803163,0,0x0,0,0x7ff6a8153cd0,0x225ca85713f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x225ca7cd2ea,10819200,0,0x0,0,0x7ff6a841caa6,0x225ca8476b8,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca8222e0,10835189,0,0x0,0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a801c490,10851191,0,0x0,0,0x7ff6a8153cd0,0x225ca831095,0x225ca85d670,0x225ca859959,0x225ca81049c
scavenge,begin,3,390625,1671212003223
new,MemoryChunk,0x12ca040000,262144
new,MemoryChunk,0xeca43c0000,262144
new,MemoryChunk,0x3ec34e40000,262144
scavenge,end,3,390625,1671212003224
tick,0x7ff6a81df2a5,10867164,0,0x0,0,0x7ff6a8153cd0,0x225ca84ee51,0x225ca8104ff
new,MemoryChunk,0x32c33780000,262144
tick,0x7ff6a83884d8,10883208,0,0x0,0,0x225ca81049c
tick,0x7ff6a7919774,10899171,0,0x0,8
tick,0x7ff6a80438a1,10915215,0,0x0,0,0x7ff6a8153cd0,0x225ca854bda,0x7ff6a83c2541,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,3,453125,1671212003290
new,MemoryChunk,0x25b42300000,262144
new,MemoryChunk,0x2480200000,262144
new,MemoryChunk,0x35413a40000,262144
new,MemoryChunk,0x27d8e780000,262144
new,MemoryChunk,0x1377f7c0000,262144
new,MemoryChunk,0x145308c0000,262144
new,MemoryChunk,0x1d1d87c0000,262144
new,MemoryChunk,0x375e600000,262144
new,MemoryChunk,0x1b523780000,262144
new,MemoryChunk,0x286e69c0000,262144
new,MemoryChunk,0x2a26a240000,262144
scavenge,end,3,453125,1671212003291
tick,0x7ff6a7f0f455,10931197,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7d8dc8d,10947229,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a82ef4f9,10962198,0,0x0,0,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x1d7696c0000,262144
tick,0x7ff6a838e8e3,10978244,0,0x0,0,0x225ca826bc3,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x9022080000,262144
code-creation,LazyCompile,13,10990258,0x225ca81cbe0,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca81cbex25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7fffb2a0d1a4,10994220,0,0x0,0,0x9ce61cea40,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,3,531250,1671212003364
new,MemoryChunk,0x3a7216c0000,262144
new,MemoryChunk,0xc98e740000,262144
new,MemoryChunk,0xdfccec0000,262144
new,MemoryChunk,0x2c09c9c0000,262144
new,MemoryChunk,0x92d2040000,262144
new,MemoryChunk,0x3e0f8dc0000,262144
new,MemoryChunk,0x21a75640000,262144
new,MemoryChunk,0x22635b80000,262144
new,MemoryChunk,0x1aefe800000,262144
new,MemoryChunk,0x35bf1680000,262144
new,MemoryChunk,0x8130800000,262144
scavenge,end,3,531250,1671212003366
code-creation,LazyCompile,13,11008559,0x225ca85f080,2572,from node:buffer:295:28,0x6682ea59e0,*
code-source-info,0x225ca85fx6682ea5dc8S0x6682ea5d28S0x6682ea6138S0x6682ea5760S0x6682eb2d30
tick,0x7ff6a81560e4,11010254,0,0x0,0,0x7ff6a8153cd0,0x225ca83a9bd,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca837c64,11026220,0,0x0,0,0x225ca843f21,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7fffb2a0d1a4,11041261,0,0x0,0,0x9ce61cea40,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8029cc4,11057270,0,0x0,0,0x7ff6a8153cd0,0x225ca8210a7,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x32768b80000,262144
scavenge,begin,3,593750,1671212003432
new,MemoryChunk,0x31d98c00000,262144
new,MemoryChunk,0x2c00e280000,262144
new,MemoryChunk,0x30804ec0000,262144
new,MemoryChunk,0x3af7c080000,262144
new,MemoryChunk,0x13ce44c0000,262144
new,MemoryChunk,0x2df93a80000,262144
new,MemoryChunk,0x3094e380000,262144
new,MemoryChunk,0x136fee00000,262144
new,MemoryChunk,0x1d50c7c0000,262144
new,MemoryChunk,0x3f03a500000,262144
scavenge,end,3,593750,1671212003433
tick,0x7ff6a83a3d8f,11073241,0,0x0,0,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a815bafb,11089239,0,0x0,0,0x7ff6a8153cd0,0x225ca8551f7
tick,0x7ff6a81508b3,11105283,0,0x0,0,0x7ff6a8153cd0,0x225ca854bda,0x7ff6a83c2541,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a838f0e8,11121231,0,0x0,0,0x225ca8359e9,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a81cb629,11137277,0,0x0,0,0x7ff6a8153cd0,0x225ca854338,0x225ca8226d0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,3,656250,1671212003504
new,MemoryChunk,0x2f76df80000,262144
new,MemoryChunk,0x13f2c5c0000,262144
new,MemoryChunk,0x1474c040000,262144
new,MemoryChunk,0x1ed78e00000,262144
new,MemoryChunk,0x251e0900000,262144
new,MemoryChunk,0xc202dc0000,262144
new,MemoryChunk,0x36440700000,262144
new,MemoryChunk,0x2c7ea6c0000,262144
new,MemoryChunk,0x1e469d80000,262144
scavenge,end,3,656250,1671212003505
code-creation,LazyCompile,13,11145729,0x225ca85fc20,452,setRequestTimeout node:_http_server:762:27,0xbfdd37ff50,*
code-source-info,0x225ca85fc20,173,26189,26505,C0O26189C48O26267C214O26300C271O26340C276O26504C307O26189C361O26267,,
tick,0x7fffb2a0d1a4,11153262,0,0x0,0,0x9ce61cea40,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x3ac54980000,262144
tick,0x7ff6a8313746,11169271,0,0x0,8
new,MemoryChunk,0x1466ca00000,262144
tick,0x7ff6a814ce75,11185261,0,0x0,0,0x7ff6a8153cd0,0x225ca830e11,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a7edf33f,11201282,0,0x0,0
new,MemoryChunk,0x34b24c40000,262144
scavenge,begin,3,718750,1671212003574
new,MemoryChunk,0x159abe00000,262144
new,MemoryChunk,0x2e266d40000,262144
new,MemoryChunk,0x2a7ad180000,262144
new,MemoryChunk,0x2ffd7a00000,262144
new,MemoryChunk,0x21ca3700000,262144
new,MemoryChunk,0x2887a180000,262144
new,MemoryChunk,0x2db5f7c0000,262144
new,MemoryChunk,0x33d80d80000,262144
new,MemoryChunk,0x2c698700000,262144
scavenge,end,3,718750,1671212003576
tick,0x7ff6a8411345,11217264,0,0x0,0,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8028e22,11233293,0,0x0,0,0x7ff6a8153cd0,0x225ca830dcd,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x7f25a40000,262144
tick,0x7ff6a7aa15f1,11249264,0,0x0,8
new,MemoryChunk,0x1d2f4840000,262144
tick,0x7fffaf8293db,11265331,0,0x0,0,0x9ce61cea40,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x63bfac0000,262144
scavenge,begin,3,781250,1671212003642
new,MemoryChunk,0x28701a00000,262144
new,MemoryChunk,0x30e3a580000,262144
new,MemoryChunk,0x33a1b00000,262144
new,MemoryChunk,0x1ffb2780000,262144
new,MemoryChunk,0x25193a80000,262144
new,MemoryChunk,0x3decc500000,262144
new,MemoryChunk,0x1c76e2c0000,262144
new,MemoryChunk,0x25684cc0000,262144
new,MemoryChunk,0xc5d8f40000,262144
new,MemoryChunk,0x308e0780000,262144
new,MemoryChunk,0x126b1e80000,262144
scavenge,end,3,781250,1671212003643
tick,0x7ff6a81514a9,11281278,0,0x0,0,0x7ff6a81557b0,0x225ca85518c
tick,0x225ca851ecd,11297316,0,0x0,0,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a818fe09,11313282,0,0x0,1
tick,0x7ff6a838c9c5,11329321,0,0x0,0,0x225ca7f82cb,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
markcompact,begin,3,828125,1671212003701
delete,MemoryChunk,0x2db980000
delete,MemoryChunk,0x3229ce80000
delete,MemoryChunk,0x232a2fc0000
delete,MemoryChunk,0x2d8ea80000
delete,MemoryChunk,0x2ae95480000
delete,MemoryChunk,0xc0aff00000
delete,MemoryChunk,0x1011aa40000
delete,MemoryChunk,0xeca43c0000
delete,MemoryChunk,0x3ec34e40000
delete,MemoryChunk,0x12ca040000
delete,MemoryChunk,0x2480200000
delete,MemoryChunk,0x27d8e780000
delete,MemoryChunk,0x145308c0000
delete,MemoryChunk,0x2c087100000
delete,MemoryChunk,0x375e600000
delete,MemoryChunk,0x1b523780000
delete,MemoryChunk,0x286e69c0000
delete,MemoryChunk,0x2a26a240000
delete,MemoryChunk,0x4a05c00000
delete,MemoryChunk,0x25b42300000
delete,MemoryChunk,0x1377f7c0000
delete,MemoryChunk,0x1d1d87c0000
delete,MemoryChunk,0x35413a40000
delete,MemoryChunk,0xdfccec0000
delete,MemoryChunk,0x92d2040000
delete,MemoryChunk,0x3e0f8dc0000
delete,MemoryChunk,0x22635b80000
delete,MemoryChunk,0x1aefe800000
delete,MemoryChunk,0x8130800000
delete,MemoryChunk,0xc98e740000
delete,MemoryChunk,0x2c09c9c0000
delete,MemoryChunk,0x3a7216c0000
delete,MemoryChunk,0x2c00e280000
delete,MemoryChunk,0x3af7c080000
delete,MemoryChunk,0x2df93a80000
delete,MemoryChunk,0x136fee00000
delete,MemoryChunk,0x3f03a500000
delete,MemoryChunk,0x31d98c00000
delete,MemoryChunk,0x35bf1680000
delete,MemoryChunk,0x30804ec0000
delete,MemoryChunk,0x13ce44c0000
delete,MemoryChunk,0x21a75640000
delete,MemoryChunk,0x3094e380000
delete,MemoryChunk,0x1d50c7c0000
delete,MemoryChunk,0x2f76df80000
delete,MemoryChunk,0x1474c040000
delete,MemoryChunk,0x1ed78e00000
delete,MemoryChunk,0x251e0900000
delete,MemoryChunk,0xc202dc0000
delete,MemoryChunk,0x36440700000
delete,MemoryChunk,0x2c7ea6c0000
delete,MemoryChunk,0x1e469d80000
delete,MemoryChunk,0x1466ca00000
delete,MemoryChunk,0x34b24c40000
delete,MemoryChunk,0x159abe00000
delete,MemoryChunk,0x2e266d40000
delete,MemoryChunk,0x2a7ad180000
delete,MemoryChunk,0x2ffd7a00000
delete,MemoryChunk,0x21ca3700000
delete,MemoryChunk,0x2887a180000
delete,MemoryChunk,0x2db5f7c0000
delete,MemoryChunk,0x33d80d80000
delete,MemoryChunk,0x2c698700000
delete,MemoryChunk,0x7f25a40000
delete,MemoryChunk,0x63bfac0000
delete,MemoryChunk,0x33a1b00000
delete,MemoryChunk,0x25193a80000
delete,MemoryChunk,0x1c76e2c0000
delete,MemoryChunk,0x25684cc0000
delete,MemoryChunk,0xc5d8f40000
delete,MemoryChunk,0x308e0780000
delete,MemoryChunk,0x126b1e80000
delete,MemoryChunk,0x28701a00000
delete,MemoryChunk,0x1ffb2780000
delete,MemoryChunk,0x1eca7480000
delete,MemoryChunk,0x32c33780000
delete,MemoryChunk,0x1d7696c0000
delete,MemoryChunk,0x32768b80000
delete,MemoryChunk,0x3ac54980000
markcompact,end,3,828125,1671212003704
tick,0x225ca816008,11345298,0,0x0,0,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8356c33,11361335,0,0x0,0,0x9ce61cee70,0x225ca8101ea
tick,0x7ff6a8158c1f,11377342,0,0x0,0,0x7ff6a8153cd0,0x225ca84ee51,0x225ca8104ff
tick,0x7ff6a8351e33,11392366,0,0x0,0,0x225ca8318b2,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a839eb07,11408399,0,0x0,0
tick,0x225ca848c46,11424372,0,0x0,0,0x225ca833623,0x225ca8104ff
scavenge,begin,3,906250,1671212003797
scavenge,end,3,906250,1671212003799
tick,0x7fffb2a0d1a4,11440392,0,0x0,8
tick,0x225ca85cb31,11455376,0,0x0,0,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7fffb2a0d1a4,11471339,0,0x0,0,0x9ce61cea40,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a815348c,11487344,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,3,968750,1671212003856
scavenge,end,3,968750,1671212003858
tick,0x7ff6a81b7636,11503336,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a841c70d,11519370,0,0x0,0,0x225ca847670,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8021b85,11535333,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a815bf48,11550392,0,0x0,0,0x7ff6a8153cd0,0x225ca830f4c,0x225ca85d670,0x225ca859959,0x225ca81049c
scavenge,begin,4,31250,1671212003928
tick,0x7ff6a816f1b3,11566349,0,0x0,1
scavenge,end,4,31250,1671212003930
tick,0x7ff6a80236fb,11582381,0,0x0,0,0x7ff6a81557b0,0x225ca818a32,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a823338c,11598347,0,0x0,5
tick,0x7ff6a801c4d6,11614386,0,0x0,0,0x7ff6a8153cd0,0x225ca83d6ae,0x225ca843f21,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a80496c7,11630349,0,0x0,0,0x7ff6a81557b0,0x225ca856b58,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,4,109375,1671212003996
scavenge,end,4,109375,1671212003997
code-creation,Function,11,11646328,0x225ca7aafe0,152,peek node:internal/priority_queue:45:7,0x2ee4c9fd488,^
tick,0x7fffb2a0d1c4,11646402,0,0x0,0,0x7ff6a7f15050,0x1f733c7983b,0x1f733c7895d
code-source-info,0x225ca7aafe0,64,1096,1133,,,
code-creation,Function,11,11646449,0x225ca7ab0e0,972,insertGuarded node:internal/timers:325:23,0x334252feb28,^
code-source-info,0x225ca7ab0e0,63,10197,10714,,,
code-creation,Function,11,11646466,0x225ca7ab520,72,setPosition node:internal/timers:411:21,0x334252fed00,^
code-source-info,0x225ca7ab520,63,12502,12555,,,
tick,0x7ff6a801c536,11662399,0,0x0,0,0x7ff6a8153cd0,0x225ca85437c,0x225ca8226d0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a81dec4a,11678423,0,0x0,0,0x7ff6a7f055e0,0x7ff6a83b671b,0x225ca83b21d,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a821c207,11693393,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,4,171875,1671212004062
scavenge,end,4,171875,1671212004063
tick,0x7ff6a8049320,11709429,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a7fc2140,11725439,0,0x0,0,0x7ff6a8153cd0,0x225ca83a9bd,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca835d42,11741421,0,0x0,0,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x225ca814359,11757398,0,0x0,0,0x225ca8278a7,0x225ca83b249,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,4,234375,1671212004132
new,MemoryChunk,0x132c5480000,262144
new,MemoryChunk,0x2fb9abc0000,262144
new,MemoryChunk,0x74c28c0000,262144
new,MemoryChunk,0x1b146800000,262144
new,MemoryChunk,0x265fe980000,262144
new,MemoryChunk,0x1de20600000,262144
new,MemoryChunk,0x1dc39c0000,262144
scavenge,end,4,234375,1671212004133
tick,0x7ff6a7ec1514,11773463,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x7427140000,262144
tick,0x7ff6a8029d08,11789426,0,0x0,0,0x7ff6a8153cd0,0x225ca84d76a,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x225ca83ac96,11805485,0,0x0,0,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca8105b5,11821452,0,0x0,0
scavenge,begin,4,312500,1671212004200
tick,0x7fffb297a4eb,11837468,0,0x0,1
new,MemoryChunk,0x3c855080000,262144
new,MemoryChunk,0xa361040000,262144
new,MemoryChunk,0x1b0af800000,262144
new,MemoryChunk,0x2acf8840000,262144
new,MemoryChunk,0x3d81a640000,262144
new,MemoryChunk,0x223a000000,262144
new,MemoryChunk,0x2d8e3e40000,262144
new,MemoryChunk,0x2d888ac0000,262144
new,MemoryChunk,0xd9cc180000,262144
new,MemoryChunk,0x3ad2b040000,262144
new,MemoryChunk,0x2ca3b780000,262144
scavenge,end,4,312500,1671212004201
tick,0x7ff6a801c4a3,11853429,0,0x0,0,0x7ff6a8153cd0,0x225ca831095,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a802370a,11869457,0,0x0,0,0x7ff6a81557b0,0x225ca818226,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x3e234cc0000,262144
tick,0x7fffb2a0deb4,11885474,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x2b29c000000,262144
code-creation,LazyCompile,13,11899262,0x225ca7ab5e0,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca7ab5ex25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a834a9c2,11901469,0,0x0,0,0x225ca81049c
scavenge,begin,4,343750,1671212004273
new,MemoryChunk,0x774df40000,262144
new,MemoryChunk,0x1e800300000,262144
new,MemoryChunk,0xd4ac000000,262144
new,MemoryChunk,0x84a8b00000,262144
new,MemoryChunk,0x212da880000,262144
new,MemoryChunk,0x3026c40000,262144
new,MemoryChunk,0x310d4c40000,262144
new,MemoryChunk,0x97cd3c0000,262144
new,MemoryChunk,0x747b5c0000,262144
new,MemoryChunk,0x75db240000,262144
new,MemoryChunk,0x38155180000,262144
scavenge,end,4,343750,1671212004275
tick,0x7ff6a81bd11b,11917441,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a82115b7,11933466,0,0x0,5
tick,0x7ff6a7c9585b,11949454,0,0x0,0,0x7ff6a8153cd0,0x225ca85dad1,0x225ca830f1b,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a8048d18,11965465,0,0x0,0,0x7ff6a8153cd0,0x225ca854338,0x225ca8226d0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x3ace9300000,262144
scavenge,begin,4,390625,1671212004340
new,MemoryChunk,0x2ec6f1c0000,262144
new,MemoryChunk,0x1ca63400000,262144
new,MemoryChunk,0x334298c0000,262144
new,MemoryChunk,0x22944a80000,262144
new,MemoryChunk,0x1a203140000,262144
new,MemoryChunk,0x4bbed00000,262144
new,MemoryChunk,0x24b653c0000,262144
new,MemoryChunk,0x9974f80000,262144
new,MemoryChunk,0x34b7f80000,262144
new,MemoryChunk,0x27af1240000,262144
scavenge,end,4,390625,1671212004342
tick,0x7fffb2a0d1a4,11981512,0,0x0,0,0x9ce61cea40,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a81efdbd,11997496,0,0x0,5
tick,0x7ff6a841227a,12013472,0,0x0,0,0x225ca7f811d,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x225ca85677d,12029532,0,0x0,0,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x29b0400000,262144
tick,0x7ff6a8048d28,12045469,0,0x0,0,0x7ff6a8153cd0,0x225ca820fb9,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,4,453125,1671212004411
new,MemoryChunk,0x48d37c0000,262144
new,MemoryChunk,0xefd9e40000,262144
new,MemoryChunk,0x23606680000,262144
new,MemoryChunk,0x3ff21900000,262144
new,MemoryChunk,0x37736fc0000,262144
new,MemoryChunk,0x2c45ef80000,262144
new,MemoryChunk,0x3e08ddc0000,262144
new,MemoryChunk,0x1c3caa40000,262144
new,MemoryChunk,0x20161980000,262144
new,MemoryChunk,0x11c1a740000,262144
scavenge,end,4,453125,1671212004412
tick,0x7ff6a83958e7,12061522,0,0x0,0,0x225ca831167,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x2dc9b4c0000,262144
tick,0x7ff6a83b60aa,12077529,0,0x0,0,0x225ca8164aa,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8158de2,12092481,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a78a4f6b,12108474,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x1ac81bc0000,262144
scavenge,begin,4,515625,1671212004481
new,MemoryChunk,0x2263dc80000,262144
new,MemoryChunk,0xc7c7a00000,262144
new,MemoryChunk,0x15da7400000,262144
new,MemoryChunk,0x2c587e80000,262144
new,MemoryChunk,0x37bf0980000,262144
new,MemoryChunk,0x2d021480000,262144
new,MemoryChunk,0x31129a80000,262144
new,MemoryChunk,0xfbbce00000,262144
new,MemoryChunk,0x248bb480000,262144
scavenge,end,4,515625,1671212004482
tick,0x7ff6a801c4d6,12124519,0,0x0,0,0x7ff6a81529e0,0x225ca854233,0x225ca8226d0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a7fd120b,12140504,0,0x0,0,0x7ff6a7f02870,0x7ff6a841cf1f,0x225ca857204,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x2c6f3800000,262144
tick,0x7ff6a8393cfa,12156524,0,0x0,0,0x225ca834b2d,0x225ca8286a3,0x225ca82af3e
new,MemoryChunk,0x21e37200000,262144
code-creation,LazyCompile,13,12165470,0x225ca7abf40,220,insertGuarded node:internal/timers:325:23,0x334252feb28,*
code-source-info,0x225ca7abf40,63,10197,10714,C0O10197C48O10242C85O10269C101O10315C106O10309C137O10197,,
tick,0x225ca83840d,12172492,0,0x0,0,0x225ca83d6de,0x225ca843f21,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
new,MemoryChunk,0x15f29540000,262144
scavenge,begin,4,562500,1671212004548
new,MemoryChunk,0x2abb1dc0000,262144
new,MemoryChunk,0x299ca540000,262144
new,MemoryChunk,0x266e3240000,262144
new,MemoryChunk,0x2c5d2bc0000,262144
new,MemoryChunk,0x37132580000,262144
new,MemoryChunk,0x1e521ec0000,262144
new,MemoryChunk,0x899f540000,262144
new,MemoryChunk,0x24f06c80000,262144
new,MemoryChunk,0x1a48cf00000,262144
new,MemoryChunk,0x267f85c0000,262144
scavenge,end,4,562500,1671212004549
tick,0x7ff6a785a6f3,12188529,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a801c4cf,12204503,0,0x0,0,0x7ff6a8153cd0,0x225ca83d6ae,0x225ca843f21,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a81e2475,12220545,0,0x0,0,0x7ff6a7f055e0,0x7ff6a83b671b,0x225ca83b21d,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a866a5b5,12236520,0,0x0,0,0x7ff6a7f09d70,0x225ca8236df,0x225ca821ce2,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
markcompact,begin,4,625000,1671212004608
delete,MemoryChunk,0x2decac40000
delete,MemoryChunk,0x30e3a580000
delete,MemoryChunk,0x132c5480000
delete,MemoryChunk,0x74c28c0000
delete,MemoryChunk,0x265fe980000
delete,MemoryChunk,0x1dc39c0000
delete,MemoryChunk,0x3decc500000
delete,MemoryChunk,0x2fb9abc0000
delete,MemoryChunk,0x1b146800000
delete,MemoryChunk,0x1de20600000
delete,MemoryChunk,0xa361040000
delete,MemoryChunk,0x3c855080000
delete,MemoryChunk,0x2acf8840000
delete,MemoryChunk,0x223a000000
delete,MemoryChunk,0x2d888ac0000
delete,MemoryChunk,0xd9cc180000
delete,MemoryChunk,0x3ad2b040000
delete,MemoryChunk,0x2ca3b780000
delete,MemoryChunk,0x1b0af800000
delete,MemoryChunk,0x3d81a640000
delete,MemoryChunk,0x2d8e3e40000
delete,MemoryChunk,0x2b29c000000
delete,MemoryChunk,0xd4ac000000
delete,MemoryChunk,0x212da880000
delete,MemoryChunk,0x3026c40000
delete,MemoryChunk,0x97cd3c0000
delete,MemoryChunk,0x747b5c0000
delete,MemoryChunk,0x38155180000
delete,MemoryChunk,0x1e800300000
delete,MemoryChunk,0x84a8b00000
delete,MemoryChunk,0x75db240000
delete,MemoryChunk,0x2ec6f1c0000
delete,MemoryChunk,0x334298c0000
delete,MemoryChunk,0x1a203140000
delete,MemoryChunk,0x24b653c0000
delete,MemoryChunk,0x34b7f80000
delete,MemoryChunk,0x774df40000
delete,MemoryChunk,0x310d4c40000
delete,MemoryChunk,0x1ca63400000
delete,MemoryChunk,0x22944a80000
delete,MemoryChunk,0x4bbed00000
delete,MemoryChunk,0x9974f80000
delete,MemoryChunk,0x27af1240000
delete,MemoryChunk,0x29b0400000
delete,MemoryChunk,0xefd9e40000
delete,MemoryChunk,0x3ff21900000
delete,MemoryChunk,0x48d37c0000
delete,MemoryChunk,0x23606680000
delete,MemoryChunk,0x37736fc0000
delete,MemoryChunk,0x2c45ef80000
delete,MemoryChunk,0x3e08ddc0000
delete,MemoryChunk,0x1c3caa40000
delete,MemoryChunk,0x20161980000
delete,MemoryChunk,0x11c1a740000
delete,MemoryChunk,0x1ac81bc0000
delete,MemoryChunk,0x2263dc80000
delete,MemoryChunk,0xc7c7a00000
delete,MemoryChunk,0x15da7400000
delete,MemoryChunk,0x2c587e80000
delete,MemoryChunk,0x37bf0980000
delete,MemoryChunk,0x2d021480000
delete,MemoryChunk,0x31129a80000
delete,MemoryChunk,0xfbbce00000
delete,MemoryChunk,0x248bb480000
delete,MemoryChunk,0x15f29540000
delete,MemoryChunk,0x299ca540000
delete,MemoryChunk,0x2c5d2bc0000
delete,MemoryChunk,0x2abb1dc0000
delete,MemoryChunk,0x37132580000
delete,MemoryChunk,0x899f540000
delete,MemoryChunk,0x24f06c80000
delete,MemoryChunk,0x1a48cf00000
delete,MemoryChunk,0x1d2f4840000
delete,MemoryChunk,0x7427140000
delete,MemoryChunk,0x3e234cc0000
delete,MemoryChunk,0x3ace9300000
delete,MemoryChunk,0x2dc9b4c0000
new,MemoryChunk,0x1b696c0000,262144
markcompact,end,4,625000,1671212004610
tick,0x7fffb29c4b81,12252562,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a839426f,12268516,0,0x0,0,0x225ca8224c5,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8387bdc,12283552,0,0x0,0,0x225ca836351,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a7fc21fe,12299582,0,0x0,0,0x7ff6a8153cd0,0x225ca85c8ac,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a801c480,12315570,0,0x0,0,0x7ff6a8153cd0,0x225ca856a3d,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,4,703125,1671212004692
tick,0x7fffb2a10ab4,12330539,0,0x0,1
scavenge,end,4,703125,1671212004693
tick,0x7ff6a8150817,12346588,0,0x0,0,0x7ff6a8153cd0,0x225ca843c24,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8356b85,12362594,0,0x0,0,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a801c4a3,12378583,0,0x0,0,0x7ff6a8153cd0,0x225ca8434ca,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,4,750000,1671212004749
scavenge,end,4,750000,1671212004750
tick,0x7ff6a83290ba,12393552,0,0x0,8
tick,0x7ff6a83540d0,12409600,0,0x0,0,0x225ca81bb6a,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a81dd753,12425589,0,0x0,0,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8002c67,12441653,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7ff6a8029c81,12457600,0,0x0,0,0x7ff6a8153cd0,0x225ca843786,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
scavenge,begin,4,812500,1671212004821
scavenge,end,4,828125,1671212004823
tick,0x7ff6a8028e88,12473599,0,0x0,0,0x7ff6a8153cd0,0x225ca843eeb,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x225ca825d68,12489571,0,0x0,0
tick,0x7ff6a80438cd,12505624,0,0x0,0,0x7ff6a8153cd0,0x225ca85c1eb,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
tick,0x7fffb2a1737b,12521576,0,0x0,8
scavenge,begin,4,890625,1671212004888
scavenge,end,4,890625,1671212004889
tick,0x7fffb2995bce,12537640,0,0x0,0,0x9ce61cea48,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca853854,0x225ca8090fe
code-creation,LazyCompile,13,12552301,0x225ca85fe60,3144, node:fs:197:10,0x1bb8fb3c778,*
code-source-info,0x225ca85fex1bb8fb3c3a0S0x1bb8fb3c348S0x2ee4c9e9998S0x2ee4c9e90f0S0x2f65a73e468S0x2ee4c9e9568S0x6682e9a8e0
tick,0x7fffb1f42053,12553602,0,0x0,0,0x9ce61ce9f8,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x225ca85249c,12569633,0,0x0,0,0x225ca828bd6,0x225ca82af3e
tick,0x7ff6a7fcbf93,12585665,0,0x0,5
scavenge,begin,4,953125,1671212004957
scavenge,end,4,953125,1671212004958
tick,0x7ff6a83f2ed7,12601629,0,0x0,0,0x225ca8188a1,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x7ff6a820d66f,12617641,0,0x0,8
tick,0x7ff6a88c1fd3,12633630,0,0x0,0,0x9ce61ceaa0,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x225ca814401,12649641,0,0x0,0,0x225ca83b26c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,5,31250,1671212005027
new,MemoryChunk,0x11e09400000,262144
new,MemoryChunk,0x25ba8680000,262144
new,MemoryChunk,0xf9e280000,262144
new,MemoryChunk,0x1f6ff00000,262144
new,MemoryChunk,0x14550940000,262144
new,MemoryChunk,0x3088d940000,262144
tick,0x7ff6a88b4357,12665651,0,0x0,1
scavenge,end,5,31250,1671212005028
new,MemoryChunk,0x1b74c280000,262144
tick,0x225ca84c344,12681689,0,0x0,0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x0,12697680,0,0x0,5
tick,0x7ff6a801c4d6,12713654,0,0x0,0,0x7ff6a8153cd0,0x225ca832f4b,0x225ca8104ff
tick,0x7ff6a7ff9e9d,12729683,0,0x0,0,0x7ff6a8153cd0,0x225ca84a7df,0x225ca81049c
scavenge,begin,5,93750,1671212005095
new,MemoryChunk,0x4981fc0000,262144
new,MemoryChunk,0x26589b40000,262144
new,MemoryChunk,0x15021680000,262144
new,MemoryChunk,0x3f95a040000,262144
new,MemoryChunk,0x3c99b040000,262144
new,MemoryChunk,0x633a4c0000,262144
new,MemoryChunk,0x2407b540000,262144
new,MemoryChunk,0x34cc57c0000,262144
new,MemoryChunk,0x1dd5cec0000,262144
new,MemoryChunk,0xf9f9280000,262144
new,MemoryChunk,0xac43f40000,262144
scavenge,end,5,93750,1671212005096
tick,0x225ca85a7fb,12745652,0,0x0,0,0x225ca832c61,0x225ca8104ff
tick,0x7ff6a83c3187,12761667,0,0x0,0,0x225ca81bb6a,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0xb598fc0000,262144
tick,0x7ff6a8396019,12777638,0,0x0,0,0x225ca85004f,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x7ff6a83520ba,12793084,0,0x0,0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
new,MemoryChunk,0x1f6828c0000,262144
code-creation,LazyCompile,13,12794505,0x225ca860bc0,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca860bcx25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
scavenge,begin,5,156250,1671212005169
new,MemoryChunk,0x2ec9b580000,262144
new,MemoryChunk,0x7ee8240000,262144
new,MemoryChunk,0x266c66c0000,262144
new,MemoryChunk,0x1d1bdd00000,262144
new,MemoryChunk,0x6d0f880000,262144
new,MemoryChunk,0x3aad9080000,262144
new,MemoryChunk,0x3619e5c0000,262144
new,MemoryChunk,0xaea000000,262144
new,MemoryChunk,0x21f3f980000,262144
new,MemoryChunk,0x1f9cfc00000,262144
new,MemoryChunk,0x8265880000,262144
scavenge,end,5,156250,1671212005170
tick,0x7ff6a838cb90,12809059,0,0x0,0,0x225ca7f825c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x7ff6a7abe239,12825112,0,0x0,0,0x9ce61ce9f8,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x7ff6a835996c,12841063,0,0x0,0,0x225ca81689a,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a80611a1,12857081,0,0x0,5
new,MemoryChunk,0xfc412c0000,262144
tick,0x0,12872064,0,0x0,5
scavenge,begin,5,218750,1671212005237
new,MemoryChunk,0x1b7e8280000,262144
new,MemoryChunk,0x13cf9a00000,262144
new,MemoryChunk,0x2b950f40000,262144
new,MemoryChunk,0x25d13fc0000,262144
new,MemoryChunk,0x1a7d8f80000,262144
new,MemoryChunk,0x34d89d00000,262144
new,MemoryChunk,0x3067880000,262144
new,MemoryChunk,0x1b0b2ac0000,262144
new,MemoryChunk,0x1ea6a840000,262144
new,MemoryChunk,0x12895040000,262144
scavenge,end,5,218750,1671212005239
tick,0x7fffb2a173bb,12888133,0,0x0,0,0x9ce61cea00,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x7ff6a801c53e,12904095,0,0x0,0,0x7ff6a81557b0,0x225ca85e682,0x225ca81049c
tick,0x7ff6a8387fd9,12920086,0,0x0,0,0x225ca82fa67,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8002a30,12936124,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
scavenge,begin,5,281250,1671212005308
new,MemoryChunk,0xeddd600000,262144
new,MemoryChunk,0x33a721c0000,262144
new,MemoryChunk,0x1c051c40000,262144
new,MemoryChunk,0x19ac5680000,262144
new,MemoryChunk,0x9f15240000,262144
new,MemoryChunk,0x3e3d0880000,262144
new,MemoryChunk,0x2c0fa080000,262144
new,MemoryChunk,0x35d5d440000,262144
new,MemoryChunk,0xbdb1d80000,262144
new,MemoryChunk,0x143dc100000,262144
scavenge,end,5,281250,1671212005309
tick,0x7fffb2a0d1a4,12952121,0,0x0,8
new,MemoryChunk,0xe55b440000,262144
tick,0x7ff6a8028398,12968101,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x7fffb2a0d1a4,12984132,0,0x0,0,0x9ce61ce9f8,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x7ff6a8352cbb,12999237,0,0x0,0
new,MemoryChunk,0x362bc280000,262144
tick,0x7fffb2a0d1a4,13015262,0,0x0,0,0x9ce61ce9f8,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
scavenge,begin,5,312500,1671212005379
new,MemoryChunk,0xbb441c0000,262144
new,MemoryChunk,0x234589c0000,262144
new,MemoryChunk,0x171c2940000,262144
new,MemoryChunk,0x32fabf80000,262144
new,MemoryChunk,0x2ba0da40000,262144
new,MemoryChunk,0x34610400000,262144
new,MemoryChunk,0x26d5380000,262144
new,MemoryChunk,0x2fa79dc0000,262144
new,MemoryChunk,0x183e6fc0000,262144
scavenge,end,5,312500,1671212005381
tick,0x7ff6a7e37271,13031250,0,0x0,0,0x7ff6a7ef70b0,0x225ca813a0f,0x225ca81bb6a,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x21587700000,262144
tick,0x7ff6a7c8c419,13047262,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
new,MemoryChunk,0x1adc9c0000,262144
tick,0x7ff6a8000692,13063236,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
new,MemoryChunk,0x2ee67700000,262144
tick,0x7fffb299a9a0,13079301,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,5,375000,1671212005446
new,MemoryChunk,0x1414fe00000,262144
new,MemoryChunk,0x3bf13700000,262144
new,MemoryChunk,0x284be080000,262144
new,MemoryChunk,0x35e45200000,262144
new,MemoryChunk,0x33419c0000,262144
new,MemoryChunk,0x38f71280000,262144
new,MemoryChunk,0x1ddf2740000,262144
new,MemoryChunk,0x35209f80000,262144
new,MemoryChunk,0x1789a940000,262144
new,MemoryChunk,0x25408e00000,262144
scavenge,end,5,390625,1671212005448
tick,0x7fffb299b73c,13095258,0,0x0,5
tick,0x7ff6a818fe2c,13111277,0,0x0,1
tick,0x7ff6a814ce6d,13127249,0,0x0,0,0x7ff6a8153cd0,0x225ca8573a2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
new,MemoryChunk,0x1b5e5b80000,262144
tick,0x7ff6a80438cd,13142281,0,0x0,0,0x7ff6a8153cd0,0x225ca854338,0x225ca8226d0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
markcompact,begin,5,421875,1671212005506
delete,MemoryChunk,0x266e3240000
delete,MemoryChunk,0x1b696c0000
delete,MemoryChunk,0x267f85c0000
delete,MemoryChunk,0x11e09400000
delete,MemoryChunk,0xf9e280000
delete,MemoryChunk,0x14550940000
delete,MemoryChunk,0x1e521ec0000
delete,MemoryChunk,0x25ba8680000
delete,MemoryChunk,0x1f6ff00000
delete,MemoryChunk,0x3088d940000
delete,MemoryChunk,0x4981fc0000
delete,MemoryChunk,0x26589b40000
delete,MemoryChunk,0x633a4c0000
delete,MemoryChunk,0x34cc57c0000
delete,MemoryChunk,0x1dd5cec0000
delete,MemoryChunk,0xf9f9280000
delete,MemoryChunk,0xac43f40000
delete,MemoryChunk,0x2407b540000
delete,MemoryChunk,0x1f6828c0000
delete,MemoryChunk,0x3c99b040000
delete,MemoryChunk,0x7ee8240000
delete,MemoryChunk,0x2ec9b580000
delete,MemoryChunk,0x266c66c0000
delete,MemoryChunk,0x1d1bdd00000
delete,MemoryChunk,0x6d0f880000
delete,MemoryChunk,0x3aad9080000
delete,MemoryChunk,0xaea000000
delete,MemoryChunk,0x21f3f980000
delete,MemoryChunk,0x8265880000
delete,MemoryChunk,0x3f95a040000
delete,MemoryChunk,0x1b7e8280000
delete,MemoryChunk,0x2b950f40000
delete,MemoryChunk,0x1a7d8f80000
delete,MemoryChunk,0x3067880000
delete,MemoryChunk,0x1ea6a840000
delete,MemoryChunk,0x1f9cfc00000
delete,MemoryChunk,0x13cf9a00000
delete,MemoryChunk,0x25d13fc0000
delete,MemoryChunk,0x3619e5c0000
delete,MemoryChunk,0x34d89d00000
delete,MemoryChunk,0x1b0b2ac0000
delete,MemoryChunk,0x15021680000
delete,MemoryChunk,0x12895040000
delete,MemoryChunk,0xeddd600000
delete,MemoryChunk,0x1c051c40000
delete,MemoryChunk,0x9f15240000
delete,MemoryChunk,0x3e3d0880000
delete,MemoryChunk,0x2c0fa080000
delete,MemoryChunk,0x35d5d440000
delete,MemoryChunk,0xbdb1d80000
delete,MemoryChunk,0x143dc100000
delete,MemoryChunk,0x33a721c0000
delete,MemoryChunk,0x19ac5680000
delete,MemoryChunk,0x362bc280000
delete,MemoryChunk,0xbb441c0000
delete,MemoryChunk,0x234589c0000
delete,MemoryChunk,0x171c2940000
delete,MemoryChunk,0x32fabf80000
delete,MemoryChunk,0x2ba0da40000
delete,MemoryChunk,0x34610400000
delete,MemoryChunk,0x26d5380000
delete,MemoryChunk,0x2fa79dc0000
delete,MemoryChunk,0x183e6fc0000
delete,MemoryChunk,0x21587700000
delete,MemoryChunk,0x2ee67700000
delete,MemoryChunk,0x21e37200000
delete,MemoryChunk,0x1b74c280000
delete,MemoryChunk,0xb598fc0000
delete,MemoryChunk,0xfc412c0000
delete,MemoryChunk,0xe55b440000
markcompact,end,5,421875,1671212005508
tick,0x7ff6a801e305,13158264,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca815689,0x225ca80c545,0x225ca860628
tick,0x7ff6a88b4112,13174316,0,0x0,0,0x7ff6a8358ff5,0x225ca84787c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
code-creation,LazyCompile,13,13189722,0x225ca860bc0,1980,error C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:267:45,0x2f65a73e1c0,*
code-source-info,0x225ca860bcx25aadb33d78S0x2f65a73dd60S0x2f65a73de50S0x25aadb34420
tick,0x7ff6a815aef7,13190255,0,0x0,0,0x7ff6a81557b0,0x225ca8387a0,0x225ca83d6de,0x225ca843f21,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a786f802,13206291,0,0x0,0,0x7ff6a82d7030,0x225ca81674e,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a80200d4,13222283,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,5,500000,1671212005589
scavenge,end,5,500000,1671212005590
tick,0x225ca831701,13237320,0,0x0,0,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a8349f67,13253288,0,0x0,0,0x225ca852693,0x225ca828bd6,0x225ca82af3e
tick,0x7ff6a81bcc4e,13269340,0,0x0,0,0x7ff6a7f18ee0,0x225ca817e53,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,5,531250,1671212005646
scavenge,end,5,531250,1671212005647
tick,0x7fffb2a0d1c4,13285304,0,0x0,1
tick,0x225ca825e35,13301350,0,0x0,0,0x225ca830f76,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7fffb2a0d1a4,13316330,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a838850e,13332330,0,0x0,0,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,13348374,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,5,609375,1671212005720
scavenge,end,5,609375,1671212005721
tick,0x7ff6a8089fe3,13364339,0,0x0,0,0x7ff6a81557b0,0x225ca85518c
tick,0x7ff6a83884b1,13380361,0,0x0,0,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8150637,13396339,0,0x0,0,0x7ff6a8153cd0,0x225ca820fb9,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a88c76b2,13412369,0,0x0,0,0x7ff6a7f0f870,0x225ca81fc27,0x225ca826897,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,5,671875,1671212005786
scavenge,end,5,671875,1671212005787
tick,0x7ff6a815611c,13428357,0,0x0,0,0x7ff6a81557b0,0x225ca81196f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca843d72,13444346,0,0x0,0,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a838e8e4,13460356,0,0x0,0,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a801c4d6,13476351,0,0x0,0,0x7ff6a8153cd0,0x225ca8434ca,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,5,734375,1671212005853
scavenge,end,5,750000,1671212005854
tick,0x7ff6a7d8dd15,13492375,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a800d8d5,13508386,0,0x0,0,0x7ff6a7f18ee0,0x225ca817e53,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a79185dd,13524375,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8020cf5,13540353,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4d6,13555354,0,0x0,0,0x7ff6a8153cd0,0x225ca8182cd,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,5,796875,1671212005922
scavenge,end,5,796875,1671212005923
new,MemoryChunk,0x35d58800000,262144
tick,0x7ff6a88b44c6,13570361,0,0x0,0,0x7ff6a7ef70b0,0x225ca8279ab,0x225ca83b249,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca83cd6b,13586409,0,0x0,0,0x225ca8213b5,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83884d8,13602376,0,0x0,0,0x225ca8104ff
tick,0x7fffb2a0d1a4,13618410,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,5,859375,1671212005987
new,MemoryChunk,0x105bb2c0000,262144
new,MemoryChunk,0x25bcbc00000,262144
new,MemoryChunk,0x355a6900000,262144
new,MemoryChunk,0x29b23ec0000,262144
new,MemoryChunk,0x36d1d000000,262144
new,MemoryChunk,0x2ade7880000,262144
new,MemoryChunk,0x188598c0000,262144
new,MemoryChunk,0x2ae4ebc0000,262144
new,MemoryChunk,0x3e70f580000,262144
new,MemoryChunk,0x3ee2a540000,262144
new,MemoryChunk,0x1d6e2b00000,262144
scavenge,end,5,859375,1671212005988
tick,0x225ca818b2b,13634410,0,0x0,0,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83a5916,13650414,0,0x0,0,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x238a00000,262144
tick,0x7ff6a837f096,13666403,0,0x0,0,0x7ff6a837f08c,0x7ff6a83e4b3a,0x225ca8357b8,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8150692,13682431,0,0x0,0,0x7ff6a8153cd0,0x225ca810e1c,0x225ca758b11,0x225ca860fee,0x225ca860628
code-creation,LazyCompile,13,13687038,0x225ca861480,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca861480,47,1607,2075,C0O1607C60O1620C154O1668C162O1693C166O1698C191O1729C199O1734C228O1757C259O286I8C339O1787C413O1832C500O1857C541O1879C578O1918C583O2027C587O2035C701O2694I0C731O7035I1C768O2755I0C945O2857I0C1019O2874I0C1045O3316I12C1062O3176I3C1066O3183I0C1075O1196I4C1098O14773I5C1137O14788I5C1142O15268I11C1147O15390I11C1161O15422I11C1180O3335I0C1237O3361I0C1287O3402I0C1317O3423I0C1325O3438I0C1343O16143I7C1353O3456I0C1373O3350I12C1377O3355I12C1384O3811I9C1393O3316I12C1468O3338I12C1481O3973I9C1486O3479I0C1491O2074C1522O7082I1C1527O1812C1532O394I8C1537O1648C1543O1607C1597O1620C1642O286I8C1697O1787C1754O1832C1852O2755I0C1933O1620,F0O2035F1O2710I0F2O3183I0F3O3758I2F4O3199I0F5O3245I0F6O3456I0F7O16263I6F8O1757F9O3549I0F10O3811I9F11O3285I0F12O4034I9,S0x25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a80790db,13698390,0,0x0,0,0x9ce61ceb20,0x225ca85f37f,0x225ca8216a3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,5,937500,1671212006061
new,MemoryChunk,0x128a9780000,262144
new,MemoryChunk,0x3c82f480000,262144
new,MemoryChunk,0x7d19400000,262144
new,MemoryChunk,0x59d9a40000,262144
new,MemoryChunk,0x1f85600000,262144
new,MemoryChunk,0x6315fc0000,262144
new,MemoryChunk,0x3ac40300000,262144
new,MemoryChunk,0x1338b40000,262144
new,MemoryChunk,0xd47c9c0000,262144
new,MemoryChunk,0xb678500000,262144
new,MemoryChunk,0x3a321800000,262144
scavenge,end,5,937500,1671212006063
tick,0x7ff6a801c4d6,13714404,0,0x0,0,0x7ff6a8153cd0,0x225ca833730,0x225ca8104ff
tick,0x7fffb299b7da,13730418,0,0x0,0,0x7ff6a82d7030,0x225ca81674e,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca82247e,13746408,0,0x0,0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x174cf880000,262144
tick,0x7ff6a8049430,13762417,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,6,0,1671212006128
new,MemoryChunk,0xa8d85c0000,262144
new,MemoryChunk,0xfa34c00000,262144
new,MemoryChunk,0x2ea16640000,262144
new,MemoryChunk,0x1cb3ce80000,262144
new,MemoryChunk,0x33ce940000,262144
new,MemoryChunk,0x17c80000,262144
new,MemoryChunk,0x1b858c00000,262144
new,MemoryChunk,0x1f27d740000,262144
new,MemoryChunk,0x38c7dcc0000,262144
new,MemoryChunk,0x2f5b9ac0000,262144
scavenge,end,6,0,1671212006129
tick,0x7ff6a8022b90,13778434,0,0x0,5
tick,0x7ff6a8007d85,13793431,0,0x0,0,0x7ff6a8153cd0,0x225ca8116d4,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca834684,13809455,0,0x0,0,0x225ca82af3e
tick,0x225ca758ac3,13825438,0,0x0,0,0x225ca860fee,0x225ca860628
scavenge,begin,6,46875,1671212006199
new,MemoryChunk,0xf835500000,262144
new,MemoryChunk,0x1e1a87c0000,262144
new,MemoryChunk,0x3b021600000,262144
new,MemoryChunk,0x26d16b00000,262144
new,MemoryChunk,0x21478bc0000,262144
new,MemoryChunk,0x2c669500000,262144
new,MemoryChunk,0x2e7254c0000,262144
new,MemoryChunk,0x15e43040000,262144
new,MemoryChunk,0x3da28280000,262144
new,MemoryChunk,0x27a4b600000,262144
scavenge,end,6,46875,1671212006200
tick,0x7ff6a7a92f7b,13840467,1,0x7ff6a79f5d10,6,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x3b007ac0000,262144
tick,0x7ff6a801c52e,13855461,0,0x0,0,0x7ff6a8153cd0,0x225ca8182cd,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7906982,13870443,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a802046d,13885473,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x2a334cc0000,262144
tick,0x7ff6a838c9f8,13901479,0,0x0,0,0x225ca7f8205,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,6,93750,1671212006269
new,MemoryChunk,0x3acc3500000,262144
new,MemoryChunk,0x22aacb80000,262144
new,MemoryChunk,0x31deab00000,262144
new,MemoryChunk,0x19b1c3c0000,262144
new,MemoryChunk,0x3f6a5980000,262144
new,MemoryChunk,0x2ced15c0000,262144
new,MemoryChunk,0x1e5ec7c0000,262144
new,MemoryChunk,0x30837e00000,262144
new,MemoryChunk,0x2d57ecc0000,262144
scavenge,end,6,93750,1671212006271
tick,0x7ff6a8022bb6,13917464,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x34881200000,262144
tick,0x7fffb2a0d1a4,13933493,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x128c7bc0000,262144
tick,0x7ff6a814e0a5,13949499,0,0x0,0,0x7ff6a8153cd0,0x225ca8313a9,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x2161a7c0000,262144
tick,0x7fffb2a16fd8,13965494,0,0x0,8
scavenge,begin,6,140625,1671212006335
new,MemoryChunk,0x14383900000,262144
new,MemoryChunk,0x3d640d40000,262144
new,MemoryChunk,0x3cb9c680000,262144
new,MemoryChunk,0x430e40000,262144
new,MemoryChunk,0xf3edbc0000,262144
new,MemoryChunk,0x633b3c0000,262144
new,MemoryChunk,0x2a88880000,262144
new,MemoryChunk,0x13770c40000,262144
new,MemoryChunk,0x133bf700000,262144
new,MemoryChunk,0x2b6fd140000,262144
scavenge,end,6,140625,1671212006337
tick,0x7fffb2a16fd8,13981468,0,0x0,8
tick,0x7fffb29b01b2,13997486,0,0x0,8
tick,0x7fffb2a0d1a4,14013469,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0xd3f7700000,262144
tick,0x7fffb29b01e4,14029496,0,0x0,0,0x9ce61cec90,0x225ca851a01,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
markcompact,begin,6,203125,1671212006394
delete,MemoryChunk,0x25408e00000
delete,MemoryChunk,0x33419c0000
delete,MemoryChunk,0x525d700000
delete,MemoryChunk,0x35209f80000
delete,MemoryChunk,0x1ddf2740000
delete,MemoryChunk,0x1414fe00000
delete,MemoryChunk,0x284be080000
delete,MemoryChunk,0x3bf13700000
delete,MemoryChunk,0x1789a940000
delete,MemoryChunk,0x1b5e5b80000
delete,MemoryChunk,0x105bb2c0000
delete,MemoryChunk,0x355a6900000
delete,MemoryChunk,0x2ade7880000
delete,MemoryChunk,0x2ae4ebc0000
delete,MemoryChunk,0x3e70f580000
delete,MemoryChunk,0x3ee2a540000
delete,MemoryChunk,0x1d6e2b00000
delete,MemoryChunk,0x36d1d000000
delete,MemoryChunk,0x3c82f480000
delete,MemoryChunk,0x128a9780000
delete,MemoryChunk,0x59d9a40000
delete,MemoryChunk,0x1f85600000
delete,MemoryChunk,0x6315fc0000
delete,MemoryChunk,0x1338b40000
delete,MemoryChunk,0xd47c9c0000
delete,MemoryChunk,0x3a321800000
delete,MemoryChunk,0x7d19400000
delete,MemoryChunk,0xb678500000
delete,MemoryChunk,0xfa34c00000
delete,MemoryChunk,0x1cb3ce80000
delete,MemoryChunk,0x17c80000
delete,MemoryChunk,0x1f27d740000
delete,MemoryChunk,0x2f5b9ac0000
delete,MemoryChunk,0x29b23ec0000
delete,MemoryChunk,0xa8d85c0000
delete,MemoryChunk,0x2ea16640000
delete,MemoryChunk,0x3ac40300000
delete,MemoryChunk,0x33ce940000
delete,MemoryChunk,0x1b858c00000
delete,MemoryChunk,0x25bcbc00000
delete,MemoryChunk,0x38c7dcc0000
delete,MemoryChunk,0xf835500000
delete,MemoryChunk,0x3b021600000
delete,MemoryChunk,0x21478bc0000
delete,MemoryChunk,0x2c669500000
delete,MemoryChunk,0x2e7254c0000
delete,MemoryChunk,0x15e43040000
delete,MemoryChunk,0x3da28280000
delete,MemoryChunk,0x27a4b600000
delete,MemoryChunk,0x1e1a87c0000
delete,MemoryChunk,0x26d16b00000
delete,MemoryChunk,0x2a334cc0000
delete,MemoryChunk,0x3acc3500000
delete,MemoryChunk,0x22aacb80000
delete,MemoryChunk,0x31deab00000
delete,MemoryChunk,0x19b1c3c0000
delete,MemoryChunk,0x3f6a5980000
delete,MemoryChunk,0x2ced15c0000
delete,MemoryChunk,0x1e5ec7c0000
delete,MemoryChunk,0x30837e00000
delete,MemoryChunk,0x2d57ecc0000
delete,MemoryChunk,0x34881200000
delete,MemoryChunk,0x2161a7c0000
delete,MemoryChunk,0x2b6fd140000
delete,MemoryChunk,0x1adc9c0000
delete,MemoryChunk,0x35d58800000
delete,MemoryChunk,0x238a00000
delete,MemoryChunk,0x174cf880000
delete,MemoryChunk,0x3b007ac0000
markcompact,end,6,203125,1671212006396
tick,0x7ff6a801c4d6,14045509,0,0x0,0,0x7ff6a8153cd0,0x225ca8313a9,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7fffb29c4b4f,14061522,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8031105,14076475,0,0x0,0,0x7ff6a7f0d770,0x7ff6a83aa5ab,0x225ca83cbf8,0x225ca8213b5,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8438938,14092493,0,0x0,0,0x225ca81681f,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a80235e0,14108480,0,0x0,0,0x7ff6a81557b0,0x225ca8387a0,0x225ca83d6de,0x225ca843f21,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,6,265625,1671212006476
scavenge,end,6,265625,1671212006477
tick,0x7ff6a804387c,14124512,0,0x0,0,0x7ff6a8153cd0,0x225ca831095,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a831ebcb,14140508,0,0x0,8
tick,0x7ff6a7fc216a,14156516,0,0x0,5
scavenge,begin,6,328125,1671212006533
scavenge,end,6,328125,1671212006534
tick,0x7fffb2a0deb4,14172492,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,14188497,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca859743,14204533,0,0x0,0,0x225ca81049c
tick,0x7fffb2a0d1a4,14220541,0,0x0,8
tick,0x7ff6a8029cc9,14235533,0,0x0,0,0x7ff6a8153cd0,0x225ca843eeb,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,6,406250,1671212006606
scavenge,end,6,406250,1671212006607
tick,0x7ff6a801c4c3,14250578,0,0x0,0,0x7ff6a8153cd0,0x225ca83a9ff,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,14266559,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,14282562,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8394278,14297547,0,0x0,0,0x225ca834b65,0x225ca8286a3,0x225ca82af3e
scavenge,begin,6,468750,1671212006673
scavenge,end,6,468750,1671212006674
tick,0x7ff6a7c93f12,14313554,0,0x0,0,0x7ff6a8153cd0,0x225ca820fb9,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca84b335,14329538,0,0x0,0,0x225ca83e641
tick,0x7ff6a841d4e8,14345582,0,0x0,0,0x225ca83caf7,0x225ca8213b5,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca810e38,14361536,0,0x0,0,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca84826e,14377568,0,0x0,0,0x225ca828363,0x225ca82af3e
scavenge,begin,6,531250,1671212006741
scavenge,end,6,531250,1671212006742
tick,0x7ff6a802179e,14392577,0,0x0,0,0x7ff6a81557b0,0x225ca84d803,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,14408603,0,0x0,8
tick,0x7fffb2a0d1a4,14424561,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca7f8072,14440581,0,0x0,0,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,6,609375,1671212006810
scavenge,end,6,609375,1671212006811
tick,0x7ff6a7e30eb4,14455600,0,0x0,0,0x7ff6a7f0f870,0x225ca81fc27,0x225ca826897,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x306cd00000,262144
tick,0x225ca825d64,14470605,0,0x0,0,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a82f16b4,14486565,0,0x0,0,0x25aadb01499,0x225ca82fa67,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a802194d,14502599,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,6,656250,1671212006875
new,MemoryChunk,0x157c0740000,262144
new,MemoryChunk,0x242f6a40000,262144
new,MemoryChunk,0x8e02b00000,262144
new,MemoryChunk,0x1a8542c0000,262144
new,MemoryChunk,0x3e81c600000,262144
new,MemoryChunk,0x21fbd140000,262144
new,MemoryChunk,0x3adf6880000,262144
new,MemoryChunk,0x141d1b40000,262144
new,MemoryChunk,0x2a40f900000,262144
new,MemoryChunk,0x2051efc0000,262144
new,MemoryChunk,0x37c04f80000,262144
scavenge,end,6,656250,1671212006876
tick,0x7fffb2a168ca,14517562,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4d6,14533601,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x186c3c40000,262144
tick,0x7ff6a801c4cf,14549586,0,0x0,0,0x7ff6a8153cd0,0x225ca810dd6,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a79e444d,14565644,0,0x0,8
code-creation,LazyCompile,13,14574449,0x225ca861480,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225cax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a8426fa9,14581587,0,0x0,0,0x225ca7f7edb,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,6,718750,1671212006949
new,MemoryChunk,0x21d00000,262144
new,MemoryChunk,0x1e05ba00000,262144
new,MemoryChunk,0x2d23a700000,262144
new,MemoryChunk,0x3618c440000,262144
new,MemoryChunk,0x31d55bc0000,262144
new,MemoryChunk,0x16cb6b40000,262144
new,MemoryChunk,0x1d01cf80000,262144
new,MemoryChunk,0x37caf300000,262144
new,MemoryChunk,0x36ed7ec0000,262144
new,MemoryChunk,0x1d0b9c00000,262144
new,MemoryChunk,0x38bb7100000,262144
scavenge,end,6,718750,1671212006951
tick,0x7ff6a838cac1,14597627,0,0x0,0,0x225ca7f8205,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8440eb5,14613610,0,0x0,0,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a800d92b,14629640,0,0x0,0,0x7ff6a7f18ee0,0x225ca817e53,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
code-creation,Function,11,14641836,0x225ca861de0,484,insert node:internal/priority_queue:34:9,0x2ee4c9fd438,^
code-source-info,0x225ca861de0,64,898,1086,,,
code-creation,Function,11,14641880,0x225ca862040,160,peek node:internal/linkedlist:9:14,0x334252f44f0,^
code-source-info,0x225ca862040,62,139,221,,,
code-creation,Function,11,14641909,0x225ca862140,1248,processTimers node:internal/timers:485:25,0x334252fef18,^
code-source-info,0x225ca862140,63,14769,15239,,,
code-creation,Function,11,14641929,0x225ca862680,460,TimersList node:internal/timers:241:20,0x334252fe750,^
code-source-info,0x225ca862680,63,7813,8101,,,
code-creation,Function,11,14641951,0x225ca8628c0,820,percolateUp node:internal/priority_queue:73:14,0x2ee4c9fd548,^
code-source-info,0x225ca8628c0,64,1846,2344,,,
tick,0x7fffb2a0d1a4,14645613,0,0x0,8
new,MemoryChunk,0x2b8ace40000,262144
scavenge,begin,6,781250,1671212007016
new,MemoryChunk,0x1936fb80000,262144
new,MemoryChunk,0xb31f240000,262144
new,MemoryChunk,0x1e7d0ec0000,262144
new,MemoryChunk,0x5f2c000000,262144
new,MemoryChunk,0x3846d500000,262144
new,MemoryChunk,0x3475dc80000,262144
new,MemoryChunk,0x24c04180000,262144
new,MemoryChunk,0x1db0d400000,262144
new,MemoryChunk,0x1af66e00000,262144
scavenge,end,6,781250,1671212007018
tick,0x7ff6a80884b9,14661653,0,0x0,0,0x7ff6a8153cd0,0x225ca843e59,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81560e0,14677598,0,0x0,0,0x7ff6a8153cd0,0x225ca8434ca,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8395c48,14692644,0,0x0,0,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8387784,14708630,0,0x0,0,0x225ca7f7e40,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a856fddc,14724640,0,0x0,8
scavenge,begin,6,859375,1671212007088
new,MemoryChunk,0x34489280000,262144
new,MemoryChunk,0x2d661540000,262144
new,MemoryChunk,0x3f593d00000,262144
new,MemoryChunk,0x2a444ac0000,262144
new,MemoryChunk,0x1687e200000,262144
new,MemoryChunk,0x3d9b9f40000,262144
new,MemoryChunk,0x10178180000,262144
new,MemoryChunk,0x3c2556c0000,262144
new,MemoryChunk,0x19eb8800000,262144
new,MemoryChunk,0x2bbbe340000,262144
scavenge,end,6,859375,1671212007089
tick,0x7ff6a81eea21,14740621,0,0x0,5
new,MemoryChunk,0x1e433300000,262144
tick,0x7ff6a8020d50,14756640,0,0x0,0,0x7ff6a7f0ca20,0x7ff6a8402c64,0x225ca8479b4,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a83313e5,14772627,0,0x0,8
new,MemoryChunk,0x1fab840000,262144
tick,0x225ca818332,14788660,0,0x0,0,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,6,906250,1671212007158
new,MemoryChunk,0x320b1080000,262144
new,MemoryChunk,0x33a25680000,262144
new,MemoryChunk,0xf8a7340000,262144
new,MemoryChunk,0x1564ff00000,262144
new,MemoryChunk,0x23c577c0000,262144
new,MemoryChunk,0x261bfec0000,262144
new,MemoryChunk,0xf9fb380000,262144
new,MemoryChunk,0xd22d880000,262144
new,MemoryChunk,0x23810740000,262144
scavenge,end,6,906250,1671212007160
tick,0x7ff6a8313312,14804634,0,0x0,6
new,MemoryChunk,0x37763a80000,262144
tick,0x225ca859577,14820661,0,0x0,0,0x225ca81049c
tick,0x7ff6a81e9104,14836676,0,0x0,5
new,MemoryChunk,0x331c9980000,262144
new,MemoryChunk,0x6593dc0000,262144
tick,0x225ca7cd2fd,14852688,0,0x0,0,0x7ff6a7f02870,0x7ff6a841cf1f,0x225ca82351d,0x225ca821ce2,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,6,953125,1671212007224
new,MemoryChunk,0x1fc5d280000,262144
new,MemoryChunk,0x2ca1af00000,262144
new,MemoryChunk,0x25ea4180000,262144
new,MemoryChunk,0x653aa00000,262144
new,MemoryChunk,0x72f58c0000,262144
new,MemoryChunk,0x2aa6ae00000,262144
new,MemoryChunk,0x1de0f340000,262144
new,MemoryChunk,0x3fced080000,262144
new,MemoryChunk,0x37b28e00000,262144
new,MemoryChunk,0x20ad38c0000,262144
scavenge,end,6,953125,1671212007226
tick,0x7ff6a814ce62,14868715,0,0x0,0,0x7ff6a81557b0,0x225ca843e28,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8160e5a,14883688,0,0x0,1
tick,0x7ff6a81607e8,14899649,0,0x0,1
new,MemoryChunk,0x8d231c0000,262144
tick,0x7ff6a8028dfd,14915690,0,0x0,0,0x7ff6a8153cd0,0x225ca8313a9,0x225ca85d670,0x225ca859959,0x225ca81049c
markcompact,begin,7,15625,1671212007283
delete,MemoryChunk,0xd3f7700000
delete,MemoryChunk,0x38f71280000
delete,MemoryChunk,0x13770c40000
delete,MemoryChunk,0x3cb9c680000
delete,MemoryChunk,0x2a88880000
delete,MemoryChunk,0x430e40000
delete,MemoryChunk,0x3d640d40000
delete,MemoryChunk,0x633b3c0000
delete,MemoryChunk,0x157c0740000
delete,MemoryChunk,0x3e81c600000
delete,MemoryChunk,0x3adf6880000
delete,MemoryChunk,0x8e02b00000
delete,MemoryChunk,0xf3edbc0000
delete,MemoryChunk,0x1a8542c0000
delete,MemoryChunk,0x21fbd140000
delete,MemoryChunk,0x141d1b40000
delete,MemoryChunk,0x2a40f900000
delete,MemoryChunk,0x2051efc0000
delete,MemoryChunk,0x37c04f80000
delete,MemoryChunk,0x3618c440000
delete,MemoryChunk,0x31d55bc0000
delete,MemoryChunk,0x16cb6b40000
delete,MemoryChunk,0x37caf300000
delete,MemoryChunk,0x36ed7ec0000
delete,MemoryChunk,0x2d23a700000
delete,MemoryChunk,0x38bb7100000
delete,MemoryChunk,0x1936fb80000
delete,MemoryChunk,0x1e7d0ec0000
delete,MemoryChunk,0x3846d500000
delete,MemoryChunk,0x24c04180000
delete,MemoryChunk,0x242f6a40000
delete,MemoryChunk,0x1af66e00000
delete,MemoryChunk,0x1e05ba00000
delete,MemoryChunk,0xb31f240000
delete,MemoryChunk,0x1d0b9c00000
delete,MemoryChunk,0x5f2c000000
delete,MemoryChunk,0x3475dc80000
delete,MemoryChunk,0x1d01cf80000
delete,MemoryChunk,0x1db0d400000
delete,MemoryChunk,0x2d661540000
delete,MemoryChunk,0x2a444ac0000
delete,MemoryChunk,0x34489280000
delete,MemoryChunk,0x3f593d00000
delete,MemoryChunk,0x1687e200000
delete,MemoryChunk,0x3d9b9f40000
delete,MemoryChunk,0x10178180000
delete,MemoryChunk,0x3c2556c0000
delete,MemoryChunk,0x19eb8800000
delete,MemoryChunk,0x2bbbe340000
delete,MemoryChunk,0x1fab840000
delete,MemoryChunk,0x320b1080000
delete,MemoryChunk,0x33a25680000
delete,MemoryChunk,0xf8a7340000
delete,MemoryChunk,0x1564ff00000
delete,MemoryChunk,0x23c577c0000
delete,MemoryChunk,0x261bfec0000
delete,MemoryChunk,0xf9fb380000
delete,MemoryChunk,0xd22d880000
delete,MemoryChunk,0x23810740000
delete,MemoryChunk,0x37763a80000
delete,MemoryChunk,0x6593dc0000
delete,MemoryChunk,0x20ad38c0000
delete,MemoryChunk,0x128c7bc0000
delete,MemoryChunk,0x306cd00000
delete,MemoryChunk,0x186c3c40000
delete,MemoryChunk,0x2b8ace40000
delete,MemoryChunk,0x1e433300000
markcompact,end,7,15625,1671212007285
tick,0x7ff6a81bcd3c,14930665,0,0x0,5
tick,0x7ff6a83145c3,14946704,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8029c81,14962675,0,0x0,0,0x7ff6a8153cd0,0x225ca843586,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a835919d,14978703,0,0x0,0,0x225ca83c469,0x225ca828e35,0x225ca82af3e
tick,0x7ff6a83884d8,14994702,0,0x0,0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,7,62500,1671212007365
scavenge,end,7,62500,1671212007367
tick,0x7fffb2a16fe3,15010720,0,0x0,8
tick,0x7ff6a80497ca,15026685,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81bd222,15041712,0,0x0,5
tick,0x225ca81b21a,15057685,0,0x0,0,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,7,125000,1671212007423
scavenge,end,7,125000,1671212007424
tick,0x7ff6a78a4258,15072727,0,0x0,0,0x9ce61ceb30,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca828b7b,15088727,0,0x0,0,0x225ca82af3e
tick,0x7ff6a801c480,15104739,0,0x0,0,0x7ff6a8153cd0,0x225ca843486,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,15120714,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,7,187500,1671212007496
scavenge,end,7,187500,1671212007497
tick,0x225ca81e5fa,15136730,0,0x0,0,0x225ca829f4d
tick,0x7ff6a804b33f,15152710,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,15168758,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a80283d8,15184720,0,0x0,0,0x7ff6a8153cd0,0x225ca818654,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,7,250000,1671212007562
tick,0x7ff6a88b43ce,15200737,0,0x0,1
scavenge,end,7,250000,1671212007563
tick,0x7fffb2a0d1a4,15216723,0,0x0,8
tick,0x7ff6a8388568,15232747,0,0x0,0,0x225ca8104ff
tick,0x7ff6a80145ff,15247752,0,0x0,0,0x7ff6a81557b0,0x225ca8387a0,0x225ca83d6de,0x225ca843f21,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca8605ca,15263785,0,0x0,0
scavenge,begin,7,296875,1671212007630
scavenge,end,7,296875,1671212007631
tick,0x7fffb2a0d1a4,15279792,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c57d,15295787,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7ca18f0,15311753,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,15327784,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,7,375000,1671212007699
scavenge,end,7,375000,1671212007700
tick,0x7ff6a803a323,15343810,0,0x0,0,0x7ff6a7f02870,0x7ff6a841cf1f,0x225ca85c9b2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0xe3cb180000,262144
tick,0x7ff6a7a1f3cf,15359792,0,0x0,0,0x9ce61ceb18,0x225ca85f37f,0x225ca8216a3,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83c332b,15375751,0,0x0,0,0x225ca8301a0,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,15391808,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,7,437500,1671212007765
new,MemoryChunk,0x37b34f40000,262144
new,MemoryChunk,0x3ff2f000000,262144
new,MemoryChunk,0x390e51c0000,262144
new,MemoryChunk,0x127e7f00000,262144
new,MemoryChunk,0x1a0ec900000,262144
new,MemoryChunk,0x33657a40000,262144
new,MemoryChunk,0x476a2c0000,262144
scavenge,end,7,437500,1671212007766
tick,0x7ff6a8233343,15407817,0,0x0,5
tick,0x7ff6a81deef7,15423796,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x1314fb80000,262144
tick,0x7ff6a80c73b4,15439767,0,0x0,5
tick,0x7ff6a83877d0,15455823,0,0x0,0,0x225ca81b531,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x34762480000,262144
code-creation,LazyCompile,13,15465219,0x225ca862c60,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca862cx25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a8205325,15471812,0,0x0,8
scavenge,begin,7,515625,1671212007840
new,MemoryChunk,0x261bb4c0000,262144
new,MemoryChunk,0x30d73d40000,262144
new,MemoryChunk,0x1a8ee000000,262144
new,MemoryChunk,0x13f7a4c0000,262144
new,MemoryChunk,0x35fadc0000,262144
new,MemoryChunk,0x180c4b40000,262144
new,MemoryChunk,0x31b7bd00000,262144
new,MemoryChunk,0x37af4fc0000,262144
new,MemoryChunk,0x2071eec0000,262144
new,MemoryChunk,0x200f7200000,262144
new,MemoryChunk,0x181ac640000,262144
scavenge,end,7,515625,1671212007841
tick,0x7ff6a8359d6c,15487815,0,0x0,0,0x225ca81689a,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,15503815,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c598,15519819,0,0x0,0,0x7ff6a8153cd0,0x225ca830ec4,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a7fcbeae,15535837,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x2d24bac0000,262144
scavenge,begin,7,562500,1671212007907
new,MemoryChunk,0x5b7bfc0000,262144
new,MemoryChunk,0x17cdb5c0000,262144
new,MemoryChunk,0x734bd80000,262144
new,MemoryChunk,0xb9aa900000,262144
new,MemoryChunk,0xc137f40000,262144
new,MemoryChunk,0xbd27100000,262144
new,MemoryChunk,0x1b393100000,262144
new,MemoryChunk,0x1dcc2340000,262144
new,MemoryChunk,0x56ce580000,262144
new,MemoryChunk,0x674c800000,262144
scavenge,end,7,562500,1671212007908
tick,0x7ff6a838f2d2,15551838,0,0x0,0,0x225ca854233,0x225ca8226d0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,15567837,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8048d28,15583844,0,0x0,0,0x7ff6a8153cd0,0x225ca832e13,0x225ca8104ff
tick,0x7ff6a838f00f,15598818,0,0x0,0,0x225ca8489c3,0x225ca82151e,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8411432,15614831,0,0x0,0,0x225ca81f885,0x225ca826897,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,7,625000,1671212007977
new,MemoryChunk,0x3fdadb00000,262144
new,MemoryChunk,0x1924b280000,262144
new,MemoryChunk,0x2dc42380000,262144
new,MemoryChunk,0x1a686180000,262144
new,MemoryChunk,0x16c49740000,262144
new,MemoryChunk,0xec14a80000,262144
new,MemoryChunk,0x2b5a9dc0000,262144
new,MemoryChunk,0x23e56cc0000,262144
new,MemoryChunk,0xd21f380000,262144
new,MemoryChunk,0x1129ffc0000,262144
scavenge,end,7,625000,1671212007978
tick,0x7ff6a81bcb79,15630827,0,0x0,0,0x7ff6a8153cd0,0x225ca830ec4,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x1fc51d40000,262144
tick,0x7fffb2a0d1a4,15646881,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8028dc0,15662827,0,0x0,0,0x7ff6a8153cd0,0x225ca830ec4,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x2847b200000,262144
tick,0x7fffb2994765,15678856,0,0x0,0,0x9ce61ceb30,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,7,671875,1671212008047
new,MemoryChunk,0x8e9f040000,262144
new,MemoryChunk,0x2a4b0c0000,262144
new,MemoryChunk,0x2f63af40000,262144
new,MemoryChunk,0x2a8c5fc0000,262144
new,MemoryChunk,0x1b8f7900000,262144
new,MemoryChunk,0x1e4c4bc0000,262144
new,MemoryChunk,0xae17600000,262144
new,MemoryChunk,0x2a5f0a80000,262144
new,MemoryChunk,0x26353340000,262144
scavenge,end,7,671875,1671212008048
tick,0x7ff6a800a2cc,15694895,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x22f7d5c0000,262144
tick,0x7fffb29b01a0,15710869,0,0x0,0,0x9ce61cec90,0x225ca851a01,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x3e709a00000,262144
tick,0x7ff6a791cdcc,15726841,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x2b5e240000,262144
tick,0x7ff6a7ca30d5,15742855,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,7,734375,1671212008113
new,MemoryChunk,0x1a5adc40000,262144
new,MemoryChunk,0x23361380000,262144
new,MemoryChunk,0x31845140000,262144
new,MemoryChunk,0x1b274280000,262144
new,MemoryChunk,0x1836b100000,262144
new,MemoryChunk,0x1d88c8c0000,262144
new,MemoryChunk,0x18aab340000,262144
new,MemoryChunk,0x24cc9440000,262144
new,MemoryChunk,0x3b826e00000,262144
new,MemoryChunk,0x2ea32e00000,262144
new,MemoryChunk,0x4d0d980000,262144
new,MemoryChunk,0x27aef00000,262144
scavenge,end,7,734375,1671212008115
tick,0x7ff6a838a78b,15758853,0,0x0,0,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,15774884,0,0x0,8
tick,0x7ff6a818fe15,15790855,0,0x0,1
new,MemoryChunk,0x337081c0000,262144
tick,0x225ca8103e7,15806883,0,0x0,0
markcompact,begin,7,781250,1671212008172
delete,MemoryChunk,0x3fced080000
delete,MemoryChunk,0x653aa00000
delete,MemoryChunk,0x1fc5d280000
delete,MemoryChunk,0x1de0f340000
delete,MemoryChunk,0x14383900000
delete,MemoryChunk,0x2ca1af00000
delete,MemoryChunk,0x37b28e00000
delete,MemoryChunk,0x2aa6ae00000
delete,MemoryChunk,0x8d231c0000
delete,MemoryChunk,0x37b34f40000
delete,MemoryChunk,0x390e51c0000
delete,MemoryChunk,0x127e7f00000
delete,MemoryChunk,0x1a0ec900000
delete,MemoryChunk,0x33657a40000
delete,MemoryChunk,0x476a2c0000
delete,MemoryChunk,0x72f58c0000
delete,MemoryChunk,0x3ff2f000000
delete,MemoryChunk,0x34762480000
delete,MemoryChunk,0x30d73d40000
delete,MemoryChunk,0x1a8ee000000
delete,MemoryChunk,0x13f7a4c0000
delete,MemoryChunk,0x35fadc0000
delete,MemoryChunk,0x180c4b40000
delete,MemoryChunk,0x37af4fc0000
delete,MemoryChunk,0x2071eec0000
delete,MemoryChunk,0x181ac640000
delete,MemoryChunk,0x261bb4c0000
delete,MemoryChunk,0x200f7200000
delete,MemoryChunk,0x17cdb5c0000
delete,MemoryChunk,0xb9aa900000
delete,MemoryChunk,0x31b7bd00000
delete,MemoryChunk,0xbd27100000
delete,MemoryChunk,0x1dcc2340000
delete,MemoryChunk,0x674c800000
delete,MemoryChunk,0x5b7bfc0000
delete,MemoryChunk,0x734bd80000
delete,MemoryChunk,0xc137f40000
delete,MemoryChunk,0x1b393100000
delete,MemoryChunk,0x56ce580000
delete,MemoryChunk,0x3fdadb00000
delete,MemoryChunk,0x2dc42380000
delete,MemoryChunk,0x16c49740000
delete,MemoryChunk,0xec14a80000
delete,MemoryChunk,0x2b5a9dc0000
delete,MemoryChunk,0x23e56cc0000
delete,MemoryChunk,0xd21f380000
delete,MemoryChunk,0x1924b280000
delete,MemoryChunk,0x1a686180000
delete,MemoryChunk,0x2847b200000
delete,MemoryChunk,0x8e9f040000
delete,MemoryChunk,0x2a4b0c0000
delete,MemoryChunk,0x2f63af40000
delete,MemoryChunk,0x2a8c5fc0000
delete,MemoryChunk,0x1b8f7900000
delete,MemoryChunk,0x1e4c4bc0000
delete,MemoryChunk,0xae17600000
delete,MemoryChunk,0x2a5f0a80000
delete,MemoryChunk,0x26353340000
delete,MemoryChunk,0x22f7d5c0000
delete,MemoryChunk,0x2b5e240000
delete,MemoryChunk,0x27aef00000
delete,MemoryChunk,0x331c9980000
delete,MemoryChunk,0xe3cb180000
delete,MemoryChunk,0x1314fb80000
delete,MemoryChunk,0x2d24bac0000
delete,MemoryChunk,0x1fc51d40000
delete,MemoryChunk,0x23361380000
delete,MemoryChunk,0x24cc9440000
markcompact,end,7,781250,1671212008174
tick,0x7ff6a8156f77,15822899,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca7cd4a5,15838892,0,0x0,0,0x7ff6a841caa6,0x225ca820911,0x225ca8213f3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4e0,15854930,0,0x0,0,0x7ff6a8153cd0,0x225ca8573a2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca80f588,15870915,0,0x0,0,0x225ca85523c
tick,0x7ff6a801c490,15886956,0,0x0,0,0x7ff6a8153cd0,0x225ca85c337,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,7,859375,1671212008255
scavenge,end,7,859375,1671212008256
tick,0x7ff6a7aa1904,15902917,0,0x0,6
tick,0x7ff6a8438623,15918901,0,0x0,0,0x225ca85c36f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8151625,15934935,0,0x0,0,0x7ff6a81557b0,0x225ca843465,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a16f7e,15950898,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,7,906250,1671212008314
scavenge,end,7,906250,1671212008315
tick,0x7ff6a81dd757,15966922,0,0x0,0,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,15982934,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca826a98,15998914,0,0x0,0,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a814e558,16014933,0,0x0,0,0x7ff6a8153cd0,0x225ca810dd6,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,7,984375,1671212008387
scavenge,end,7,984375,1671212008388
tick,0x7ff6a8029cb7,16030906,0,0x0,0,0x7ff6a8153cd0,0x225ca84c92a,0x225ca85523c
tick,0x7ff6a7fc2199,16046908,0,0x0,5
tick,0x7ff6a8426a65,16062945,0,0x0,0,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a856f018,16078908,0,0x0,8
scavenge,begin,8,31250,1671212008454
scavenge,end,8,31250,1671212008455
tick,0x225ca8220a1,16094936,0,0x0,0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca826c6e,16110921,0,0x0,0,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca8435e2,16126969,0,0x0,0,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7edf334,16142948,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,8,93750,1671212008520
tick,0x7ff6a8489a00,16158974,0,0x0,1
scavenge,end,8,93750,1671212008521
tick,0x7fffb297a4eb,16174950,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83ea6d9,16190969,0,0x0,0,0x225ca843d8b,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a841c992,16206950,0,0x0,0,0x225ca820911,0x225ca8213f3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a16fd8,16223015,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,8,171875,1671212008589
scavenge,end,8,171875,1671212008590
new,MemoryChunk,0x278cf440000,262144
tick,0x7fffb2a0d1a4,16238956,0,0x0,8
tick,0x7ff6a7f10d55,16255000,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca811814,16270996,0,0x0,0,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7aa0f05,16286997,0,0x0,8
scavenge,begin,8,218750,1671212008654
new,MemoryChunk,0xc685a40000,262144
new,MemoryChunk,0x2f518800000,262144
new,MemoryChunk,0x12c84c0000,262144
new,MemoryChunk,0x101c5340000,262144
new,MemoryChunk,0x357b4c80000,262144
new,MemoryChunk,0x1af87780000,262144
scavenge,end,8,218750,1671212008655
tick,0x7ff6a80293b3,16303011,0,0x0,0,0x7ff6a81557b0,0x225ca818a32,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4d6,16319009,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x357e2880000,262144
tick,0x7ff6a8159e62,16335013,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8357e5f,16351026,0,0x0,0,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x4586ec0000,262144
code-creation,LazyCompile,13,16353712,0x225ca862c60,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca862cx25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
scavenge,begin,8,296875,1671212008729
tick,0x7ff6a7edaaae,16367006,0,0x0,1
new,MemoryChunk,0x331f100000,262144
new,MemoryChunk,0x251cd900000,262144
new,MemoryChunk,0x2d0aa7c0000,262144
new,MemoryChunk,0x11d34280000,262144
new,MemoryChunk,0x37b22700000,262144
new,MemoryChunk,0x385c0240000,262144
new,MemoryChunk,0x178e42c0000,262144
new,MemoryChunk,0x21827440000,262144
new,MemoryChunk,0x1b7c0ec0000,262144
new,MemoryChunk,0xded5dc0000,262144
new,MemoryChunk,0xdb4e3c0000,262144
scavenge,end,8,296875,1671212008731
tick,0x7ff6a8029005,16383026,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8028261,16399067,0,0x0,0,0x7ff6a8153cd0,0x225ca84c92a,0x225ca85523c
tick,0x7ff6a801c4a3,16415030,0,0x0,0,0x7ff6a8153cd0,0x225ca84eec4,0x225ca8104ff
new,MemoryChunk,0x229e5000000,262144
tick,0x7ff6a8320462,16431011,0,0x0,5,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,8,359375,1671212008797
new,MemoryChunk,0x3f152f80000,262144
new,MemoryChunk,0x36041600000,262144
new,MemoryChunk,0x3f766f00000,262144
new,MemoryChunk,0x319b2740000,262144
new,MemoryChunk,0x36c75300000,262144
new,MemoryChunk,0x36628440000,262144
new,MemoryChunk,0x27afac0000,262144
new,MemoryChunk,0x393fd140000,262144
new,MemoryChunk,0x1943af80000,262144
new,MemoryChunk,0x35a5e400000,262144
scavenge,end,8,359375,1671212008798
tick,0x225ca85c624,16447019,0,0x0,0,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81bcf1f,16462998,0,0x0,0,0x7ff6a8153cd0,0x225ca84ee51,0x225ca8104ff
tick,0x7ff6a7c8c561,16479043,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7f18ee5,16495091,0,0x0,0,0x7ff6a7f18ee0,0x225ca817e53,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,8,406250,1671212008867
new,MemoryChunk,0x2c5d0b00000,262144
new,MemoryChunk,0x237a34c0000,262144
new,MemoryChunk,0x3c1327c0000,262144
new,MemoryChunk,0x3172c0000,262144
new,MemoryChunk,0x706f040000,262144
new,MemoryChunk,0x361073c0000,262144
new,MemoryChunk,0x9ab7440000,262144
new,MemoryChunk,0x365294c0000,262144
new,MemoryChunk,0x38d77640000,262144
new,MemoryChunk,0x2aa00300000,262144
scavenge,end,8,406250,1671212008869
tick,0x7ff6a7c8c410,16511062,0,0x0,0,0x7ff6a7f0bd80,0x7ff6a83b6631,0x225ca81619d,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x18af0cc0000,262144
tick,0x7fffb2a0d1a4,16527046,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4d6,16543068,0,0x0,0,0x7ff6a8153cd0,0x225ca832d4b,0x225ca8104ff
new,MemoryChunk,0x28697000000,262144
tick,0x7ff6a8418f74,16559082,0,0x0,0,0x7ff6a83b60c4,0x225ca8164aa,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7fd4f96,16575089,0,0x0,0,0x7ff6a7f02870,0x7ff6a841cf1f,0x225ca82351d,0x225ca821ce2,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,8,484375,1671212008942
new,MemoryChunk,0x2e640000000,262144
new,MemoryChunk,0x1e235380000,262144
new,MemoryChunk,0x26720700000,262144
new,MemoryChunk,0x3f77a240000,262144
new,MemoryChunk,0x3999bdc0000,262144
new,MemoryChunk,0x3163cd80000,262144
new,MemoryChunk,0x6852100000,262144
new,MemoryChunk,0x4fe27c0000,262144
new,MemoryChunk,0x55e3b00000,262144
scavenge,end,8,484375,1671212008944
tick,0x225ca810537,16591087,0,0x0,0
new,MemoryChunk,0xa79f140000,262144
tick,0x7fffb2a0d1a4,16607069,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x1f519880000,262144
tick,0x225ca829daf,16623116,0,0x0,0
new,MemoryChunk,0x2c2a080000,262144
tick,0x7ff6a8023703,16639099,0,0x0,0,0x7ff6a81557b0,0x225ca84d803,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,8,562500,1671212009011
new,MemoryChunk,0x2125900000,262144
new,MemoryChunk,0x32f2d580000,262144
new,MemoryChunk,0xddba640000,262144
new,MemoryChunk,0x3be45480000,262144
new,MemoryChunk,0x37f34e00000,262144
new,MemoryChunk,0x13b7dc80000,262144
new,MemoryChunk,0x24f4b2c0000,262144
new,MemoryChunk,0x1d135d80000,262144
new,MemoryChunk,0x1093af40000,262144
new,MemoryChunk,0x16641000000,262144
scavenge,end,8,562500,1671212009013
tick,0x7ff6a7906ffa,16655100,0,0x0,0,0x9ce61ceb30,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83290a5,16671107,0,0x0,8
tick,0x7ff6a838a7b7,16687096,0,0x0,0,0x7ff6a83c2541,0x225ca8313a9,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x21d10800000,262144
tick,0x7ff6a8184c1b,16703097,0,0x0,0,0x7ff6a8153cd0,0x225ca85c337,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
markcompact,begin,8,625000,1671212009073
delete,MemoryChunk,0x133bf700000
delete,MemoryChunk,0x3b826e00000
delete,MemoryChunk,0x31845140000
delete,MemoryChunk,0x1836b100000
delete,MemoryChunk,0x1d88c8c0000
delete,MemoryChunk,0x4d0d980000
delete,MemoryChunk,0x25ea4180000
delete,MemoryChunk,0x18aab340000
delete,MemoryChunk,0x337081c0000
delete,MemoryChunk,0x2f518800000
delete,MemoryChunk,0x1b274280000
delete,MemoryChunk,0xc685a40000
delete,MemoryChunk,0x12c84c0000
delete,MemoryChunk,0x101c5340000
delete,MemoryChunk,0x357b4c80000
delete,MemoryChunk,0x1af87780000
delete,MemoryChunk,0x4586ec0000
delete,MemoryChunk,0x2d0aa7c0000
delete,MemoryChunk,0x11d34280000
delete,MemoryChunk,0x37b22700000
delete,MemoryChunk,0x385c0240000
delete,MemoryChunk,0x21827440000
delete,MemoryChunk,0x1b7c0ec0000
delete,MemoryChunk,0xdb4e3c0000
delete,MemoryChunk,0x251cd900000
delete,MemoryChunk,0x331f100000
delete,MemoryChunk,0x36041600000
delete,MemoryChunk,0xded5dc0000
delete,MemoryChunk,0x319b2740000
delete,MemoryChunk,0x36628440000
delete,MemoryChunk,0x178e42c0000
delete,MemoryChunk,0x393fd140000
delete,MemoryChunk,0x35a5e400000
delete,MemoryChunk,0x3f152f80000
delete,MemoryChunk,0x3f766f00000
delete,MemoryChunk,0x36c75300000
delete,MemoryChunk,0x27afac0000
delete,MemoryChunk,0x1943af80000
delete,MemoryChunk,0x2c5d0b00000
delete,MemoryChunk,0x3c1327c0000
delete,MemoryChunk,0x706f040000
delete,MemoryChunk,0x361073c0000
delete,MemoryChunk,0x9ab7440000
delete,MemoryChunk,0x365294c0000
delete,MemoryChunk,0x38d77640000
delete,MemoryChunk,0x2aa00300000
delete,MemoryChunk,0x237a34c0000
delete,MemoryChunk,0x3172c0000
delete,MemoryChunk,0x28697000000
delete,MemoryChunk,0x2e640000000
delete,MemoryChunk,0x1e235380000
delete,MemoryChunk,0x26720700000
delete,MemoryChunk,0x3f77a240000
delete,MemoryChunk,0x3999bdc0000
delete,MemoryChunk,0x3163cd80000
delete,MemoryChunk,0x6852100000
delete,MemoryChunk,0x4fe27c0000
delete,MemoryChunk,0x55e3b00000
delete,MemoryChunk,0xa79f140000
delete,MemoryChunk,0x16641000000
delete,MemoryChunk,0x3e709a00000
delete,MemoryChunk,0x278cf440000
delete,MemoryChunk,0x357e2880000
delete,MemoryChunk,0x229e5000000
delete,MemoryChunk,0x18af0cc0000
markcompact,end,8,625000,1671212009075
tick,0x7ff6a7e38b5a,16719091,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca7e9a89,16735109,0,0x0,0,0x7ff6a7f02870,0x225ca820582,0x225ca8213f3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c598,16751085,0,0x0,0,0x7ff6a8153cd0,0x225ca821e8f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8088af2,16767113,0,0x0,0,0x7ff6a8153cd0,0x225ca83121f,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a8021cb3,16783093,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,8,671875,1671212009160
scavenge,end,8,671875,1671212009161
tick,0x7ff6a88c2806,16799177,0,0x0,1
tick,0x7fffb2a0d1a4,16815126,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83884d8,16831139,0,0x0,0,0x225ca829f4d
tick,0x7ff6a88e1b10,16847136,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,8,734375,1671212009223
scavenge,end,8,734375,1671212009224
tick,0x225ca8133de,16863150,0,0x0,0,0x225ca81bb6a,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7fd8401,16879139,0,0x0,0,0x7ff6a8358ff5,0x225ca820a78,0x225ca8217c1,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca80f584,16895191,0,0x0,0,0x225ca84ee80,0x225ca8104ff
tick,0x7fffb2a0deb4,16911126,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,16927163,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,8,796875,1671212009298
scavenge,end,8,796875,1671212009300
tick,0x7ff6a8354016,16943119,0,0x0,0,0x225ca83a8f7,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7ca62dc,16959171,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7ca6301,16975131,0,0x0,0,0x7ff6a81557b0,0x225ca856b58,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8390a08,16991162,0,0x0,0,0x225ca82d2da,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,8,859375,1671212009367
scavenge,end,8,859375,1671212009368
tick,0x7ff6a804b55a,17007134,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83599f3,17023173,0,0x0,0,0x225ca81fce0,0x225ca826897,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7fccfde,17039140,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81505d2,17055182,0,0x0,0,0x7ff6a8153cd0,0x225ca82c206,0x225ca831469,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a786f8d5,17071185,0,0x0,0,0x7ff6a82d7030,0x225ca81674e,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,8,937500,1671212009436
scavenge,end,8,937500,1671212009437
tick,0x7ff6a80200a3,17087177,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a79eaaf2,17103164,1,0x7ff6a79f5d10,6,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a80200a3,17119205,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
code-creation,LazyCompile,13,17124412,0x225ca852e60,144,nop node:_http_outgoing:86:13,0x2bdba13b1b0,*
code-source-info,0x225ca852e60,171,2893,2901,C0O2893C44O2900C75O2893,,
tick,0x7ff6a81da1a4,17135161,0,0x0,1
scavenge,begin,9,0,1671212009507
scavenge,end,9,0,1671212009508
tick,0x7ff6a83884d8,17151219,0,0x0,0,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x1d7e4380000,262144
tick,0x7ff6a78de1ea,17167203,0,0x0,0,0x9ce61ceb48,0x225ca85420f,0x225ca8226d0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a88b41d3,17182240,0,0x0,0,0x7ff6a7ef70b0,0x225ca827975,0x225ca83b249,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8150637,17198247,0,0x0,0,0x7ff6a8153cd0,0x225ca85c8ac,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,9,62500,1671212009575
new,MemoryChunk,0x5939f80000,262144
new,MemoryChunk,0x1983fdc0000,262144
new,MemoryChunk,0x502c2c0000,262144
new,MemoryChunk,0x400e700000,262144
new,MemoryChunk,0x3369ee40000,262144
scavenge,end,9,62500,1671212009576
tick,0x7fffb2a0d1a4,17214206,0,0x0,8
tick,0x7ff6a8030fdc,17230209,0,0x0,0,0x7ff6a7f18ee0,0x225ca817e53,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8202f93,17246202,0,0x0,6
new,MemoryChunk,0xbe07e80000,262144
tick,0x7ff6a801c4d6,17262206,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0xf7801c0000,262144
code-creation,LazyCompile,13,17277173,0x225ca852f80,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca852fx25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a78715b7,17277376,0,0x0,4,0x7ff6a7f163b0,0x7ff6a83b6426,0x225ca85692a,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,9,140625,1671212009653
new,MemoryChunk,0x2bf88d00000,262144
new,MemoryChunk,0xbbae080000,262144
new,MemoryChunk,0x242c0940000,262144
new,MemoryChunk,0x331e5a00000,262144
new,MemoryChunk,0x2ecbf880000,262144
new,MemoryChunk,0xc151740000,262144
new,MemoryChunk,0x15588f00000,262144
new,MemoryChunk,0x181143c0000,262144
new,MemoryChunk,0x33f7e000000,262144
new,MemoryChunk,0x36622400000,262144
new,MemoryChunk,0x3eed580000,262144
scavenge,end,9,140625,1671212009655
tick,0x7fffb2a0d1a4,17293278,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7fd8597,17309259,0,0x0,0,0x7ff6a8358ff5,0x225ca857371,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca83e536,17325265,0,0x0,0
tick,0x7ff6a802a592,17341256,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x19eea8c0000,262144
tick,0x225ca83d676,17357237,0,0x0,0,0x225ca84c644,0x225ca822322,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,9,203125,1671212009724
new,MemoryChunk,0x1c48e440000,262144
new,MemoryChunk,0x11373780000,262144
new,MemoryChunk,0x68dd3c0000,262144
new,MemoryChunk,0x3e84e4c0000,262144
new,MemoryChunk,0x290acc0000,262144
new,MemoryChunk,0x3cbd9100000,262144
new,MemoryChunk,0x170bd9c0000,262144
new,MemoryChunk,0xf01c3c0000,262144
new,MemoryChunk,0xfb27200000,262144
new,MemoryChunk,0x2e0bbec0000,262144
scavenge,end,9,203125,1671212009726
tick,0x7ff6a81e4922,17373254,0,0x0,5
tick,0x7fffb2a0d1a4,17389249,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81506e1,17405311,0,0x0,0,0x7ff6a8153cd0,0x225ca83a9ff,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,17421267,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,9,281250,1671212009798
new,MemoryChunk,0xa11fd00000,262144
new,MemoryChunk,0x293b0840000,262144
new,MemoryChunk,0x316c4280000,262144
new,MemoryChunk,0x3c93cc40000,262144
new,MemoryChunk,0x34fb5180000,262144
new,MemoryChunk,0x24982580000,262144
new,MemoryChunk,0x39af1d80000,262144
new,MemoryChunk,0x2f054180000,262144
new,MemoryChunk,0xdc8f200000,262144
new,MemoryChunk,0x182c8880000,262144
scavenge,end,9,281250,1671212009799
tick,0x7ff6a787c8ca,17437281,0,0x0,1
tick,0x7ff6a8028e9e,17453298,0,0x0,0,0x7ff6a8153cd0,0x225ca820fde,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x39dd0a40000,262144
tick,0x7ff6a81636c5,17469299,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x30b8040000,262144
tick,0x7ff6a7c91e02,17484266,0,0x0,0,0x7ff6a8153cd0,0x225ca821e8f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c490,17500290,0,0x0,5
scavenge,begin,9,359375,1671212009873
new,MemoryChunk,0x1b2d77c0000,262144
new,MemoryChunk,0x39a3fdc0000,262144
new,MemoryChunk,0x1be5a000000,262144
new,MemoryChunk,0x735040000,262144
new,MemoryChunk,0x3009c800000,262144
new,MemoryChunk,0x24f85180000,262144
new,MemoryChunk,0x2bdb0c40000,262144
new,MemoryChunk,0x34178940000,262144
new,MemoryChunk,0x1b9c1080000,262144
scavenge,end,9,359375,1671212009875
tick,0x7ff6a8393cfa,17516256,0,0x0,0,0x225ca830e93,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x2b6edfc0000,262144
tick,0x7fffb2a0d1a4,17532309,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0feb4,17548283,0,0x0,8
new,MemoryChunk,0x1e285580000,262144
new,MemoryChunk,0x24a8eb40000,262144
tick,0x7ff6a8153ea5,17563327,0,0x0,0,0x7ff6a8153cd0,0x225ca821e8f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca828d62,17579301,0,0x0,0,0x225ca82af3e
scavenge,begin,9,421875,1671212009944
new,MemoryChunk,0x1bc01880000,262144
new,MemoryChunk,0x292a6a40000,262144
new,MemoryChunk,0x738be80000,262144
new,MemoryChunk,0x15b0b640000,262144
new,MemoryChunk,0x1a89ea80000,262144
new,MemoryChunk,0x1d8ea40000,262144
new,MemoryChunk,0x309473c0000,262144
new,MemoryChunk,0x827ea40000,262144
new,MemoryChunk,0x3b4dd380000,262144
new,MemoryChunk,0xb24c780000,262144
scavenge,end,9,421875,1671212009946
tick,0x7ff6a79ebd60,17595299,0,0x0,8
tick,0x7ff6a802a433,17611299,0,0x0,0,0x7ff6a7f0bd80,0x7ff6a83b6631,0x225ca83b21d,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8029f2b,17627278,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x9effd40000,262144
tick,0x225ca85d3a8,17642322,0,0x0,0,0x225ca81049c
markcompact,begin,9,468750,1671212010006
delete,MemoryChunk,0xddba640000
delete,MemoryChunk,0x1d135d80000
delete,MemoryChunk,0x3be45480000
delete,MemoryChunk,0x24f4b2c0000
delete,MemoryChunk,0x32f2d580000
delete,MemoryChunk,0x2125900000
delete,MemoryChunk,0x13b7dc80000
delete,MemoryChunk,0x37f34e00000
delete,MemoryChunk,0x5939f80000
delete,MemoryChunk,0x502c2c0000
delete,MemoryChunk,0x400e700000
delete,MemoryChunk,0x3369ee40000
delete,MemoryChunk,0x21d10800000
delete,MemoryChunk,0x1983fdc0000
delete,MemoryChunk,0xf7801c0000
delete,MemoryChunk,0xbbae080000
delete,MemoryChunk,0x2bf88d00000
delete,MemoryChunk,0x242c0940000
delete,MemoryChunk,0x331e5a00000
delete,MemoryChunk,0x2ecbf880000
delete,MemoryChunk,0xc151740000
delete,MemoryChunk,0x181143c0000
delete,MemoryChunk,0x33f7e000000
delete,MemoryChunk,0x3eed580000
delete,MemoryChunk,0x1c48e440000
delete,MemoryChunk,0x68dd3c0000
delete,MemoryChunk,0x290acc0000
delete,MemoryChunk,0x170bd9c0000
delete,MemoryChunk,0xfb27200000
delete,MemoryChunk,0x36622400000
delete,MemoryChunk,0x11373780000
delete,MemoryChunk,0x3e84e4c0000
delete,MemoryChunk,0x15588f00000
delete,MemoryChunk,0x3cbd9100000
delete,MemoryChunk,0xf01c3c0000
delete,MemoryChunk,0x2e0bbec0000
delete,MemoryChunk,0xa11fd00000
delete,MemoryChunk,0x316c4280000
delete,MemoryChunk,0x34fb5180000
delete,MemoryChunk,0x24982580000
delete,MemoryChunk,0x39af1d80000
delete,MemoryChunk,0x2f054180000
delete,MemoryChunk,0xdc8f200000
delete,MemoryChunk,0x182c8880000
delete,MemoryChunk,0x293b0840000
delete,MemoryChunk,0x3c93cc40000
delete,MemoryChunk,0x30b8040000
delete,MemoryChunk,0x1b2d77c0000
delete,MemoryChunk,0x39a3fdc0000
delete,MemoryChunk,0x1be5a000000
delete,MemoryChunk,0x735040000
delete,MemoryChunk,0x3009c800000
delete,MemoryChunk,0x24f85180000
delete,MemoryChunk,0x2bdb0c40000
delete,MemoryChunk,0x34178940000
delete,MemoryChunk,0x1b9c1080000
delete,MemoryChunk,0x2b6edfc0000
delete,MemoryChunk,0x24a8eb40000
delete,MemoryChunk,0xb24c780000
delete,MemoryChunk,0x1f519880000
delete,MemoryChunk,0x1d7e4380000
delete,MemoryChunk,0xbe07e80000
delete,MemoryChunk,0x19eea8c0000
delete,MemoryChunk,0x39dd0a40000
markcompact,end,9,468750,1671212010008
tick,0x7fffb29743d5,17658401,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb299b8a4,17674324,1,0x7ff6a79f5d10,6,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a800a2cc,17690332,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a88e1b78,17706296,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a78f6192,17722337,0,0x0,0,0x9ce61ceb38,0x225ca850510,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,9,546875,1671212010092
scavenge,end,9,546875,1671212010093
tick,0x7ff6a801c49b,17738306,0,0x0,5
tick,0x225ca83c924,17754335,0,0x0,0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb299b6a6,17770320,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a88b2da0,17786405,0,0x0,0,0x9ce61ced30,0x225ca82897a,0x225ca82af3e
scavenge,begin,9,593750,1671212010151
scavenge,end,9,593750,1671212010152
tick,0x7ff6a801c4d6,17802331,0,0x0,0,0x7ff6a8153cd0,0x225ca8434ca,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca8543c0,17818380,0,0x0,0,0x225ca8226d0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,17834392,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,17850402,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,9,609375,1671212010226
scavenge,end,9,609375,1671212010227
tick,0x7ff6a8233288,17866340,0,0x0,5
tick,0x7ff6a8002a02,17882390,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca813456,17898336,0,0x0,0,0x225ca8301a0,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a801c490,17914398,0,0x0,0,0x7ff6a8153cd0,0x225ca831095,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a8152de0,17930361,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,9,687500,1671212010297
scavenge,end,9,687500,1671212010298
tick,0x225ca854844,17946374,0,0x0,0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8153d31,17962362,0,0x0,0,0x7ff6a8153cd0,0x225ca831095,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a841d117,17978385,0,0x0,0,0x225ca83b1e0,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8048942,17993383,0,0x0,0,0x7ff6a8153cd0,0x225ca831424,0x225ca85d670,0x225ca859959,0x225ca81049c
scavenge,begin,9,750000,1671212010365
scavenge,end,9,750000,1671212010366
tick,0x7ff6a801c4f2,18009406,0,0x0,0,0x7ff6a8153cd0,0x225ca854338,0x225ca8226d0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83884d8,18025377,0,0x0,0,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a80438cd,18041357,0,0x0,0,0x7ff6a8153cd0,0x225ca831424,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x225ca84a1f4,18057391,0,0x0,0,0x225ca828c78,0x225ca82af3e
scavenge,begin,9,796875,1671212010435
tick,0x7ff6a816c072,18073424,0,0x0,1
scavenge,end,9,796875,1671212010436
new,MemoryChunk,0x1f840c0000,262144
tick,0x7ff6a814ce3b,18089365,0,0x0,0,0x7ff6a8153cd0,0x225ca818654,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7918742,18105424,0,0x0,0,0x9ce61ceb20,0x225ca85f37f,0x225ca8216a3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a80497b5,18121398,0,0x0,0,0x7ff6a81557b0,0x225ca856b58,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81e7696,18137457,0,0x0,0,0x7ff6a7f055e0,0x7ff6a83b671b,0x225ca81619d,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,9,843750,1671212010503
new,MemoryChunk,0x11ef8a40000,262144
new,MemoryChunk,0x8c8df80000,262144
new,MemoryChunk,0x3fa4ae40000,262144
new,MemoryChunk,0x143e3a80000,262144
scavenge,end,9,843750,1671212010504
tick,0x7ff6a801c4cf,18153445,0,0x0,0,0x7ff6a81557b0,0x225ca8311d2,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a7b530d4,18169425,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x4959a80000,262144
tick,0x225ca80f77d,18185449,0,0x0,0,0x225ca8198c4,0x225ca84f25f,0x225ca8104ff
tick,0x225ca819828,18201455,0,0x0,0,0x225ca84ee80,0x225ca8104ff
new,MemoryChunk,0x1632ca00000,262144
code-creation,LazyCompile,13,18202413,0x225ca862c60,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca862cx25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
scavenge,begin,9,906250,1671212010578
new,MemoryChunk,0x3e589f00000,262144
new,MemoryChunk,0x2cfcf400000,262144
new,MemoryChunk,0x1e8dad00000,262144
new,MemoryChunk,0x25c70680000,262144
new,MemoryChunk,0x1a1148c0000,262144
new,MemoryChunk,0x24721c80000,262144
new,MemoryChunk,0x433a200000,262144
new,MemoryChunk,0x14f73380000,262144
new,MemoryChunk,0xf97c500000,262144
new,MemoryChunk,0x58473c0000,262144
new,MemoryChunk,0x2a56cf40000,262144
scavenge,end,9,906250,1671212010579
tick,0x7ff6a77e2138,18217433,0,0x0,1
tick,0x7fffb2a0d1a4,18233458,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7c93f15,18249402,0,0x0,0,0x7ff6a8153cd0,0x225ca84b338,0x225ca83e641
tick,0x7ff6a838f696,18265445,0,0x0,0,0x225ca860c6c,0x225ca860628
new,MemoryChunk,0xe706e80000,262144
tick,0x7ff6a7f10d61,18281411,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,9,937500,1671212010646
new,MemoryChunk,0xdb89380000,262144
new,MemoryChunk,0x3c6472c0000,262144
new,MemoryChunk,0x9348100000,262144
new,MemoryChunk,0x14d9f9c0000,262144
new,MemoryChunk,0x5f95d80000,262144
new,MemoryChunk,0x3d620cc0000,262144
new,MemoryChunk,0x1cba54c0000,262144
new,MemoryChunk,0x15a6bb80000,262144
new,MemoryChunk,0x22968e40000,262144
new,MemoryChunk,0x7b75b40000,262144
scavenge,end,9,937500,1671212010647
tick,0x225ca828410,18297449,0,0x0,0,0x225ca82af3e
tick,0x7ff6a833f7d1,18313413,0,0x0,5,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,18329473,0,0x0,8
tick,0x7ff6a7c8c559,18345477,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,10,15625,1671212010715
new,MemoryChunk,0x20828300000,262144
new,MemoryChunk,0x137d8d00000,262144
new,MemoryChunk,0x1c485f40000,262144
new,MemoryChunk,0x2861e240000,262144
new,MemoryChunk,0x10bc6c80000,262144
new,MemoryChunk,0x8acffc0000,262144
new,MemoryChunk,0x12e7280000,262144
new,MemoryChunk,0x2c395640000,262144
new,MemoryChunk,0x13330b40000,262144
new,MemoryChunk,0x21675000000,262144
scavenge,end,10,15625,1671212010716
tick,0x7fffb2a0d1a4,18361465,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x173bcac0000,262144
tick,0x7ff6a786f806,18377449,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8088afe,18392478,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x1b00c080000,262144
tick,0x7fffb1ac5b50,18408473,0,0x0,0,0x7ff6a82d7030,0x225ca83b021,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,10,78125,1671212010785
new,MemoryChunk,0x3ffc0bc0000,262144
new,MemoryChunk,0x31bd8080000,262144
new,MemoryChunk,0x2a454000000,262144
new,MemoryChunk,0x1d6c0400000,262144
new,MemoryChunk,0x16614f40000,262144
new,MemoryChunk,0x21b79000000,262144
new,MemoryChunk,0xed90b40000,262144
new,MemoryChunk,0x27f81640000,262144
new,MemoryChunk,0x116a0780000,262144
tick,0x7ff6a8165553,18424508,0,0x0,1
scavenge,end,10,78125,1671212010787
tick,0x7ff6a801c4cf,18440447,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x3b8d47c0000,262144
tick,0x7ff6a791a452,18455489,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x3a3d0080000,262144
new,MemoryChunk,0x2ca14d80000,262144
tick,0x7ff6a7918485,18470468,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8359a03,18485516,0,0x0,0,0x225ca83c469,0x225ca828e35,0x225ca82af3e
scavenge,begin,10,125000,1671212010852
new,MemoryChunk,0x86ef140000,262144
new,MemoryChunk,0xf45cb00000,262144
new,MemoryChunk,0x3fc06a00000,262144
new,MemoryChunk,0x28c48740000,262144
new,MemoryChunk,0x2f69b500000,262144
new,MemoryChunk,0x82b5180000,262144
new,MemoryChunk,0x116f2080000,262144
new,MemoryChunk,0x24c57800000,262144
new,MemoryChunk,0xb7bea80000,262144
new,MemoryChunk,0x2c169d80000,262144
scavenge,end,10,125000,1671212010853
tick,0x7ff6a8351feb,18501532,0,0x0,0,0x225ca835c50,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca814329,18517514,0,0x0,0,0x225ca8278a7,0x225ca83b249,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8189023,18533465,0,0x0,1
new,MemoryChunk,0x2a741680000,262144
markcompact,begin,10,187500,1671212010910
delete,MemoryChunk,0x1093af40000
delete,MemoryChunk,0x738be80000
delete,MemoryChunk,0x827ea40000
delete,MemoryChunk,0x1bc01880000
delete,MemoryChunk,0x15b0b640000
delete,MemoryChunk,0x3b4dd380000
delete,MemoryChunk,0x1d8ea40000
delete,MemoryChunk,0x1a89ea80000
delete,MemoryChunk,0x11ef8a40000
delete,MemoryChunk,0x8c8df80000
delete,MemoryChunk,0x3fa4ae40000
delete,MemoryChunk,0x143e3a80000
delete,MemoryChunk,0x9effd40000
delete,MemoryChunk,0x309473c0000
delete,MemoryChunk,0x1632ca00000
delete,MemoryChunk,0x2cfcf400000
delete,MemoryChunk,0x25c70680000
delete,MemoryChunk,0x1a1148c0000
delete,MemoryChunk,0x24721c80000
delete,MemoryChunk,0x14f73380000
delete,MemoryChunk,0xf97c500000
delete,MemoryChunk,0x2a56cf40000
delete,MemoryChunk,0x1e8dad00000
delete,MemoryChunk,0x3e589f00000
delete,MemoryChunk,0x3c6472c0000
delete,MemoryChunk,0x14d9f9c0000
delete,MemoryChunk,0x3d620cc0000
delete,MemoryChunk,0x15a6bb80000
delete,MemoryChunk,0x7b75b40000
delete,MemoryChunk,0xdb89380000
delete,MemoryChunk,0x58473c0000
delete,MemoryChunk,0x9348100000
delete,MemoryChunk,0x5f95d80000
delete,MemoryChunk,0x433a200000
delete,MemoryChunk,0x1cba54c0000
delete,MemoryChunk,0x22968e40000
delete,MemoryChunk,0x20828300000
delete,MemoryChunk,0x1c485f40000
delete,MemoryChunk,0x10bc6c80000
delete,MemoryChunk,0x8acffc0000
delete,MemoryChunk,0x12e7280000
delete,MemoryChunk,0x2c395640000
delete,MemoryChunk,0x13330b40000
delete,MemoryChunk,0x21675000000
delete,MemoryChunk,0x137d8d00000
delete,MemoryChunk,0x2861e240000
delete,MemoryChunk,0x1b00c080000
delete,MemoryChunk,0x3ffc0bc0000
delete,MemoryChunk,0x31bd8080000
delete,MemoryChunk,0x2a454000000
delete,MemoryChunk,0x1d6c0400000
delete,MemoryChunk,0x16614f40000
delete,MemoryChunk,0x21b79000000
delete,MemoryChunk,0xed90b40000
delete,MemoryChunk,0x27f81640000
delete,MemoryChunk,0x116a0780000
delete,MemoryChunk,0x3b8d47c0000
delete,MemoryChunk,0x2ca14d80000
delete,MemoryChunk,0x2c169d80000
delete,MemoryChunk,0x1e285580000
delete,MemoryChunk,0x1f840c0000
delete,MemoryChunk,0x4959a80000
delete,MemoryChunk,0xe706e80000
delete,MemoryChunk,0x173bcac0000
tick,0x7ff6a81b0011,18549537,0,0x0,1
markcompact,end,10,187500,1671212010912
tick,0x7fffb2a0d1a4,18565499,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a80218f8,18581542,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8205285,18597492,0,0x0,8
tick,0x7ff6a8154222,18613531,0,0x0,0,0x7ff6a8153cd0,0x225ca854bb6,0x7ff6a83c2541,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca84c8a4,18629544,0,0x0,0
scavenge,begin,10,265625,1671212010993
scavenge,end,10,281250,1671212010994
tick,0x7ff6a80293a5,18645554,0,0x0,0,0x7ff6a8153cd0,0x225ca81849d,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a82248c8,18661541,0,0x0,6
tick,0x7ff6a833f835,18677548,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,10,328125,1671212011050
scavenge,end,10,328125,1671212011052
tick,0x7ff6a804d725,18692508,0,0x0,5
tick,0x7ff6a8029818,18708546,0,0x0,5
tick,0x7ff6a83900a8,18724511,0,0x0,0,0x225ca851b3e,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a838f074,18740570,0,0x0,0,0x225ca84a866,0x225ca81049c
tick,0x7fffb2982c7a,18756540,0,0x0,0,0x9ce61ceb30,0x225ca8503fe,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,10,406250,1671212011123
scavenge,end,10,406250,1671212011124
tick,0x7ff6a81bcb67,18772550,0,0x0,0,0x7ff6a8153cd0,0x225ca843eeb,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8315dd5,18788540,0,0x0,6
tick,0x225ca830b8c,18804571,0,0x0,0,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a81bd0c3,18820545,0,0x0,0,0x7ff6a7f055e0,0x7ff6a83b671b,0x225ca83b21d,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,10,468750,1671212011190
scavenge,end,10,468750,1671212011191
tick,0x7ff6a8217445,18836591,0,0x0,0,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81bce74,18852561,0,0x0,0,0x7ff6a8153cd0,0x225ca8573a2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8029428,18868599,0,0x0,0,0x7ff6a7f0bd80,0x7ff6a83b6631,0x225ca81619d,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a801c4b1,18883551,0,0x0,0,0x7ff6a8153cd0,0x225ca843be3,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,10,531250,1671212011257
scavenge,end,10,531250,1671212011258
tick,0x7ff6a7fd1151,18899584,0,0x0,0,0x7ff6a7ef70b0,0x225ca827975,0x225ca83b249,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca86047a,18915596,0,0x0,0
tick,0x7fffb2a0d1a4,18930616,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb299b748,18946574,0,0x0,0,0x7ff6a82d7030,0x225ca81674e,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7d8dcb2,18962605,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,10,609375,1671212011326
scavenge,end,10,609375,1671212011328
new,MemoryChunk,0x37691080000,262144
tick,0x7ff6a8393cfa,18978599,0,0x0,0,0x225ca85518c
code-creation,LazyCompile,13,18991108,0x225ca81cbe0,232,get node:internal/bootstrap/pre_execution:326:8,0x3341609cbf0,*
code-source-info,0x225ca81cbe0,92,10624,10658,C0O10624C44O10636C68O10651C95O10624C157O10636,,
tick,0x7ff6a7fc2145,18993631,0,0x0,0,0x7ff6a81557b0,0x225ca818226,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,19009594,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca84a0e8,19025612,0,0x0,0,0x225ca82af3e
scavenge,begin,10,671875,1671212011392
new,MemoryChunk,0x262f7600000,262144
new,MemoryChunk,0x19a62fc0000,262144
new,MemoryChunk,0x98fe8c0000,262144
new,MemoryChunk,0x188d58c0000,262144
scavenge,end,10,671875,1671212011393
tick,0x7ff6a83290ab,19041589,0,0x0,0,0x9ce61ceb30,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca83a441,19057633,0,0x0,0,0x225ca83ad63,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x3c59c940000,262144
tick,0x7fffb2a0d1a4,19073606,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8085c25,19089642,0,0x0,0,0x7ff6a8153cd0,0x225ca85437c,0x225ca8226d0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
code-creation,LazyCompile,13,19091893,0x225ca81cd60,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca81cd60,47,1607,2075,C0O1607C60O1620C154O1668C162O1693C166O1698C191O1729C199O1734C228O1757C259O286I8C339O1787C413O1832C500O1857C541O1879C578O1918C583O2027C587O2035C701O2694I0C731O7035I1C768O2755I0C945O2857I0C1019O2874I0C1045O3316I12C1062O3176I3C1066O3183I0C1075O1196I4C1098O14773I5C1137O14788I5C1142O15268I11C1147O15390I11C1161O15422I11C1180O3335I0C1237O3361I0C1287O3402I0C1317O3423I0C1325O3438I0C1343O16143I7C1353O3456I0C1373O3350I12C1377O3355I12C1384O3811I9C1393O3316I12C1468O3338I12C1481O3973I9C1486O3479I0C1491O2074C1522O7082I1C1527O1812C1532O394I8C1537O1648C1543O1607C1597O1620C1642O286I8C1697O1787C1754O1832C1852O2755I0C1933O1620,F0O2035F1O2710I0F2O3183I0F3O3758I2F4O3199I0F5O3245I0F6O3456I0F7O16263I6F8O1757F9O3549I0F10O3811I9F11O3285I0F12O4034I9,S0x25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x225ca85ff2f,19105598,0,0x0,0
scavenge,begin,10,734375,1671212011468
new,MemoryChunk,0x1ceb5ac0000,262144
new,MemoryChunk,0x1a8b7280000,262144
new,MemoryChunk,0x2b5f07c0000,262144
new,MemoryChunk,0x38441880000,262144
new,MemoryChunk,0x2f804500000,262144
new,MemoryChunk,0x2e0efa80000,262144
new,MemoryChunk,0xe871d80000,262144
new,MemoryChunk,0x1496d840000,262144
new,MemoryChunk,0x14e33a40000,262144
new,MemoryChunk,0x3e7e2dc0000,262144
new,MemoryChunk,0x13500680000,262144
scavenge,end,10,734375,1671212011470
tick,0x7ff6a7f28b15,19121632,0,0x0,0,0x7ff6a7f02870,0x7ff6a841cf1f,0x225ca857204,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8351e1a,19137622,0,0x0,0,0x225ca829f4d
tick,0x7fffb2a0d1a4,19153653,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0xb4f83c0000,262144
tick,0x225ca843abd,19169663,0,0x0,0,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,10,781250,1671212011535
new,MemoryChunk,0x13d1cf40000,262144
new,MemoryChunk,0x3f9b7ac0000,262144
new,MemoryChunk,0x255c5240000,262144
new,MemoryChunk,0xb1d6f00000,262144
new,MemoryChunk,0x4e2f5c0000,262144
new,MemoryChunk,0x35a409c0000,262144
new,MemoryChunk,0x1fbd5f80000,262144
new,MemoryChunk,0xb5ca540000,262144
new,MemoryChunk,0x13d64d80000,262144
new,MemoryChunk,0xd8cb880000,262144
scavenge,end,10,781250,1671212011537
tick,0x225ca85f37c,19185702,0,0x0,0,0x225ca8216a3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c490,19201626,0,0x0,0,0x7ff6a8153cd0,0x225ca8573a2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca811a76,19217653,0,0x0,0,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x1c0d4cc0000,262144
tick,0x7fffb2a0d1a4,19233632,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,10,859375,1671212011604
new,MemoryChunk,0x272f3e80000,262144
new,MemoryChunk,0x282904c0000,262144
new,MemoryChunk,0x25968940000,262144
new,MemoryChunk,0x37ccd00000,262144
new,MemoryChunk,0x32d12180000,262144
new,MemoryChunk,0x23d94780000,262144
new,MemoryChunk,0x7bc0500000,262144
new,MemoryChunk,0x2d05c6c0000,262144
new,MemoryChunk,0x3a23e340000,262144
new,MemoryChunk,0x18080ac0000,262144
scavenge,end,10,859375,1671212011606
tick,0x7ff6a81bcf30,19249679,0,0x0,0,0x7ff6a8153cd0,0x225ca830dcd,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x2d67c0c0000,262144
tick,0x225ca85029d,19265663,0,0x0,0,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7d3f368,19281696,0,0x0,5,0x9ce61ceb30,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x28b643c0000,262144
tick,0x7ff6a801c4b1,19297646,0,0x0,0,0x7ff6a8153cd0,0x225ca84a826,0x225ca81049c
scavenge,begin,10,906250,1671212011674
new,MemoryChunk,0x3d763280000,262144
new,MemoryChunk,0x40f66c0000,262144
new,MemoryChunk,0x19a71400000,262144
new,MemoryChunk,0x2dac3980000,262144
new,MemoryChunk,0xd036f00000,262144
new,MemoryChunk,0x301ec980000,262144
new,MemoryChunk,0x23757940000,262144
new,MemoryChunk,0x1eade900000,262144
new,MemoryChunk,0x30edc780000,262144
tick,0x7fffb2a10ab4,19313677,0,0x0,1
scavenge,end,10,906250,1671212011676
tick,0x7fffb2a0d3c4,19329637,0,0x0,1
new,MemoryChunk,0x22b0f880000,262144
tick,0x7fffb29935a2,19345709,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x2f69fec0000,262144
new,MemoryChunk,0x8f5e980000,262144
tick,0x7ff6a801c4b1,19361653,0,0x0,0,0x7ff6a8153cd0,0x225ca8570fe,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,10,968750,1671212011739
new,MemoryChunk,0x2b273200000,262144
new,MemoryChunk,0x5c92500000,262144
new,MemoryChunk,0x2aced580000,262144
new,MemoryChunk,0x91be6c0000,262144
new,MemoryChunk,0x23d1b140000,262144
new,MemoryChunk,0x1083d4c0000,262144
tick,0x7ff6a88b43bc,19377727,0,0x0,1
new,MemoryChunk,0x36d54d80000,262144
new,MemoryChunk,0x370c0880000,262144
new,MemoryChunk,0x35fae100000,262144
new,MemoryChunk,0x34da22c0000,262144
new,MemoryChunk,0x214ad680000,262144
scavenge,end,10,968750,1671212011741
tick,0x7ff6a7a9ff22,19393675,0,0x0,0,0x9ce61ceb38,0x225ca850510,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb299b7a2,19409708,0,0x0,0,0x7ff6a82d7030,0x225ca81674e,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a814ce1f,19425689,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
markcompact,begin,11,31250,1671212011798
delete,MemoryChunk,0x292a6a40000
delete,MemoryChunk,0x24c57800000
delete,MemoryChunk,0x116f2080000
delete,MemoryChunk,0x28c48740000
delete,MemoryChunk,0x3fc06a00000
delete,MemoryChunk,0x86ef140000
delete,MemoryChunk,0x82b5180000
delete,MemoryChunk,0x2f69b500000
delete,MemoryChunk,0x2a741680000
delete,MemoryChunk,0xf45cb00000
delete,MemoryChunk,0x262f7600000
delete,MemoryChunk,0x19a62fc0000
delete,MemoryChunk,0x98fe8c0000
delete,MemoryChunk,0x188d58c0000
delete,MemoryChunk,0x1a8b7280000
delete,MemoryChunk,0x38441880000
delete,MemoryChunk,0x2f804500000
delete,MemoryChunk,0x2e0efa80000
delete,MemoryChunk,0x1496d840000
delete,MemoryChunk,0x14e33a40000
delete,MemoryChunk,0x13500680000
delete,MemoryChunk,0x2b5f07c0000
delete,MemoryChunk,0x1ceb5ac0000
delete,MemoryChunk,0xe871d80000
delete,MemoryChunk,0x3f9b7ac0000
delete,MemoryChunk,0xb1d6f00000
delete,MemoryChunk,0x35a409c0000
delete,MemoryChunk,0xb5ca540000
delete,MemoryChunk,0xd8cb880000
delete,MemoryChunk,0x3e7e2dc0000
delete,MemoryChunk,0x13d1cf40000
delete,MemoryChunk,0x255c5240000
delete,MemoryChunk,0x4e2f5c0000
delete,MemoryChunk,0x1fbd5f80000
delete,MemoryChunk,0x13d64d80000
delete,MemoryChunk,0x1c0d4cc0000
delete,MemoryChunk,0x282904c0000
delete,MemoryChunk,0x37ccd00000
delete,MemoryChunk,0x272f3e80000
delete,MemoryChunk,0x25968940000
delete,MemoryChunk,0x32d12180000
delete,MemoryChunk,0x23d94780000
delete,MemoryChunk,0x7bc0500000
delete,MemoryChunk,0x2d05c6c0000
delete,MemoryChunk,0x3a23e340000
delete,MemoryChunk,0x18080ac0000
delete,MemoryChunk,0x28b643c0000
delete,MemoryChunk,0x3d763280000
delete,MemoryChunk,0x40f66c0000
delete,MemoryChunk,0x19a71400000
delete,MemoryChunk,0x2dac3980000
delete,MemoryChunk,0xd036f00000
delete,MemoryChunk,0x301ec980000
delete,MemoryChunk,0x23757940000
delete,MemoryChunk,0x1eade900000
delete,MemoryChunk,0x30edc780000
delete,MemoryChunk,0x22b0f880000
delete,MemoryChunk,0x8f5e980000
delete,MemoryChunk,0x2aced580000
delete,MemoryChunk,0x23d1b140000
delete,MemoryChunk,0x36d54d80000
delete,MemoryChunk,0x370c0880000
delete,MemoryChunk,0x35fae100000
delete,MemoryChunk,0x34da22c0000
delete,MemoryChunk,0x214ad680000
delete,MemoryChunk,0x5c92500000
delete,MemoryChunk,0x91be6c0000
delete,MemoryChunk,0x3a3d0080000
delete,MemoryChunk,0x37691080000
delete,MemoryChunk,0x3c59c940000
delete,MemoryChunk,0xb4f83c0000
delete,MemoryChunk,0x2d67c0c0000
markcompact,end,11,31250,1671212011800
tick,0x7ff6a804e129,19441725,0,0x0,0,0x7ff6a7f0ca20,0x7ff6a8402c64,0x225ca847983,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a81804bc,19457683,0,0x0,0,0x7ff6a8349b4d,0x7ff6a837e215,0x225ca8384cd,0x225ca83d6de,0x225ca843f21,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a80087e2,19473722,0,0x0,0,0x7ff6a7f0bd80,0x7ff6a83b6631,0x225ca856ef3,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4cf,19489694,0,0x0,0,0x7ff6a8153cd0,0x225ca843be3,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a802b3aa,19505742,0,0x0,0,0x7ff6a81557b0,0x225ca81196f,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,11,109375,1671212011880
scavenge,end,11,109375,1671212011881
tick,0x225ca84a628,19521699,0,0x0,0
tick,0x7ff6a8233388,19537732,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7b04895,19553698,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4d6,19569744,0,0x0,0,0x7ff6a8153cd0,0x225ca84c92a,0x225ca85523c
scavenge,begin,11,156250,1671212011938
scavenge,end,11,156250,1671212011939
tick,0x7ff6a7acc7a5,19585725,0,0x0,8
tick,0x7ff6a7d3f41c,19601749,0,0x0,0,0x7ff6a82d7030,0x225ca81674e,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7d84a88,19617722,0,0x0,0,0x7ff6a8153cd0,0x225ca830e11,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a88b49c8,19633761,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca7f7c65,19648766,0,0x0,0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,11,234375,1671212012012
scavenge,end,11,234375,1671212012014
tick,0x7ff6a7916ba1,19664775,0,0x0,5,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83c3319,19680746,0,0x0,0,0x225ca8278a7,0x225ca83b249,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7b4977a,19696743,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a802915b,19712738,0,0x0,0,0x7ff6a81557b0,0x225ca856b58,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,11,281250,1671212012079
scavenge,end,11,281250,1671212012080
tick,0x7ff6a815aec2,19728785,0,0x0,0,0x7ff6a81557b0,0x225ca8224fa,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c580,19744744,0,0x0,5
tick,0x7ff6a8359e4c,19760784,0,0x0,0,0x225ca82a7a2
tick,0x7ff6a801c4d6,19776748,0,0x0,0,0x7ff6a7f0bd80,0x7ff6a83b6631,0x225ca85c6a1,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,11,328125,1671212012147
scavenge,end,11,328125,1671212012147
tick,0x7ff6a8349a71,19792793,0,0x0,0,0x225ca8123ad,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a79e3cb1,19808761,0,0x0,8
tick,0x7ff6a8359f25,19824797,0,0x0,0,0x225ca820a78,0x225ca8217c1,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8152b03,19840785,0,0x0,0,0x7ff6a81529e0,0x225ca82d2da,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,11,406250,1671212012215
new,MemoryChunk,0x39b77d00000,262144
scavenge,end,11,406250,1671212012216
tick,0x7ff6a7f28b15,19856823,0,0x0,0,0x7ff6a7f02870,0x7ff6a841cf1f,0x225ca82351d,0x225ca821ce2,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x3e25fb00000,262144
tick,0x7ff6a7ff9e9d,19872772,0,0x0,0,0x7ff6a8153cd0,0x225ca821e8f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8049417,19888818,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb299b6d5,19904786,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,11,468750,1671212012281
new,MemoryChunk,0x20068240000,262144
new,MemoryChunk,0x1c6dadc0000,262144
new,MemoryChunk,0x4f05300000,262144
new,MemoryChunk,0x27549d00000,262144
new,MemoryChunk,0x166f7280000,262144
new,MemoryChunk,0xffbf600000,262144
new,MemoryChunk,0x70fb4c0000,262144
new,MemoryChunk,0x2ee9e440000,262144
new,MemoryChunk,0x2f59b740000,262144
new,MemoryChunk,0x3636acc0000,262144
new,MemoryChunk,0x22c6cf80000,262144
scavenge,end,11,468750,1671212012282
tick,0x7ff6a7d3f475,19920825,0,0x0,0,0x7ff6a82d7030,0x225ca81674e,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8085a45,19936794,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83884d8,19952830,0,0x0,0,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x171151c0000,262144
tick,0x7fffb2a0deb4,19968805,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
code-creation,LazyCompile,13,19980161,0x225ca862c60,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca862cx25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a800a2cc,19984844,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,11,531250,1671212012356
new,MemoryChunk,0x2623900000,262144
new,MemoryChunk,0x162df8c0000,262144
new,MemoryChunk,0x321f06c0000,262144
new,MemoryChunk,0x29680180000,262144
new,MemoryChunk,0x1a264380000,262144
new,MemoryChunk,0x2a10f200000,262144
new,MemoryChunk,0x89c6180000,262144
new,MemoryChunk,0x1fb451c0000,262144
new,MemoryChunk,0x3e2cb480000,262144
new,MemoryChunk,0x28a06740000,262144
new,MemoryChunk,0x1c4e7dc0000,262144
scavenge,end,11,531250,1671212012357
tick,0x7fffb2a0feb4,20000816,0,0x0,8
tick,0x7fffb2a0d1a4,20016856,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,20032822,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca829a44,20048850,0,0x0,0
new,MemoryChunk,0x1d1ec840000,262144
scavenge,begin,11,562500,1671212012423
new,MemoryChunk,0x2d9bb00000,262144
new,MemoryChunk,0x8ad62c0000,262144
new,MemoryChunk,0x2cb5fa00000,262144
new,MemoryChunk,0x566aac0000,262144
new,MemoryChunk,0x2a64fb80000,262144
new,MemoryChunk,0x5eaf6c0000,262144
new,MemoryChunk,0x22887840000,262144
new,MemoryChunk,0x1e24aa40000,262144
new,MemoryChunk,0x2b159a80000,262144
new,MemoryChunk,0xec88080000,262144
scavenge,end,11,562500,1671212012424
tick,0x7ff6a8048e3f,20064840,0,0x0,0,0x7ff6a8153cd0,0x225ca8210a7,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83f1879,20080873,0,0x0,0,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7f10d39,20096820,0,0x0,5
tick,0x225ca823419,20112837,0,0x0,0,0x225ca821ce2,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x2b357f80000,262144
tick,0x7fffb1f505d9,20128818,0,0x0,8
scavenge,begin,11,609375,1671212012493
new,MemoryChunk,0x3dfd1c80000,262144
new,MemoryChunk,0x292e200000,262144
new,MemoryChunk,0xf11b1c0000,262144
new,MemoryChunk,0xaca4d80000,262144
new,MemoryChunk,0x2d794440000,262144
new,MemoryChunk,0x994df40000,262144
new,MemoryChunk,0x3d2a00000,262144
new,MemoryChunk,0x38d2fc80000,262144
new,MemoryChunk,0x2dbb27c0000,262144
new,MemoryChunk,0x169ebb40000,262144
scavenge,end,11,609375,1671212012494
tick,0x7ff6a80c7430,20144883,0,0x0,5
new,MemoryChunk,0x171181c0000,262144
tick,0x7fffb2a0d1a4,20160844,0,0x0,8
new,MemoryChunk,0x2dd90bc0000,262144
tick,0x7ff6a8002a02,20176860,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c480,20192913,0,0x0,0,0x7ff6a8153cd0,0x225ca832d4b,0x225ca8104ff
scavenge,begin,11,656250,1671212012563
new,MemoryChunk,0xb2114c0000,262144
new,MemoryChunk,0xc1eb340000,262144
new,MemoryChunk,0x16bfd100000,262144
new,MemoryChunk,0x6050b00000,262144
new,MemoryChunk,0x387da340000,262144
new,MemoryChunk,0x13181800000,262144
new,MemoryChunk,0x3238ea40000,262144
new,MemoryChunk,0x3d216140000,262144
new,MemoryChunk,0x35552440000,262144
scavenge,end,11,656250,1671212012565
tick,0x7fffb2a0deb4,20208909,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x2a7a38c0000,262144
tick,0x225ca8188a5,20224870,0,0x0,0,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca84d0e8,20240906,0,0x0,0,0x225ca85523c
new,MemoryChunk,0x1812ab40000,262144
new,MemoryChunk,0x31007700000,262144
tick,0x7fffb2a0d1a4,20256856,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,11,718750,1671212012628
new,MemoryChunk,0xc421600000,262144
new,MemoryChunk,0x247dac0000,262144
new,MemoryChunk,0xd936ec0000,262144
new,MemoryChunk,0x13eb8900000,262144
new,MemoryChunk,0x22341200000,262144
new,MemoryChunk,0x26fcc6c0000,262144
new,MemoryChunk,0x3bc95840000,262144
new,MemoryChunk,0x3e902d80000,262144
new,MemoryChunk,0x37a29780000,262144
new,MemoryChunk,0xed53680000,262144
scavenge,end,11,718750,1671212012630
tick,0x7ff6a802a003,20272885,0,0x0,5,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8022217,20288870,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8154222,20304920,0,0x0,0,0x7ff6a8153cd0,0x225ca843ade,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x10ff4540000,262144
tick,0x7ff6a801c4a3,20319884,0,0x0,0,0x7ff6a81557b0,0x225ca818226,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
markcompact,begin,11,781250,1671212012687
delete,MemoryChunk,0x2b273200000
delete,MemoryChunk,0x39b77d00000
delete,MemoryChunk,0x4f05300000
delete,MemoryChunk,0x1c6dadc0000
delete,MemoryChunk,0x166f7280000
delete,MemoryChunk,0x70fb4c0000
delete,MemoryChunk,0x1083d4c0000
delete,MemoryChunk,0x20068240000
delete,MemoryChunk,0x27549d00000
delete,MemoryChunk,0xffbf600000
delete,MemoryChunk,0x2ee9e440000
delete,MemoryChunk,0x2f59b740000
delete,MemoryChunk,0x3636acc0000
delete,MemoryChunk,0x22c6cf80000
delete,MemoryChunk,0x2623900000
delete,MemoryChunk,0x29680180000
delete,MemoryChunk,0x321f06c0000
delete,MemoryChunk,0x1a264380000
delete,MemoryChunk,0x2a10f200000
delete,MemoryChunk,0x1fb451c0000
delete,MemoryChunk,0x3e2cb480000
delete,MemoryChunk,0x1c4e7dc0000
delete,MemoryChunk,0x162df8c0000
delete,MemoryChunk,0x28a06740000
delete,MemoryChunk,0x2d9bb00000
delete,MemoryChunk,0x2cb5fa00000
delete,MemoryChunk,0x2a64fb80000
delete,MemoryChunk,0x22887840000
delete,MemoryChunk,0x2b159a80000
delete,MemoryChunk,0x89c6180000
delete,MemoryChunk,0x8ad62c0000
delete,MemoryChunk,0x566aac0000
delete,MemoryChunk,0x5eaf6c0000
delete,MemoryChunk,0x1e24aa40000
delete,MemoryChunk,0xec88080000
delete,MemoryChunk,0x2b357f80000
delete,MemoryChunk,0x3dfd1c80000
delete,MemoryChunk,0xf11b1c0000
delete,MemoryChunk,0x292e200000
delete,MemoryChunk,0xaca4d80000
delete,MemoryChunk,0x2d794440000
delete,MemoryChunk,0x994df40000
delete,MemoryChunk,0x3d2a00000
delete,MemoryChunk,0x38d2fc80000
delete,MemoryChunk,0x2dbb27c0000
delete,MemoryChunk,0x169ebb40000
delete,MemoryChunk,0x2dd90bc0000
delete,MemoryChunk,0xb2114c0000
delete,MemoryChunk,0xc1eb340000
delete,MemoryChunk,0x16bfd100000
delete,MemoryChunk,0x6050b00000
delete,MemoryChunk,0x387da340000
delete,MemoryChunk,0x13181800000
delete,MemoryChunk,0x3238ea40000
delete,MemoryChunk,0x3d216140000
delete,MemoryChunk,0x35552440000
delete,MemoryChunk,0x2a7a38c0000
delete,MemoryChunk,0x31007700000
delete,MemoryChunk,0xed53680000
delete,MemoryChunk,0x2f69fec0000
delete,MemoryChunk,0x3e25fb00000
delete,MemoryChunk,0x171151c0000
delete,MemoryChunk,0x1d1ec840000
delete,MemoryChunk,0x171181c0000
new,MemoryChunk,0x2d6e0540000,262144
markcompact,end,11,781250,1671212012689
tick,0x7ff6a801c445,20335946,0,0x0,0,0x7ff6a8153cd0,0x225ca843be3,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4d6,20351880,0,0x0,0,0x7ff6a8153cd0,0x225ca8439f1,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8022c18,20367926,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a80298c0,20383897,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a81bcc1d,20398908,0,0x0,0,0x7ff6a8153cd0,0x225ca84ee51,0x225ca8104ff
scavenge,begin,11,859375,1671212012770
scavenge,end,11,859375,1671212012771
tick,0x7ff6a802b125,20414903,0,0x0,0,0x7ff6a81557b0,0x225ca843e28,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,20430987,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca83840d,20446922,0,0x0,0,0x225ca83d6de,0x225ca843f21,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8233288,20462949,0,0x0,5
scavenge,begin,11,906250,1671212012827
scavenge,end,11,906250,1671212012829
tick,0x7ff6a843c137,20478924,0,0x0,0,0x225ca83cc36,0x225ca8213b5,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca85ffc7,20494960,0,0x0,0
tick,0x7ff6a8020d24,20510923,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7c8c3f6,20526942,0,0x0,0,0x7ff6a81557b0,0x225ca85e682,0x225ca81049c
scavenge,begin,11,953125,1671212012900
scavenge,end,11,968750,1671212012901
tick,0x7ff6a83c32fa,20542918,0,0x0,0,0x225ca83b26c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8048d50,20558960,0,0x0,0,0x7ff6a81529e0,0x225ca854233,0x225ca8226d0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca810b48,20574932,0,0x0,0,0x225ca860fee,0x225ca860628
tick,0x7ff6a8028dfd,20590990,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,12,15625,1671212012966
scavenge,end,12,15625,1671212012967
tick,0x7ff6a815611c,20606942,0,0x0,0,0x7ff6a81557b0,0x225ca8311d2,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a83add45,20623009,0,0x0,0,0x7ff6a83b60c4,0x225ca8164aa,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a802ac83,20639004,0,0x0,0,0x7ff6a81557b0,0x225ca8436ca,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
code-creation,Function,11,20643043,0x225ca862c60,4728,listOnTimeout node:internal/timers:505:25,0x334252fef88,^
code-source-info,0x225ca862c60,63,15267,17791,,,
code-creation,Function,11,20643095,0x225ca863f40,572,cache node:internal/http:26:15,0x2bdba13fb40,^
code-source-info,0x225ca863f40,172,454,601,,,
code-creation,Function,11,20643113,0x225ca8641e0,184,resetCache node:internal/http:32:20,0x2bdba13fb90,^
code-source-info,0x225ca8641e0,172,624,656,,,
code-creation,Function,11,20643131,0x225ca864300,272,shift node:internal/priority_queue:107:8,0x2ee4c9fd620,^
code-source-info,0x225ca864300,64,2706,2865,,,
code-creation,Function,11,20643154,0x225ca864480,884,removeAt node:internal/priority_queue:93:11,0x2ee4c9fd5b8,^
code-source-info,0x225ca864480,64,2358,2695,,,
tick,0x7ff6a7c956c2,20654981,0,0x0,0,0x7ff6a81557b0,0x225ca856b58,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a802171e,20670955,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,12,78125,1671212013033
scavenge,end,12,78125,1671212013034
tick,0x7ff6a7f10e01,20687019,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb297a4eb,20703004,0,0x0,5,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2995715,20719005,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81bcb60,20734974,0,0x0,0,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,12,125000,1671212013102
scavenge,end,12,125000,1671212013103
new,MemoryChunk,0x320f9fc0000,262144
tick,0x7ff6a8390d8e,20751004,0,0x0,0,0x225ca82d2da,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca860551,20766963,0,0x0,0
tick,0x7fffb2a0d1a4,20783019,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,20798009,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,12,203125,1671212013167
new,MemoryChunk,0x232079c0000,262144
new,MemoryChunk,0x98501c0000,262144
new,MemoryChunk,0x2ccbc480000,262144
scavenge,end,12,203125,1671212013168
tick,0x7ff6a8411d8d,20814047,0,0x0,0,0x225ca7f811d,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a79eaaf2,20829992,1,0x7ff6a79f5d10,6,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x101a5f80000,262144
tick,0x7ff6a79edc20,20846033,0,0x0,8
tick,0x7ff6a8150f65,20862017,0,0x0,0,0x7ff6a8153cd0,0x225ca856745,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x30840c00000,262144
code-creation,LazyCompile,13,20866358,0x225ca864860,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225cax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a7d8dcef,20878042,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,12,265625,1671212013242
new,MemoryChunk,0x36b00a00000,262144
new,MemoryChunk,0x99922c0000,262144
new,MemoryChunk,0x359c17c0000,262144
new,MemoryChunk,0x3f924980000,262144
new,MemoryChunk,0x2202b180000,262144
new,MemoryChunk,0xc810940000,262144
new,MemoryChunk,0x728c840000,262144
new,MemoryChunk,0x2ba03540000,262144
new,MemoryChunk,0x865d0c0000,262144
new,MemoryChunk,0x1212bc40000,262144
new,MemoryChunk,0x1c6afa00000,262144
scavenge,end,12,265625,1671212013243
tick,0x7ff6a7880717,20894010,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb299b73c,20910042,0,0x0,0,0x7ff6a82d7030,0x225ca81674e,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7a9fff4,20926005,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0xe8f8840000,262144
tick,0x7fffb2a0d1a4,20942043,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,12,343750,1671212013309
new,MemoryChunk,0x19de8e80000,262144
new,MemoryChunk,0x104a0c40000,262144
new,MemoryChunk,0x102b14c0000,262144
new,MemoryChunk,0x4b71440000,262144
new,MemoryChunk,0x230be640000,262144
new,MemoryChunk,0x14495540000,262144
new,MemoryChunk,0x2bf1ddc0000,262144
new,MemoryChunk,0x3c53c340000,262144
new,MemoryChunk,0xc748380000,262144
scavenge,end,12,343750,1671212013310
tick,0x7ff6a8088b07,20958031,0,0x0,0,0x7ff6a8153cd0,0x225ca8334f6,0x225ca8104ff
tick,0x7ff6a8314382,20974079,0,0x0,6
tick,0x7ff6a7d60440,20990023,0,0x0,0,0x7ff6a83aa790,0x225ca81686e,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x33a43c40000,262144
tick,0x7ff6a800d921,21006067,0,0x0,0,0x7ff6a7f18ee0,0x225ca817e53,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,12,406250,1671212013379
new,MemoryChunk,0x2ef0a540000,262144
new,MemoryChunk,0x36ad5900000,262144
new,MemoryChunk,0x16b18340000,262144
new,MemoryChunk,0xe9f7440000,262144
new,MemoryChunk,0x180c9b80000,262144
new,MemoryChunk,0x2d5e0a80000,262144
new,MemoryChunk,0x3b13f4c0000,262144
new,MemoryChunk,0x149db340000,262144
new,MemoryChunk,0x17f199c0000,262144
new,MemoryChunk,0x1b22b980000,262144
scavenge,end,12,406250,1671212013380
tick,0x7fffb2a0deb4,21022063,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x3c6d3d40000,262144
tick,0x7ff6a8028261,21038077,0,0x0,0,0x7ff6a8153cd0,0x225ca83d2f9,0x225ca843f21,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a88b2da0,21054049,0,0x0,0,0x7ff6a8153cd0,0x225ca854bda,0x7ff6a83c2541,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x12ba0340000,262144
tick,0x7ff6a8151216,21070076,0,0x0,0,0x7ff6a8153cd0,0x225ca83a9ff,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a815c23d,21086061,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,12,484375,1671212013449
new,MemoryChunk,0xb60000000,262144
new,MemoryChunk,0x29d5a840000,262144
new,MemoryChunk,0x13abe1c0000,262144
new,MemoryChunk,0x2d8e62c0000,262144
new,MemoryChunk,0x29ef900000,262144
new,MemoryChunk,0x2aa6d400000,262144
new,MemoryChunk,0xe3d0680000,262144
new,MemoryChunk,0x65f70c0000,262144
new,MemoryChunk,0x15b4ee40000,262144
scavenge,end,12,484375,1671212013450
tick,0x7ff6a81bcd2f,21102084,0,0x0,0,0x7ff6a7f18ee0,0x225ca817e53,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x3022e140000,262144
tick,0x7ff6a80df3fe,21118053,0,0x0,5
new,MemoryChunk,0x1928300000,262144
new,MemoryChunk,0x1d9ef380000,262144
tick,0x7ff6a8440f05,21134091,0,0x0,0,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8205325,21150082,0,0x0,6
scavenge,begin,12,515625,1671212013514
new,MemoryChunk,0x2224dd80000,262144
new,MemoryChunk,0x3794cf80000,262144
new,MemoryChunk,0x1c89c900000,262144
new,MemoryChunk,0x3a75e640000,262144
new,MemoryChunk,0x18ab9840000,262144
new,MemoryChunk,0x2ad86c0000,262144
new,MemoryChunk,0xad0380000,262144
new,MemoryChunk,0xf7eb540000,262144
new,MemoryChunk,0x22ee8b40000,262144
new,MemoryChunk,0x2cac9980000,262144
scavenge,end,12,515625,1671212013516
tick,0x7ff6a814cec8,21166095,0,0x0,0,0x7ff6a8153cd0,0x225ca8313a9,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a8184bbc,21182066,0,0x0,0,0x7ff6a8349ec1,0x225ca812447,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a801c4d6,21198117,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x3198ab40000,262144
markcompact,begin,12,562500,1671212013573
delete,MemoryChunk,0xb7bea80000
delete,MemoryChunk,0xd936ec0000
delete,MemoryChunk,0x3e902d80000
delete,MemoryChunk,0x2d6e0540000
delete,MemoryChunk,0x3bc95840000
delete,MemoryChunk,0x13eb8900000
delete,MemoryChunk,0x247dac0000
delete,MemoryChunk,0x37a29780000
delete,MemoryChunk,0x26fcc6c0000
delete,MemoryChunk,0x10ff4540000
delete,MemoryChunk,0x22341200000
delete,MemoryChunk,0x232079c0000
delete,MemoryChunk,0x98501c0000
delete,MemoryChunk,0x2ccbc480000
delete,MemoryChunk,0x30840c00000
delete,MemoryChunk,0x359c17c0000
delete,MemoryChunk,0x2202b180000
delete,MemoryChunk,0xc810940000
delete,MemoryChunk,0x2ba03540000
delete,MemoryChunk,0x865d0c0000
delete,MemoryChunk,0x1c6afa00000
delete,MemoryChunk,0x3f924980000
delete,MemoryChunk,0x99922c0000
delete,MemoryChunk,0x36b00a00000
delete,MemoryChunk,0x104a0c40000
delete,MemoryChunk,0x1212bc40000
delete,MemoryChunk,0x4b71440000
delete,MemoryChunk,0x14495540000
delete,MemoryChunk,0x728c840000
delete,MemoryChunk,0x3c53c340000
delete,MemoryChunk,0x19de8e80000
delete,MemoryChunk,0x102b14c0000
delete,MemoryChunk,0x230be640000
delete,MemoryChunk,0x2bf1ddc0000
delete,MemoryChunk,0xc748380000
delete,MemoryChunk,0x33a43c40000
delete,MemoryChunk,0x36ad5900000
delete,MemoryChunk,0xe9f7440000
delete,MemoryChunk,0x2ef0a540000
delete,MemoryChunk,0x16b18340000
delete,MemoryChunk,0x180c9b80000
delete,MemoryChunk,0x2d5e0a80000
delete,MemoryChunk,0x3b13f4c0000
delete,MemoryChunk,0x149db340000
delete,MemoryChunk,0x17f199c0000
delete,MemoryChunk,0x1b22b980000
delete,MemoryChunk,0x12ba0340000
delete,MemoryChunk,0xb60000000
delete,MemoryChunk,0x29d5a840000
delete,MemoryChunk,0x13abe1c0000
delete,MemoryChunk,0x2d8e62c0000
delete,MemoryChunk,0x29ef900000
delete,MemoryChunk,0x2aa6d400000
delete,MemoryChunk,0xe3d0680000
delete,MemoryChunk,0x65f70c0000
delete,MemoryChunk,0x15b4ee40000
delete,MemoryChunk,0x3022e140000
delete,MemoryChunk,0x1d9ef380000
delete,MemoryChunk,0x2cac9980000
delete,MemoryChunk,0x1812ab40000
delete,MemoryChunk,0x320f9fc0000
delete,MemoryChunk,0x101a5f80000
delete,MemoryChunk,0xe8f8840000
delete,MemoryChunk,0x3c6d3d40000
markcompact,end,12,562500,1671212013575
tick,0x7fffb29c94b2,21214138,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7b124df,21230124,0,0x0,0,0x9ce61ceb30,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca85fcd1,21246089,0,0x0,0
tick,0x7ff6a83c319c,21262113,0,0x0,0,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7a1f4f2,21277143,0,0x0,0,0x9ce61ceb18,0x225ca85f37f,0x225ca8216a3,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca8143fd,21293129,0,0x0,0,0x225ca83b26c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,12,625000,1671212013656
scavenge,end,12,625000,1671212013657
tick,0x7fffb2a0d1a4,21309109,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca813456,21325149,0,0x0,0,0x225ca81bb6a,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a801c4b1,21341124,0,0x0,0,0x7ff6a8153cd0,0x225ca833698,0x225ca8104ff
scavenge,begin,12,671875,1671212013712
scavenge,end,12,687500,1671212013713
tick,0x7ff6a81bcb92,21357126,0,0x0,0,0x7ff6a8153cd0,0x225ca843eeb,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a838850e,21373118,0,0x0,0,0x225ca829f4d
tick,0x7ff6a7c91e62,21389172,0,0x0,0,0x7ff6a8153cd0,0x225ca8210eb,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a815611c,21405110,0,0x0,0,0x7ff6a8153cd0,0x225ca843786,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801e302,21421183,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,12,734375,1671212013785
scavenge,end,12,734375,1671212013786
tick,0x7fffb2a0d1a4,21437161,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a791a8e1,21453172,0,0x0,8
tick,0x7ff6a801c543,21469140,0,0x0,0,0x7ff6a8153cd0,0x225ca8434ca,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7c93f15,21485184,0,0x0,0,0x7ff6a8153cd0,0x225ca856b89,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,12,765625,1671212013852
scavenge,end,12,765625,1671212013853
tick,0x7ff6a8426fcf,21501153,0,0x0,0,0x225ca7f7edb,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca83840d,21517172,0,0x0,0,0x225ca83d6de,0x225ca843f21,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8351de5,21533168,0,0x0,0
tick,0x7fffb2a0d1a4,21549202,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,12,828125,1671212013919
scavenge,end,12,828125,1671212013920
tick,0x7fffb2a0d1a4,21565170,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,21581225,0,0x0,8
tick,0x7ff6a7f0568f,21597188,0,0x0,0,0x7ff6a7f055e0,0x7ff6a83b671b,0x225ca856ef3,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a82eee8d,21613222,0,0x0,0,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,12,890625,1671212013988
scavenge,end,12,890625,1671212013989
tick,0x7fffb299f235,21629182,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x37208540000,262144
tick,0x7ff6a801c4a3,21645217,0,0x0,0,0x7ff6a8153cd0,0x225ca8570fe,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4d6,21661212,0,0x0,0,0x7ff6a8153cd0,0x225ca8551f7
tick,0x7ff6a7fc2165,21677233,0,0x0,0,0x7ff6a8153cd0,0x225ca832f4b,0x225ca8104ff
scavenge,begin,12,953125,1671212014054
new,MemoryChunk,0x18a0e740000,262144
new,MemoryChunk,0x563b740000,262144
tick,0x7ff6a8016837,21692214,0,0x0,1
new,MemoryChunk,0x5632440000,262144
new,MemoryChunk,0x24676700000,262144
scavenge,end,12,953125,1671212014055
tick,0x7ff6a8391867,21707218,0,0x0,0,0x225ca832cfd,0x225ca8104ff
tick,0x7ff6a815599f,21722189,0,0x0,0,0x7ff6a81557b0,0x225ca81196f,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x28639400000,262144
tick,0x7fffb2a0feb4,21738223,0,0x0,8
new,MemoryChunk,0xaaa19c0000,262144
code-creation,LazyCompile,13,21752106,0x225ca864860,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225cax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a814db50,21754200,0,0x0,0,0x7ff6a8153cd0,0x225ca821f73,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,13,31250,1671212014127
new,MemoryChunk,0x1ccb8500000,262144
new,MemoryChunk,0x10a04ac0000,262144
new,MemoryChunk,0x2d594c40000,262144
new,MemoryChunk,0x10268ec0000,262144
new,MemoryChunk,0x38cf6500000,262144
new,MemoryChunk,0x24e329c0000,262144
new,MemoryChunk,0x35c19840000,262144
new,MemoryChunk,0xa674940000,262144
new,MemoryChunk,0x27854e80000,262144
new,MemoryChunk,0x252345c0000,262144
new,MemoryChunk,0x3fa0cc40000,262144
scavenge,end,13,31250,1671212014129
tick,0x225ca814329,21769231,0,0x0,0,0x225ca8278a7,0x225ca83b249,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7fc215e,21785226,0,0x0,0,0x7ff6a8153cd0,0x225ca8439f1,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83884b1,21801239,0,0x0,0,0x225ca8104ff
tick,0x7ff6a7f10c0f,21817217,0,0x0,0,0x7ff6a81557b0,0x225ca830e93,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x31938c80000,262144
scavenge,begin,13,93750,1671212014194
new,MemoryChunk,0x3440c040000,262144
new,MemoryChunk,0xf2a0640000,262144
new,MemoryChunk,0x30ed0d00000,262144
new,MemoryChunk,0x33d2140000,262144
new,MemoryChunk,0x222fcd80000,262144
new,MemoryChunk,0xe13c40000,262144
new,MemoryChunk,0x2c4cccc0000,262144
new,MemoryChunk,0x65587c0000,262144
new,MemoryChunk,0x172a0600000,262144
tick,0x7fffb2a10ab4,21833257,0,0x0,1
scavenge,end,13,93750,1671212014196
tick,0x7fffb299b6c3,21849225,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7c93ea0,21865280,0,0x0,0,0x7ff6a8153cd0,0x225ca830f4c,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7fffb2a0d1a4,21881251,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x18130040000,262144
tick,0x7ff6a80884b9,21897266,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,13,156250,1671212014265
new,MemoryChunk,0x180c3500000,262144
new,MemoryChunk,0x3151640000,262144
new,MemoryChunk,0x122b10c0000,262144
new,MemoryChunk,0x1401dc0000,262144
new,MemoryChunk,0x10f98340000,262144
new,MemoryChunk,0xf9ca340000,262144
new,MemoryChunk,0x3f231f00000,262144
new,MemoryChunk,0x10050440000,262144
new,MemoryChunk,0x1a028d40000,262144
new,MemoryChunk,0x3076d900000,262144
scavenge,end,13,156250,1671212014267
tick,0x7ff6a821a131,21913268,0,0x0,5
new,MemoryChunk,0x3b5fdc80000,262144
tick,0x7ff6a7aa13e3,21929270,0,0x0,6
tick,0x225ca7e9af8,21945286,0,0x0,0,0x7ff6a7f02870,0x225ca820582,0x225ca8213f3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x25cffc40000,262144
tick,0x7ff6a8087642,21961277,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,13,218750,1671212014335
new,MemoryChunk,0xda22a40000,262144
new,MemoryChunk,0x2ceb6640000,262144
new,MemoryChunk,0x141579c0000,262144
new,MemoryChunk,0xb370500000,262144
new,MemoryChunk,0x20192d80000,262144
new,MemoryChunk,0x10ca3980000,262144
new,MemoryChunk,0xc9cf640000,262144
new,MemoryChunk,0x6fc1d40000,262144
new,MemoryChunk,0x39d11700000,262144
scavenge,end,13,218750,1671212014336
tick,0x7ff6a8048935,21977274,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x373fc8c0000,262144
tick,0x225ca7e96e7,21992306,0,0x0,0,0x7ff6a841d2bf,0x225ca83ce28,0x225ca8213b5,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7fd4fe3,22008345,0,0x0,0,0x7ff6a7ef70b0,0x225ca8149ca,0x225ca83b15e,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0xe4d60c0000,262144
new,MemoryChunk,0x8bc6c00000,262144
tick,0x7ff6a77e214d,22024286,0,0x0,0,0x9ce61ceb30,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,13,296875,1671212014402
new,MemoryChunk,0x1edb2780000,262144
new,MemoryChunk,0x26179780000,262144
new,MemoryChunk,0x2a636880000,262144
new,MemoryChunk,0x30724a40000,262144
new,MemoryChunk,0x74bac40000,262144
new,MemoryChunk,0x127c1d80000,262144
new,MemoryChunk,0x2a75e100000,262144
new,MemoryChunk,0x10a14880000,262144
tick,0x7fffb2a10ab4,22040308,0,0x0,1
new,MemoryChunk,0x2a865200000,262144
new,MemoryChunk,0x1354af80000,262144
scavenge,end,13,296875,1671212014403
tick,0x7ff6a801c52e,22055290,0,0x0,5
tick,0x7ff6a816078e,22071307,0,0x0,1
tick,0x7ff6a81588ac,22087302,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x5a79040000,262144
markcompact,begin,13,343750,1671212014460
delete,MemoryChunk,0xf7eb540000
delete,MemoryChunk,0x1c89c900000
delete,MemoryChunk,0x2224dd80000
delete,MemoryChunk,0x3a75e640000
delete,MemoryChunk,0x2ad86c0000
delete,MemoryChunk,0x3794cf80000
delete,MemoryChunk,0x22ee8b40000
delete,MemoryChunk,0xad0380000
delete,MemoryChunk,0x3198ab40000
delete,MemoryChunk,0x18a0e740000
delete,MemoryChunk,0x5632440000
delete,MemoryChunk,0x24676700000
delete,MemoryChunk,0xaaa19c0000
delete,MemoryChunk,0x1ccb8500000
delete,MemoryChunk,0x10268ec0000
delete,MemoryChunk,0x38cf6500000
delete,MemoryChunk,0x24e329c0000
delete,MemoryChunk,0xa674940000
delete,MemoryChunk,0x27854e80000
delete,MemoryChunk,0x3fa0cc40000
delete,MemoryChunk,0x2d594c40000
delete,MemoryChunk,0xf2a0640000
delete,MemoryChunk,0x33d2140000
delete,MemoryChunk,0xe13c40000
delete,MemoryChunk,0x65587c0000
delete,MemoryChunk,0x3440c040000
delete,MemoryChunk,0x252345c0000
delete,MemoryChunk,0x30ed0d00000
delete,MemoryChunk,0x222fcd80000
delete,MemoryChunk,0x35c19840000
delete,MemoryChunk,0x2c4cccc0000
delete,MemoryChunk,0x172a0600000
delete,MemoryChunk,0x18130040000
delete,MemoryChunk,0x180c3500000
delete,MemoryChunk,0x122b10c0000
delete,MemoryChunk,0x10f98340000
delete,MemoryChunk,0xf9ca340000
delete,MemoryChunk,0x3f231f00000
delete,MemoryChunk,0x10050440000
delete,MemoryChunk,0x1a028d40000
delete,MemoryChunk,0x3076d900000
delete,MemoryChunk,0x3151640000
delete,MemoryChunk,0x1401dc0000
delete,MemoryChunk,0x25cffc40000
delete,MemoryChunk,0xda22a40000
delete,MemoryChunk,0x2ceb6640000
delete,MemoryChunk,0x141579c0000
delete,MemoryChunk,0xb370500000
delete,MemoryChunk,0x20192d80000
delete,MemoryChunk,0x10ca3980000
delete,MemoryChunk,0xc9cf640000
delete,MemoryChunk,0x6fc1d40000
delete,MemoryChunk,0x39d11700000
delete,MemoryChunk,0x373fc8c0000
delete,MemoryChunk,0x8bc6c00000
delete,MemoryChunk,0x1354af80000
delete,MemoryChunk,0x1928300000
delete,MemoryChunk,0x37208540000
delete,MemoryChunk,0x28639400000
delete,MemoryChunk,0x31938c80000
delete,MemoryChunk,0x3b5fdc80000
new,MemoryChunk,0x241339c0000,262144
markcompact,end,13,359375,1671212014462
tick,0x7ff6a801c442,22103286,0,0x0,0,0x7ff6a81557b0,0x225ca85518c
tick,0x7ff6a83231a7,22119328,0,0x0,0,0x9ce61cee70,0x225ca8101ea
tick,0x7fffb297a16f,22135314,1,0x7ff6a79f5d10,6,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7a9da3d,22151304,0,0x0,5,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a804898b,22167288,0,0x0,0,0x7ff6a8153cd0,0x225ca8573a2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
code-creation,LazyCompile,13,22174591,0x225ca864860,268,checkError node:internal/streams/destroy:16:20,0x334252cf0a8,*
code-source-info,0x225ca864860,47,269,573,C0O269C48O286C126O572C157O394C162O269C216O286,,
scavenge,begin,13,421875,1671212014544
scavenge,end,13,421875,1671212014545
tick,0x225ca83c42b,22183320,0,0x0,0,0x225ca828e35,0x225ca82af3e
tick,0x7ff6a8171eda,22199344,0,0x0,1
tick,0x225ca848bc8,22215329,0,0x0,0,0x225ca8104ff
tick,0x7ff6a8040ae5,22231303,0,0x0,5
scavenge,begin,13,468750,1671212014602
scavenge,end,13,468750,1671212014603
tick,0x225ca758ad1,22247348,0,0x0,0,0x225ca860fee,0x225ca860628
tick,0x225ca81bb7c,22263353,0,0x0,0,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca83ca28,22279356,0,0x0,0,0x225ca8213b5,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81db44a,22295352,0,0x0,0,0x7ff6a7f02870,0x7ff6a841cf1f,0x225ca857204,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,22311372,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,13,546875,1671212014675
scavenge,end,13,546875,1671212014676
tick,0x7ff6a8028ea1,22327322,0,0x0,0,0x7ff6a81557b0,0x225ca856b58,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a856df35,22342353,0,0x0,8
tick,0x225ca758a3c,22358366,0,0x0,0,0x225ca860fee,0x225ca860628
tick,0x7ff6a80d6273,22374372,0,0x0,5,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,13,609375,1671212014741
scavenge,end,13,609375,1671212014742
tick,0x7ff6a7ca62d2,22390340,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a815611c,22406336,0,0x0,0,0x7ff6a8153cd0,0x225ca831424,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a8020dc5,22422373,0,0x0,0,0x7ff6a7f0ca20,0x7ff6a8402c64,0x225ca8479b4,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a83290ab,22438388,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,13,687500,1671212014808
scavenge,end,13,687500,1671212014809
tick,0x7ff6a81bd238,22454358,0,0x0,0,0x7ff6a8153cd0,0x225ca83d6ae,0x225ca843f21,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8232f22,22470399,0,0x0,5
tick,0x7ff6a838f10c,22486364,0,0x0,0,0x225ca843801,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,22502390,0,0x0,8
scavenge,begin,13,750000,1671212014878
scavenge,end,13,750000,1671212014879
tick,0x7ff6a7fc21b1,22517363,0,0x0,0,0x7ff6a8153cd0,0x225ca85c511,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x35fd1400000,262144
tick,0x7ff6a814ce75,22533427,0,0x0,0,0x7ff6a8153cd0,0x225ca8313a9,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a83c3205,22549425,0,0x0,0,0x225ca83b26c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a815aec2,22565421,0,0x0,0,0x7ff6a81557b0,0x225ca8436ca,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,13,781250,1671212014942
new,MemoryChunk,0x125dc780000,262144
scavenge,end,13,781250,1671212014943
tick,0x0,22581414,0,0x0,5
tick,0x7ff6a81df1be,22596394,0,0x0,5
tick,0x7fffb2a0d1a4,22612429,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x2374f380000,262144
tick,0x7ff6a8029e74,22628421,0,0x0,0,0x7ff6a8153cd0,0x225ca83a9bd,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
code-creation,LazyCompile,13,22641046,0x225ca864a00,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca864ax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a7d78c35,22644406,0,0x0,5
scavenge,begin,13,859375,1671212015016
new,MemoryChunk,0xd010740000,262144
new,MemoryChunk,0x1ac1a840000,262144
new,MemoryChunk,0x1751e740000,262144
new,MemoryChunk,0x3892eec0000,262144
new,MemoryChunk,0x311f8f40000,262144
new,MemoryChunk,0x173ad180000,262144
new,MemoryChunk,0x26e74940000,262144
new,MemoryChunk,0xcfea080000,262144
new,MemoryChunk,0x154d40000,262144
new,MemoryChunk,0xf294d40000,262144
new,MemoryChunk,0x15f65140000,262144
scavenge,end,13,859375,1671212015018
tick,0x7ff6a8358f8e,22660433,0,0x0,0,0x225ca84787c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,22676426,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a82ef407,22692443,0,0x0,0,0x7ff6a82ef2d0,0x225ca835c50,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,22708406,0,0x0,8
new,MemoryChunk,0x361f16c0000,262144
scavenge,begin,13,921875,1671212015083
new,MemoryChunk,0x14251e40000,262144
new,MemoryChunk,0x2d3b1c80000,262144
new,MemoryChunk,0x1666f7c0000,262144
new,MemoryChunk,0x17a19e00000,262144
new,MemoryChunk,0x1531b7c0000,262144
new,MemoryChunk,0x8ce6480000,262144
new,MemoryChunk,0x1964d440000,262144
new,MemoryChunk,0x3dec9280000,262144
new,MemoryChunk,0x32cafe80000,262144
new,MemoryChunk,0x30c5cc40000,262144
scavenge,end,13,921875,1671212015085
tick,0x7ff6a8232f42,22724462,0,0x0,5
tick,0x7ff6a7f10db9,22740420,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8342f0f,22756473,0,0x0,0,0x7ff6a82ef2d0,0x225ca835c50,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8155a50,22772429,0,0x0,0,0x7ff6a81557b0,0x225ca818226,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a170ea,22788461,0,0x0,0,0x9ce61ceb38,0x225ca850510,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,13,984375,1671212015154
new,MemoryChunk,0x1c80a1c0000,262144
new,MemoryChunk,0x12a07e00000,262144
new,MemoryChunk,0xcd47300000,262144
new,MemoryChunk,0x2eea13c0000,262144
new,MemoryChunk,0x1533af40000,262144
new,MemoryChunk,0x13cbb540000,262144
new,MemoryChunk,0x33342a40000,262144
new,MemoryChunk,0x1ff28600000,262144
new,MemoryChunk,0xc24e9c0000,262144
new,MemoryChunk,0x2b209f80000,262144
scavenge,end,13,984375,1671212015155
tick,0x225ca854c4e,22804434,0,0x0,0,0x7ff6a83c2541,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x3edbcbc0000,262144
tick,0x7ff6a88b4903,22820472,0,0x0,6
tick,0x7ff6a81efde9,22836478,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x58c7780000,262144
tick,0x7ff6a802172a,22852474,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,46875,1671212015224
new,MemoryChunk,0x3b11ad80000,262144
new,MemoryChunk,0x18412640000,262144
new,MemoryChunk,0x31ef08c0000,262144
new,MemoryChunk,0x3b204d40000,262144
new,MemoryChunk,0x1cb8d140000,262144
new,MemoryChunk,0x2434a480000,262144
new,MemoryChunk,0x20f72200000,262144
new,MemoryChunk,0x12058040000,262144
new,MemoryChunk,0x325d0980000,262144
scavenge,end,14,46875,1671212015225
tick,0x7ff6a7905713,22868508,0,0x0,0,0x9ce61ceb38,0x225ca850510,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x224c3380000,262144
tick,0x7ff6a801c499,22883494,0,0x0,0,0x7ff6a8153cd0,0x225ca832e13,0x225ca8104ff
tick,0x7ff6a8048d32,22899462,0,0x0,0,0x7ff6a8153cd0,0x225ca84a7df,0x225ca81049c
new,MemoryChunk,0xe36cd40000,262144
new,MemoryChunk,0x82eb800000,262144
tick,0x7ff6a7fd0fa9,22915508,0,0x0,0,0x7ff6a7f02870,0x7ff6a841cf1f,0x225ca85c9b2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,109375,1671212015290
new,MemoryChunk,0x3c0f1380000,262144
new,MemoryChunk,0x118797c0000,262144
new,MemoryChunk,0x12b48ec0000,262144
new,MemoryChunk,0x389389c0000,262144
new,MemoryChunk,0x31a9edc0000,262144
new,MemoryChunk,0x3d284e80000,262144
new,MemoryChunk,0x18282140000,262144
new,MemoryChunk,0x3953fc40000,262144
new,MemoryChunk,0x30831680000,262144
new,MemoryChunk,0x1c1d0200000,262144
scavenge,end,14,125000,1671212015291
tick,0x7ff6a815aec2,22930471,0,0x0,0,0x7ff6a8153cd0,0x225ca83a9bd,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7fd6089,22946516,0,0x0,0,0x7ff6a838e5de,0x225ca8489c3,0x225ca821124,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a818fe2c,22961501,0,0x0,1
tick,0x7ff6a8202f93,22977506,0,0x0,6
new,MemoryChunk,0x2cae3f00000,262144
markcompact,begin,14,171875,1671212015348
delete,MemoryChunk,0x241339c0000
delete,MemoryChunk,0x563b740000
delete,MemoryChunk,0x10a14880000
delete,MemoryChunk,0xc421600000
delete,MemoryChunk,0x10a04ac0000
delete,MemoryChunk,0x1edb2780000
delete,MemoryChunk,0x2a75e100000
delete,MemoryChunk,0x2a636880000
delete,MemoryChunk,0x2a865200000
delete,MemoryChunk,0x127c1d80000
delete,MemoryChunk,0x26179780000
delete,MemoryChunk,0x5a79040000
delete,MemoryChunk,0x74bac40000
delete,MemoryChunk,0x125dc780000
delete,MemoryChunk,0x1ac1a840000
delete,MemoryChunk,0x3892eec0000
delete,MemoryChunk,0x311f8f40000
delete,MemoryChunk,0x173ad180000
delete,MemoryChunk,0xcfea080000
delete,MemoryChunk,0x154d40000
delete,MemoryChunk,0x15f65140000
delete,MemoryChunk,0x1751e740000
delete,MemoryChunk,0xd010740000
delete,MemoryChunk,0x14251e40000
delete,MemoryChunk,0x1666f7c0000
delete,MemoryChunk,0x1531b7c0000
delete,MemoryChunk,0x1964d440000
delete,MemoryChunk,0x32cafe80000
delete,MemoryChunk,0x2d3b1c80000
delete,MemoryChunk,0xf294d40000
delete,MemoryChunk,0x17a19e00000
delete,MemoryChunk,0x8ce6480000
delete,MemoryChunk,0x26e74940000
delete,MemoryChunk,0x3dec9280000
delete,MemoryChunk,0x30c5cc40000
delete,MemoryChunk,0x12a07e00000
delete,MemoryChunk,0x2eea13c0000
delete,MemoryChunk,0x1c80a1c0000
delete,MemoryChunk,0xcd47300000
delete,MemoryChunk,0x1533af40000
delete,MemoryChunk,0x13cbb540000
delete,MemoryChunk,0x33342a40000
delete,MemoryChunk,0x1ff28600000
delete,MemoryChunk,0xc24e9c0000
delete,MemoryChunk,0x2b209f80000
delete,MemoryChunk,0x58c7780000
delete,MemoryChunk,0x3b11ad80000
delete,MemoryChunk,0x18412640000
delete,MemoryChunk,0x31ef08c0000
delete,MemoryChunk,0x3b204d40000
delete,MemoryChunk,0x1cb8d140000
delete,MemoryChunk,0x2434a480000
delete,MemoryChunk,0x20f72200000
delete,MemoryChunk,0x12058040000
delete,MemoryChunk,0x325d0980000
delete,MemoryChunk,0x224c3380000
delete,MemoryChunk,0x82eb800000
delete,MemoryChunk,0x1c1d0200000
delete,MemoryChunk,0xe4d60c0000
delete,MemoryChunk,0x35fd1400000
delete,MemoryChunk,0x2374f380000
delete,MemoryChunk,0x361f16c0000
delete,MemoryChunk,0x3edbcbc0000
markcompact,end,14,171875,1671212015350
tick,0x225ca810d9f,22992525,0,0x0,0,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a80497b0,23008516,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a814db56,23024476,0,0x0,0,0x7ff6a8153cd0,0x225ca843486,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8438623,23040529,0,0x0,0,0x7ff6a8420841,0x225ca7f7e68,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8411898,23055555,0,0x0,0,0x225ca7f811d,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,218750,1671212015431
scavenge,end,14,234375,1671212015432
tick,0x7ff6a7fd2395,23070540,0,0x0,0,0x7ff6a7f055e0,0x7ff6a83b671b,0x225ca81619d,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a801c4b1,23085503,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8002c70,23100544,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca857d63,23116501,0,0x0,0,0x225ca81049c
scavenge,begin,14,281250,1671212015488
scavenge,end,14,281250,1671212015489
tick,0x7ff6a7d3f363,23132543,0,0x0,5,0x9ce61ceb30,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a838a757,23148532,0,0x0,0,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,23164559,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a814e76c,23180527,0,0x0,0,0x7ff6a8153cd0,0x225ca8210eb,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a835210e,23196584,0,0x0,0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,343750,1671212015561
scavenge,end,14,343750,1671212015562
tick,0x7ff6a8028dfd,23212531,0,0x0,0,0x7ff6a8153cd0,0x225ca84ee51,0x225ca8104ff
tick,0x7ff6a8028e8f,23228562,0,0x0,0,0x7ff6a8153cd0,0x225ca84a7df,0x225ca81049c
tick,0x7ff6a8159614,23244545,0,0x0,0,0x7ff6a81529e0,0x225ca854233,0x225ca8226d0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c518,23260550,0,0x0,0,0x7ff6a8153cd0,0x225ca843be3,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,390625,1671212015627
scavenge,end,14,390625,1671212015628
tick,0x7ff6a8150624,23276530,0,0x0,0,0x7ff6a8153cd0,0x225ca8187dd,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7f31c98,23292576,0,0x0,0,0x7ff6a7f02870,0x7ff6a841cf1f,0x225ca82351d,0x225ca821ce2,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca813804,23308550,0,0x0,0,0x225ca8301a0,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8028dae,23324595,0,0x0,0,0x7ff6a8153cd0,0x225ca8210a7,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,437500,1671212015695
scavenge,end,14,437500,1671212015696
tick,0x7ff6a8028261,23340551,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb1f420d4,23356577,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4b1,23372546,0,0x0,0,0x7ff6a8153cd0,0x225ca854338,0x225ca8226d0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca8142be,23388605,0,0x0,0,0x225ca8278a7,0x225ca83b249,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,14,515625,1671212015764
scavenge,end,14,515625,1671212015765
tick,0x7ff6a801c4cf,23404574,0,0x0,0,0x7ff6a81557b0,0x225ca818226,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x28937ac0000,262144
tick,0x7ff6a801c4b1,23420601,0,0x0,0,0x7ff6a8153cd0,0x225ca832f4b,0x225ca8104ff
tick,0x7ff6a81efde9,23436581,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,23452616,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,578125,1671212015830
new,MemoryChunk,0x221b7b00000,262144
new,MemoryChunk,0x3806e800000,262144
new,MemoryChunk,0x6b9cf00000,262144
tick,0x7ff6a8167849,23468574,0,0x0,1
scavenge,end,14,578125,1671212015831
tick,0x7fffb299b748,23483635,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8153ead,23499611,0,0x0,0,0x7ff6a8153cd0,0x225ca843be3,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x2edaddc0000,262144
tick,0x7ff6a8487088,23515645,1,0x7ff6a79f5d10,6,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x90cf140000,262144
code-creation,LazyCompile,13,23529257,0x225ca864a00,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca864ax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7ff6a83592a1,23530645,0,0x0,0,0x225ca8224c5,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,656250,1671212015904
new,MemoryChunk,0x12f03800000,262144
new,MemoryChunk,0x36d99a00000,262144
new,MemoryChunk,0x3e8f0640000,262144
new,MemoryChunk,0x22f933c0000,262144
new,MemoryChunk,0x8f153c0000,262144
new,MemoryChunk,0x3a40a280000,262144
new,MemoryChunk,0x3a128d40000,262144
new,MemoryChunk,0x2e5dbe00000,262144
new,MemoryChunk,0x26a5a5c0000,262144
new,MemoryChunk,0x3e0743c0000,262144
new,MemoryChunk,0x24983940000,262144
scavenge,end,14,656250,1671212015906
tick,0x7fffb299b8a4,23546640,0,0x0,0,0x7ff6a82d7030,0x225ca83b021,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,23562640,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb297a4eb,23578662,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8028e88,23594620,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x69c4540000,262144
scavenge,begin,14,687500,1671212015971
new,MemoryChunk,0x1f644d80000,262144
new,MemoryChunk,0x3031ac00000,262144
new,MemoryChunk,0x2362a1c0000,262144
new,MemoryChunk,0x10a21400000,262144
new,MemoryChunk,0x1edf52c0000,262144
new,MemoryChunk,0x11604e40000,262144
new,MemoryChunk,0x97f6c0000,262144
new,MemoryChunk,0xf1b1700000,262144
new,MemoryChunk,0xd7ec080000,262144
new,MemoryChunk,0x9b05d80000,262144
scavenge,end,14,687500,1671212015973
tick,0x7ff6a82e9c88,23610672,0,0x0,0,0x7ff6a82e9b20,0x225ca843d8b,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a82018b7,23626677,0,0x0,8
tick,0x7ff6a8393cfa,23642665,0,0x0,0,0x225ca85e682,0x225ca81049c
tick,0x7ff6a81508ec,23658629,0,0x0,0,0x7ff6a8153cd0,0x225ca854bb6,0x7ff6a83c2541,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7ef14b7,23674665,0,0x0,0,0x7ff6a7f055e0,0x7ff6a83b671b,0x225ca85c6a1,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,765625,1671212016041
new,MemoryChunk,0x34838900000,262144
new,MemoryChunk,0x193ff340000,262144
new,MemoryChunk,0x44a4a00000,262144
new,MemoryChunk,0xbba8f80000,262144
new,MemoryChunk,0x674be80000,262144
new,MemoryChunk,0x25abb980000,262144
new,MemoryChunk,0x13091b00000,262144
new,MemoryChunk,0x37db1380000,262144
new,MemoryChunk,0x2836e1c0000,262144
new,MemoryChunk,0x3c112ec0000,262144
scavenge,end,14,765625,1671212016043
tick,0x7ff6a8012b65,23690634,0,0x0,0,0x7ff6a7f02870,0x225ca820582,0x225ca8213f3,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x2925780000,262144
tick,0x7ff6a80dd936,23706662,0,0x0,0,0x7ff6a7f0f870,0x225ca81fc27,0x225ca826897,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a801c4d6,23722682,0,0x0,0,0x7ff6a8153cd0,0x225ca8313a9,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x2cd9fb00000,262144
tick,0x7fffb2a0d1a4,23738677,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,812500,1671212016112
new,MemoryChunk,0x40a3c00000,262144
new,MemoryChunk,0x15f7da40000,262144
new,MemoryChunk,0x212c0340000,262144
new,MemoryChunk,0x3662fa40000,262144
new,MemoryChunk,0x1d4d2840000,262144
new,MemoryChunk,0x282017c0000,262144
new,MemoryChunk,0xadcedc0000,262144
new,MemoryChunk,0x1194fb00000,262144
new,MemoryChunk,0x2cde0740000,262144
new,MemoryChunk,0x7f53740000,262144
new,MemoryChunk,0xd0393c0000,262144
new,MemoryChunk,0x35037d00000,262144
scavenge,end,14,812500,1671212016113
tick,0x7ff6a80497c1,23754654,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4d6,23769682,0,0x0,0,0x7ff6a81529e0,0x225ca854233,0x225ca8226d0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a79eab3c,23785678,1,0x7ff6a79f5d10,6,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x13d9d9c0000,262144
tick,0x7ff6a81b3772,23801692,0,0x0,5
scavenge,begin,14,859375,1671212016177
new,MemoryChunk,0x24f12f40000,262144
new,MemoryChunk,0x3a67a980000,262144
new,MemoryChunk,0x2abaef00000,262144
new,MemoryChunk,0x2bb138c0000,262144
new,MemoryChunk,0x3bfb35c0000,262144
new,MemoryChunk,0x3c587dc0000,262144
new,MemoryChunk,0x765fa00000,262144
new,MemoryChunk,0x1697e2c0000,262144
new,MemoryChunk,0x24bff2c0000,262144
scavenge,end,14,859375,1671212016179
tick,0x7ff6a81eff50,23817675,0,0x0,0,0x7ff6a7f055e0,0x7ff6a83b671b,0x225ca83b21d,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,23833719,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a818fe15,23849664,0,0x0,1
tick,0x7fffb2a0d1a4,23865771,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x5088bc0000,262144
markcompact,begin,14,921875,1671212016237
delete,MemoryChunk,0x3953fc40000
delete,MemoryChunk,0x3c0f1380000
delete,MemoryChunk,0x12b48ec0000
delete,MemoryChunk,0x389389c0000
delete,MemoryChunk,0x30831680000
delete,MemoryChunk,0x3d284e80000
delete,MemoryChunk,0x118797c0000
delete,MemoryChunk,0x31a9edc0000
delete,MemoryChunk,0x2cae3f00000
delete,MemoryChunk,0x18282140000
delete,MemoryChunk,0x221b7b00000
delete,MemoryChunk,0x3806e800000
delete,MemoryChunk,0x6b9cf00000
delete,MemoryChunk,0x90cf140000
delete,MemoryChunk,0x36d99a00000
delete,MemoryChunk,0x12f03800000
delete,MemoryChunk,0x22f933c0000
delete,MemoryChunk,0x3e8f0640000
delete,MemoryChunk,0x8f153c0000
delete,MemoryChunk,0x3a40a280000
delete,MemoryChunk,0x2e5dbe00000
delete,MemoryChunk,0x26a5a5c0000
delete,MemoryChunk,0x24983940000
delete,MemoryChunk,0x1f644d80000
delete,MemoryChunk,0x2362a1c0000
delete,MemoryChunk,0x1edf52c0000
delete,MemoryChunk,0x97f6c0000
delete,MemoryChunk,0x3e0743c0000
delete,MemoryChunk,0x3031ac00000
delete,MemoryChunk,0x10a21400000
delete,MemoryChunk,0x3a128d40000
delete,MemoryChunk,0x11604e40000
delete,MemoryChunk,0xf1b1700000
delete,MemoryChunk,0x9b05d80000
delete,MemoryChunk,0x34838900000
delete,MemoryChunk,0x44a4a00000
delete,MemoryChunk,0x674be80000
delete,MemoryChunk,0x25abb980000
delete,MemoryChunk,0x13091b00000
delete,MemoryChunk,0x37db1380000
delete,MemoryChunk,0x2836e1c0000
delete,MemoryChunk,0x3c112ec0000
delete,MemoryChunk,0x193ff340000
delete,MemoryChunk,0xbba8f80000
delete,MemoryChunk,0x2cd9fb00000
delete,MemoryChunk,0x35037d00000
delete,MemoryChunk,0x24bff2c0000
delete,MemoryChunk,0xe36cd40000
delete,MemoryChunk,0x28937ac0000
delete,MemoryChunk,0x2edaddc0000
delete,MemoryChunk,0x69c4540000
delete,MemoryChunk,0x2925780000
new,MemoryChunk,0x2a83b580000,262144
markcompact,end,14,921875,1671212016239
tick,0x225ca829d61,23881678,0,0x0,0
tick,0x7ff6a8349a9b,23897737,0,0x0,0,0x225ca81093c
tick,0x7fffb2a0d1a4,23913715,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7f0c137,23929734,0,0x0,0,0x7ff6a7f0bd80,0x7ff6a83b6631,0x225ca83b21d,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8150f6f,23945688,0,0x0,0,0x7ff6a8153cd0,0x225ca8210a7,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,14,953125,1671212016319
scavenge,end,14,953125,1671212016320
tick,0x7ff6a83aa766,23961726,0,0x0,0,0x225ca85ec19,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7ec5bee,23977723,0,0x0,0,0x7ff6a8390058,0x225ca851b3e,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a8153d9b,23993728,0,0x0,0,0x7ff6a8153cd0,0x225ca854bb6,0x7ff6a83c2541,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca813456,24009710,0,0x0,0,0x225ca81bb6a,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,15,0,1671212016376
scavenge,end,15,0,1671212016377
tick,0x225ca85f084,24025761,0,0x0,0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a804e123,24041770,0,0x0,0,0x7ff6a7f0ca20,0x7ff6a8402c64,0x225ca847983,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8029cc1,24057734,0,0x0,0,0x7ff6a8153cd0,0x225ca8313a9,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a801c4d6,24073326,0,0x0,0,0x7ff6a8153cd0,0x225ca831522,0x225ca85d670,0x225ca859959,0x225ca81049c
scavenge,begin,15,62500,1671212016450
scavenge,end,15,62500,1671212016451
tick,0x7ff6a7fd0f20,24089361,0,0x0,0,0x7ff6a84384fc,0x7ff6a842058a,0x225ca85bd57,0x225ca82ffda,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a83884b1,24104332,0,0x0,0,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca82cc90,24119379,0,0x0,0,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,24134390,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7fd1046,24149385,0,0x0,5,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,15,125000,1671212016516
scavenge,end,15,125000,1671212016517
tick,0x7fffb299faa4,24165353,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a802194d,24180387,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca847a41,24196367,0,0x0,0,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a831e32d,24211383,0,0x0,5
scavenge,begin,15,187500,1671212016583
scavenge,end,15,187500,1671212016584
tick,0x7ff6a801c4cf,24227388,0,0x0,0,0x7ff6a8153cd0,0x225ca843be3,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4e0,24242369,0,0x0,0,0x7ff6a81557b0,0x225ca85e65d,0x225ca81049c
tick,0x7ff6a88e23c5,24257380,0,0x0,8
tick,0x225ca8178a1,24272408,0,0x0,0,0x225ca83c205,0x225ca828e35,0x225ca82af3e
tick,0x7ff6a8393ca5,24288391,0,0x0,0,0x225ca830e93,0x225ca85d670,0x225ca859959,0x225ca81049c
scavenge,begin,15,250000,1671212016652
scavenge,end,15,250000,1671212016653
new,MemoryChunk,0xcba13c0000,262144
tick,0x7fffb299b6e9,24303893,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a801c4d6,24319904,0,0x0,0,0x7ff6a8153cd0,0x225ca84eec4,0x225ca8104ff
tick,0x7ff6a801c4b1,24335926,0,0x0,0,0x7ff6a8153cd0,0x225ca856b89,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7ac9474,24351938,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,15,312500,1671212016718
scavenge,end,15,312500,1671212016719
tick,0x7ff6a814db05,24367942,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81df382,24383903,0,0x0,0,0x7ff6a8153cd0,0x225ca8210a7,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x17285f80000,262144
tick,0x7ff6a802a019,24399896,0,0x0,0,0x7ff6a8153cd0,0x225ca8226a6,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a88c35cb,24415960,0,0x0,4,0x7ff6a7f16560,0x225ca85e97e,0x225ca81049c
code-creation,LazyCompile,13,24416104,0x225ca864a00,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca864ax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
scavenge,begin,15,375000,1671212016791
new,MemoryChunk,0x1dcc7580000,262144
new,MemoryChunk,0x1fdd280000,262144
scavenge,end,15,390625,1671212016792
tick,0x7ff6a83c2541,24431953,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7c93f1a,24447922,0,0x0,0,0x7ff6a8153cd0,0x225ca818508,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a84386d5,24463955,0,0x0,0,0x225ca81681f,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca7e9260,24479928,0,0x0,0,0x7ff6a841caa6,0x225ca7f7f97,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x26b20740000,262144
tick,0x7ff6a814f0f9,24495457,0,0x0,0,0x7ff6a81557b0,0x225ca818226,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,15,437500,1671212016859
new,MemoryChunk,0x37957fc0000,262144
new,MemoryChunk,0xf271d80000,262144
new,MemoryChunk,0x360d38c0000,262144
new,MemoryChunk,0x38dc5300000,262144
new,MemoryChunk,0xdfa7280000,262144
new,MemoryChunk,0x112ee840000,262144
new,MemoryChunk,0x37382980000,262144
new,MemoryChunk,0x3fd838c0000,262144
new,MemoryChunk,0x32b84580000,262144
new,MemoryChunk,0x341bd600000,262144
scavenge,end,15,437500,1671212016860
tick,0x7ff6a81d351b,24510448,0,0x0,0,0x7ff6a8153cd0,0x225ca83121f,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a801e3eb,24526436,0,0x0,0,0x7ff6a81557b0,0x225ca856b58,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a838a7c4,24541429,0,0x0,0,0x225ca85549d
new,MemoryChunk,0x2c75d280000,262144
tick,0x225ca758b15,24556432,0,0x0,0,0x225ca860fee,0x225ca860628
scavenge,begin,15,500000,1671212016929
new,MemoryChunk,0x37744300000,262144
new,MemoryChunk,0xe5e5900000,262144
new,MemoryChunk,0x58a3100000,262144
new,MemoryChunk,0x1c16040000,262144
new,MemoryChunk,0x4914280000,262144
new,MemoryChunk,0x2b4a4a80000,262144
new,MemoryChunk,0x1c2a5480000,262144
new,MemoryChunk,0x3883e1c0000,262144
new,MemoryChunk,0x2f35ac00000,262144
new,MemoryChunk,0x1b6ba480000,262144
scavenge,end,15,500000,1671212016931
tick,0x225ca7ccf32,24571420,0,0x0,0,0x7ff6a841caa6,0x225ca847670,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x3f5a3500000,262144
tick,0x7fffb2a0d1a4,24587441,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4d6,24603444,0,0x0,0,0x7ff6a8153cd0,0x225ca8570fe,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x29660940000,262144
tick,0x7ff6a79e3f21,24619479,0,0x0,8
tick,0x225ca8208ef,24635515,0,0x0,0,0x225ca8213f3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,15,562500,1671212017000
new,MemoryChunk,0x23ade440000,262144
new,MemoryChunk,0x3b1c7880000,262144
new,MemoryChunk,0x6212e40000,262144
new,MemoryChunk,0x24f9f680000,262144
new,MemoryChunk,0x3a1e0fc0000,262144
new,MemoryChunk,0x165aff80000,262144
new,MemoryChunk,0xd06a40000,262144
new,MemoryChunk,0x2daa4a00000,262144
new,MemoryChunk,0x305bc7c0000,262144
scavenge,end,15,562500,1671212017001
tick,0x225ca847f53,24650476,0,0x0,0,0x225ca84b263,0x225ca83e641
new,MemoryChunk,0x35f37b40000,262144
tick,0x7ff6a801c480,24666448,0,0x0,0,0x7ff6a8153cd0,0x225ca831424,0x225ca85d670,0x225ca859959,0x225ca81049c
new,MemoryChunk,0x2a48b740000,262144
tick,0x225ca8220a1,24682478,0,0x0,0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x8962a40000,262144
tick,0x7ff6a7f0f872,24698066,0,0x0,0,0x7ff6a7f0f870,0x225ca81fc27,0x225ca826897,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,15,625000,1671212017066
new,MemoryChunk,0x289ae740000,262144
new,MemoryChunk,0x21f8e040000,262144
new,MemoryChunk,0x6490bc0000,262144
new,MemoryChunk,0x9202840000,262144
new,MemoryChunk,0x2b231480000,262144
new,MemoryChunk,0x24c61940000,262144
new,MemoryChunk,0x271cf5c0000,262144
new,MemoryChunk,0x238d8f00000,262144
new,MemoryChunk,0x30752c40000,262144
new,MemoryChunk,0x9fb5940000,262144
scavenge,end,15,625000,1671212017068
tick,0x7ff6a83375ac,24714107,1,0x7ff6a791a4a0,6,0x7ff6a82ef2d0,0x225ca835c50,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81d3850,24730110,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca821458,24746109,0,0x0,0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x31b18fc0000,262144
markcompact,begin,15,687500,1671212017124
tick,0x7fffb2a0d3c4,24762080,0,0x0,1
delete,MemoryChunk,0x3c587dc0000
delete,MemoryChunk,0x30724a40000
delete,MemoryChunk,0x212c0340000
delete,MemoryChunk,0x2a83b580000
delete,MemoryChunk,0x765fa00000
delete,MemoryChunk,0xd0393c0000
delete,MemoryChunk,0x282017c0000
delete,MemoryChunk,0x3662fa40000
delete,MemoryChunk,0xadcedc0000
delete,MemoryChunk,0x15f7da40000
delete,MemoryChunk,0x40a3c00000
delete,MemoryChunk,0x1d4d2840000
delete,MemoryChunk,0x2cde0740000
delete,MemoryChunk,0x2abaef00000
delete,MemoryChunk,0x1194fb00000
delete,MemoryChunk,0x7f53740000
delete,MemoryChunk,0x24f12f40000
delete,MemoryChunk,0x1697e2c0000
delete,MemoryChunk,0x3bfb35c0000
delete,MemoryChunk,0x5088bc0000
delete,MemoryChunk,0x2bb138c0000
delete,MemoryChunk,0x1dcc7580000
delete,MemoryChunk,0x1fdd280000
delete,MemoryChunk,0x37957fc0000
delete,MemoryChunk,0x360d38c0000
delete,MemoryChunk,0xdfa7280000
delete,MemoryChunk,0x37382980000
delete,MemoryChunk,0x32b84580000
delete,MemoryChunk,0xf271d80000
delete,MemoryChunk,0x38dc5300000
delete,MemoryChunk,0x112ee840000
delete,MemoryChunk,0x3fd838c0000
delete,MemoryChunk,0x341bd600000
delete,MemoryChunk,0x2c75d280000
delete,MemoryChunk,0x37744300000
delete,MemoryChunk,0x58a3100000
delete,MemoryChunk,0x4914280000
delete,MemoryChunk,0x2b4a4a80000
delete,MemoryChunk,0x1c2a5480000
delete,MemoryChunk,0x3883e1c0000
delete,MemoryChunk,0x2f35ac00000
delete,MemoryChunk,0x1b6ba480000
delete,MemoryChunk,0xe5e5900000
delete,MemoryChunk,0x1c16040000
delete,MemoryChunk,0x29660940000
delete,MemoryChunk,0x23ade440000
delete,MemoryChunk,0x3b1c7880000
delete,MemoryChunk,0x6212e40000
delete,MemoryChunk,0x24f9f680000
delete,MemoryChunk,0x3a1e0fc0000
delete,MemoryChunk,0x165aff80000
delete,MemoryChunk,0xd06a40000
delete,MemoryChunk,0x2daa4a00000
delete,MemoryChunk,0x305bc7c0000
delete,MemoryChunk,0x35f37b40000
delete,MemoryChunk,0x8962a40000
delete,MemoryChunk,0x9fb5940000
delete,MemoryChunk,0x13d9d9c0000
delete,MemoryChunk,0xcba13c0000
delete,MemoryChunk,0x17285f80000
delete,MemoryChunk,0x26b20740000
delete,MemoryChunk,0x3f5a3500000
markcompact,end,15,687500,1671212017126
tick,0x7ff6a802839b,24778119,0,0x0,0,0x7ff6a81557b0,0x225ca84d803,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7d8dd44,24793120,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca821829,24809143,0,0x0,0,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4cf,24825144,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,24841160,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,15,765625,1671212017207
scavenge,end,15,765625,1671212017208
tick,0x7fffb2a0d1a4,24857176,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a802171e,24873133,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca85f1a3,24889151,0,0x0,0,0x225ca8216a3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,15,828125,1671212017264
scavenge,end,15,828125,1671212017265
tick,0x7fffb0720040,24905160,0,0x0,8
tick,0x7ff6a7fc2197,24921127,0,0x0,0,0x7ff6a8153cd0,0x225ca810e1c,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8085bf3,24937167,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a835410a,24953120,0,0x0,0,0x225ca81bb6a,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7c8cf08,24969158,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,15,890625,1671212017336
scavenge,end,15,890625,1671212017338
tick,0x7ff6a801c4c7,24985128,0,0x0,0,0x7ff6a8153cd0,0x225ca84ee51,0x225ca8104ff
tick,0x7fffb2a0feb4,25001171,0,0x0,8
tick,0x7fffb2a0d1a4,25017177,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8349a25,25033166,0,0x0,0,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,15,968750,1671212017403
scavenge,end,15,968750,1671212017404
tick,0x7ff6a801c4d6,25049158,0,0x0,0,0x7ff6a8153cd0,0x225ca830f4c,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7fffb29c2550,25065161,0,0x0,8
tick,0x225ca828410,25081245,0,0x0,0,0x225ca82af3e
tick,0x7ff6a83c4133,25097174,0,0x0,0,0x225ca82450b,0x225ca860e7f,0x225ca860628
scavenge,begin,16,31250,1671212017470
scavenge,end,16,31250,1671212017471
tick,0x225ca8246ad,25113198,0,0x0,0,0x225ca860e7f,0x225ca860628
tick,0x7fffb2a0d1a4,25129229,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c52e,25145178,0,0x0,0,0x7ff6a8153cd0,0x225ca830d47,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7fffb2a0d1a4,25161211,0,0x0,8
scavenge,begin,16,93750,1671212017539
tick,0x7fffb2a10ab4,25177185,0,0x0,1
scavenge,end,16,93750,1671212017540
new,MemoryChunk,0x35879f40000,262144
tick,0x7ff6a8028261,25193252,0,0x0,0,0x7ff6a8153cd0,0x225ca843dbc,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca80f922,25208194,0,0x0,0,0x225ca8198c4,0x225ca84f432,0x225ca8104ff
tick,0x7ff6a801c4c7,25224235,0,0x0,0,0x7ff6a81529e0,0x225ca854233,0x225ca8226d0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81e2f32,25240238,0,0x0,5
scavenge,begin,16,156250,1671212017605
new,MemoryChunk,0x3141c6c0000,262144
new,MemoryChunk,0x15591600000,262144
scavenge,end,16,156250,1671212017606
tick,0x7ff6a88e23c5,25256219,0,0x0,8
tick,0x7ff6a7aa16c4,25272293,0,0x0,8
new,MemoryChunk,0x139b34c0000,262144
tick,0x7ff6a8355944,25287229,0,0x0,0
tick,0x7ff6a7ca18f7,25303202,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x3269f840000,262144
code-creation,LazyCompile,13,25304324,0x225ca864a00,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca864ax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
scavenge,begin,16,218750,1671212017679
new,MemoryChunk,0x34882d80000,262144
new,MemoryChunk,0x118cf080000,262144
new,MemoryChunk,0x297ea000000,262144
new,MemoryChunk,0xc121140000,262144
new,MemoryChunk,0x1d0b3100000,262144
new,MemoryChunk,0x1c6fd540000,262144
new,MemoryChunk,0x3bdb8f80000,262144
new,MemoryChunk,0x61893c0000,262144
new,MemoryChunk,0x293f16c0000,262144
new,MemoryChunk,0x4a19240000,262144
new,MemoryChunk,0x126510c0000,262144
scavenge,end,16,218750,1671212017681
tick,0x7ff6a83b60b9,25319239,0,0x0,0,0x225ca85c0f5,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a802b3a5,25335274,0,0x0,0,0x7ff6a81557b0,0x225ca81196f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca84a624,25351248,0,0x0,0
tick,0x7ff6a80293f5,25367220,0,0x0,0,0x7ff6a81557b0,0x225ca8387a0,0x225ca83d6de,0x225ca843f21,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0xd8f5000000,262144
tick,0x7ff6a83c2548,25383251,0,0x0,0,0x7ff6a81557b0,0x225ca8436ca,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,16,296875,1671212017746
new,MemoryChunk,0x102c9480000,262144
new,MemoryChunk,0x17542900000,262144
new,MemoryChunk,0xdad9a80000,262144
new,MemoryChunk,0xc708a00000,262144
new,MemoryChunk,0x1cf53a80000,262144
new,MemoryChunk,0x3e733d80000,262144
new,MemoryChunk,0x230d7dc0000,262144
new,MemoryChunk,0xb87e700000,262144
new,MemoryChunk,0x31655540000,262144
new,MemoryChunk,0xf732e80000,262144
scavenge,end,16,296875,1671212017748
tick,0x225ca8551ba,25399283,0,0x0,0
tick,0x7ff6a841c7b7,25415265,0,0x0,0,0x225ca84386d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,25431239,0,0x0,8
tick,0x7fffb2a0d1a4,25447286,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,16,328125,1671212017817
new,MemoryChunk,0x3f35ff40000,262144
new,MemoryChunk,0x21f5c240000,262144
new,MemoryChunk,0x3e848f00000,262144
new,MemoryChunk,0x32ec1100000,262144
new,MemoryChunk,0x12cdc8c0000,262144
new,MemoryChunk,0xff46640000,262144
new,MemoryChunk,0x3758eb00000,262144
new,MemoryChunk,0x33ab0f80000,262144
new,MemoryChunk,0x11698f40000,262144
new,MemoryChunk,0x2ed7e340000,262144
scavenge,end,16,328125,1671212017818
tick,0x7ff6a8349a71,25463267,0,0x0,0,0x225ca81093c
new,MemoryChunk,0x1ad0bec0000,262144
tick,0x7fffb2a0d1a4,25479269,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,25495324,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x2097e080000,262144
tick,0x7fffb2994859,25510294,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,16,406250,1671212017888
new,MemoryChunk,0x168a2740000,262144
new,MemoryChunk,0xbf5f00000,262144
new,MemoryChunk,0x2c3779c0000,262144
new,MemoryChunk,0x276d1480000,262144
new,MemoryChunk,0x3e1de740000,262144
new,MemoryChunk,0x3f408c40000,262144
tick,0x7ff6a8167d37,25526272,0,0x0,1
new,MemoryChunk,0x13b87100000,262144
new,MemoryChunk,0x1bc77e80000,262144
new,MemoryChunk,0x33dc3900000,262144
scavenge,end,16,406250,1671212017889
tick,0x7ff6a83872e8,25541303,0,0x0,0,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x1587d240000,262144
tick,0x7fffb2a0d1a4,25557270,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x25f51400000,262144
new,MemoryChunk,0x180eab80000,262144
tick,0x225ca818219,25573291,0,0x0,0,0x225ca843a9f,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb29c4b6e,25589289,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,16,468750,1671212017953
new,MemoryChunk,0x13054180000,262144
new,MemoryChunk,0x296781c0000,262144
new,MemoryChunk,0x1f5e47c0000,262144
new,MemoryChunk,0xdbc4f80000,262144
new,MemoryChunk,0x1d1ed000000,262144
new,MemoryChunk,0x2941c640000,262144
new,MemoryChunk,0x32033f00000,262144
new,MemoryChunk,0x144d5a00000,262144
new,MemoryChunk,0x18a6d4c0000,262144
new,MemoryChunk,0x3e118a00000,262144
scavenge,end,16,468750,1671212017954
tick,0x7ff6a815bd6b,25605310,0,0x0,0,0x7ff6a8153cd0,0x225ca832d4b,0x225ca8104ff
tick,0x7ff6a818fe09,25621274,0,0x0,1
tick,0x7ff6a838e515,25637345,0,0x0,0,0x225ca857efe,0x225ca81049c
new,MemoryChunk,0x1724dac0000,262144
markcompact,begin,16,531250,1671212018011
delete,MemoryChunk,0x3a67a980000
delete,MemoryChunk,0x289ae740000
delete,MemoryChunk,0x6490bc0000
delete,MemoryChunk,0x271cf5c0000
delete,MemoryChunk,0x21f8e040000
delete,MemoryChunk,0x30752c40000
delete,MemoryChunk,0x24c61940000
delete,MemoryChunk,0x31b18fc0000
delete,MemoryChunk,0x2b231480000
delete,MemoryChunk,0x3141c6c0000
delete,MemoryChunk,0x15591600000
delete,MemoryChunk,0x3269f840000
delete,MemoryChunk,0x118cf080000
delete,MemoryChunk,0xc121140000
delete,MemoryChunk,0x1d0b3100000
delete,MemoryChunk,0x1c6fd540000
delete,MemoryChunk,0x61893c0000
delete,MemoryChunk,0x293f16c0000
delete,MemoryChunk,0x126510c0000
delete,MemoryChunk,0x34882d80000
delete,MemoryChunk,0x297ea000000
delete,MemoryChunk,0x102c9480000
delete,MemoryChunk,0xdad9a80000
delete,MemoryChunk,0x1cf53a80000
delete,MemoryChunk,0x230d7dc0000
delete,MemoryChunk,0x31655540000
delete,MemoryChunk,0x17542900000
delete,MemoryChunk,0x4a19240000
delete,MemoryChunk,0xc708a00000
delete,MemoryChunk,0x3e733d80000
delete,MemoryChunk,0x3bdb8f80000
delete,MemoryChunk,0xb87e700000
delete,MemoryChunk,0xf732e80000
delete,MemoryChunk,0x3f35ff40000
delete,MemoryChunk,0x3e848f00000
delete,MemoryChunk,0x12cdc8c0000
delete,MemoryChunk,0xff46640000
delete,MemoryChunk,0x3758eb00000
delete,MemoryChunk,0x33ab0f80000
delete,MemoryChunk,0x11698f40000
delete,MemoryChunk,0x2ed7e340000
delete,MemoryChunk,0x21f5c240000
delete,MemoryChunk,0x32ec1100000
delete,MemoryChunk,0x2097e080000
delete,MemoryChunk,0x168a2740000
delete,MemoryChunk,0xbf5f00000
delete,MemoryChunk,0x2c3779c0000
delete,MemoryChunk,0x276d1480000
delete,MemoryChunk,0x3e1de740000
delete,MemoryChunk,0x3f408c40000
delete,MemoryChunk,0x13b87100000
delete,MemoryChunk,0x1bc77e80000
delete,MemoryChunk,0x33dc3900000
delete,MemoryChunk,0x1587d240000
delete,MemoryChunk,0x180eab80000
delete,MemoryChunk,0x3e118a00000
delete,MemoryChunk,0x2a48b740000
delete,MemoryChunk,0x35879f40000
delete,MemoryChunk,0x139b34c0000
delete,MemoryChunk,0xd8f5000000
delete,MemoryChunk,0x1ad0bec0000
markcompact,end,16,531250,1671212018013
tick,0x7fffb2a0deb4,25653345,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7a9c3e7,25669329,0,0x0,8
tick,0x7ff6a8020d60,25685349,0,0x0,0,0x7ff6a7f0ca20,0x7ff6a8402c64,0x225ca8479b4,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7d8dcef,25701372,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7a9ff56,25717309,0,0x0,0,0x9ce61ceb30,0x225ca850510,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,16,609375,1671212018094
tick,0x7ff6a8166510,25733320,0,0x0,1
scavenge,end,16,609375,1671212018096
tick,0x7ff6a80282b7,25749398,0,0x0,0,0x7ff6a8153cd0,0x225ca85dad1,0x225ca830f1b,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a823401b,25765360,0,0x0,5
tick,0x7ff6a801c4d6,25781366,0,0x0,0,0x7ff6a8153cd0,0x225ca8334f6,0x225ca8104ff
scavenge,begin,16,671875,1671212018153
scavenge,end,16,671875,1671212018154
tick,0x7ff6a8331365,25797385,0,0x0,0,0x9ce61cec90,0x225ca851a01,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7fffb2a0d1a4,25813332,0,0x0,8
tick,0x7ff6a8153ead,25829378,0,0x0,0,0x7ff6a8153cd0,0x225ca8116d4,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a80293cd,25845330,0,0x0,0,0x7ff6a8153cd0,0x225ca843586,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7fc2145,25861383,0,0x0,0,0x7ff6a8153cd0,0x225ca810dd6,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,16,734375,1671212018225
scavenge,end,16,734375,1671212018226
tick,0x7ff6a801c490,25877339,0,0x0,0,0x7ff6a8153cd0,0x225ca843786,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a801c4b1,25892363,0,0x0,0,0x7ff6a8153cd0,0x225ca810e1c,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8088afe,25908387,0,0x0,0,0x7ff6a8153cd0,0x225ca8434ca,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a838882e,25924360,0,0x0,0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,16,812500,1671212018292
scavenge,end,16,812500,1671212018292
tick,0x7ff6a7fd9024,25940370,0,0x0,0,0x225ca85cd41,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7c94b2b,25956385,0,0x0,0,0x7ff6a8153cd0,0x225ca843e59,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca7e7c0d,25972400,0,0x0,0,0x225ca810f9c,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a815af1b,25988405,0,0x0,0,0x7ff6a8153cd0,0x225ca821f73,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,16,859375,1671212018359
scavenge,end,16,859375,1671212018360
tick,0x225ca864868,26004364,0,0x0,0,0x225ca8337d2,0x225ca8104ff
tick,0x7ff6a7920ce8,26020391,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a827ab54,26036394,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7ac9480,26052413,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,16,906250,1671212018428
scavenge,end,16,906250,1671212018429
tick,0x7ff6a81c1013,26068386,0,0x0,0,0x7ff6a838e5de,0x225ca8489c3,0x225ca821124,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x371df380000,262144
tick,0x7ff6a814f6fe,26083428,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a804387c,26099390,0,0x0,0,0x7ff6a8153cd0,0x225ca81ac36,0x225ca83ad06,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a791295c,26115452,0,0x0,0,0x9ce61cec90,0x225ca851a01,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7fffb299a9a0,26130450,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,16,953125,1671212018493
new,MemoryChunk,0x37a0f640000,262144
scavenge,end,16,953125,1671212018494
tick,0x7ff6a81636c5,26146427,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2a0d1a4,26162449,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0xf7629c0000,262144
tick,0x7fffb299b748,26178442,0,0x0,0,0x9ce61ce6c8,0x225ca8306db,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x3c8be200000,262144
code-creation,LazyCompile,13,26192413,0x225ca864a00,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca864ax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
tick,0x7fffb2a0d1a4,26193451,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,17,31250,1671212018568
new,MemoryChunk,0x2bc15d80000,262144
new,MemoryChunk,0x16ca0900000,262144
new,MemoryChunk,0x6700d00000,262144
new,MemoryChunk,0x24da0480000,262144
new,MemoryChunk,0x2e7851c0000,262144
new,MemoryChunk,0x22aae600000,262144
new,MemoryChunk,0x345f5e80000,262144
new,MemoryChunk,0x2ca737c0000,262144
new,MemoryChunk,0x1598080000,262144
new,MemoryChunk,0x2d6bc680000,262144
new,MemoryChunk,0x370f8480000,262144
scavenge,end,17,31250,1671212018569
tick,0x7ff6a8021b85,26209449,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a81bd11b,26225456,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7aa12b0,26241447,0,0x0,6
tick,0x225ca7cd0ef,26257423,0,0x0,0,0x7ff6a841caa6,0x225ca8208ce,0x225ca8213f3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0xb9e23c0000,262144
tick,0x7ff6a816f860,26273475,0,0x0,1
scavenge,begin,17,109375,1671212018636
new,MemoryChunk,0x7a19fc0000,262144
new,MemoryChunk,0x39f07600000,262144
new,MemoryChunk,0x8fa1ec0000,262144
new,MemoryChunk,0x6d44400000,262144
new,MemoryChunk,0x20806e00000,262144
new,MemoryChunk,0x25d31200000,262144
new,MemoryChunk,0x19f6a4c0000,262144
new,MemoryChunk,0xa609540000,262144
new,MemoryChunk,0xd708cc0000,262144
new,MemoryChunk,0x3d63ea80000,262144
scavenge,end,17,109375,1671212018637
tick,0x7ff6a8359952,26289468,0,0x0,0,0x225ca81689a,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7fc2145,26305476,0,0x0,0,0x7ff6a81557b0,0x225ca818226,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca8218b6,26321440,0,0x0,0,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8028261,26337481,0,0x0,0,0x7ff6a8153cd0,0x225ca843486,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,17,171875,1671212018706
new,MemoryChunk,0x197b9340000,262144
new,MemoryChunk,0x2dfdf840000,262144
new,MemoryChunk,0x6a6fc0000,262144
new,MemoryChunk,0x18b2ccc0000,262144
new,MemoryChunk,0x1bd79780000,262144
new,MemoryChunk,0x12e1c4c0000,262144
new,MemoryChunk,0xa00d680000,262144
new,MemoryChunk,0x23d164c0000,262144
new,MemoryChunk,0x2ea77680000,262144
new,MemoryChunk,0x331d0f80000,262144
scavenge,end,17,171875,1671212018707
tick,0x7ff6a8088afe,26353439,0,0x0,0,0x7ff6a8153cd0,0x225ca8434ca,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x2ed39800000,262144
tick,0x7fffb2a17095,26369469,0,0x0,0,0x7ff6a82d7030,0x225ca81674e,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x225ca824682,26385452,0,0x0,0,0x225ca860e7f,0x225ca860628
new,MemoryChunk,0x28eb2c80000,262144
tick,0x7fffaf82c3a0,26401445,0,0x0,8
scavenge,begin,17,250000,1671212018776
new,MemoryChunk,0xc033440000,262144
new,MemoryChunk,0x17de7a40000,262144
new,MemoryChunk,0xbef1200000,262144
new,MemoryChunk,0x3c277980000,262144
new,MemoryChunk,0x34b2dd00000,262144
new,MemoryChunk,0x84ac180000,262144
new,MemoryChunk,0xcbdc440000,262144
new,MemoryChunk,0x27a07800000,262144
new,MemoryChunk,0x3d35fc80000,262144
scavenge,end,17,250000,1671212018778
tick,0x7ff6a81b76a8,26417456,0,0x0,0,0x7ff6a7f0d770,0x7ff6a83aa5ab,0x225ca83cbf8,0x225ca8213b5,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x3f39d000000,262144
tick,0x7ff6a7905665,26433496,1,0x7ff6a78a4cf0,6,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a80497b5,26449475,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x24eaf00000,262144
new,MemoryChunk,0x26401100000,262144
tick,0x7ff6a8150637,26465519,0,0x0,0,0x7ff6a8153cd0,0x225ca81849d,0x225ca843a9f,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,17,296875,1671212018842
new,MemoryChunk,0x919700000,262144
new,MemoryChunk,0x2d8a4c00000,262144
new,MemoryChunk,0x2232f900000,262144
new,MemoryChunk,0x2a925600000,262144
new,MemoryChunk,0x3807a000000,262144
new,MemoryChunk,0x3ab9a240000,262144
new,MemoryChunk,0x3fe57480000,262144
new,MemoryChunk,0x21386600000,262144
new,MemoryChunk,0xb12b640000,262144
new,MemoryChunk,0x2c8fe7c0000,262144
scavenge,end,17,296875,1671212018843
tick,0x7ff6a8438623,26481482,0,0x0,0,0x225ca83b090,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a81e90c9,26497512,0,0x0,5
tick,0x7ff6a7f10db9,26513486,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a80202d1,26529518,0,0x0,0,0x7ff6a8153cd0,0x225ca85c8ac,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x1ddd7600000,262144
markcompact,begin,17,343750,1671212018900
delete,MemoryChunk,0x9202840000
delete,MemoryChunk,0x32033f00000
delete,MemoryChunk,0x144d5a00000
delete,MemoryChunk,0xdbc4f80000
delete,MemoryChunk,0x1f5e47c0000
delete,MemoryChunk,0x1d1ed000000
delete,MemoryChunk,0x18a6d4c0000
delete,MemoryChunk,0x296781c0000
delete,MemoryChunk,0x1724dac0000
delete,MemoryChunk,0x2941c640000
delete,MemoryChunk,0x37a0f640000
delete,MemoryChunk,0x3c8be200000
delete,MemoryChunk,0x16ca0900000
delete,MemoryChunk,0x24da0480000
delete,MemoryChunk,0x6700d00000
delete,MemoryChunk,0x2e7851c0000
delete,MemoryChunk,0x22aae600000
delete,MemoryChunk,0x2ca737c0000
delete,MemoryChunk,0x1598080000
delete,MemoryChunk,0x370f8480000
delete,MemoryChunk,0x2bc15d80000
delete,MemoryChunk,0x7a19fc0000
delete,MemoryChunk,0x2d6bc680000
delete,MemoryChunk,0x8fa1ec0000
delete,MemoryChunk,0x20806e00000
delete,MemoryChunk,0x345f5e80000
delete,MemoryChunk,0x19f6a4c0000
delete,MemoryChunk,0xd708cc0000
delete,MemoryChunk,0x39f07600000
delete,MemoryChunk,0x6d44400000
delete,MemoryChunk,0x25d31200000
delete,MemoryChunk,0xa609540000
delete,MemoryChunk,0x3d63ea80000
delete,MemoryChunk,0x197b9340000
delete,MemoryChunk,0x6a6fc0000
delete,MemoryChunk,0x1bd79780000
delete,MemoryChunk,0x12e1c4c0000
delete,MemoryChunk,0xa00d680000
delete,MemoryChunk,0x23d164c0000
delete,MemoryChunk,0x2ea77680000
delete,MemoryChunk,0x331d0f80000
delete,MemoryChunk,0x2dfdf840000
delete,MemoryChunk,0x18b2ccc0000
delete,MemoryChunk,0x28eb2c80000
delete,MemoryChunk,0xc033440000
delete,MemoryChunk,0x17de7a40000
delete,MemoryChunk,0xbef1200000
delete,MemoryChunk,0x3c277980000
delete,MemoryChunk,0x34b2dd00000
delete,MemoryChunk,0x84ac180000
delete,MemoryChunk,0xcbdc440000
delete,MemoryChunk,0x27a07800000
delete,MemoryChunk,0x3d35fc80000
delete,MemoryChunk,0x3f39d000000
delete,MemoryChunk,0x26401100000
delete,MemoryChunk,0x2c8fe7c0000
delete,MemoryChunk,0x919700000
delete,MemoryChunk,0x25f51400000
delete,MemoryChunk,0x371df380000
delete,MemoryChunk,0xf7629c0000
delete,MemoryChunk,0xb9e23c0000
delete,MemoryChunk,0x2ed39800000
new,MemoryChunk,0x3848ff40000,262144
markcompact,end,17,359375,1671212018902
tick,0x225ca82d2c7,26545553,0,0x0,0,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a801d915,26561507,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca856b5f,26577493,0,0x0,0,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8087500,26592508,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a7fc220a,26608501,0,0x0,0,0x7ff6a8153cd0,0x225ca843be3,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,17,437500,1671212018984
scavenge,end,17,437500,1671212018985
tick,0x7ff6a801c4d6,26624561,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8356c18,26640502,0,0x0,0,0x9ce61cec90,0x225ca851a01,0x225ca8318f5,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a801c4cf,26655542,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a83132f6,26670563,0,0x0,8
scavenge,begin,17,484375,1671212019045
scavenge,end,17,484375,1671212019047
tick,0x7ff6a815aec2,26685581,0,0x0,0,0x7ff6a8153cd0,0x225ca83a9bd,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7fffb2a0d1a4,26701550,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a78847b6,26717579,0,0x0,8
tick,0x7ff6a7d8dd24,26733527,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a7fd0fa0,26749593,0,0x0,0,0x7ff6a7f02870,0x225ca820582,0x225ca8213f3,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,17,562500,1671212019119
scavenge,end,17,562500,1671212019120
tick,0x7ff6a802042e,26765547,0,0x0,0,0x7ff6a8153cd0,0x225ca830f4c,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a838a7a7,26781578,0,0x0,0,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7fffb2994765,26797562,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca821324,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8049430,26813592,0,0x0,0,0x7ff6a8153410,0x225ca83a98c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,17,625000,1671212019185
scavenge,end,17,625000,1671212019186
tick,0x7ff6a8349a49,26829587,0,0x0,0,0x225ca8263ee,0x225ca830f76,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a88b41d3,26845611,0,0x0,5
tick,0x225ca847f04,26861578,0,0x0,0,0x225ca83e641
tick,0x7ff6a7d8dcef,26877602,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,17,687500,1671212019252
scavenge,end,17,687500,1671212019253
tick,0x7fffb2a0feb4,26892572,0,0x0,8
tick,0x7ff6a7c93f15,26908598,0,0x0,0,0x7ff6a81557b0,0x225ca85c306,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca830bd6,26923565,0,0x0,0,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7fffb2a0d1a4,26939617,0,0x0,8
tick,0x7ff6a801c458,26955601,0,0x0,0,0x7ff6a8153cd0,0x225ca821e8f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,17,750000,1671212019320
scavenge,end,17,750000,1671212019321
new,MemoryChunk,0x360b3d00000,262144
tick,0x7ff6a83202f5,26970588,0,0x0,8
tick,0x7ff6a801c4d6,26986585,0,0x0,0,0x7ff6a8153cd0,0x225ca8313a9,0x225ca85d670,0x225ca859959,0x225ca81049c
tick,0x7ff6a7e38c2a,27002607,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca830002,27018590,0,0x0,0,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
scavenge,begin,17,812500,1671212019384
new,MemoryChunk,0x2bcda100000,262144
new,MemoryChunk,0x33997f80000,262144
scavenge,end,17,828125,1671212019386
tick,0x7ff6a801e0ad,27034641,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81dd3c5,27050609,0,0x0,0,0x7ff6a82ef2d0,0x225ca830021,0x225ca83b6b5,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x3aeaaa00000,262144
tick,0x7fffb2a0d1a4,27066632,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a88b2db4,27082606,0,0x0,4,0x7ff6a7f16560,0x225ca83dea6,0x225ca843f21,0x225ca822115,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
code-creation,LazyCompile,13,27082963,0x225ca864a00,2180,onDestroy node:internal/streams/destroy:73:21,0x39bd86214d8,*
code-source-info,0x225ca864ax25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x334252cf0a8S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
scavenge,begin,17,890625,1671212019458
new,MemoryChunk,0x20399d00000,262144
new,MemoryChunk,0x17a80a80000,262144
new,MemoryChunk,0x1229e5c0000,262144
new,MemoryChunk,0x13774040000,262144
new,MemoryChunk,0x1c5054c0000,262144
new,MemoryChunk,0x15c857c0000,262144
new,MemoryChunk,0x1aea3080000,262144
new,MemoryChunk,0xe36ac00000,262144
new,MemoryChunk,0x14b74b00000,262144
new,MemoryChunk,0xe1fdfc0000,262144
new,MemoryChunk,0x23eb4c40000,262144
scavenge,end,17,890625,1671212019460
tick,0x225ca84a628,27098615,0,0x0,0
tick,0x7ff6a8088b07,27114662,0,0x0,0,0x7ff6a8153cd0,0x225ca8210a7,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x225ca814377,27130659,0,0x0,0,0x225ca83b26c,0x225ca82fab3,0x225ca811be5,0x225ca847a7c,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a802989b,27146647,0,0x0,0,0x7ff6a81557b0,0x225ca81187f,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x3aa83ac0000,262144
tick,0x7ff6a802179e,27162669,0,0x0,0,0x7ff6a81557b0,0x225ca84d803,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,17,921875,1671212019525
new,MemoryChunk,0xc4c7a80000,262144
new,MemoryChunk,0x363bda80000,262144
new,MemoryChunk,0xadd4ac0000,262144
new,MemoryChunk,0x34e4b340000,262144
new,MemoryChunk,0x27debd40000,262144
new,MemoryChunk,0x2a1b6380000,262144
new,MemoryChunk,0x3c20d080000,262144
new,MemoryChunk,0xefb9c40000,262144
new,MemoryChunk,0x37d77c40000,262144
new,MemoryChunk,0x3d97e280000,262144
scavenge,end,17,937500,1671212019527
tick,0x7fffb299b748,27178638,0,0x0,0,0x7ff6a82d7030,0x225ca81652c,0x225ca82665c,0x225ca846d11,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
tick,0x7ff6a8395371,27194686,0,0x0,0,0x225ca7f840c,0x225ca821324,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a81bd11b,27210648,0,0x0,0,0x7ff6a8153cd0,0x225ca821e8f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a834259c,27226679,0,0x0,0,0x7ff6a82ef2d0,0x225ca850225,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,17,968750,1671212019595
new,MemoryChunk,0x2cb7b480000,262144
new,MemoryChunk,0x20f94a80000,262144
new,MemoryChunk,0x34b945c0000,262144
new,MemoryChunk,0x481ed40000,262144
new,MemoryChunk,0x1ed763c0000,262144
new,MemoryChunk,0x3f2380000,262144
new,MemoryChunk,0x2cd8d600000,262144
new,MemoryChunk,0x26251800000,262144
new,MemoryChunk,0xefc1ac0000,262144
new,MemoryChunk,0x1c5dda00000,262144
scavenge,end,17,968750,1671212019596
tick,0x7fffb2a0d1a4,27242675,0,0x0,0,0x9ce61cea88,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x1247fd40000,262144
tick,0x7ff6a82248c0,27258703,0,0x0,6
tick,0x7ff6a7feb951,27274659,0,0x0,5
new,MemoryChunk,0x21e100000,262144
tick,0x7ff6a8158a25,27290681,0,0x0,0,0x7ff6a8153cd0,0x225ca821d0d,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,18,31250,1671212019666
new,MemoryChunk,0x28a44200000,262144
new,MemoryChunk,0x3379ae80000,262144
new,MemoryChunk,0x2f879780000,262144
new,MemoryChunk,0x2fe800000,262144
new,MemoryChunk,0x29b6bd40000,262144
new,MemoryChunk,0x144d2680000,262144
new,MemoryChunk,0x131ef740000,262144
new,MemoryChunk,0xb6f8c00000,262144
new,MemoryChunk,0x13f6f240000,262144
scavenge,end,18,46875,1671212019667
tick,0x7ff6a8312b92,27306666,0,0x0,5,0x9ce61ceb38,0x225ca850510,0x225ca821882,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
new,MemoryChunk,0x3bd81600000,262144
tick,0x7ff6a8012b65,27322684,0,0x0,0,0x7ff6a7f02870,0x225ca820582,0x225ca8213f3,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a8020405,27338661,0,0x0,0,0x7ff6a8153410,0x225ca847a2a,0x225ca82fab3,0x225ca811be5,0x225ca846dd6,0x225ca82fab3,0x225ca811be5,0x225ca82d6aa,0x225ca85ee72,0x225ca828ff4,0x225ca82af3e
new,MemoryChunk,0x184f6c40000,262144
new,MemoryChunk,0x5bf5780000,262144
tick,0x7fffb2a0d1a4,27354679,0,0x0,0,0x9ce61cea90,0x225ca836111,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
scavenge,begin,18,93750,1671212019730
new,MemoryChunk,0x2cc20000000,262144
new,MemoryChunk,0x1fdf8f00000,262144
new,MemoryChunk,0x372590c0000,262144
new,MemoryChunk,0x31e56bc0000,262144
new,MemoryChunk,0x17671180000,262144
new,MemoryChunk,0x3a4e0bc0000,262144
new,MemoryChunk,0x96eff00000,262144
new,MemoryChunk,0x20256a40000,262144
new,MemoryChunk,0x11b3da40000,262144
new,MemoryChunk,0x11dbe140000,262144
new,MemoryChunk,0xb2c5380000,262144
scavenge,end,18,93750,1671212019732
tick,0x7ff6a79e3c26,27370694,0,0x0,8
tick,0x7ff6a82ef4ea,27386702,0,0x0,0,0x7ff6a82ef2d0,0x225ca835c50,0x225ca8593d9,0x225ca82248f,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
tick,0x7ff6a818fe70,27402731,0,0x0,1
tick,0x7ff6a7c93f15,27418732,0,0x0,0,0x7ff6a8153cd0,0x225ca8116d4,0x225ca758b11,0x225ca860fee,0x225ca860628
markcompact,begin,18,125000,1671212019789
delete,MemoryChunk,0x2232f900000
delete,MemoryChunk,0x3848ff40000
delete,MemoryChunk,0x13054180000
delete,MemoryChunk,0x21386600000
delete,MemoryChunk,0x238d8f00000
delete,MemoryChunk,0xb12b640000
delete,MemoryChunk,0x2a925600000
delete,MemoryChunk,0x2d8a4c00000
delete,MemoryChunk,0x3ab9a240000
delete,MemoryChunk,0x3807a000000
delete,MemoryChunk,0x2bcda100000
delete,MemoryChunk,0x33997f80000
delete,MemoryChunk,0x17a80a80000
delete,MemoryChunk,0x20399d00000
delete,MemoryChunk,0x1229e5c0000
delete,MemoryChunk,0x1c5054c0000
delete,MemoryChunk,0x15c857c0000
delete,MemoryChunk,0xe36ac00000
delete,MemoryChunk,0x14b74b00000
delete,MemoryChunk,0x23eb4c40000
delete,MemoryChunk,0x13774040000
delete,MemoryChunk,0x363bda80000
delete,MemoryChunk,0x34e4b340000
delete,MemoryChunk,0x1aea3080000
delete,MemoryChunk,0x2a1b6380000
delete,MemoryChunk,0xefb9c40000
delete,MemoryChunk,0x3d97e280000
delete,MemoryChunk,0xc4c7a80000
delete,MemoryChunk,0xe1fdfc0000
delete,MemoryChunk,0xadd4ac0000
delete,MemoryChunk,0x27debd40000
delete,MemoryChunk,0x1ddd7600000
delete,MemoryChunk,0x3c20d080000
delete,MemoryChunk,0x37d77c40000
delete,MemoryChunk,0x20f94a80000
delete,MemoryChunk,0x481ed40000
delete,MemoryChunk,0x2cb7b480000
delete,MemoryChunk,0x34b945c0000
delete,MemoryChunk,0x1ed763c0000
delete,MemoryChunk,0x3f2380000
delete,MemoryChunk,0x2cd8d600000
delete,MemoryChunk,0x26251800000
delete,MemoryChunk,0xefc1ac0000
delete,MemoryChunk,0x1c5dda00000
delete,MemoryChunk,0x21e100000
delete,MemoryChunk,0x28a44200000
delete,MemoryChunk,0x3379ae80000
delete,MemoryChunk,0x2f879780000
delete,MemoryChunk,0x2fe800000
delete,MemoryChunk,0x29b6bd40000
delete,MemoryChunk,0x144d2680000
delete,MemoryChunk,0x131ef740000
delete,MemoryChunk,0xb6f8c00000
delete,MemoryChunk,0x13f6f240000
delete,MemoryChunk,0x3bd81600000
delete,MemoryChunk,0x5bf5780000
delete,MemoryChunk,0x2cc20000000
delete,MemoryChunk,0x31e56bc0000
delete,MemoryChunk,0x372590c0000
delete,MemoryChunk,0x17671180000
delete,MemoryChunk,0x96eff00000
delete,MemoryChunk,0x20256a40000
delete,MemoryChunk,0x11b3da40000
delete,MemoryChunk,0x11dbe140000
delete,MemoryChunk,0xb2c5380000
delete,MemoryChunk,0x24eaf00000
delete,MemoryChunk,0x360b3d00000
delete,MemoryChunk,0x3aeaaa00000
delete,MemoryChunk,0x3aa83ac0000
delete,MemoryChunk,0x1247fd40000
markcompact,end,18,125000,1671212019791
tick,0x7ff6a80280ee,27434704,0,0x0,5
tick,0x7ff6a801e426,27450739,0,0x0,0,0x7ff6a81557b0,0x225ca84368d,0x225ca822115,0x225ca85cb7f,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca860fee,0x225ca860628
code-creation,LazyCompile,10,27458532,0x1129ffcdcde,427,onStreamRead node:internal/stream_base_commons:171:22,0x1d24e4c3790,~
code-source-info,0x1129ffcdcde
code-creation,LazyCompile,10,27458671,0x1129ffce07e,5,get node:net:580:16,0xbfdd37cdd8,~
code-source-info,0x1129ffce07e,120,15929,15968,C0O15951C4O15963,,
code-creation,LazyCompile,10,27458818,0x1129ffce1c6,181,errnoException node:internal/errors:575:26,0x25aadb25448,~
code-source-info,0x1129ffce1c6,11,16890,17773,C0O17181C6O17205C12O17212C19O17210C25O17247C30O17252C35O17252C41O17298C47O17319C57O17330C70O17338C78O17354C88O17365C93O17397C98O17403C103O17425C106O17429C111O17463C117O17485C121O17560C128O17560C134O17585C137O17589C142O17623C149O17645C153O17662C155O17671C159O17683C161O17691C165O17704C167O17715C171O17733C176O17740C180O17768,,
code-creation,LazyCompile,10,27458887,0x1129ffce3f6,62,getSystemErrorName node:util:326:28,0x2ee4c9fb578,~
code-source-info,0x1129ffce3f6,39,9214,9409,C0O9225C8O9225C13O9256C14O9264C21O9273C24O9273C30O9306C46O9312C51O9306C52O9376C57O9383C61O9406,,
code-creation,LazyCompile,10,27458928,0x1129ffce566,28,getSystemErrorName node:internal/util:310:28,0x25aadb2b0f8,~
code-source-info,0x1129ffce566,12,8799,8904,C0O8824C5O8824C10O8845C13O8865C23O8895C27O8901,,
code-creation,LazyCompile,10,27458963,0x1129ffce68e,70,uvErrmapGet node:internal/errors:449:21,0x25aadb252c0,~
code-source-info,0x1129ffce68e,11,12974,13143,C0O12986C3O12998C9O12996C15O13011C20O13026C26O13041C33O13060C36O13070C41O13070C45O13058C49O13093C56O13116C59O13126C64O13100C69O13140,,
code-creation,LazyCompile,10,27459000,0x1129ffce7ce,30,lazyUv node:internal/errors:440:16,0x25aadb25270,~
code-source-info,0x1129ffce7ce,11,12799,12893,C0O12807C6O12830C12O12842C19O12840C25O12873C29O12890,,
code-creation,LazyCompile,10,27459080,0x1129ffce916,64,isErrorStackTraceLimitWritable node:internal/errors:198:40,0x25aadb24c18,~
code-source-info,0x1129ffce916,11,5715,5981,C0O5736C7O5767C13O5736C19O5797C21O5828C28O5854C31O5835C35O5861C36O5872C44O5879C51O5939C57O5960C62O5964C63O5978,,
code-creation,LazyCompile,10,27459135,0x1129ffcea96,68,captureLargerStackTrace node:internal/errors:458:35,0x25aadb25310,~
code-source-info,0x1129ffcea96,11,13231,13612,C0O13278C3O13278C7O13317C9O13357C14O13385C21O13377C27O13409C32O13433C35O13431C39O13455C44O13455C48O13513C52O13544C59O13568C61O13566C65O13596C67O13607,,
code-creation,LazyCompile,10,27459347,0x1129ffced3e,343,prepareStackTrace node:internal/errors:90:27,0x25aadb23c08,~
code-source-info,0x1129ffced3e
code-creation,LazyCompile,10,27459733,0x1129ffcf21e,375,Socket._destroy node:net:667:37,0xbfdd37d198,~
code-source-info,0x1129ffcf21e
code-creation,LazyCompile,10,27459834,0x1129ffcf58e,97,getStderr node:internal/bootstrap/switches/is_main_thread:133:19,0x1d24e4d2310,~
code-source-info,0x1129ffcf58e,88,3772,4095,C0O3780C6O3792C10O3806C11O3810C17O3819C24O3817C30O3852C37O3873C40O3880C44O3871C48O3957C55O3973C59O3992C64O4003C70O4017C73O4025C86O4025C92O4078C96O4092,,
code-creation,LazyCompile,10,27459960,0x1129ffcf796,85,Server._emitCloseIfDrained node:net:1663:48,0xbfdd37dcc0,~
code-source-info,0x1129ffcf796,120,46164,46555,C0O46172C8O46172C12O46223C18O46239C24O46260C32O46323C39O46337C44O46260C49O46357C50O46364C51O46375C58O46407C60O46406C67O46463C78O46375C84O46554,,
code-creation,LazyCompile,10,27460007,0x1129ffcf8d6,17,emitErrorCloseNT node:internal/streams/destroy:121:26,0x334252cf418,~
code-source-info,0x1129ffcf8d6,47,2551,2616,C0O2568C3O2568C8O2595C11O2595C16O2615,,
code-creation,LazyCompile,10,27460048,0x1129ffcf9de,64,emitErrorNT node:internal/streams/destroy:142:21,0x334252cf4b8,~
code-source-info,0x1129ffcf9de,47,2918,3201,C0O2950C5O2984C10O3005C12O3017C20O3035C22O3042C28O3064C29O3071C30O3082C34O3096C35O3111C39O3127C43O3141C44O3156C48O3179C56O3179C63O3200,,
code-creation,LazyCompile,10,27460174,0x1129ffcfbe6,145,socketOnError node:_http_server:663:23,0xbfdd37fe60,~
code-source-info,0x1129ffcfbe6,173,23109,23747,C0O23151C11O23151C17O23199C27O23211C30O23199C36O23233C41O23240C55O23240C62O23286C68O23303C74O23316C79O23336C81O23365C102O23421C107O23480C109O23540C114O23586C116O23622C121O23664C123O23694C128O23694C133O23728C138O23728C144O23746,,
code-creation,Function,11,27460657,0x225ca864a00,2528,Socket._destroy node:net:667:37,0xbfdd37d198,^
code-source-info,0x225ca864a00,120,17999,18983,,,
code-creation,Function,11,27460692,0x225ca865440,1132,percolateDown node:internal/priority_queue:49:16,0x2ee4c9fd4d8,^
code-source-info,0x225ca865440,64,1152,1829,,,
code-creation,Function,11,27460712,0x225ca865920,412,compareTimersLists node:internal/timers:400:28,0x334252fec88,^
code-source-info,0x225ca865920,63,12291,12478,,,
code-creation,Function,11,27460733,0x225ca865b20,648,isErrorStackTraceLimitWritable node:internal/errors:198:40,0x25aadb24c18,^
code-source-info,0x225ca865b20,11,5715,5981,,,
code-creation,Function,11,27460749,0x225ca865e20,60,get node:net:580:16,0xbfdd37cdd8,^
code-source-info,0x225ca865e20,120,15929,15968,,,
code-creation,Function,11,27460773,0x225ca865ec0,732,captureLargerStackTrace node:internal/errors:458:35,0x25aadb25310,^
code-source-info,0x225ca865ec0,11,13231,13612,,,
code-creation,Function,11,27460919,0x225ca866200,1420,errnoException node:internal/errors:575:26,0x25aadb25448,^
code-source-info,0x225ca866200,11,16890,17773,,,
code-creation,Function,11,27460944,0x225ca866800,504,emitErrorNT node:internal/streams/destroy:142:21,0x334252cf4b8,^
code-source-info,0x225ca866800,47,2918,3201,,,
code-creation,Function,11,27460960,0x225ca866a60,120,emitErrorCloseNT node:internal/streams/destroy:121:26,0x334252cf418,^
code-source-info,0x225ca866a60,47,2551,2616,,,
code-creation,Function,11,27461002,0x225ca866b40,2784,prepareStackTrace node:internal/errors:90:27,0x25aadb23c08,^
code-source-info,0x225ca866b40,11,2252,3783,,,
code-creation,Function,11,27461303,0x225ca867680,732,Server._emitCloseIfDrained node:net:1663:48,0xbfdd37dcc0,^
code-source-info,0x225ca867680,120,46164,46555,,,
code-creation,Function,11,27461332,0x225ca8679c0,732,uvErrmapGet node:internal/errors:449:21,0x25aadb252c0,^
code-source-info,0x225ca8679c0,11,12974,13143,,,
code-creation,Function,11,27461351,0x225ca867d00,256,getSystemErrorName node:internal/util:310:28,0x25aadb2b0f8,^
code-source-info,0x225ca867d00,12,8799,8904,,,
code-creation,Function,11,27461374,0x225ca867e60,572,getSystemErrorName node:util:326:28,0x2ee4c9fb578,^
code-source-info,0x225ca867e60,39,9214,9409,,,
code-creation,Function,11,27461398,0x225ca868100,1040,socketOnError node:_http_server:663:23,0xbfdd37fe60,^
code-source-info,0x225ca868100,173,23109,23747,,,
code-creation,LazyCompile,10,27462683,0x1129ffd18be,40, node:net:685:24,0x1129ffcf0c0,~
code-source-info,0x1129ffd18be,120,18525,18607,C0O18540C10O18540C14O18568C19O18573C29O18587C32O18573C39O18606,,
code-creation,LazyCompile,10,27462728,0x1129ffd1a0e,46,socketOnClose node:_http_server:587:23,0xbfdd37fc30,~
code-source-info,0x1129ffd1a0e,173,20657,20788,C0O20678C8O20678C12O20711C17O20729C27O20711C32O20755C35O20775C40O20755C45O20787,,
code-creation,LazyCompile,10,27462779,0x1129ffd1b4e,92,freeParser node:_http_common:192:20,0x2bdba1350c0,~
code-source-info,0x1129ffd1b4e,168,6293,6899,C0O6320C4O6350C10O6375C15O6375C19O6393C22O6393C26O6419C31O6431C36O6431C43O6444C48O6588C56O6588C63O6785C68O6785C72O6808C76O6824C77O6835C81O6851C85O6870C86O6884C91O6898,,
code-creation,LazyCompile,10,27462846,0x1129ffd1d2e,38,free node:internal/freelist:21:7,0x2bdba137458,~
code-source-info,0x1129ffd1d2e,169,345,471,C0O367C5O372C10O386C14O379C19O405C24O410C29O410C34O428C35O440C36O453C37O466,,
code-creation,LazyCompile,10,27462958,0x1129ffd1e66,44,abortIncoming node:_http_server:593:23,0xbfdd37fc80,~
code-source-info,0x1129ffd1e66,173,20814,20981,C0O20846C6O20882C11O20882C16O20900C23O20908C29O20908C34O20900C39O20830C43O20980,,
code-creation,Function,11,27463032,0x225ca868580,276,free node:internal/freelist:21:7,0x2bdba137458,^
code-source-info,0x225ca868580,169,345,471,,,
code-creation,Function,11,27463055,0x225ca868700,388,lazyUv node:internal/errors:440:16,0x25aadb25270,^
code-source-info,0x225ca868700,11,12799,12893,,,
code-creation,Function,11,27463097,0x225ca868900,3588,onStreamRead node:internal/stream_base_commons:171:22,0x1d24e4c3790,^
code-source-info,0x225ca868900,84,4362,6631,,,
code-creation,LazyCompile,10,27463312,0x1129ffd2636,14,onReadableStreamEnd node:net:649:29,0xbfdd37c200,~
code-source-info,0x1129ffd2636,120,17689,17764,C0O17707C6O17729C8O17740C13O17763,,
code-creation,LazyCompile,10,27463574,0x1129ffd27ae,132,socketOnEnd node:_http_server:601:21,0xbfdd37fcd0,~
code-source-info,0x1129ffd27ae,173,21005,21523,C0O21061C5O21061C10O21076C12O21095C14O21084C19O21109C27O21109C31O21214C34O21228C39O21228C47O21269C53O21302C58O21302C64O21329C69O21338C75O21359C80O21374C85O21383C89O21390C92O21367C97O21401C103O21430C109O21458C115O21477C121O21509C126O21509C131O21522,,
code-creation,LazyCompile,10,27463639,0x1129ffd297e,54,Socket.end node:net:608:32,0xbfdd37cee8,~
code-source-info,0x1129ffd297e,120,16603,16787,C0O16635C5O16642C10O16649C15O16659C20O16663C37O16663C42O16740C47O16740C51O16772C53O16784,,
code-creation,LazyCompile,10,27463719,0x1129ffd2b16,242,Writable.end node:internal/streams/writable:594:34,0x334252eab78,~
code-source-info,0x1129ffd2b16,56,18604,19986,C0O18650C5O18671C11O18711C14O18728C17O18747C22O18774C28O18817C31O18837C34O18868C36O18878C44O18940C56O18940C62O18976C64O18995C66O18984C71O19011C76O19077C82O19092C84O19105C88O19120C93O19120C97O19140C103O19194C109O19212C115O19551C116O19564C120O19577C131O19577C136O19614C137O19626C143O19654C149O19671C159O19677C167O19737C173O19755C183O19761C189O19804C195O19841C199O19858C205O19877C208O19885C213O19885C221O19925C223O19931C225O19930C229O19944C234O19944C239O19971C241O19983,,
code-creation,LazyCompile,10,27463802,0x1129ffd2d86,61,prefinish node:internal/streams/writable:715:19,0x334252eac88,~
code-source-info,0x1129ffd2d86,56,21680,21977,C0O21712C6O21734C12O21772C20O21804C26O21824C27O21842C31O21857C34O21857C41O21904C42O21922C46O21944C54O21944C60O21976,,
code-creation,LazyCompile,10,27463887,0x1129ffd30b6,152,callFinal node:internal/streams/writable:662:19,0x334252eac38,~
code-source-info,0x1129ffd30b6,56,20333,21658,C0O20333C22O20367C23O20367C25O21146C29O21157C33O21168C42O21183C49O21218C52O21225C60O21225C66O21248C69O21297C74O21310C78O21358C83O21375C99O21358C117O21596C135O21596C142O21636C146O21647C151O21657,,
code-creation,LazyCompile,10,27463960,0x1129ffd341e,203,Socket._final node:net:427:35,0xbfdd37c930,~
code-source-info,0x1129ffd341e,120,11957,12587,C0O11957C13O12047C16O12056C22O12072C32O12072C36O12113C39O12125C52O12125C58O12164C59O12175C62O12185C68O12199C71O12206C74O12211C75O12217C85O12217C89O12279C96O12279C102O12302C106O12317C110O12337C113O12355C117O12348C121O12367C123O12380C127O12401C130O12406C135O12414C140O12414C146O12434C148O12442C157O12459C159O12455C164O12500C167O12507C170O12512C171O12521C172O12529C177O12541C184O12551C190O12551C196O12548C200O12584C202O12586,,
code-creation,LazyCompile,10,27464020,0x1129ffd3676,12,get node:net:548:6,0xbfdd37cc78,~
code-source-info,0x1129ffd3676,120,15213,15268,C0O15236C7O15252C11O15263,,
code-creation,Function,11,27464230,0x225ca869780,480,prefinish node:internal/streams/writable:715:19,0x334252eac88,^
code-source-info,0x225ca869780,56,21680,21977,,,
code-creation,Function,11,27464257,0x225ca8699c0,360,socketOnClose node:_http_server:587:23,0xbfdd37fc30,^
code-source-info,0x225ca8699c0,173,20657,20788,,,
code-creation,Function,11,27464275,0x225ca869ba0,304, node:net:685:24,0x1129ffcf0c0,^
code-source-info,0x225ca869ba0,120,18525,18607,,,
code-creation,Function,11,27464294,0x225ca869d40,688,freeParser node:_http_common:192:20,0x2bdba1350c0,^
code-source-info,0x225ca869d40,168,6293,6899,,,
code-creation,Function,11,27464315,0x225ca86a060,408,abortIncoming node:_http_server:593:23,0xbfdd37fc80,^
code-source-info,0x225ca86a060,173,20814,20981,,,
code-creation,Function,11,27464331,0x225ca86a260,132,get node:net:548:6,0xbfdd37cc78,^
code-source-info,0x225ca86a260,120,15213,15268,,,
code-creation,Function,11,27464349,0x225ca86a360,388,Socket.end node:net:608:32,0xbfdd37cee8,^
code-source-info,0x225ca86a360,120,16603,16787,,,
code-creation,Function,11,27464546,0x225ca86a560,1684,Writable.end node:internal/streams/writable:594:34,0x334252eab78,^
code-source-info,0x225ca86a560,56,18604,19986,,,
code-creation,Function,11,27464581,0x225ca86ac60,1480,Socket._final node:net:427:35,0xbfdd37c930,^
code-source-info,0x225ca86ac60,120,11957,12587,,,
code-creation,Function,11,27464598,0x225ca86b2a0,132,onReadableStreamEnd node:net:649:29,0xbfdd37c200,^
code-source-info,0x225ca86b2a0,120,17689,17764,,,
code-creation,Function,11,27464624,0x225ca86b3a0,1168,callFinal node:internal/streams/writable:662:19,0x334252eac38,^
code-source-info,0x225ca86b3a0,56,20333,21658,,,
tick,0x7ff6a801c4cf,27466694,0,0x0,0,0x7ff6a8153cd0,0x225ca854bb6,0x7ff6a83c2541,0x225ca8078ba,0x225ca8573d2,0x225ca84da9e,0x225ca811cc7,0x225ca758b11,0x225ca7ca221,0x225ca80c545,0x225ca860628
code-creation,LazyCompile,10,27468871,0x1129ffdcb46,47,afterShutdown node:net:451:23,0xbfdd37c110,~
code-source-info,0x1129ffdcb46,120,12614,12774,C0O12640C7O12647C9O12646C13O12667C21O12708C26O12733C31O12667C36O12760C41O12760C46O12773,,
code-creation,LazyCompile,10,27468990,0x1129ffdccbe,230,onFinish node:internal/streams/writable:665:20,0x1129ffd2f10,~
code-source-info,0x1129ffdccbe,56,20396,21140,C0O20409C6O20430C26O20460C29O20460C33O20430C38O20493C39O20500C40O20513C44O20520C50O20535C59O20550C63O20559C67O20603C74O20609C76O20608C80O20622C87O20622C93O20653C95O20678C99O20658C104O20702C106O20719C110O20722C115O20687C120O20640C123O20745C136O20779C144O20745C151O20798C159O20802C165O20830C169O20848C173O20863C176O20870C184O20870C189O21062C198O21077C202O21088C207O21096C223O21096C229O21139,,
code-creation,LazyCompile,10,27469102,0x1129ffdcf5e,127,finish node:internal/streams/writable:741:16,0x334252ead28,~
code-source-info,0x1129ffdcf5e,56,22324,23060,C0O22345C6O22360C10O22367C11O22382C15O22421C17O22427C19O22426C23O22440C30O22440C36O22467C38O22492C42O22472C47O22512C49O22529C53O22532C57O22501C62O22454C65O22553C73O22553C78O22584C84O22747C89O22788C92O22815C98O22948C104O22969C110O22978C114O23002C116O23035C121O23035C126O23059,,
code-creation,LazyCompile,10,27469237,0x1129ffdd176,22,connResetException node:internal/errors:689:28,0x25aadb25580,~
code-source-info,0x1129ffdd176,11,21356,21489,C0O21430C7O21430C13O21449C15O21457C19O21476C21O21486,,
code-creation,LazyCompile,10,27469430,0x1129ffdd396,46,onServerResponseClose node:_http_server:213:31,0x334160bff78,~
code-source-info,0x1129ffdd396,173,8020,9079,C0O8938C6O8964C12O8987C16O9005C22O9026C26O9044C31O9057C39O9057C45O9078,,
code-creation,Function,11,27470129,0x225ca86b8a0,964,finish node:internal/streams/writable:741:16,0x334252ead28,^
code-source-info,0x225ca86b8a0,56,22324,23060,,,
code-creation,Function,11,27470164,0x225ca86bce0,964,socketOnEnd node:_http_server:601:21,0xbfdd37fcd0,^
code-source-info,0x225ca86bce0,173,21005,21523,,,
code-creation,Function,11,27470184,0x225ca86c120,376,afterShutdown node:net:451:23,0xbfdd37c110,^
code-source-info,0x225ca86c120,120,12614,12774,,,
code-creation,Function,11,27470201,0x225ca86c300,192,connResetException node:internal/errors:689:28,0x25aadb25580,^
code-source-info,0x225ca86c300,11,21356,21489,,,
code-creation,Function,11,27470226,0x225ca86c420,316,onServerResponseClose node:_http_server:213:31,0x334160bff78,^
code-source-info,0x225ca86c420,173,8020,9079,,,
tick,0x7fffb2a0feb4,27482831,0,0x0,8
tick,0x7fffb2a0feb4,27498762,0,0x0,8
tick,0x7fffb2a0feb4,27514786,0,0x0,8
tick,0x7fffb2a0feb4,27530723,0,0x0,8
tick,0x7fffb2a0feb4,27546752,0,0x0,8
tick,0x7fffb2a0feb4,27561769,0,0x0,8
tick,0x7fffb2a0feb4,27577760,0,0x0,8
tick,0x7fffb2a0feb4,27593726,0,0x0,8
tick,0x7fffb2a0feb4,27609763,0,0x0,8
tick,0x7fffb2a0feb4,27625757,0,0x0,8
tick,0x7ff6a7ab1e30,27641764,0,0x0,8
tick,0x7fffb2a0feb4,27657731,0,0x0,8
tick,0x7fffb2a0feb4,27673762,0,0x0,8
tick,0x7fffb2a0feb4,27689762,0,0x0,8
tick,0x7fffb2a0feb4,27705783,0,0x0,8
tick,0x7fffb2a0feb4,27721751,0,0x0,8
tick,0x7fffb2a0feb4,27737861,0,0x0,8
tick,0x7fffb2a0feb4,27753839,0,0x0,8
tick,0x7fffb2a0feb4,27769843,0,0x0,8
tick,0x7fffb2a0feb4,27785750,0,0x0,8
tick,0x7fffb2a0feb4,27800837,0,0x0,8
tick,0x7fffb2a0feb4,27816882,0,0x0,8
tick,0x7fffb2a0feb4,27832847,0,0x0,8
tick,0x7fffb2a0feb4,27848831,0,0x0,8
tick,0x7fffb2a0feb4,27864828,0,0x0,8
tick,0x7fffb2a0feb4,27880766,0,0x0,8
tick,0x7fffb2a0feb4,27896836,0,0x0,8
tick,0x7fffb2a0feb4,27912832,0,0x0,8
tick,0x7fffb2a0feb4,27928839,0,0x0,8
tick,0x7fffb2a0feb4,27944842,0,0x0,8
tick,0x7fffb2a0feb4,27960871,0,0x0,8
tick,0x7fffb2a0feb4,27976846,0,0x0,8
tick,0x7fffb2a0feb4,27992729,0,0x0,8
tick,0x7fffb2a0feb4,28008750,0,0x0,8
tick,0x7fffb2a0feb4,28024768,0,0x0,8
tick,0x7fffb2a0feb4,28040748,0,0x0,8
tick,0x7fffb2a0feb4,28056846,0,0x0,8
tick,0x7fffb2a0feb4,28072827,0,0x0,8
tick,0x7fffb2a0feb4,28088827,0,0x0,8
tick,0x7fffb2a0feb4,28104837,0,0x0,8
tick,0x7fffb2a0feb4,28119849,0,0x0,8
tick,0x7fffb2a0feb4,28135844,0,0x0,8
tick,0x7fffb2a0feb4,28151884,0,0x0,8
tick,0x7fffb2a0feb4,28166860,0,0x0,8
tick,0x7fffb2a0feb4,28182876,0,0x0,8
tick,0x7fffb2a0feb4,28198201,0,0x0,8
tick,0x7fffb2a0feb4,28213847,0,0x0,8
tick,0x7fffb2a0feb4,28229865,0,0x0,8
tick,0x7fffb2a0feb4,28245841,0,0x0,8
tick,0x7fffb2a0feb4,28261852,0,0x0,8
tick,0x7fffb2a0feb4,28277862,0,0x0,8
tick,0x7fffb2a0feb4,28293177,0,0x0,8
tick,0x7fffb2a0feb4,28308859,0,0x0,8
tick,0x7fffb2a0feb4,28324821,0,0x0,8
tick,0x7fffb2a0feb4,28340849,0,0x0,8
tick,0x7fffb2a0feb4,28356741,0,0x0,8
tick,0x7fffb2a0feb4,28372838,0,0x0,8
tick,0x7fffb2a0feb4,28388690,0,0x0,8
tick,0x7fffb2a0feb4,28404254,0,0x0,8
tick,0x7fffb2a0feb4,28419863,0,0x0,8
tick,0x7fffb2a0feb4,28435879,0,0x0,8
tick,0x7fffb2a0feb4,28451822,0,0x0,8
tick,0x7fffb2a0feb4,28467858,0,0x0,8
tick,0x7fffb2a0feb4,28483824,0,0x0,8
tick,0x7fffb2a0feb4,28499836,0,0x0,8
tick,0x7fffb2a0feb4,28515838,0,0x0,8
tick,0x7fffb2a0feb4,28530859,0,0x0,8
tick,0x7fffb2a0feb4,28546834,0,0x0,8
tick,0x7fffb2a0feb4,28562835,0,0x0,8
tick,0x7fffb2a0feb4,28578846,0,0x0,8
tick,0x7fffb2a0feb4,28594842,0,0x0,8
tick,0x7fffb2a0feb4,28610817,0,0x0,8
tick,0x7fffb2a0feb4,28626717,0,0x0,8
tick,0x7fffb2a0feb4,28642716,0,0x0,8
tick,0x7fffb2a0feb4,28658761,0,0x0,8
tick,0x7fffb2a0feb4,28674734,0,0x0,8
tick,0x7fffb2a0feb4,28690764,0,0x0,8
tick,0x7fffb2a0feb4,28706838,0,0x0,8
tick,0x7fffb2a0feb4,28722859,0,0x0,8
tick,0x7fffb2a0feb4,28738832,0,0x0,8
tick,0x7fffb2a0feb4,28754876,0,0x0,8
tick,0x7fffb2a0feb4,28770820,0,0x0,8
tick,0x7fffb2a0feb4,28786846,0,0x0,8
tick,0x7fffb2a0feb4,28802818,0,0x0,8
tick,0x7fffb2a0feb4,28817848,0,0x0,8
tick,0x7fffb2a0feb4,28833827,0,0x0,8
tick,0x7fffb2a0feb4,28849810,0,0x0,8
tick,0x7fffb2a0feb4,28865792,0,0x0,8
tick,0x7fffb2a0feb4,28881802,0,0x0,8
tick,0x7fffb2a0feb4,28897633,0,0x0,8
tick,0x7fffb2a0feb4,28912732,0,0x0,8
tick,0x7fffb2a0feb4,28928826,0,0x0,8
tick,0x7fffb2a0feb4,28943845,0,0x0,8
tick,0x7fffb2a0feb4,28959821,0,0x0,8
tick,0x7fffb2a0feb4,28975842,0,0x0,8
tick,0x7fffb2a0feb4,28991819,0,0x0,8
tick,0x7fffb2a0feb4,29007850,0,0x0,8
tick,0x7fffb2a0feb4,29023830,0,0x0,8
tick,0x7fffb2a0feb4,29038818,0,0x0,8
tick,0x7fffb2a0feb4,29054734,0,0x0,8
tick,0x7fffb2a0feb4,29069844,0,0x0,8
tick,0x7fffb2a0feb4,29085826,0,0x0,8
tick,0x7fffb2a0feb4,29101170,0,0x0,8
tick,0x7fffb2a0feb4,29116744,0,0x0,8
tick,0x7fffb2a0feb4,29132754,0,0x0,8
tick,0x7fffb2a0feb4,29148834,0,0x0,8
tick,0x7fffb2a0feb4,29164837,0,0x0,8
tick,0x7fffb2a0feb4,29180759,0,0x0,8
tick,0x7fffb2a0feb4,29195796,0,0x0,8
tick,0x7fffb2a0feb4,29211823,0,0x0,8
tick,0x7fffb2a0feb4,29227856,0,0x0,8
tick,0x7fffb2a0feb4,29243832,0,0x0,8
tick,0x7fffb2a0feb4,29259859,0,0x0,8
tick,0x7fffb2a0feb4,29275827,0,0x0,8
tick,0x7fffb2a0feb4,29291823,0,0x0,8
tick,0x7fffb2a0feb4,29307418,0,0x0,8
tick,0x7fffb2a0feb4,29323412,0,0x0,8
tick,0x7fffb2a0feb4,29338665,0,0x0,8
tick,0x7fffb2a0feb4,29353843,0,0x0,8
tick,0x7fffb2a0feb4,29369828,0,0x0,8
tick,0x7fffb2a0feb4,29385802,0,0x0,8
tick,0x7fffb2a0feb4,29401315,0,0x0,8
tick,0x7fffb2a0feb4,29417310,0,0x0,8
tick,0x7fffb2a0feb4,29433290,0,0x0,8
tick,0x7fffb2a0feb4,29449303,0,0x0,8
tick,0x7fffb2a0feb4,29465307,0,0x0,8
tick,0x7fffb2a0feb4,29480843,0,0x0,8
tick,0x7fffb2a0feb4,29496830,0,0x0,8
tick,0x7fffb2a0feb4,29512828,0,0x0,8
tick,0x7fffb2a0feb4,29528820,0,0x0,8
tick,0x7fffb2a0feb4,29543839,0,0x0,8
tick,0x7fffb2a0feb4,29559800,0,0x0,8
tick,0x7fffb2a0feb4,29575831,0,0x0,8
tick,0x7fffb2a0feb4,29591811,0,0x0,8
tick,0x7fffb2a0feb4,29607835,0,0x0,8
tick,0x7fffb2a0feb4,29623824,0,0x0,8
tick,0x7fffb2a0feb4,29639876,0,0x0,8
tick,0x7fffb2a0feb4,29655861,0,0x0,8
tick,0x7fffb2a0feb4,29671774,0,0x0,8
tick,0x7fffb2a0feb4,29687752,0,0x0,8
tick,0x7fffb2a0feb4,29703790,0,0x0,8
tick,0x7fffb2a0feb4,29719751,0,0x0,8
tick,0x7fffb2a0feb4,29735765,0,0x0,8
tick,0x7fffb2a0feb4,29751743,0,0x0,8
tick,0x7fffb2a0feb4,29767266,0,0x0,8
tick,0x7fffb2a0feb4,29783236,0,0x0,8
tick,0x7fffb2a0feb4,29798683,0,0x0,8
tick,0x7fffb2a0feb4,29814648,0,0x0,8
tick,0x7fffb2a0feb4,29830675,0,0x0,8
tick,0x7fffb2a0feb4,29845885,0,0x0,8
tick,0x7fffb2a0feb4,29861912,0,0x0,8
tick,0x7fffb2a0feb4,29877570,0,0x0,8
tick,0x7fffb2a0feb4,29893052,0,0x0,8
tick,0x7fffb2a0feb4,29908600,0,0x0,8
tick,0x7fffb2a0feb4,29924412,0,0x0,8
tick,0x7fffb2a0feb4,29939594,0,0x0,8
tick,0x7fffb2a0feb4,29955666,0,0x0,8
tick,0x7fffb2a0feb4,29970976,0,0x0,8
tick,0x7fffb2a0feb4,29986858,0,0x0,8
tick,0x7fffb2a0feb4,30002255,0,0x0,8
tick,0x7fffb2a0feb4,30017271,0,0x0,8
tick,0x7fffb2a0feb4,30033264,0,0x0,8
tick,0x7fffb2a0feb4,30049145,0,0x0,8
tick,0x7fffb2a0feb4,30065135,0,0x0,8
tick,0x7fffb2a0feb4,30080374,0,0x0,8
tick,0x7fffb2a0feb4,30095823,0,0x0,8
tick,0x7fffb2a0feb4,30111780,0,0x0,8
tick,0x7fffb2a0feb4,30126926,0,0x0,8
tick,0x7fffb2a0feb4,30142757,0,0x0,8
tick,0x7fffb2a0feb4,30158031,0,0x0,8
tick,0x7fffb2a0feb4,30173819,0,0x0,8
tick,0x7fffb2a0feb4,30189070,0,0x0,8
tick,0x7fffb2a0feb4,30205006,0,0x0,8
tick,0x7fffb2a0feb4,30220969,0,0x0,8
tick,0x7fffb2a0feb4,30237012,0,0x0,8
tick,0x7fffb2a0feb4,30253059,0,0x0,8
tick,0x7fffb2a0feb4,30269001,0,0x0,8
tick,0x7fffb2a0feb4,30283991,0,0x0,8
tick,0x7fffb2a0feb4,30299996,0,0x0,8
tick,0x7fffb2a0feb4,30315989,0,0x0,8
tick,0x7fffb2a0feb4,30331869,0,0x0,8
tick,0x7fffb2a0feb4,30347421,0,0x0,8
tick,0x7fffb2a0feb4,30363431,0,0x0,8
tick,0x7fffb2a0feb4,30379423,0,0x0,8
tick,0x7fffb2a0feb4,30395461,0,0x0,8
tick,0x7fffb2a0feb4,30410840,0,0x0,8
tick,0x7fffb2a0feb4,30426452,0,0x0,8
tick,0x7fffb2a0feb4,30441827,0,0x0,8
tick,0x7fffb2a0feb4,30457853,0,0x0,8
tick,0x7fffb2a0feb4,30473854,0,0x0,8
tick,0x7fffb2a0feb4,30489860,0,0x0,8
tick,0x7fffb2a0feb4,30504822,0,0x0,8
tick,0x7fffb2a0feb4,30520857,0,0x0,8
tick,0x7fffb2a0feb4,30536824,0,0x0,8
tick,0x7fffb2a0feb4,30552861,0,0x0,8
tick,0x7fffb2a0feb4,30568845,0,0x0,8
tick,0x7fffb2a0feb4,30584894,0,0x0,8
tick,0x7fffb2a0feb4,30600386,0,0x0,8
tick,0x7fffb2a0feb4,30615863,0,0x0,8
tick,0x7fffb2a0feb4,30631838,0,0x0,8
tick,0x7fffb2a0feb4,30647874,0,0x0,8
tick,0x7fffb2a0feb4,30663008,0,0x0,8
tick,0x7fffb2a0feb4,30678862,0,0x0,8
tick,0x7fffb2a0feb4,30694850,0,0x0,8
tick,0x7fffb2a0feb4,30710484,0,0x0,8
tick,0x7fffb2a0feb4,30725756,0,0x0,8
tick,0x7fffb2a0feb4,30741771,0,0x0,8
tick,0x7fffb2a0feb4,30757851,0,0x0,8
tick,0x7fffb2a0feb4,30773899,0,0x0,8
tick,0x7fffb2a0feb4,30789827,0,0x0,8
tick,0x7fffb2a0feb4,30805853,0,0x0,8
tick,0x7fffb2a0feb4,30821843,0,0x0,8
tick,0x7fffb2a0feb4,30837880,0,0x0,8
tick,0x7fffb2a0feb4,30853856,0,0x0,8
tick,0x7fffb2a0feb4,30869857,0,0x0,8
tick,0x7fffb2a0feb4,30884847,0,0x0,8
tick,0x7fffb2a0feb4,30900946,0,0x0,8
tick,0x7fffb2a0feb4,30916868,0,0x0,8
tick,0x7fffb2a0feb4,30932858,0,0x0,8
tick,0x7fffb2a0feb4,30948846,0,0x0,8
tick,0x7fffb2a0feb4,30964841,0,0x0,8
tick,0x7fffb2a0feb4,30980830,0,0x0,8
tick,0x7fffb2a0feb4,30996842,0,0x0,8
tick,0x7fffb2a0feb4,31012835,0,0x0,8
tick,0x7fffb2a0feb4,31028879,0,0x0,8
tick,0x7fffb2a0feb4,31044839,0,0x0,8
tick,0x7fffb2a0feb4,31060861,0,0x0,8
tick,0x7fffb2a0feb4,31076836,0,0x0,8
tick,0x7fffb2a0feb4,31092870,0,0x0,8
tick,0x7fffb2a0feb4,31108833,0,0x0,8
tick,0x7fffb2a0feb4,31124839,0,0x0,8
tick,0x7fffb2a0feb4,31140757,0,0x0,8
tick,0x7fffb2a0feb4,31156775,0,0x0,8
tick,0x7fffb2a0feb4,31172744,0,0x0,8
tick,0x7fffb2a0feb4,31188869,0,0x0,8
tick,0x7fffb2a0feb4,31203776,0,0x0,8
tick,0x7fffb2a0feb4,31219775,0,0x0,8
tick,0x7fffb2a0feb4,31235756,0,0x0,8
tick,0x7fffb2a0feb4,31251800,0,0x0,8
tick,0x7fffb2a0feb4,31267767,0,0x0,8
tick,0x7fffb2a0feb4,31282798,0,0x0,8
tick,0x7fffb2a0feb4,31298787,0,0x0,8
tick,0x7fffb2a0feb4,31314780,0,0x0,8
tick,0x7fffb2a0feb4,31330783,0,0x0,8
tick,0x7fffb2a0feb4,31346806,0,0x0,8
tick,0x7fffb2a0feb4,31361785,0,0x0,8
tick,0x7fffb2a0feb4,31377811,0,0x0,8
tick,0x7fffb2a0feb4,31393804,0,0x0,8
tick,0x7fffb2a0feb4,31409844,0,0x0,8
tick,0x7fffb2a0feb4,31425801,0,0x0,8
tick,0x7fffb2a0feb4,31440862,0,0x0,8
tick,0x7fffb2a0feb4,31456854,0,0x0,8
tick,0x7fffb2a0feb4,31472854,0,0x0,8
tick,0x7fffb2a0feb4,31488810,0,0x0,8
tick,0x7fffb2a0feb4,31504865,0,0x0,8
tick,0x7fffb2a0feb4,31519821,0,0x0,8
tick,0x7fffb2a0feb4,31535851,0,0x0,8
tick,0x7fffb2a0feb4,31551770,0,0x0,8
tick,0x7fffb2a0feb4,31566860,0,0x0,8
tick,0x7fffb2a0feb4,31582818,0,0x0,8
tick,0x7fffb2a0feb4,31598844,0,0x0,8
tick,0x7fffb2a0feb4,31614836,0,0x0,8
tick,0x7fffb2a0feb4,31630868,0,0x0,8
tick,0x7fffb2a0feb4,31646835,0,0x0,8
tick,0x7fffb2a0feb4,31662296,0,0x0,8
tick,0x7fffb2a0feb4,31677783,0,0x0,8
tick,0x7fffb2a0feb4,31693855,0,0x0,8
tick,0x7fffb2a0feb4,31709829,0,0x0,8
tick,0x7fffb2a0feb4,31725812,0,0x0,8
tick,0x7fffb2a0feb4,31740838,0,0x0,8
tick,0x7fffb2a0feb4,31756849,0,0x0,8
tick,0x7fffb2a0feb4,31772838,0,0x0,8
tick,0x7fffb2a0feb4,31788862,0,0x0,8
tick,0x7fffb2a0feb4,31804846,0,0x0,8
tick,0x7fffb2a0feb4,31820859,0,0x0,8
tick,0x7fffb2a0feb4,31836847,0,0x0,8
tick,0x7fffb2a0feb4,31852844,0,0x0,8
tick,0x7fffb2a0feb4,31868827,0,0x0,8
tick,0x7fffb2a0feb4,31884881,0,0x0,8
tick,0x7fffb2a0feb4,31900802,0,0x0,8
tick,0x7fffb2a0feb4,31916802,0,0x0,8
tick,0x7fffb2a0feb4,31932816,0,0x0,8
tick,0x7fffb2a0feb4,31948858,0,0x0,8
tick,0x7fffb2a0feb4,31964839,0,0x0,8
tick,0x7fffb2a0feb4,31980807,0,0x0,8
tick,0x7fffb2a0feb4,31996784,0,0x0,8
tick,0x7fffb2a0feb4,32012830,0,0x0,8
tick,0x7fffb2a0feb4,32028811,0,0x0,8
tick,0x7fffb2a0feb4,32043821,0,0x0,8
tick,0x7fffb2a0feb4,32059812,0,0x0,8
tick,0x7fffb2a0feb4,32075845,0,0x0,8
tick,0x7fffb2a0feb4,32091830,0,0x0,8
tick,0x7fffb2a0feb4,32107787,0,0x0,8
tick,0x7fffb2a0feb4,32123765,0,0x0,8
tick,0x7fffb2a0feb4,32138941,0,0x0,8
tick,0x7fffb2a0feb4,32154821,0,0x0,8
tick,0x7fffb2a0feb4,32170802,0,0x0,8
tick,0x7fffb2a0feb4,32186788,0,0x0,8
tick,0x7fffb2a0feb4,32202806,0,0x0,8
tick,0x7fffb2a0feb4,32218845,0,0x0,8
tick,0x7fffb2a0feb4,32234831,0,0x0,8
tick,0x7fffb2a0feb4,32250818,0,0x0,8
tick,0x7fffb2a0feb4,32266832,0,0x0,8
tick,0x7fffb2a0feb4,32282814,0,0x0,8
tick,0x7fffb2a0feb4,32298752,0,0x0,8
tick,0x7fffb2a0feb4,32314741,0,0x0,8
tick,0x7fffb2a0feb4,32329862,0,0x0,8
tick,0x7fffb2a0feb4,32345834,0,0x0,8
tick,0x7fffb2a0feb4,32361836,0,0x0,8
tick,0x7fffb2a0feb4,32377827,0,0x0,8
tick,0x7fffb2a0feb4,32393860,0,0x0,8
tick,0x7fffb2a0feb4,32409802,0,0x0,8
tick,0x7fffb2a0feb4,32425843,0,0x0,8
tick,0x7fffb2a0feb4,32440816,0,0x0,8
tick,0x7fffb2a0feb4,32456823,0,0x0,8
tick,0x7fffb2a0feb4,32471816,0,0x0,8
tick,0x7fffb2a0feb4,32487862,0,0x0,8
tick,0x7fffb2a0feb4,32503827,0,0x0,8
tick,0x7fffb2a0feb4,32519853,0,0x0,8
tick,0x7fffb2a0feb4,32535834,0,0x0,8
tick,0x7fffb2a0feb4,32551860,0,0x0,8
tick,0x7fffb2a0feb4,32567764,0,0x0,8
tick,0x7fffb2a0feb4,32583882,0,0x0,8
tick,0x7fffb2a0feb4,32599815,0,0x0,8
tick,0x7fffb2a0feb4,32615853,0,0x0,8
tick,0x7fffb2a0feb4,32631826,0,0x0,8
tick,0x7fffb2a0feb4,32647795,0,0x0,8
tick,0x7fffb2a0feb4,32663820,0,0x0,8
tick,0x7fffb2a0feb4,32679882,0,0x0,8
tick,0x7fffb2a0feb4,32695822,0,0x0,8
tick,0x7fffb2a0feb4,32710847,0,0x0,8
tick,0x7fffb2a0feb4,32726859,0,0x0,8
tick,0x7fffb2a0feb4,32742836,0,0x0,8
tick,0x7fffb2a0feb4,32757842,0,0x0,8
tick,0x7fffb2a0feb4,32773837,0,0x0,8
tick,0x7fffb2a0feb4,32789849,0,0x0,8
tick,0x7fffb2a0feb4,32804897,0,0x0,8
tick,0x7fffb2a0feb4,32820828,0,0x0,8
tick,0x7ff6a820d156,32836841,0,0x0,6
tick,0x7fffb2a0feb4,32851804,0,0x0,8
tick,0x7fffb2a0feb4,32867843,0,0x0,8
tick,0x7fffb2a0feb4,32883814,0,0x0,8
tick,0x7fffb2a0feb4,32898835,0,0x0,8
tick,0x7fffb2a0feb4,32914856,0,0x0,8
tick,0x7fffb2a0feb4,32930842,0,0x0,8
tick,0x7fffb2a0feb4,32946839,0,0x0,8
tick,0x7fffb2a0feb4,32962845,0,0x0,8
tick,0x7fffb2a0feb4,32978839,0,0x0,8
tick,0x7fffb2a0feb4,32994774,0,0x0,8
tick,0x7fffb2a0feb4,33010773,0,0x0,8
tick,0x7fffb2a0feb4,33026847,0,0x0,8
tick,0x7fffb2a0feb4,33042758,0,0x0,8
tick,0x7fffb2a0feb4,33058805,0,0x0,8
tick,0x7fffb2a0feb4,33074785,0,0x0,8
tick,0x7fffb2a0feb4,33090854,0,0x0,8
tick,0x7fffb2a0feb4,33106812,0,0x0,8
tick,0x7fffb2a0feb4,33122784,0,0x0,8
tick,0x7fffb2a0feb4,33137772,0,0x0,8
tick,0x7fffb2a0feb4,33153802,0,0x0,8
tick,0x7fffb2a0feb4,33169777,0,0x0,8
tick,0x7fffb2a0feb4,33185799,0,0x0,8
tick,0x7fffb2a0feb4,33201771,0,0x0,8
tick,0x7fffb2a0feb4,33217759,0,0x0,8
tick,0x7fffb2a0feb4,33233762,0,0x0,8
tick,0x7fffb2a0feb4,33249814,0,0x0,8
tick,0x7fffb2a0feb4,33265808,0,0x0,8
tick,0x7fffb2a0feb4,33281828,0,0x0,8
tick,0x7fffb2a0feb4,33297822,0,0x0,8
tick,0x7fffb2a0feb4,33313848,0,0x0,8
tick,0x7fffb2a0feb4,33329815,0,0x0,8
tick,0x7fffb2a0feb4,33344876,0,0x0,8
tick,0x7fffb2a0feb4,33360821,0,0x0,8
tick,0x7fffb2a0feb4,33376846,0,0x0,8
tick,0x7fffb2a0feb4,33392824,0,0x0,8
tick,0x7fffb2a0feb4,33407887,0,0x0,8
tick,0x7fffb2a0feb4,33423839,0,0x0,8
tick,0x7fffb2a0feb4,33439835,0,0x0,8
tick,0x7fffb2a0feb4,33455833,0,0x0,8
tick,0x7fffb2a0feb4,33471857,0,0x0,8
tick,0x7fffb2a0feb4,33487763,0,0x0,8
tick,0x7fffb2a0feb4,33503785,0,0x0,8
tick,0x7fffb2a0feb4,33519758,0,0x0,8
tick,0x7fffb2a0feb4,33535793,0,0x0,8
tick,0x7fffb2a0feb4,33551814,0,0x0,8
tick,0x7fffb2a0feb4,33566831,0,0x0,8
tick,0x7fffb2a0feb4,33582823,0,0x0,8
tick,0x7fffb2a0feb4,33598848,0,0x0,8
tick,0x7fffb2a0feb4,33614829,0,0x0,8
tick,0x7fffb2a0feb4,33630865,0,0x0,8
tick,0x7fffb2a0feb4,33646749,0,0x0,8
tick,0x7fffb2a0feb4,33662851,0,0x0,8
tick,0x7fffb2a0feb4,33678818,0,0x0,8
tick,0x7fffb2a0feb4,33694880,0,0x0,8
tick,0x7fffb2a0feb4,33710836,0,0x0,8
tick,0x7fffb2a0feb4,33726842,0,0x0,8
tick,0x7fffb2a0feb4,33742799,0,0x0,8
tick,0x7fffb2a0feb4,33757797,0,0x0,8
tick,0x7fffb2a0feb4,33773796,0,0x0,8
tick,0x7fffb2a0feb4,33788845,0,0x0,8
tick,0x7fffb2a0feb4,33804785,0,0x0,8
tick,0x7fffb2a0feb4,33819847,0,0x0,8
tick,0x7fffb2a0feb4,33835832,0,0x0,8
tick,0x7fffb2a0feb4,33851856,0,0x0,8
tick,0x7fffb2a0feb4,33867838,0,0x0,8
tick,0x7fffb2a0feb4,33883839,0,0x0,8
tick,0x7fffb2a0feb4,33899839,0,0x0,8
tick,0x7fffb2a0feb4,33915814,0,0x0,8
tick,0x7fffb2a0feb4,33931819,0,0x0,8
tick,0x7fffb2a0feb4,33947822,0,0x0,8
tick,0x7fffb2a0feb4,33963813,0,0x0,8
tick,0x7fffb2a0feb4,33978843,0,0x0,8
tick,0x7fffb2a0feb4,33993824,0,0x0,8
tick,0x7fffb2a0feb4,34009808,0,0x0,8
tick,0x7fffb2a0feb4,34025784,0,0x0,8
tick,0x7fffb2a0feb4,34041811,0,0x0,8
tick,0x7fffb2a0feb4,34056810,0,0x0,8
tick,0x7fffb2a0feb4,34072871,0,0x0,8
tick,0x7fffb2a0feb4,34088823,0,0x0,8
tick,0x7fffb2a0feb4,34104856,0,0x0,8
tick,0x7fffb2a0feb4,34119835,0,0x0,8
tick,0x7fffb2a0feb4,34135847,0,0x0,8
tick,0x7fffb2a0feb4,34151834,0,0x0,8
tick,0x7fffb2a0feb4,34167764,0,0x0,8
tick,0x7fffb2a0feb4,34183908,0,0x0,8
tick,0x7fffb2a0feb4,34198790,0,0x0,8
tick,0x7fffb2a0feb4,34214759,0,0x0,8
tick,0x7fffb2a0feb4,34229803,0,0x0,8
tick,0x7fffb2a0feb4,34245842,0,0x0,8
tick,0x7fffb2a0feb4,34261274,0,0x0,8
tick,0x7fffb2a0feb4,34276839,0,0x0,8
tick,0x7fffb2a0feb4,34292840,0,0x0,8
tick,0x7fffb2a0feb4,34308850,0,0x0,8
tick,0x7fffb2a0feb4,34324850,0,0x0,8
tick,0x7fffb2a0feb4,34340818,0,0x0,8
tick,0x7fffb2a0feb4,34356860,0,0x0,8
tick,0x7fffb2a0feb4,34372816,0,0x0,8
tick,0x7fffb2a0feb4,34388848,0,0x0,8
tick,0x7fffb2a0feb4,34404774,0,0x0,8
tick,0x7fffb2a0feb4,34420812,0,0x0,8
tick,0x7fffb2a0feb4,34436805,0,0x0,8
tick,0x7fffb2a0feb4,34452830,0,0x0,8
tick,0x7fffb2a0feb4,34468826,0,0x0,8
tick,0x7fffb2a0feb4,34483853,0,0x0,8
tick,0x7fffb2a0feb4,34499761,0,0x0,8
tick,0x7fffb2a0feb4,34515779,0,0x0,8
tick,0x7fffb2a0feb4,34531829,0,0x0,8
tick,0x7fffb2a0feb4,34547002,0,0x0,8
tick,0x7fffb2a0feb4,34562963,0,0x0,8
tick,0x7fffb2a0feb4,34579006,0,0x0,8
tick,0x7fffb2a0feb4,34594836,0,0x0,8
tick,0x7fffb2a0feb4,34610843,0,0x0,8
tick,0x7fffb2a0feb4,34626820,0,0x0,8
tick,0x7fffb2a0feb4,34642815,0,0x0,8
tick,0x7fffb2a0feb4,34658778,0,0x0,8
tick,0x7fffb2a0feb4,34674808,0,0x0,8
tick,0x7fffb2a0feb4,34690789,0,0x0,8
tick,0x7fffb2a0feb4,34706853,0,0x0,8
tick,0x7fffb2a0feb4,34722792,0,0x0,8
tick,0x7fffb2a0feb4,34738827,0,0x0,8
tick,0x7fffb2a0feb4,34754811,0,0x0,8
tick,0x7fffb2a0feb4,34770830,0,0x0,8
tick,0x7fffb2a0feb4,34786817,0,0x0,8
tick,0x7fffb2a0feb4,34802839,0,0x0,8
tick,0x7fffb2a0feb4,34818820,0,0x0,8
tick,0x7fffb2a0feb4,34834777,0,0x0,8
tick,0x7fffb2a0feb4,34850796,0,0x0,8
tick,0x7fffb2a0feb4,34866841,0,0x0,8
tick,0x7fffb2a0feb4,34881797,0,0x0,8
tick,0x7fffb2a0feb4,34897854,0,0x0,8
tick,0x7fffb2a0feb4,34912848,0,0x0,8
tick,0x7fffb2a0feb4,34928854,0,0x0,8
tick,0x7fffb2a0feb4,34944838,0,0x0,8
tick,0x7fffb2a0feb4,34960855,0,0x0,8
tick,0x7fffb2a0feb4,34976826,0,0x0,8
tick,0x7fffb2a0feb4,34992848,0,0x0,8
tick,0x7fffb2a0feb4,35008827,0,0x0,8
tick,0x7fffb2a0feb4,35024863,0,0x0,8
tick,0x7fffb2a0feb4,35040820,0,0x0,8
tick,0x7fffb2a0feb4,35056843,0,0x0,8
tick,0x7fffb2a0feb4,35072823,0,0x0,8
tick,0x7fffb2a0feb4,35087784,0,0x0,8
tick,0x7fffb2a0feb4,35103824,0,0x0,8
tick,0x7fffb2a0feb4,35119861,0,0x0,8
tick,0x7fffb2a0feb4,35135759,0,0x0,8
tick,0x7fffb2a0feb4,35151841,0,0x0,8
tick,0x7fffb2a0feb4,35167780,0,0x0,8
tick,0x7fffb2a0feb4,35183796,0,0x0,8
tick,0x7fffb2a0feb4,35199773,0,0x0,8
tick,0x7fffb2a0feb4,35215842,0,0x0,8
tick,0x7fffb2a0feb4,35231795,0,0x0,8
tick,0x7fffb2a0feb4,35247802,0,0x0,8
tick,0x7fffb2a0feb4,35263799,0,0x0,8
tick,0x7fffb2a0feb4,35279823,0,0x0,8
tick,0x7fffb2a0feb4,35295788,0,0x0,8
tick,0x7fffb2a0feb4,35311806,0,0x0,8
tick,0x7fffb2a0feb4,35327812,0,0x0,8
tick,0x7fffb2a0feb4,35343849,0,0x0,8
tick,0x7fffb2a0feb4,35359456,0,0x0,8
tick,0x7fffb2a0feb4,35374755,0,0x0,8
tick,0x7fffb2a0feb4,35390832,0,0x0,8
tick,0x7fffb2a0feb4,35406879,0,0x0,8
tick,0x7fffb2a0feb4,35422834,0,0x0,8
tick,0x7fffb2a0feb4,35438858,0,0x0,8
tick,0x7fffb2a0feb4,35454839,0,0x0,8
tick,0x7fffb2a0feb4,35470833,0,0x0,8
tick,0x7fffb2a0feb4,35486832,0,0x0,8
tick,0x7fffb2a0feb4,35502766,0,0x0,8
tick,0x7fffb2a0feb4,35518767,0,0x0,8
tick,0x7ff6a7c97670,35534807,0,0x0,6
markcompact,begin,18,156250,1671212027903
delete,MemoryChunk,0x36143380000
delete,MemoryChunk,0xbe36e00000
delete,MemoryChunk,0x2e056f00000
delete,MemoryChunk,0x3cfe9580000
code-move,0x1f733c7892e,0x3fe5748972e
code-move,0x334160812d6,0x2c2a083436
sfi-move,0x33416081408,0x2c2a083568
sfi-move,0x33416081720,0x2c2a083670
code-move,0x1f733c7982e,0x3fe574898de
sfi-move,0x33416085aa8,0x2c2a086ec0
sfi-move,0x33416085af8,0x2c2a086f10
sfi-move,0xe6a6185908,0x18ab987fbc0
sfi-move,0xe6a6186588,0x18ab987fec8
sfi-move,0x33416086cb8,0x2c2a087f50
sfi-move,0x33416086d30,0x2c2a087fc8
sfi-move,0x33416086da0,0x2c2a088038
code-move,0x1f733c79ae6,0x3fe57489b6e
code-move,0x1f733c79f36,0x3fe57489fbe
sfi-move,0xe6a6186c08,0x18ab98413b8
code-move,0x1f733c7a026,0x3fe5748a0ae
sfi-move,0xe6a6186c58,0x18ab9841408
sfi-move,0xe6a6186ca8,0x18ab9841458
sfi-move,0xe6a6186cf8,0x18ab98414a8
sfi-move,0xe6a6187c30,0x18ab98418b8
sfi-move,0xe6a6187c80,0x18ab9841908
sfi-move,0xe6a6187cd0,0x18ab9841958
sfi-move,0xe6a6187d20,0x18ab98419a8
sfi-move,0xe6a6187d70,0x18ab98419f8
code-move,0x1f733c7a106,0x3fe5748a18e
sfi-move,0xe6a6189710,0x18ab9842670
sfi-move,0xe6a6189760,0x18ab98426c0
sfi-move,0xe6a61897b0,0x18ab9842710
sfi-move,0xe6a6189800,0x18ab9842760
sfi-move,0xe6a6189850,0x18ab98427b0
sfi-move,0xe6a61898a0,0x18ab9842800
sfi-move,0xe6a61898f0,0x18ab9842850
sfi-move,0xe6a6189940,0x18ab98428a0
sfi-move,0xe6a6189990,0x18ab98428f0
sfi-move,0xe6a61899e0,0x18ab9842940
sfi-move,0xe6a6189a30,0x18ab9842990
sfi-move,0xe6a6189a80,0x18ab98429e0
sfi-move,0xe6a6189ad0,0x18ab9842a30
sfi-move,0xe6a6189b20,0x18ab9842a80
sfi-move,0xe6a6189b70,0x18ab9842ad0
sfi-move,0xe6a6189bc0,0x18ab9842b20
sfi-move,0xe6a6189c10,0x18ab9842b70
sfi-move,0xe6a6189c60,0x18ab9842bc0
sfi-move,0xe6a6189cb0,0x18ab9842c10
sfi-move,0xe6a6189d00,0x18ab9842c60
sfi-move,0xe6a6189d50,0x18ab9842cb0
sfi-move,0xe6a6189df0,0x18ab9842d00
sfi-move,0xe6a6189e40,0x18ab9842d50
sfi-move,0xe6a6189ea8,0x18ab9842db8
sfi-move,0xe6a6189f18,0x18ab9842e28
sfi-move,0xe6a6189f88,0x18ab9842e98
sfi-move,0xe6a6189ff8,0x18ab9842f08
sfi-move,0xe6a618a048,0x18ab9842f58
sfi-move,0xe6a618a098,0x18ab9842fa8
sfi-move,0xe6a618a0e8,0x18ab9842ff8
sfi-move,0xe6a618d058,0x18ab98434d0
sfi-move,0xe6a618d1d0,0x18ab98435e0
sfi-move,0xe6a618d220,0x18ab9843630
sfi-move,0xe6a618d288,0x18ab9843698
sfi-move,0xe6a618d2d8,0x18ab98436e8
sfi-move,0xe6a618d328,0x18ab9843738
sfi-move,0xe6a618d3a0,0x18ab98437b0
sfi-move,0xe6a618d3f0,0x18ab9843800
sfi-move,0xe6a618d440,0x18ab9843850
sfi-move,0xe6a618d4b8,0x18ab98438c8
sfi-move,0xe6a618d530,0x18ab9843940
sfi-move,0xe6a618d580,0x18ab9843990
sfi-move,0xe6a618d5d0,0x18ab98439e0
sfi-move,0xe6a618d620,0x18ab9843a30
sfi-move,0xe6a618d670,0x18ab9843a80
code-move,0x1f733c7a236,0x3fe5748a2be
sfi-move,0xe6a6190300,0x18ab9845a90
sfi-move,0xe6a6190350,0x18ab9845ae0
sfi-move,0xe6a61903a0,0x18ab9845b30
sfi-move,0xe6a61903f0,0x18ab9845b80
sfi-move,0xe6a6190440,0x18ab9845bd0
sfi-move,0xe6a6190490,0x18ab9845c20
sfi-move,0xe6a61904e0,0x18ab9845c70
sfi-move,0xe6a6190530,0x18ab9845cc0
sfi-move,0xe6a6190580,0x18ab9845d10
sfi-move,0xe6a61905d0,0x18ab9845d60
code-move,0x1f733c7a426,0x3fe5748a48e
sfi-move,0xe6a6192518,0x18ab9846730
sfi-move,0xe6a6192568,0x18ab9846780
sfi-move,0xe6a61925b8,0x18ab98467d0
sfi-move,0xe6a6192608,0x18ab9846820
sfi-move,0xe6a6192658,0x18ab9846870
sfi-move,0xe6a61926a8,0x18ab98468c0
sfi-move,0xe6a61926f8,0x18ab9846910
sfi-move,0xe6a6192748,0x18ab9846960
sfi-move,0xe6a6192798,0x18ab98469b0
sfi-move,0xe6a61927e8,0x18ab9846a00
sfi-move,0xe6a6192838,0x18ab9846a50
sfi-move,0xe6a6192888,0x18ab9846aa0
sfi-move,0xe6a61928d8,0x18ab9846af0
sfi-move,0xe6a6192928,0x18ab9846b40
sfi-move,0xe6a6192978,0x18ab9846b90
sfi-move,0xe6a61929c8,0x18ab9846be0
sfi-move,0xe6a6192a18,0x18ab9846c30
sfi-move,0xe6a6192a68,0x18ab9846c80
sfi-move,0xe6a6192ab8,0x18ab9846cd0
sfi-move,0xe6a6192b08,0x18ab9846d20
sfi-move,0xe6a6192b58,0x18ab9846d70
sfi-move,0xe6a6192ba8,0x18ab9846dc0
sfi-move,0xe6a6192bf8,0x18ab9846e10
sfi-move,0xe6a6192c48,0x18ab9846e60
sfi-move,0xe6a6192c98,0x18ab9846eb0
sfi-move,0xe6a61958d0,0x18ab9847760
sfi-move,0xe6a6195920,0x18ab98477b0
sfi-move,0xe6a6195970,0x18ab9847800
sfi-move,0xe6a61959c0,0x18ab9847850
sfi-move,0xe6a6195a10,0x18ab98478a0
sfi-move,0xe6a6195a60,0x18ab98478f0
sfi-move,0xe6a6195ab0,0x18ab9847940
sfi-move,0xe6a6195b00,0x18ab9847990
sfi-move,0xe6a6195ba0,0x18ab98479e0
sfi-move,0xe6a6195bf0,0x18ab9847a30
sfi-move,0xe6a6195c40,0x18ab9847a80
sfi-move,0xe6a6195c90,0x18ab9847ad0
sfi-move,0xe6a6195ce0,0x18ab9847b20
sfi-move,0xe6a6195d30,0x18ab9847b70
sfi-move,0xe6a6195d80,0x18ab9847bc0
sfi-move,0xe6a6195dd0,0x18ab9847c10
sfi-move,0xe6a6195e20,0x18ab9847c60
sfi-move,0xe6a6195e70,0x18ab9847cb0
sfi-move,0xe6a6197728,0x18ab9848050
sfi-move,0xe6a6197ec8,0x18ab9848100
sfi-move,0xe6a6198250,0x18ab98483d8
sfi-move,0xe6a6198458,0x18ab98484f0
sfi-move,0xe6a6199a18,0x18ab98495b8
sfi-move,0xe6a6199a68,0x18ab9849608
sfi-move,0xe6a6199ab8,0x18ab9849658
sfi-move,0xe6a6199b08,0x18ab98496a8
sfi-move,0xe6a6199b58,0x18ab98496f8
sfi-move,0xe6a6199ba8,0x18ab9849748
sfi-move,0xe6a6199bf8,0x18ab9849798
sfi-move,0xe6a6199c48,0x18ab98497e8
sfi-move,0xe6a6199c98,0x18ab9849838
sfi-move,0xe6a6199ce8,0x18ab9849888
sfi-move,0xe6a6199d38,0x18ab98498d8
sfi-move,0xe6a6199d88,0x18ab9849928
sfi-move,0xe6a619b4c0,0x18ab9849f48
sfi-move,0xe6a619b510,0x18ab9849f80
sfi-move,0xe6a619b560,0x18ab9849fd0
sfi-move,0xe6a619b5b0,0x18ab984a020
sfi-move,0xe6a619b600,0x18ab984a070
sfi-move,0xe6a619b650,0x18ab984a0c0
sfi-move,0xe6a619b6a0,0x18ab984a110
sfi-move,0xe6a619b6f0,0x18ab984a148
sfi-move,0xe6a619b740,0x18ab984a180
sfi-move,0xe6a619cea0,0x18ab984aa90
sfi-move,0xe6a619cef0,0x18ab984aae0
sfi-move,0xe6a619cf40,0x18ab984ab30
sfi-move,0xe6a619cf90,0x18ab984ab80
sfi-move,0xe6a619cfc8,0x18ab984abb8
sfi-move,0xe6a619d018,0x18ab984ac08
sfi-move,0xe6a619d068,0x18ab984ac58
sfi-move,0xe6a619d0b8,0x18ab984aca8
code-move,0x3341608741e,0x2c2a088246
sfi-move,0xe6a619d128,0x18ab984ad18
sfi-move,0xe6a619d1a0,0x18ab984ad90
sfi-move,0xe6a619d210,0x18ab984ae00
sfi-move,0xe6a619d288,0x18ab984ae78
sfi-move,0xe6a619d2f8,0x18ab984aee8
sfi-move,0xe6a619d368,0x18ab984af58
sfi-move,0xe6a619d3d8,0x18ab984afc8
sfi-move,0xe6a619d448,0x18ab984b038
sfi-move,0xe6a619d4c0,0x18ab984b0b0
sfi-move,0xe6a619d530,0x18ab984b120
sfi-move,0xe6a619d5a0,0x18ab984b190
sfi-move,0xe6a619d608,0x18ab984b1f8
sfi-move,0xe6a619d678,0x18ab984b268
sfi-move,0xe6a619d6c8,0x18ab984b2b8
sfi-move,0xe6a619d718,0x18ab984b308
sfi-move,0xe6a619d780,0x18ab984b370
sfi-move,0xe6a619d7d0,0x18ab984b3c0
sfi-move,0xe6a619d820,0x18ab984b410
sfi-move,0xe6a619d870,0x18ab984b460
sfi-move,0xe6a619d8c0,0x18ab984b4b0
sfi-move,0xe6a619d910,0x18ab984b500
sfi-move,0xe6a619d960,0x18ab984b550
sfi-move,0xe6a619d9b0,0x18ab984b5a0
sfi-move,0xe6a619da00,0x18ab984b5f0
code-move,0x137ee9d8706,0x2ea32e19b3e
code-move,0x1bb8fb03256,0x1a5adc44746
code-move,0x39bd861014e,0x3fe57495806
code-move,0x3341608aa36,0x2c2a08b85e
code-move,0xe6a619ebce,0x18ab984b6a6
code-move,0xe6a619ec6e,0x18ab984b746
code-move,0x137ee9f3096,0x2ea32e1d5be
sfi-move,0xe6a61a0050,0x18ab984bdd8
sfi-move,0xe6a61a00a0,0x18ab984be28
sfi-move,0xe6a61a00f0,0x18ab984be78
sfi-move,0xe6a61a0140,0x18ab984bec8
code-move,0x137ee9f34b6,0x2ea32e1d8be
code-move,0x137ee9f359e,0x2ea32e1d9a6
sfi-move,0xe6a61a2dc0,0x18ab984e3d8
sfi-move,0xe6a61a2e10,0x18ab984e428
sfi-move,0xe6a61a2e60,0x18ab984e478
sfi-move,0xe6a61a2eb0,0x18ab984e4c8
sfi-move,0xe6a61a2f00,0x18ab984e518
sfi-move,0xe6a61a2f50,0x18ab984e568
sfi-move,0xe6a61a2fa0,0x18ab984e5b8
sfi-move,0xe6a61a2ff0,0x18ab984e608
sfi-move,0xe6a61a3040,0x18ab984e658
sfi-move,0xe6a61a3090,0x18ab984e6a8
sfi-move,0xe6a61a30e0,0x18ab984e6f8
sfi-move,0xe6a61a3130,0x18ab984e748
sfi-move,0xe6a61a3180,0x18ab984e798
sfi-move,0xe6a61a31d0,0x18ab984e7e8
sfi-move,0xe6a61a3220,0x18ab984e838
sfi-move,0xe6a61a3270,0x18ab984e888
sfi-move,0xe6a61a32c0,0x18ab984e8d8
sfi-move,0xe6a61a3310,0x18ab984e928
sfi-move,0xe6a61a3360,0x18ab984e978
sfi-move,0xe6a61a33b0,0x18ab984e9c8
sfi-move,0xe6a61a3400,0x18ab984ea00
sfi-move,0xe6a61a8900,0x18ab9850d80
sfi-move,0xe6a61a89b8,0x18ab9850db8
sfi-move,0xe6a61a8a08,0x18ab9850e08
sfi-move,0xe6a61a8a58,0x18ab9850e58
sfi-move,0xe6a61a9818,0x18ab9851830
sfi-move,0xe6a61a98d0,0x18ab9851868
code-move,0x137ee9f36a6,0x2ea32e1daae
sfi-move,0xe6a61a9920,0x18ab98518a0
sfi-move,0xe6a61a99a8,0x18ab98518f8
sfi-move,0xe6a61a9a58,0x18ab9851990
sfi-move,0xe6a61a9ae0,0x18ab98519e8
sfi-move,0xe6a61a9b70,0x18ab9851a78
code-move,0x39bd861028e,0x3fe57495946
code-move,0x39bd86104ce,0x3fe57495b2e
sfi-move,0x39bd8610720,0x3fe57495d80
code-move,0x1bb8fb036fe,0x1a5adc44976
code-move,0x1bb8fb03ac6,0x1a5adc44bde
code-move,0x1bb8fb03dde,0x1a5adc44ef6
code-move,0x1bb8fb040e6,0x1a5adc450de
code-move,0x1bb8fb04276,0x1a5adc4526e
code-move,0x1bb8fb044ce,0x1a5adc454c6
code-move,0x1bb8fb047be,0x1a5adc45776
code-move,0x1bb8fb04ace,0x1a5adc45a56
code-move,0x1bb8fb05046,0x1a5adc45f6e
sfi-move,0x1bb8fb051d0,0x1a5adc460f8
code-move,0x3341608b39e,0x2c2a08c1c6
code-move,0x39bd86107fe,0x3fe57495e5e
code-move,0x1bb8fb052b6,0x1a5adc461de
code-move,0x3341608b49e,0x2c2a08c2c6
code-move,0x3341608bc26,0x2c2a08c8f6
code-move,0xe6a61b99fe,0x1ff59444926
code-move,0xe6a61b9fa6,0x1ff59444e2e
code-move,0x1bb8fb054ae,0x1a5adc463d6
sfi-move,0xe6a61bad80,0x1ff59445958
sfi-move,0xe6a61bae38,0x1ff59445990
sfi-move,0xe6a61bae88,0x1ff594459e0
sfi-move,0xe6a61baed8,0x1ff59445a30
sfi-move,0xe6a61baf28,0x1ff59445a80
sfi-move,0xe6a61baf78,0x1ff59445ad0
code-move,0x1bb8fb055f6,0x1a5adc4651e
sfi-move,0xe6a61bc0c0,0x1ff59446858
sfi-move,0xe6a61bc178,0x1ff59446890
sfi-move,0xe6a61bc1c8,0x1ff594468e0
sfi-move,0xe6a61bc218,0x1ff59446930
sfi-move,0xe6a61bc268,0x1ff59446980
sfi-move,0xe6a61bc2b8,0x1ff594469d0
sfi-move,0xe6a61bc308,0x1ff59446a20
sfi-move,0xbfdd3437d8,0x1129ffe12a0
sfi-move,0xbfdd343828,0x1129ffe12f0
sfi-move,0xbfdd343878,0x1129ffe1340
sfi-move,0xbfdd3438c8,0x1129ffe1390
sfi-move,0xbfdd343918,0x1129ffe13e0
sfi-move,0xbfdd343968,0x1129ffe1430
sfi-move,0xbfdd3439b8,0x1129ffe1480
sfi-move,0xbfdd343a30,0x1129ffe14f8
sfi-move,0xbfdd343a80,0x1129ffe1548
sfi-move,0xbfdd343ad0,0x1129ffe1598
sfi-move,0xbfdd343b20,0x1129ffe15e8
sfi-move,0xbfdd343b70,0x1129ffe1638
sfi-move,0xbfdd343bc0,0x1129ffe1688
sfi-move,0xbfdd343c38,0x1129ffe1700
sfi-move,0xbfdd343c88,0x1129ffe1750
sfi-move,0xbfdd343d10,0x1129ffe17d8
sfi-move,0xe6a61bcff0,0x1ff59447380
code-move,0x1bb8fb056fe,0x1a5adc46626
sfi-move,0xbfdd345690,0x1129ffe1bc0
sfi-move,0xbfdd3456e0,0x1129ffe1c10
sfi-move,0xbfdd345730,0x1129ffe1c60
sfi-move,0xbfdd345780,0x1129ffe1cb0
code-move,0x1bb8fb05ba6,0x1a5adc46ace
sfi-move,0xe6a61be8a8,0x1ff59448740
sfi-move,0xe6a61be960,0x1ff59448778
sfi-move,0xe6a61be9b0,0x1ff594487c8
sfi-move,0xe6a61bea00,0x1ff59448800
sfi-move,0xe6a61bea50,0x1ff59448838
sfi-move,0xe6a61beaa0,0x1ff59448870
sfi-move,0xe6a61beaf0,0x1ff594488c0
sfi-move,0xe6a61beb40,0x1ff59448910
sfi-move,0xe6a61beb90,0x1ff59448960
sfi-move,0xe6a61bebe0,0x1ff594489b0
sfi-move,0xe6a61bec58,0x1ff59448a28
sfi-move,0xbfdd346b70,0x1129ffe2700
sfi-move,0xbfdd346bc0,0x1129ffe2738
sfi-move,0xbfdd346c30,0x1129ffe27a8
sfi-move,0xbfdd346ca0,0x1129ffe2818
sfi-move,0xbfdd346d10,0x1129ffe2888
sfi-move,0xbfdd346d80,0x1129ffe28f8
sfi-move,0xbfdd346df0,0x1129ffe2968
sfi-move,0xbfdd346e40,0x1129ffe29b8
sfi-move,0xbfdd346e90,0x1129ffe2a08
sfi-move,0xbfdd346ee0,0x1129ffe2a58
sfi-move,0xbfdd346f30,0x1129ffe2aa8
sfi-move,0xbfdd346fa8,0x1129ffe2b20
sfi-move,0xbfdd347018,0x1129ffe2b90
sfi-move,0xbfdd347088,0x1129ffe2c00
sfi-move,0xbfdd3470d8,0x1129ffe2c50
sfi-move,0xbfdd347128,0x1129ffe2ca0
sfi-move,0xbfdd347160,0x1129ffe2cd8
sfi-move,0xbfdd3471b0,0x1129ffe2d28
sfi-move,0xbfdd347200,0x1129ffe2d78
code-move,0x1bb8fb061ae,0x1a5adc4700e
sfi-move,0x2264545b28,0x1ff5944a2a8
sfi-move,0x2264545b78,0x1ff5944a2f8
sfi-move,0x2264545bc8,0x1ff5944a348
sfi-move,0x2264545c18,0x1ff5944a398
code-move,0x1bb8fb062f6,0x1a5adc47156
sfi-move,0x2264546dd0,0x1ff5944ad10
sfi-move,0x2264546e40,0x1ff5944ad80
sfi-move,0x2264546eb0,0x1ff5944adf0
sfi-move,0x2264546f20,0x1ff5944ae60
sfi-move,0x2264546f90,0x1ff5944aed0
sfi-move,0x2264547000,0x1ff5944af40
sfi-move,0x2264547070,0x1ff5944afb0
code-move,0x1bb8fb06d7e,0x1a5adc47bde
sfi-move,0x22645470e0,0x1ff5944b020
sfi-move,0x2264547150,0x1ff5944b090
sfi-move,0x22645471c0,0x1ff5944b100
sfi-move,0x2264547230,0x1ff5944b170
sfi-move,0x22645472a0,0x1ff5944b1e0
code-move,0x1bb8fb06f6e,0x1a5adc47dce
sfi-move,0x2264547440,0x1ff5944b380
sfi-move,0x2264548070,0x1ff5944b5e0
sfi-move,0x2264548178,0x1ff5944b6e8
sfi-move,0x2264548280,0x1ff5944b7f0
sfi-move,0x2264548388,0x1ff5944b8f8
sfi-move,0x2264548490,0x1ff5944ba00
sfi-move,0x2264548598,0x1ff5944bb08
code-move,0x1bb8fb0708e,0x1a5adc47eee
code-move,0x1bb8fb07346,0x1a5adc48126
code-move,0x1bb8fb074b6,0x1a5adc48296
sfi-move,0x226454dde8,0x1ff59450e08
sfi-move,0x226454de38,0x1ff59450e58
sfi-move,0x226454de88,0x1ff59450ea8
code-move,0x1bb8fb075e6,0x1a5adc483c6
sfi-move,0x226454ded8,0x1ff59450ef8
sfi-move,0x226454df28,0x1ff59450f48
sfi-move,0x226454df78,0x1ff59450f98
sfi-move,0x226454dfc8,0x1ff59450fe8
sfi-move,0x226454e018,0x1ff59451038
sfi-move,0x226454e068,0x1ff59451088
sfi-move,0x226454e0b8,0x1ff594510d8
sfi-move,0x226454e108,0x1ff59451128
sfi-move,0x226454e158,0x1ff59451178
sfi-move,0x226454e1a8,0x1ff594511c8
sfi-move,0x226454e1f8,0x1ff59451218
sfi-move,0x226454e248,0x1ff59451268
sfi-move,0x226454e298,0x1ff594512b8
sfi-move,0x226454e2e8,0x1ff59451308
sfi-move,0x226454e338,0x1ff59451358
sfi-move,0x226454e388,0x1ff594513a8
sfi-move,0x226454e3d8,0x1ff594513f8
sfi-move,0x226454e428,0x1ff59451448
sfi-move,0x226454e478,0x1ff59451498
sfi-move,0x226454e4c8,0x1ff594514e8
sfi-move,0x226454e590,0x1ff59451598
sfi-move,0x226454e618,0x1ff59451620
sfi-move,0x226454e6a8,0x1ff594516b0
sfi-move,0x226454e730,0x1ff59451738
sfi-move,0x226454e7b8,0x1ff594517a8
sfi-move,0x226454e840,0x1ff59451818
sfi-move,0x226454e8c8,0x1ff594518a0
sfi-move,0x226454e958,0x1ff59451930
sfi-move,0x226454e9e8,0x1ff594519c0
sfi-move,0x226454ea70,0x1ff59451a48
sfi-move,0x226454eb00,0x1ff59451ad8
sfi-move,0x226454eb90,0x1ff59451b68
code-move,0x1bb8fb076f6,0x1a5adc484d6
sfi-move,0x1bb8fb077b0,0x1a5adc48590
sfi-move,0x226454ec20,0x1ff59451bf8
sfi-move,0x226454ecb0,0x1ff59451c88
sfi-move,0x226454ed40,0x1ff59451d18
sfi-move,0x226454edd0,0x1ff59451da8
sfi-move,0x226454ee60,0x1ff59451e38
sfi-move,0x226454eee8,0x1ff59451ea8
sfi-move,0x226454ef70,0x1ff59451f18
sfi-move,0x226454f000,0x1ff59451fa8
sfi-move,0x226454f090,0x1ff59452038
sfi-move,0x226454f120,0x1ff594520c8
sfi-move,0x226454f1b0,0x1ff59452158
sfi-move,0x226454f200,0x1ff594521a8
sfi-move,0x226454f250,0x1ff594521f8
sfi-move,0x226454f2a0,0x1ff59452248
sfi-move,0x226454f2f0,0x1ff59452298
sfi-move,0x226454f340,0x1ff594522e8
sfi-move,0x226454f390,0x1ff59452338
sfi-move,0x226454f3e0,0x1ff59452388
sfi-move,0x226454f430,0x1ff594523d8
sfi-move,0x226454f480,0x1ff59452428
sfi-move,0x226454f4d0,0x1ff59452478
sfi-move,0x226454f520,0x1ff594524c8
sfi-move,0x226454f570,0x1ff59452518
sfi-move,0x226454f5c0,0x1ff59452568
sfi-move,0x2264553208,0x1ff59452d78
sfi-move,0x2264553258,0x1ff59452dc8
sfi-move,0x22645532a8,0x1ff59452e18
sfi-move,0x22645532f8,0x1ff59452e68
sfi-move,0x2264554910,0x1ff59453e90
sfi-move,0x2264554980,0x1ff59453f00
sfi-move,0x22645549f0,0x1ff59453f70
sfi-move,0x2264554a60,0x1ff59453fe0
sfi-move,0x2264554ad0,0x1ff59454050
sfi-move,0x2264554b40,0x1ff594540c0
sfi-move,0x2264554bb0,0x1ff59454130
sfi-move,0x2264554c20,0x1ff594541a0
sfi-move,0x2264554c90,0x1ff59454210
sfi-move,0x2264554d00,0x1ff59454280
sfi-move,0x2264554d70,0x1ff594542f0
sfi-move,0x2264554de0,0x1ff59454360
sfi-move,0x2264554e50,0x1ff594543d0
sfi-move,0x2264554ec0,0x1ff59454440
sfi-move,0x2264554f30,0x1ff594544b0
sfi-move,0x2264554fa0,0x1ff59454520
sfi-move,0x2264555010,0x1ff59454590
sfi-move,0x2264555080,0x1ff59454600
sfi-move,0x22645550f0,0x1ff59454670
sfi-move,0x2264555160,0x1ff594546e0
sfi-move,0x22645551d0,0x1ff59454750
sfi-move,0x2264555240,0x1ff594547c0
sfi-move,0x22645552b0,0x1ff59454830
sfi-move,0x2264555450,0x1ff594549d0
code-move,0xbfdd3482de,0x1129ffe2ede
sfi-move,0x2264556ad8,0x1ff594559e0
sfi-move,0x2264556b48,0x1ff59455a50
sfi-move,0x2264556bb8,0x1ff59455ac0
code-move,0x3341608c4c6,0x2c2a08d05e
sfi-move,0x2264557230,0x1ff59456118
sfi-move,0x22645572b8,0x1ff594561a0
sfi-move,0x2264557328,0x1ff59456210
sfi-move,0x2264557398,0x1ff59456280
code-move,0x3341608c876,0x2c2a08d40e
sfi-move,0x2264557728,0x1ff59456490
sfi-move,0x3341608de80,0x2c2a08e028
sfi-move,0x3341608df08,0x2c2a08e0b0
sfi-move,0x3341608df58,0x2c2a08e100
code-move,0x1bb8fb07856,0x1a5adc4861e
sfi-move,0x2264557778,0x1ff594564e0
sfi-move,0x22645577f8,0x1ff59456560
sfi-move,0x2264557848,0x1ff594565b0
sfi-move,0x2264557898,0x1ff59456600
sfi-move,0x2264557910,0x1ff59456678
code-move,0x1bb8fb079c6,0x1a5adc4878e
sfi-move,0x2264558548,0x1ff59456820
sfi-move,0x22645588a8,0x1ff59456a80
code-move,0x1bb8fb07b46,0x1a5adc4890e
sfi-move,0x226455ab00,0x1ff59458aa8
sfi-move,0x226455ab50,0x1ff59458af8
sfi-move,0x226455abd8,0x1ff59458b80
sfi-move,0x226455ac60,0x1ff59458c08
sfi-move,0x226455acf0,0x1ff59458c98
sfi-move,0x226455b768,0x1ff59458f20
sfi-move,0x226455b7b8,0x1ff59458f70
code-move,0x1bb8fb07cbe,0x1a5adc48a86
code-move,0x1bb8fb07e16,0x1a5adc48bde
sfi-move,0x226455bf38,0x1ff59459278
sfi-move,0x226455bf88,0x1ff594592c8
sfi-move,0x226455c010,0x1ff59459350
sfi-move,0x226455c738,0x1ff59459628
sfi-move,0x226455c788,0x1ff59459678
sfi-move,0x226455c810,0x1ff594596e8
sfi-move,0x226455c898,0x1ff59459758
sfi-move,0x226455c920,0x1ff594597e0
code-move,0x39bd8610a06,0x3fe57496066
code-move,0x39bd8610c76,0x3fe574962d6
code-move,0x39bd8610ea6,0x3fe57496506
code-move,0x39bd8610fde,0x3fe5749663e
code-move,0x39bd86111ee,0x3fe5749684e
code-move,0x39bd8611586,0x3fe57496be6
code-move,0x39bd8611716,0x3fe57496d76
sfi-move,0x39bd86118a8,0x3fe57496f08
code-move,0x226455cfbe,0x1ff59459a96
code-move,0x226455d106,0x1ff59459bde
sfi-move,0x226455d418,0x1ff59459ed0
code-move,0x1bb8fb2a6e6,0x1a5adc50dd6
code-move,0xbfdd34abde,0x1129ffe45de
code-move,0xbfdd34ae5e,0x1129ffe485e
code-move,0x3341608e6c6,0x2c2a08e2de
sfi-move,0xbfdd34e5b0,0x1129ffe7948
sfi-move,0xbfdd34e600,0x1129ffe7980
sfi-move,0xbfdd34e650,0x1129ffe79b8
sfi-move,0xbfdd34e6a0,0x1129ffe7a08
sfi-move,0xbfdd34e718,0x1129ffe7a80
code-move,0x226455d51e,0x1ff59459fbe
code-move,0x1bb8fb2ab16,0x1a5adc51206
code-move,0x39bd861198e,0x3fe57496fd6
code-move,0x39bd8611b6e,0x3fe574971b6
sfi-move,0x39bd8611d20,0x3fe57497368
code-move,0xbfdd34f2ee,0x1129ffe7c86
code-move,0xbfdd34f906,0x1129ffe7f9e
code-move,0x1bb8fb2b96e,0x1a5adc5205e
code-move,0x1bb8fb2bcfe,0x1a5adc521a6
code-move,0x1bb8fb2c186,0x1a5adc5262e
code-move,0x1bb8fb2c67e,0x1a5adc52b26
code-move,0x1bb8fb2c796,0x1a5adc52c3e
code-move,0x1bb8fb2ca06,0x1a5adc52eae
code-move,0x39bd8611e26,0x3fe5749746e
code-move,0x39bd8612166,0x3fe5749768e
code-move,0x39bd86122b6,0x3fe574977de
code-move,0x39bd86124ee,0x3fe57497a16
code-move,0x39bd8612816,0x3fe57497cae
code-move,0x226455d906,0x1ff5945a396
code-move,0x226455da5e,0x1ff5945a4ee
code-move,0x226455dbc6,0x1ff5945a656
code-move,0x1bb8fb2ce2e,0x1a5adc532d6
sfi-move,0x226455e660,0x1ff5945b028
sfi-move,0x226455e718,0x1ff5945b060
code-move,0x39bd8612b36,0x3fe57497fb6
sfi-move,0x226455f380,0x1ff5945b730
sfi-move,0x226455f3d0,0x1ff5945b780
sfi-move,0x226455f420,0x1ff5945b7d0
sfi-move,0x226455f470,0x1ff5945b820
sfi-move,0x226455f4c0,0x1ff5945b870
sfi-move,0x226455f510,0x1ff5945b8c0
sfi-move,0x226455f580,0x1ff5945b930
sfi-move,0x226455f5d0,0x1ff5945b980
sfi-move,0x226455f620,0x1ff5945b9d0
sfi-move,0x226455f670,0x1ff5945ba20
code-move,0x39bd861302e,0x3fe574984ae
code-move,0x39bd8613136,0x3fe574985b6
code-move,0x39bd861326e,0x3fe574986ee
code-move,0x39bd86134d6,0x3fe57498956
code-move,0x39bd8613a3e,0x3fe57498c7e
code-move,0x1bb8fb2f016,0x1a5adc5545e
code-move,0xbfdd34fafe,0x1129ffdc256
code-move,0x33416090926,0x2c2a0904f6
code-move,0x33416090c5e,0x2c2a09082e
code-move,0x33416090d4e,0x2c2a09091e
code-move,0xbfdd350216,0x1129ffe819e
code-move,0xbfdd350406,0x1129ffc11ce
code-move,0xbfdd350866,0x1129ffc162e
code-move,0xbfdd350b4e,0x1129ffc1916
code-move,0xbfdd3514d6,0x1129ffc1f2e
code-move,0x1bb8fb300ee,0x1a5adc56536
code-move,0x1bb8fb3020e,0x1a5adc5662e
code-move,0x1bb8fb302fe,0x1a5adc5671e
code-move,0x1bb8fb3048e,0x1a5adc568ae
code-move,0x1bb8fb30696,0x1a5adc56ab6
code-move,0x1bb8fb30816,0x1a5adc56c36
code-move,0x1bb8fb30986,0x1a5adc56da6
code-move,0x1bb8fb30b9e,0x1a5adc56fbe
code-move,0x1bb8fb30da6,0x1a5adc571c6
code-move,0xbfdd3518d6,0x1129ffc20f6
code-move,0xbfdd351cd6,0x1129ffc24f6
code-move,0xbfdd352296,0x1129ffc2ab6
code-move,0x1bb8fb31bee,0x1a5adc5800e
code-move,0x1bb8fb321f6,0x1a5adc58606
code-move,0x1bb8fb32386,0x1a5adc58796
sfi-move,0x1bb8fb324e8,0x1a5adc588f8
code-move,0xbfdd35254e,0x1129ffc2d6e
code-move,0xbfdd35286e,0x1129ffc308e
sfi-move,0x2264560ac0,0x1ff5945c008
sfi-move,0x2264560b30,0x1ff5945c078
sfi-move,0x2264560ba0,0x1ff5945c0e8
sfi-move,0x2264560c10,0x1ff5945c158
sfi-move,0x2264560c80,0x1ff5945c1c8
sfi-move,0x2264560cf0,0x1ff5945c238
sfi-move,0x22645610b8,0x1ff5945c600
sfi-move,0x2264561128,0x1ff5945c670
sfi-move,0x2264561198,0x1ff5945c6e0
sfi-move,0x2264561208,0x1ff5945c750
code-move,0xbfdd352aae,0x1129ffc32ce
sfi-move,0x2264561658,0x1ff5945ca70
sfi-move,0x22645616a8,0x1ff5945cac0
sfi-move,0x2264561718,0x1ff5945cb30
sfi-move,0x2264561780,0x1ff5945cb98
sfi-move,0x22645617f0,0x1ff5945cc08
sfi-move,0x2264561860,0x1ff5945cc78
sfi-move,0x22645618b0,0x1ff5945ccc8
sfi-move,0x2264561900,0x1ff5945cd18
sfi-move,0x2264561950,0x1ff5945cd68
sfi-move,0x22645619a0,0x1ff5945cdb8
sfi-move,0x22645619f0,0x1ff5945ce08
code-move,0xbfdd352d66,0x1129ffc3586
sfi-move,0x2264564158,0x1ff5945db30
sfi-move,0x22645641a8,0x1ff5945db80
sfi-move,0x22645641f8,0x1ff5945dbd0
sfi-move,0x2264564248,0x1ff5945dc20
sfi-move,0x2264564298,0x1ff5945dc70
sfi-move,0x22645642e8,0x1ff5945dcc0
sfi-move,0x2264564338,0x1ff5945dd10
sfi-move,0x2264564388,0x1ff5945dd60
sfi-move,0x22645643d8,0x1ff5945ddb0
sfi-move,0x2264564460,0x1ff5945de38
sfi-move,0x22645644b0,0x1ff5945de88
sfi-move,0x2264564500,0x1ff5945ded8
sfi-move,0x2264564550,0x1ff5945df28
sfi-move,0x22645645a0,0x1ff5945df78
sfi-move,0x22645645f0,0x1ff5945dfc8
sfi-move,0x2264564640,0x1ff5945e018
sfi-move,0x2264564690,0x1ff5945e068
sfi-move,0x22645646e0,0x1ff5945e0b8
sfi-move,0x2264564730,0x1ff5945e108
sfi-move,0x22645647a0,0x1ff5945e178
sfi-move,0x2264564810,0x1ff5945e1e8
sfi-move,0x2264564880,0x1ff5945e258
sfi-move,0x22645648f0,0x1ff5945e2c8
sfi-move,0x2264564968,0x1ff5945e340
sfi-move,0x22645649b8,0x1ff5945e390
sfi-move,0x22645673f0,0x1ff5945ea38
sfi-move,0x2264567440,0x1ff5945ea88
sfi-move,0x2264567490,0x1ff5945ead8
sfi-move,0x22645674e0,0x1ff5945eb28
sfi-move,0x2264567530,0x1ff5945eb78
sfi-move,0x2264567580,0x1ff5945ebc8
code-move,0xbfdd3530c6,0x1129ffc38e6
code-move,0xbfdd3533ce,0x1129ffc3bee
code-move,0x1bb8fb325b6,0x1a5adc589c6
sfi-move,0x1bb8fb32818,0x1a5adc58c28
sfi-move,0x1bb8fb32870,0x1a5adc58c60
sfi-move,0x1bb8fb328c0,0x1a5adc58c98
code-move,0x33416090fce,0x2c2a090b36
code-move,0x2264568956,0x1ff5945f56e
sfi-move,0x33416091b48,0x2c2a091140
code-move,0x2264568f66,0x1ff5945fb7e
sfi-move,0x33416092720,0x2c2a091a00
code-move,0xbfdd3537ee,0x1129ffc3fd6
sfi-move,0x2264569500,0x1ff59460100
sfi-move,0x33416092de8,0x2c2a091e48
sfi-move,0x33416092e38,0x2c2a091e80
sfi-move,0x33416092e88,0x2c2a091ed0
sfi-move,0x33416092ed8,0x2c2a091f20
sfi-move,0x33416092f28,0x2c2a091f70
code-move,0x1bb8fb329c6,0x1a5adc58d9e
sfi-move,0x33416092f98,0x2c2a091fe0
sfi-move,0x33416093008,0x2c2a092050
sfi-move,0x33416093078,0x2c2a0920c0
sfi-move,0x334160930e8,0x2c2a092130
sfi-move,0x33416093158,0x2c2a0921a0
sfi-move,0x334160931c8,0x2c2a092210
code-move,0x1bb8fb32cce,0x1a5adc590a6
sfi-move,0x33416093238,0x2c2a092280
sfi-move,0x334160932a8,0x2c2a0922f0
sfi-move,0x33416093320,0x2c2a092368
sfi-move,0x33416093398,0x2c2a0923e0
sfi-move,0x33416093410,0x2c2a092458
sfi-move,0x33416093488,0x2c2a0924d0
sfi-move,0x33416093508,0x2c2a092550
sfi-move,0x33416093588,0x2c2a0925d0
sfi-move,0x33416094220,0x2c2a092920
sfi-move,0x33416094328,0x2c2a092a28
sfi-move,0x33416094430,0x2c2a092b30
sfi-move,0x33416094558,0x2c2a092c58
sfi-move,0x33416094680,0x2c2a092d80
sfi-move,0x334160947a8,0x2c2a092ea8
sfi-move,0x334160948d0,0x2c2a092fd0
sfi-move,0x334160949f8,0x2c2a0930f8
sfi-move,0x33416094b20,0x2c2a093220
sfi-move,0x33416094c48,0x2c2a093348
sfi-move,0x33416094d70,0x2c2a093470
sfi-move,0x33416094ea0,0x2c2a0935a0
sfi-move,0x33416094fd0,0x2c2a0936d0
sfi-move,0x33416095100,0x2c2a093800
sfi-move,0x33416095230,0x2c2a093930
sfi-move,0x33416095368,0x2c2a093a68
code-move,0xbfdd354026,0x1129ffc42ee
code-move,0xbfdd3543d6,0x1129ffc469e
code-move,0xbfdd354666,0x1129ffc489e
code-move,0xbfdd3547be,0x1129ffc49f6
code-move,0xbfdd3548ee,0x1129ffc4b26
code-move,0xbfdd354a36,0x1129ffc4c6e
sfi-move,0x334160972b0,0x2c2a094a38
sfi-move,0x33416097300,0x2c2a094a88
sfi-move,0x33416097350,0x2c2a094ac0
sfi-move,0x334160973a0,0x2c2a094af8
sfi-move,0x334160973f0,0x2c2a094b30
sfi-move,0x33416097440,0x2c2a094b80
sfi-move,0x33416097490,0x2c2a094bd0
sfi-move,0x334160974e0,0x2c2a094c20
sfi-move,0x33416097530,0x2c2a094c70
sfi-move,0x33416097580,0x2c2a094cc0
sfi-move,0x334160975d0,0x2c2a094d10
sfi-move,0x33416097620,0x2c2a094d60
sfi-move,0x33416097670,0x2c2a094db0
sfi-move,0x1bb8fb32e58,0x1a5adc59230
code-move,0xbfdd354e66,0x1129ffc4f56
code-move,0x226456960e,0x1ff5946020e
code-move,0x226456c3ce,0x1ff59462fce
code-move,0x334160986de,0x2c2a0950c6
code-move,0x1bb8fb32f0e,0x1a5adc592e6
code-move,0x39bd861423e,0x3fe574991ae
sfi-move,0x33416098c90,0x2c2a095530
sfi-move,0x33416098ce0,0x2c2a095580
sfi-move,0x33416098d30,0x2c2a0955b8
sfi-move,0x33416098d80,0x2c2a095608
sfi-move,0x33416098dd0,0x2c2a095658
sfi-move,0x33416098e20,0x2c2a0956a8
sfi-move,0x33416098e70,0x2c2a0956f8
sfi-move,0x33416098ee8,0x2c2a095770
code-move,0x39bd8614846,0x3fe57499696
sfi-move,0x1bb8fb330d0,0x1a5adc594a8
code-move,0x39bd8614bbe,0x3fe57499a0e
code-move,0x39bd8614ca6,0x3fe57499af6
code-move,0x39bd8614e7e,0x3fe57499cce
code-move,0x39bd8615046,0x3fe57499e96
code-move,0x39bd86151d6,0x3fe5749a026
code-move,0x39bd861532e,0x3fe5749a17e
code-move,0x39bd86154d6,0x3fe5749a326
code-move,0x39bd8615686,0x3fe5749a4d6
code-move,0x39bd8615e2e,0x3fe5749ac7e
code-move,0x226456cc96,0x1ff59463896
code-move,0x226456d0a6,0x1ff59463c6e
code-move,0x226456d33e,0x1ff59463f06
code-move,0x226456d416,0x1ff59463fde
code-move,0x226456d4f6,0x1ff594640be
code-move,0x226456dc46,0x1ff5946480e
sfi-move,0x226456e7c8,0x1ff59465390
code-move,0xbfdd35b50e,0x1129ffcb5fe
code-move,0x1bb8fb331fe,0x1a5adc595be
code-move,0x1bb8fb336ee,0x1a5adc59aae
code-move,0x1bb8fb3382e,0x1a5adc59bee
code-move,0x1bb8fb3394e,0x1a5adc59d0e
code-move,0x1bb8fb33a8e,0x1a5adc59e4e
code-move,0x39bd8616a06,0x3fe5749b6be
code-move,0x39bd8616bce,0x3fe5749b886
code-move,0x39bd8616dbe,0x3fe5749ba76
code-move,0x39bd861708e,0x3fe5749bd46
code-move,0x39bd861741e,0x3fe5749c0d6
code-move,0x39bd86176be,0x3fe5749c376
code-move,0x39bd8617a56,0x3fe5749c70e
code-move,0x39bd8617c26,0x3fe5749c8de
code-move,0x1bb8fb33ece,0x1a5adc5a28e
code-move,0x3341609953e,0x2c2a09581e
code-move,0x226456e8fe,0x1ff594654c6
sfi-move,0x3341609a238,0x2c2a095e70
sfi-move,0x3341609a288,0x2c2a095ea8
sfi-move,0x3341609a318,0x2c2a095ee0
sfi-move,0x3341609a368,0x2c2a095f18
sfi-move,0x3341609a3b8,0x2c2a095f68
sfi-move,0x3341609a408,0x2c2a095fb8
code-move,0xbfdd35d466,0x1129ffcd556
code-move,0xbfdd35d57e,0x1129ffcd64e
code-move,0x1bb8fb35fbe,0x1a5adc5c37e
code-move,0xbfdd3606ae,0x1129ffeb68e
code-move,0xbfdd36080e,0x1129ffeb7d6
code-move,0xbfdd360a1e,0x1129ffeb986
code-move,0xbfdd360b96,0x1129ffebafe
code-move,0xbfdd360ffe,0x1129ffebf66
code-move,0xbfdd3611e6,0x1129ffec06e
code-move,0xbfdd36135e,0x1129ffec1ce
code-move,0xbfdd3614be,0x1129ffec316
code-move,0x226457094e,0x1ff594674fe
code-move,0x2264570d5e,0x1ff5946790e
code-move,0x226457115e,0x1ff59467ae6
code-move,0x226457124e,0x1ff59467bd6
code-move,0x22645713fe,0x1ff59467d6e
code-move,0x2264571676,0x1ff59467fe6
code-move,0x22645718a6,0x1ff59468216
code-move,0x2264571b1e,0x1ff5946848e
code-move,0x2264571c1e,0x1ff5946858e
code-move,0x3341609c206,0x2c2a096f16
sfi-move,0x2264572480,0x1ff59468d20
code-move,0x39bd861835e,0x3fe5749d016
sfi-move,0x3341609cb50,0x2c2a097400
sfi-move,0x3341609cba0,0x2c2a097438
sfi-move,0x3341609cbf0,0x2c2a097488
sfi-move,0x3341609cc40,0x2c2a0974c0
code-move,0x39bd8618a36,0x3fe5749d69e
sfi-move,0x2264572908,0x1ff59469058
sfi-move,0x2264572978,0x1ff594690c8
sfi-move,0x22645729e8,0x1ff59469138
code-move,0x39bd8618be6,0x3fe5749d84e
sfi-move,0x3341609f7e0,0x2c2a098e18
sfi-move,0x3341609f830,0x2c2a098e50
sfi-move,0x3341609f880,0x2c2a098e88
sfi-move,0x3341609f8d0,0x2c2a098ec0
sfi-move,0x3341609f920,0x2c2a098f10
sfi-move,0x3341609f970,0x2c2a098f60
sfi-move,0x3341609f9c0,0x2c2a098f98
sfi-move,0x3341609fa10,0x2c2a098fd0
sfi-move,0x3341609fa60,0x2c2a099008
sfi-move,0x3341609fab0,0x2c2a099040
sfi-move,0x3341609fb00,0x2c2a099078
sfi-move,0x3341609fb50,0x2c2a0990b0
sfi-move,0x3341609fba0,0x2c2a0990e8
sfi-move,0x3341609fbf0,0x2c2a099120
sfi-move,0x3341609fc40,0x2c2a099158
sfi-move,0x3341609fc90,0x2c2a099190
sfi-move,0x3341609fce0,0x2c2a0991e0
sfi-move,0x3341609fd30,0x2c2a099230
sfi-move,0x3341609fd80,0x2c2a099268
sfi-move,0x3341609fdd0,0x2c2a0992b8
sfi-move,0x3341609fe50,0x2c2a0992f0
sfi-move,0x3341609fea0,0x2c2a099340
sfi-move,0x3341609ff20,0x2c2a0993c0
sfi-move,0x3341609ff70,0x2c2a0993f8
sfi-move,0x3341609ffc0,0x2c2a099448
sfi-move,0x334160a0010,0x2c2a099498
sfi-move,0x334160a0060,0x2c2a0994e8
sfi-move,0x334160a00b0,0x2c2a099538
sfi-move,0x334160a0100,0x2c2a099588
sfi-move,0x334160a0150,0x2c2a0995d8
sfi-move,0x334160a01a0,0x2c2a099628
sfi-move,0x334160a01f0,0x2c2a099678
sfi-move,0x334160a0240,0x2c2a0996b0
sfi-move,0x334160a02d0,0x2c2a099728
sfi-move,0x334160a03f0,0x2c2a0997a0
sfi-move,0x334160a0480,0x2c2a099818
sfi-move,0x334160a04d0,0x2c2a099868
sfi-move,0x334160a0520,0x2c2a0998b8
sfi-move,0x334160a05a8,0x2c2a099910
sfi-move,0x334160a0638,0x2c2a099988
sfi-move,0x334160a06c0,0x2c2a0999e0
sfi-move,0x334160a0748,0x2c2a099a50
sfi-move,0x334160a07d8,0x2c2a099ac8
sfi-move,0x334160a08a0,0x2c2a099b78
sfi-move,0x334160a0968,0x2c2a099c28
sfi-move,0x334160a0a30,0x2c2a099cf0
sfi-move,0x334160a0ac0,0x2c2a099d68
sfi-move,0x334160a0b50,0x2c2a099de0
code-move,0x39bd8618dce,0x3fe5749da36
code-move,0x39bd8618fce,0x3fe5749dc36
code-move,0x39bd86192a6,0x3fe5749df0e
sfi-move,0x22645742a8,0x1ff5946a398
sfi-move,0x2264574360,0x1ff5946a3d0
sfi-move,0x22645743b0,0x1ff5946a420
sfi-move,0x2264574400,0x1ff5946a470
sfi-move,0x2264574450,0x1ff5946a4a8
sfi-move,0x22645744f0,0x1ff5946a4e0
code-move,0xbfdd3621d6,0x1129ffed016
sfi-move,0x334160a55f0,0x2c2a09a518
code-move,0xbfdd362366,0x1129ffed1a6
sfi-move,0x334160a5f10,0x2c2a09a8f8
sfi-move,0x334160a5f60,0x2c2a09a948
code-move,0x39bd86193f6,0x3fe5749e05e
sfi-move,0x334160a5ff0,0x2c2a09a9d8
sfi-move,0x334160a6040,0x2c2a09aa28
code-move,0x2264574e1e,0x1ff5946abc6
sfi-move,0x334160a7218,0x2c2a09b168
sfi-move,0x334160a7268,0x2c2a09b1a0
sfi-move,0x334160a72b8,0x2c2a09b1f0
sfi-move,0x334160a7308,0x2c2a09b240
sfi-move,0x334160a7358,0x2c2a09b290
sfi-move,0x334160a73a8,0x2c2a09b2e0
sfi-move,0x334160a73f8,0x2c2a09b330
sfi-move,0x334160a7448,0x2c2a09b380
sfi-move,0x334160a7498,0x2c2a09b3d0
sfi-move,0x334160a74e8,0x2c2a09b420
code-move,0x1bb8fb36146,0x1a5adc5c506
sfi-move,0x1bb8fb36420,0x1a5adc5c7e0
sfi-move,0x1bb8fb36470,0x1a5adc5c830
code-move,0xbfdd362cb6,0x1129ffedaf6
code-move,0xbfdd362f66,0x1129ffedda6
code-move,0x2264575c56,0x1ff5946b2b6
code-move,0x334160a7d26,0x2c2a09b566
sfi-move,0x2264576748,0x1ff5946bcb8
code-move,0x1bb8fb36536,0x1a5adc5c8f6
sfi-move,0x334160a9120,0x2c2a09b8f0
sfi-move,0x334160a9170,0x2c2a09b940
sfi-move,0x334160a91c0,0x2c2a09b978
sfi-move,0x334160a9210,0x2c2a09b9c8
sfi-move,0x334160a9260,0x2c2a09ba18
sfi-move,0x2264577138,0x1ff5946c428
sfi-move,0x22645771f0,0x1ff5946c460
sfi-move,0x2264577268,0x1ff5946c498
code-move,0x1bb8fb366d6,0x1a5adc5ca96
sfi-move,0x334160a9f68,0x2c2a09bee0
sfi-move,0x334160a9fb8,0x2c2a09bf30
sfi-move,0x334160aa008,0x2c2a09bf80
code-move,0x1bb8fb368d6,0x1a5adc5cc96
sfi-move,0x334160aa058,0x2c2a09bfd0
sfi-move,0x334160aa0a8,0x2c2a09c020
code-move,0x1bb8fb36c2e,0x1a5adc5cfee
sfi-move,0x334160ab540,0x2c2a09c8b8
sfi-move,0x334160ab5b0,0x2c2a09c928
sfi-move,0x334160ab620,0x2c2a09c998
sfi-move,0x334160ab690,0x2c2a09ca08
sfi-move,0x334160ab700,0x2c2a09ca78
sfi-move,0x334160ab770,0x2c2a09cae8
sfi-move,0x334160ab7e0,0x2c2a09cb58
sfi-move,0x334160ab850,0x2c2a09cbc8
sfi-move,0x334160ab8c0,0x2c2a09cc38
sfi-move,0x334160ab930,0x2c2a09cca8
sfi-move,0x334160aba40,0x2c2a09cdb8
sfi-move,0x334160abb48,0x2c2a09cec0
sfi-move,0x334160ad1b0,0x2c2a09de70
sfi-move,0x334160ad200,0x2c2a09dec0
sfi-move,0x334160ad250,0x2c2a09df10
sfi-move,0x334160ad2a0,0x2c2a09df60
sfi-move,0x334160ad2f0,0x2c2a09dfb0
sfi-move,0x334160ad340,0x2c2a09e000
sfi-move,0x334160ad390,0x2c2a09e050
sfi-move,0x334160ad3e0,0x2c2a09e0a0
sfi-move,0x334160ad430,0x2c2a09e0f0
sfi-move,0x334160ad480,0x2c2a09e140
sfi-move,0x334160ad4d0,0x2c2a09e190
sfi-move,0x334160ad520,0x2c2a09e1e0
sfi-move,0x334160ad570,0x2c2a09e230
sfi-move,0x334160ad5c0,0x2c2a09e280
sfi-move,0x334160ad610,0x2c2a09e2d0
sfi-move,0x334160ad660,0x2c2a09e320
sfi-move,0x334160ad6b0,0x2c2a09e370
sfi-move,0x334160ad700,0x2c2a09e3a8
sfi-move,0x334160ad750,0x2c2a09e3e0
sfi-move,0x334160ad7a0,0x2c2a09e418
sfi-move,0x334160ad7f0,0x2c2a09e450
sfi-move,0x334160ad840,0x2c2a09e488
sfi-move,0x334160ad890,0x2c2a09e4d8
sfi-move,0x334160ad8e0,0x2c2a09e528
sfi-move,0x334160ad930,0x2c2a09e578
sfi-move,0x334160ad980,0x2c2a09e5c8
sfi-move,0x334160ad9d0,0x2c2a09e618
sfi-move,0x334160ada20,0x2c2a09e668
sfi-move,0x334160ada70,0x2c2a09e6b8
sfi-move,0x334160adac0,0x2c2a09e708
sfi-move,0x334160adb10,0x2c2a09e758
sfi-move,0x334160adb60,0x2c2a09e7a8
sfi-move,0x334160adbb0,0x2c2a09e7f8
sfi-move,0x334160b1338,0x2c2a09ef18
sfi-move,0x334160b1388,0x2c2a09ef68
sfi-move,0x334160b13d8,0x2c2a09efb8
sfi-move,0x334160b1428,0x2c2a09f008
sfi-move,0x334160b20f8,0x2c2a09f218
sfi-move,0x334160b27a8,0x2c2a09f4a0
sfi-move,0x334160b3c90,0x2c2a0a0150
sfi-move,0x334160b3ce0,0x2c2a0a01a0
sfi-move,0x334160b3d30,0x2c2a0a01f0
sfi-move,0x334160b3d80,0x2c2a0a0240
sfi-move,0x334160b3dd0,0x2c2a0a0290
sfi-move,0x334160b3e20,0x2c2a0a02e0
sfi-move,0x334160b3e70,0x2c2a0a0330
sfi-move,0x334160b3ec0,0x2c2a0a0380
sfi-move,0x334160b3f10,0x2c2a0a03d0
sfi-move,0x334160b3f60,0x2c2a0a0420
sfi-move,0x334160b3fb0,0x2c2a0a0470
sfi-move,0x334160b4000,0x2c2a0a04c0
sfi-move,0x334160b4050,0x2c2a0a0510
sfi-move,0x334160b40a0,0x2c2a0a0560
sfi-move,0x334160b40f0,0x2c2a0a05b0
sfi-move,0x334160b4140,0x2c2a0a0600
sfi-move,0x334160b4190,0x2c2a0a0650
sfi-move,0x334160b41e0,0x2c2a0a06a0
sfi-move,0x334160b4230,0x2c2a0a06f0
sfi-move,0x334160b4280,0x2c2a0a0740
sfi-move,0x334160b42d0,0x2c2a0a0790
sfi-move,0x334160b4320,0x2c2a0a07e0
sfi-move,0x334160b4370,0x2c2a0a0830
sfi-move,0x334160b43c0,0x2c2a0a0880
sfi-move,0x334160b4410,0x2c2a0a08d0
sfi-move,0x334160b4460,0x2c2a0a0920
sfi-move,0x334160b44b0,0x2c2a0a0970
sfi-move,0x334160b4500,0x2c2a0a09c0
sfi-move,0x334160b4550,0x2c2a0a0a10
sfi-move,0x334160b45a0,0x2c2a0a0a60
sfi-move,0x334160b45f0,0x2c2a0a0ab0
sfi-move,0x334160b4640,0x2c2a0a0b00
sfi-move,0x334160b4690,0x2c2a0a0b50
sfi-move,0x334160b46e0,0x2c2a0a0ba0
sfi-move,0x334160b4730,0x2c2a0a0bf0
sfi-move,0x334160b4780,0x2c2a0a0c40
sfi-move,0x334160b47d0,0x2c2a0a0c90
sfi-move,0x334160b4820,0x2c2a0a0ce0
sfi-move,0x334160b4870,0x2c2a0a0d30
sfi-move,0x334160b48c0,0x2c2a0a0d80
sfi-move,0x334160b4910,0x2c2a0a0dd0
sfi-move,0x334160b4960,0x2c2a0a0e20
sfi-move,0x334160b49b0,0x2c2a0a0e70
sfi-move,0x334160b4a00,0x2c2a0a0ec0
sfi-move,0x334160b4a50,0x2c2a0a0f10
sfi-move,0x334160b4aa0,0x2c2a0a0f60
sfi-move,0x334160b4af0,0x2c2a0a0fb0
sfi-move,0x334160b4b58,0x2c2a0a1018
sfi-move,0x334160b4ba8,0x2c2a0a1068
sfi-move,0x334160b4bf8,0x2c2a0a10b8
sfi-move,0x334160b4c48,0x2c2a0a1108
sfi-move,0x334160b4c98,0x2c2a0a1158
sfi-move,0x334160b4ce8,0x2c2a0a11a8
sfi-move,0x334160b4d38,0x2c2a0a11f8
sfi-move,0x334160b4d88,0x2c2a0a1248
sfi-move,0x334160b4dd8,0x2c2a0a1298
sfi-move,0x334160b4e28,0x2c2a0a12e8
sfi-move,0x334160b4e78,0x2c2a0a1338
sfi-move,0x334160b4ec8,0x2c2a0a1388
sfi-move,0x334160b4f18,0x2c2a0a13d8
sfi-move,0x334160b4f68,0x2c2a0a1428
sfi-move,0x334160b4fb8,0x2c2a0a1478
sfi-move,0x334160b5008,0x2c2a0a14c8
sfi-move,0x334160b5058,0x2c2a0a1518
sfi-move,0x334160b50a8,0x2c2a0a1568
sfi-move,0x334160b50f8,0x2c2a0a15b8
sfi-move,0x334160b5148,0x2c2a0a1608
sfi-move,0x334160b5198,0x2c2a0a1658
sfi-move,0x334160b51e8,0x2c2a0a16a8
sfi-move,0x334160b5238,0x2c2a0a16f8
sfi-move,0x334160b6c98,0x2c2a0a1748
code-move,0x1bb8fb36d56,0x1a5adc5d116
code-move,0x1bb8fb36e8e,0x1a5adc5d24e
code-move,0x1bb8fb36fbe,0x1a5adc5d37e
code-move,0x1bb8fb37426,0x1a5adc5d7e6
code-move,0x1bb8fb3780e,0x1a5adc5dbce
sfi-move,0x1bb8fb37940,0x1a5adc5dd00
code-move,0xbfdd363146,0x1129ffedf4e
code-move,0xbfdd363666,0x1129ffee456
code-move,0xbfdd363ac6,0x1129ffee89e
code-move,0xbfdd363de6,0x1129ffeebbe
code-move,0xbfdd363eee,0x1129ffeecc6
code-move,0xbfdd363fd6,0x1129ffeedae
code-move,0xbfdd36412e,0x1129ffeef06
code-move,0xbfdd3642ae,0x1129ffef086
code-move,0xbfdd364a76,0x1129ffef24e
code-move,0xbfdd364c46,0x1129ffef41e
code-move,0xbfdd364e0e,0x1129ffef5e6
code-move,0xbfdd364f16,0x1129ffef6ee
code-move,0xbfdd36508e,0x1129ffef866
code-move,0xbfdd3651e6,0x1129ffef9be
code-move,0xbfdd3652ee,0x1129ffefac6
code-move,0xbfdd365416,0x1129ffefbee
code-move,0xbfdd36552e,0x1129ffefd06
code-move,0xbfdd3656ee,0x1129ffefec6
code-move,0xbfdd3658d6,0x1129fff00ae
code-move,0xbfdd365b2e,0x1129fff0306
code-move,0xbfdd365c9e,0x1129fff0476
code-move,0xbfdd365df6,0x1129fff05ce
code-move,0xbfdd365ffe,0x1129fff07b6
code-move,0xbfdd366306,0x1129fff0abe
code-move,0xbfdd3664be,0x1129fff0c76
code-move,0xbfdd3665f6,0x1129fff0dae
code-move,0xbfdd3668b6,0x1129fff106e
code-move,0xbfdd366c9e,0x1129fff1456
code-move,0x1bb8fb37afe,0x1a5adc5dea6
code-move,0x1bb8fb38036,0x1a5adc5e3de
code-move,0x1bb8fb3818e,0x1a5adc5e536
code-move,0x22645782ae,0x1ff5946ce0e
code-move,0x226457841e,0x1ff5946cf7e
code-move,0x226457854e,0x1ff5946d0ae
sfi-move,0x22645788c8,0x1ff5946d358
sfi-move,0x2264578980,0x1ff5946d390
code-move,0x1bb8fb382ae,0x1a5adc5e656
code-move,0x1bb8fb383ee,0x1a5adc5e796
code-move,0x334160b6d46,0x2c2a0a17f6
sfi-move,0x2264578a20,0x1ff5946d430
sfi-move,0x2264578a98,0x1ff5946d468
sfi-move,0x334160b9818,0x2c2a0a2468
sfi-move,0x334160b9890,0x2c2a0a24e0
sfi-move,0x334160b98e0,0x2c2a0a2530
sfi-move,0x334160b9930,0x2c2a0a2580
sfi-move,0x334160b9980,0x2c2a0a25d0
sfi-move,0x334160b99d0,0x2c2a0a2620
sfi-move,0x334160b9a20,0x2c2a0a2670
sfi-move,0x334160b9a70,0x2c2a0a26c0
sfi-move,0x334160b9ac0,0x2c2a0a2710
sfi-move,0x334160b9b10,0x2c2a0a2760
code-move,0x39bd861ac0e,0x3fe5749f846
code-move,0x39bd861ae7e,0x3fe5749fab6
code-move,0x39bd861b076,0x3fe5749fcae
code-move,0x39bd861b376,0x3fe5749ff4e
code-move,0x334160bac7e,0x2c2a0a29be
code-move,0x1bb8fb385ee,0x1a5adc5e97e
code-move,0x1bb8fb3899e,0x1a5adc5ed2e
sfi-move,0x1bb8fb38c28,0x1a5adc5efb8
code-move,0x2264578cf6,0x1ff5946d6ae
sfi-move,0x1bb8fb38c78,0x1a5adc5f008
code-move,0x39bd861b50e,0x3fe574a00e6
sfi-move,0x226457b4d8,0x1ff5946f8b0
sfi-move,0x226457b590,0x1ff5946f8e8
sfi-move,0x226457b5e0,0x1ff5946f920
sfi-move,0x226457b660,0x1ff5946f9a0
sfi-move,0x226457b6b0,0x1ff5946f9d8
sfi-move,0x226457b700,0x1ff5946fa28
sfi-move,0x226457b778,0x1ff5946fa60
sfi-move,0x226457b7c8,0x1ff5946fab0
sfi-move,0x226457b818,0x1ff5946fae8
sfi-move,0x226457b868,0x1ff5946fb20
sfi-move,0x226457b8b8,0x1ff5946fb70
sfi-move,0x226457b908,0x1ff5946fba8
sfi-move,0x226457b958,0x1ff5946fbf8
sfi-move,0x226457b9a8,0x1ff5946fc48
sfi-move,0x226457b9f8,0x1ff5946fc98
sfi-move,0x226457ba48,0x1ff5946fce8
sfi-move,0x226457ba98,0x1ff5946fd20
sfi-move,0x226457bae8,0x1ff5946fd58
sfi-move,0x226457bb38,0x1ff5946fd90
sfi-move,0x226457bbb8,0x1ff5946fe10
sfi-move,0x226457d488,0x1ff594714a0
code-move,0x39bd861ba26,0x3fe574a05fe
code-move,0x39bd861bbbe,0x3fe574a0796
code-move,0x39bd861bca6,0x3fe574a087e
code-move,0x39bd861bf9e,0x3fe574a0b76
code-move,0x39bd861c15e,0x3fe574a0d36
code-move,0x39bd861c2fe,0x3fe574a0ed6
code-move,0x39bd861c436,0x3fe574a100e
code-move,0x39bd861c676,0x3fe574a124e
code-move,0x39bd861cace,0x3fe574a16a6
code-move,0x39bd861cefe,0x3fe574a1ad6
sfi-move,0x39bd861cff8,0x3fe574a1bb0
code-move,0x1bb8fb38dee,0x1a5adc5f166
code-move,0x1bb8fb390f6,0x1a5adc5f46e
code-move,0x1bb8fb393ce,0x1a5adc5f72e
code-move,0x1bb8fb39606,0x1a5adc5f966
code-move,0x1bb8fb39826,0x1a5adc5fb86
code-move,0x1bb8fb39a36,0x1a5adc5fd96
code-move,0x1bb8fb39bc6,0x1a5adc5ff26
code-move,0x1bb8fb39cd6,0x1a5adc60036
code-move,0x1bb8fb39f06,0x1a5adc60146
code-move,0x1bb8fb3a046,0x1a5adc60286
sfi-move,0x1bb8fb3a228,0x1a5adc603d8
sfi-move,0x1bb8fb3a278,0x1a5adc60428
code-move,0x226457d586,0x1ff5947159e
code-move,0x226457d7ae,0x1ff594717c6
code-move,0x39bd861d136,0x3fe574a1cd6
code-move,0x334160bd656,0x2c2a0a537e
code-move,0x334160bd80e,0x2c2a0a5536
code-move,0xbfdd367786,0x1129fff17b6
code-move,0xbfdd367cf6,0x1129fff1d26
code-move,0x1bb8fb3a3ce,0x1a5adc60566
code-move,0x39bd861d5fe,0x3fe574a20d6
code-move,0x39bd861d786,0x3fe574a225e
code-move,0x39bd861d8ce,0x3fe574a23a6
code-move,0x39bd861db26,0x3fe574a25fe
code-move,0x39bd861dca6,0x3fe574a277e
code-move,0x39bd861de5e,0x3fe574a2936
code-move,0x39bd861df76,0x3fe574a2a4e
code-move,0x39bd861e09e,0x3fe574a2b76
code-move,0x39bd861e19e,0x3fe574a2c76
code-move,0x334160bd9fe,0x13cb80cf656
code-move,0x334160bdafe,0x13cb80fd5fe
code-move,0x334160bdbee,0x13cb80fd6ee
sfi-move,0x334160bdde8,0x13cb80fed60
code-move,0xbfdd368756,0x1129fff2786
sfi-move,0x334160bf2d0,0x13cb80fee18
code-move,0xbfdd368a46,0x1129fff28f6
sfi-move,0x334160bff28,0x13cb80fde10
sfi-move,0x334160bff78,0x13cb80fde48
sfi-move,0x334160bffc8,0x13cb80fde80
sfi-move,0xbfdd368b58,0x1129fff2a08
sfi-move,0xbfdd368c28,0x1129fff2ad8
sfi-move,0x2f65a701118,0x13cb80cf4f0
sfi-move,0x2f65a701168,0x13cb80cf3c0
sfi-move,0x2f65a7011b8,0x13cb80cf290
sfi-move,0x2f65a701208,0x13cb80cf160
sfi-move,0x2f65a701258,0x13cb80cf030
sfi-move,0x2f65a7012a8,0x13cb80cef00
sfi-move,0x2f65a7012f8,0x13cb80cedd0
sfi-move,0x2f65a701348,0x13cb80ceca0
sfi-move,0x2f65a701410,0x13cb80ceb70
sfi-move,0x2f65a701460,0x13cb80cea40
sfi-move,0x2f65a7014b0,0x13cb80ce910
sfi-move,0x2f65a701500,0x13cb80ce7e0
sfi-move,0x2f65a701550,0x13cb80ce6b0
sfi-move,0x2f65a7015a0,0x13cb80ce580
sfi-move,0x2f65a7015f0,0x13cb80ce450
sfi-move,0x2f65a701640,0x13cb80ce320
sfi-move,0x2f65a701690,0x13cb80ce1f0
sfi-move,0x2f65a701720,0x13cb80ce0c0
sfi-move,0x20cab79d450,0x38a7b5687a0
sfi-move,0x20cab79d4a0,0x38a7b5687f0
sfi-move,0x20cab79d4f0,0x38a7b568840
code-move,0x39bd861e23e,0x3fe574a2d16
sfi-move,0x20cab79d540,0x38a7b568890
sfi-move,0x20cab79d590,0x38a7b5688e0
sfi-move,0x20cab79d5e0,0x38a7b568930
sfi-move,0x20cab79d630,0x38a7b568980
sfi-move,0x20cab79d680,0x38a7b5689d0
sfi-move,0x20cab79d6d0,0x38a7b568a20
sfi-move,0x20cab79d750,0x38a7b568aa0
sfi-move,0x20cab79d7a0,0x38a7b568af0
sfi-move,0x20cab79d7f0,0x38a7b568b40
sfi-move,0x20cab79d840,0x38a7b568b90
sfi-move,0x20cab79d890,0x38a7b568be0
sfi-move,0x20cab79d8e0,0x38a7b568c30
sfi-move,0x20cab79d930,0x38a7b568c80
sfi-move,0x20cab79d980,0x38a7b568cd0
sfi-move,0x20cab79d9d0,0x38a7b568d20
sfi-move,0x20cab79da20,0x38a7b568d70
sfi-move,0x20cab79da70,0x38a7b568dc0
sfi-move,0x20cab79dac0,0x38a7b568e10
sfi-move,0x20cab79db90,0x38a7b568e60
sfi-move,0x20cab79dbe0,0x38a7b568eb0
sfi-move,0x20cab79dc30,0x38a7b568f00
sfi-move,0x20cab79dcf8,0x38a7b568f50
sfi-move,0x20cab79dd48,0x38a7b568fa0
sfi-move,0x20cab79dd98,0x38a7b568ff0
sfi-move,0x20cab79dde8,0x38a7b569040
sfi-move,0x20cab79de38,0x38a7b569090
sfi-move,0x20cab79de88,0x38a7b5690e0
sfi-move,0x20cab79df10,0x38a7b569168
sfi-move,0x20cab79df98,0x38a7b5691f0
sfi-move,0x20cab79e020,0x38a7b569278
sfi-move,0x20cab79e0a8,0x38a7b569300
sfi-move,0x20cab79e130,0x38a7b56bb70
sfi-move,0x20cab79e1c0,0x38a7b56ba40
sfi-move,0x20cab79e250,0x38a7b56b910
sfi-move,0x20cab79e2e0,0x38a7b56b580
sfi-move,0x20cab79e380,0x38a7b56b450
sfi-move,0x20cab79e3d0,0x38a7b56b1f0
sfi-move,0x2f65a7053e0,0x13cb80fe2a0
sfi-move,0x2f65a705430,0x13cb80fe2d8
sfi-move,0x2f65a705480,0x13cb80fe328
sfi-move,0x2f65a7054d0,0x13cb80fe378
sfi-move,0x2f65a705520,0x13cb80fe3c8
sfi-move,0x2f65a705598,0x13cb80fe440
sfi-move,0x2f65a7055e8,0x13cb80cdf90
sfi-move,0x2f65a705638,0x13cb80cde60
sfi-move,0x2f65a705688,0x13cb80cdd30
sfi-move,0x2f65a7056d8,0x13cb80cdc00
sfi-move,0x2f65a705750,0x13cb80cdad0
sfi-move,0x2f65a7057a0,0x13cb80cd9a0
code-move,0x39bd861e30e,0x3fe574a2de6
sfi-move,0x20cab7a2ff0,0x38a7b55e768
sfi-move,0x20cab7a3060,0x38a7b569570
sfi-move,0x20cab7a30d0,0x2e75135c4c8
sfi-move,0x20cab7a3140,0x38a7b55df70
sfi-move,0x20cab7a31b0,0x38a7b55dfe0
sfi-move,0x20cab7a3220,0x38a7b55e050
sfi-move,0x20cab7a3290,0x2e75135c670
sfi-move,0x2f65a707c48,0x13cb80f5be8
code-move,0xbfdd368e3e,0x1129fff2cee
sfi-move,0x20cab7a3800,0x38a7b561d08
sfi-move,0x20cab7a3870,0x38a7b561d78
sfi-move,0x20cab7a38e0,0x38a7b561de8
sfi-move,0x20cab7a3950,0x38a7b560e18
sfi-move,0x20cab7a39c0,0x38a7b560e88
sfi-move,0x20cab7a3a30,0x38a7b560ef8
sfi-move,0x20cab7a3aa0,0x38a7b560f68
sfi-move,0x20cab7a4030,0x38a7b55fbe8
sfi-move,0x20cab7a40a0,0x38a7b55fc58
sfi-move,0x20cab7a4110,0x38a7b560770
sfi-move,0x20cab7a4180,0x38a7b5607e0
sfi-move,0x20cab7a41f0,0x38a7b560850
sfi-move,0x20cab7a4260,0x38a7b5608c0
sfi-move,0x20cab7a42d0,0x38a7b560930
sfi-move,0xbfdd369318,0x1129fff3180
sfi-move,0xbfdd369368,0x1129fff31b8
sfi-move,0xbfdd3693b8,0x1129fff3208
code-move,0x1bb8fb3a6de,0x1a5adc60876
sfi-move,0x20cab7a69b8,0x38a7b56daf0
sfi-move,0x20cab7a6a08,0x38a7b56db40
sfi-move,0x20cab7a6c78,0x38a7b56dc20
code-move,0x39bd861e556,0x3fe574a302e
sfi-move,0x20cab7a7c40,0x38a7b56e7a0
sfi-move,0x20cab7a7cf8,0x38a7b56e7d8
sfi-move,0x20cab7a7d48,0x38a7b56e810
sfi-move,0x20cab7a7d98,0x38a7b56e848
sfi-move,0x20cab7a7de8,0x38a7b56e880
code-move,0x39bd861e81e,0x3fe574a32f6
sfi-move,0x20cab7a95d8,0x38a7b56f978
sfi-move,0x20cab7a9628,0x38a7b56f9b0
sfi-move,0x20cab7a9678,0x38a7b56fa00
code-move,0x39bd861e956,0x3fe574a342e
sfi-move,0x20cab7a96c8,0x38a7b56fa50
sfi-move,0x20cab7a9718,0x38a7b56faa0
sfi-move,0x20cab7a9768,0x38a7b56faf0
sfi-move,0x20cab7a97b8,0x38a7b56fb40
sfi-move,0x20cab7a9808,0x38a7b56fb90
sfi-move,0x20cab7a9858,0x38a7b56fbe0
sfi-move,0x20cab7a98a8,0x38a7b56fc30
sfi-move,0x20cab7a98f8,0x38a7b56fc80
sfi-move,0x20cab7a99e8,0x38a7b56fcd0
code-move,0x39bd861eb16,0x3fe574a35ee
sfi-move,0x20cab7abee8,0x38a7b570090
sfi-move,0x20cab7abf58,0x38a7b570100
code-move,0x39bd861ee6e,0x3fe574a3946
sfi-move,0x20cab7ac888,0x38a7b570a30
sfi-move,0x20cab7ac8f8,0x38a7b570aa0
sfi-move,0x20cab7ac968,0x38a7b570b10
sfi-move,0x20cab7ac9d8,0x38a7b570b80
sfi-move,0x20cab7aca48,0x38a7b570bf0
sfi-move,0x20cab7acab8,0x38a7b570c60
sfi-move,0x20cab7acb28,0x38a7b570cd0
sfi-move,0x20cab7acb98,0x38a7b570d40
sfi-move,0x20cab7acc08,0x38a7b570db0
sfi-move,0x20cab7acd38,0x38a7b570ee0
sfi-move,0x20cab7ace60,0x38a7b571008
sfi-move,0x20cab7acf68,0x38a7b571110
sfi-move,0x20cab7ad070,0x38a7b571218
sfi-move,0x20cab7ad178,0x38a7b571320
sfi-move,0x20cab7ad280,0x38a7b571428
sfi-move,0x20cab7ad388,0x38a7b571530
sfi-move,0x20cab7adc00,0x38a7b571da8
sfi-move,0x20cab7adc70,0x38a7b571e18
sfi-move,0x20cab7adce0,0x38a7b571e88
sfi-move,0x20cab7add50,0x38a7b571ef8
sfi-move,0x20cab7addc0,0x38a7b571f68
sfi-move,0x20cab7ade30,0x38a7b571fd8
sfi-move,0x20cab7adea0,0x38a7b572048
sfi-move,0x20cab7adf10,0x38a7b5720b8
sfi-move,0x20cab7adf80,0x38a7b572128
code-move,0x39bd861efc6,0x3fe574a3a9e
sfi-move,0x20cab7ae6b8,0x38a7b572860
sfi-move,0x20cab7ae728,0x38a7b5728d0
sfi-move,0x20cab7ae798,0x38a7b572940
sfi-move,0x20cab7ae808,0x38a7b5729b0
sfi-move,0x20cab7ae878,0x38a7b572a20
sfi-move,0x20cab7ae8e8,0x38a7b572a90
sfi-move,0x20cab7ae958,0x38a7b572b00
sfi-move,0x20cab7ae9c8,0x38a7b572b70
sfi-move,0x20cab7aea38,0x38a7b572be0
sfi-move,0x20cab7aeb48,0x38a7b572cf0
sfi-move,0x20cab7aedd8,0x38a7b572f80
sfi-move,0x20cab7aee48,0x38a7b572ff0
sfi-move,0x20cab7af0e0,0x38a7b573288
sfi-move,0x20cab7af150,0x38a7b5732f8
sfi-move,0x20cab7af3e8,0x38a7b573590
sfi-move,0x20cab7af458,0x38a7b573600
sfi-move,0x20cab7af6f0,0x38a7b573898
sfi-move,0x20cab7af760,0x38a7b573908
sfi-move,0x20cab7af9f8,0x38a7b573ba0
sfi-move,0x20cab7afa68,0x38a7b573c10
sfi-move,0x20cab7afff8,0x38a7b5741a0
sfi-move,0x20cab7b0068,0x38a7b574210
sfi-move,0x20cab7b00d8,0x38a7b574280
sfi-move,0x20cab7b0148,0x38a7b5742f0
sfi-move,0x20cab7b01b8,0x38a7b574360
sfi-move,0x20cab7b0228,0x38a7b5743d0
sfi-move,0x20cab7b0298,0x38a7b574440
sfi-move,0x20cab7b03a8,0x38a7b574550
sfi-move,0x20cab7b04d0,0x38a7b574678
sfi-move,0x20cab7b0740,0x38a7b5748e8
sfi-move,0x20cab7b07b0,0x38a7b574958
sfi-move,0x20cab7b0a48,0x38a7b574bf0
sfi-move,0x20cab7b0ab8,0x38a7b574c60
sfi-move,0x20cab7b0d50,0x38a7b574ef8
sfi-move,0x20cab7b0dc0,0x38a7b574f68
sfi-move,0x20cab7b1148,0x38a7b5752f0
sfi-move,0x20cab7b11b8,0x38a7b575360
code-move,0x39bd861f0ee,0x3fe574a3bc6
sfi-move,0x20cab7b1228,0x38a7b5753d0
sfi-move,0x20cab7b1338,0x38a7b5754e0
sfi-move,0x20cab7b15a8,0x38a7b575750
sfi-move,0x20cab7b1618,0x38a7b5757c0
sfi-move,0x20cab7b18a8,0x38a7b575a50
sfi-move,0x20cab7b1918,0x38a7b575ac0
code-move,0x39bd861f246,0x3fe574a3d1e
code-move,0x39bd861f396,0x3fe574a3e6e
sfi-move,0x20cab7b1cd8,0x38a7b575e80
sfi-move,0x20cab7b1d48,0x38a7b575ef0
sfi-move,0x20cab7b1db8,0x38a7b575f60
sfi-move,0x20cab7b1e28,0x38a7b575fd0
sfi-move,0x20cab7b20a0,0x38a7b576248
sfi-move,0x20cab7b2110,0x38a7b5762b8
code-move,0x1bb8fb3a866,0x1a5adc609fe
sfi-move,0x20cab7b23a0,0x38a7b576548
sfi-move,0x20cab7b2410,0x38a7b5765b8
sfi-move,0x20cab7b26a8,0x38a7b576850
sfi-move,0x20cab7b2718,0x38a7b5768c0
code-move,0x2f65a707e1e,0x13cb80f5cee
sfi-move,0x20cab7b2f70,0x38a7b577118
sfi-move,0x20cab7b2fe0,0x38a7b577188
sfi-move,0x20cab7b3050,0x38a7b5771f8
sfi-move,0x20cab7b30c0,0x38a7b577268
sfi-move,0x20cab7b3130,0x38a7b5772d8
sfi-move,0x20cab7b31a0,0x38a7b577348
sfi-move,0x20cab7b3210,0x38a7b5773b8
sfi-move,0x20cab7b3280,0x38a7b577428
sfi-move,0x20cab7b32f0,0x38a7b577498
sfi-move,0x20cab7b3360,0x38a7b577508
sfi-move,0x20cab7b3740,0x38a7b5778e8
sfi-move,0x20cab7b39e0,0x38a7b577b88
sfi-move,0x20cab7b3a50,0x38a7b577bf8
sfi-move,0x20cab7b3ce8,0x38a7b577e90
sfi-move,0x20cab7b3d58,0x38a7b577f00
sfi-move,0x2f65a708038,0x13cb80f5f08
code-move,0xbfdd369646,0x1129fff3496
sfi-move,0x20cab7b3ff0,0x38a7b578198
sfi-move,0x20cab7b4060,0x38a7b578208
sfi-move,0x20cab7b42f8,0x38a7b5784a0
sfi-move,0x20cab7b4368,0x38a7b578510
code-move,0x39bd861f4f6,0x3fe574a3fce
sfi-move,0x20cab7b4600,0x38a7b5787a8
sfi-move,0x20cab7b4670,0x38a7b578818
code-move,0x39bd861f816,0x3fe574a42b6
sfi-move,0x20cab7b4908,0x38a7b578ab0
sfi-move,0x20cab7b4978,0x38a7b578b20
sfi-move,0x20cab7b4c10,0x38a7b578db8
sfi-move,0x20cab7b4c80,0x38a7b578e28
code-move,0x39bd861f9b6,0x3fe574a4436
sfi-move,0x20cab7b6388,0x38a7b57a530
sfi-move,0x20cab7b63f8,0x38a7b57a5a0
sfi-move,0x20cab7b6468,0x38a7b57a610
sfi-move,0x20cab7b64d8,0x38a7b57a680
sfi-move,0x20cab7b6548,0x38a7b57a6f0
sfi-move,0x20cab7b65b8,0x38a7b57a760
sfi-move,0x20cab7b6628,0x38a7b57a7d0
sfi-move,0x20cab7b6698,0x38a7b57a840
sfi-move,0x20cab7b6708,0x38a7b57a8b0
sfi-move,0x20cab7b6778,0x38a7b57a920
sfi-move,0x20cab7b67e8,0x38a7b57a990
sfi-move,0x20cab7b6858,0x38a7b57aa00
sfi-move,0x20cab7b68c8,0x38a7b57aa70
sfi-move,0x20cab7b6938,0x38a7b57aae0
sfi-move,0x20cab7b69a8,0x38a7b57ab50
sfi-move,0x20cab7b6a18,0x38a7b57abc0
sfi-move,0x20cab7b6a88,0x38a7b57ac30
sfi-move,0x20cab7b6af8,0x38a7b57aca0
sfi-move,0x20cab7b6b68,0x38a7b57ad10
sfi-move,0x20cab7b6bd8,0x38a7b57ad80
sfi-move,0x20cab7b6c48,0x38a7b57adf0
sfi-move,0x20cab7b6cb8,0x38a7b57ae60
sfi-move,0x20cab7b6d28,0x38a7b57aed0
sfi-move,0x20cab7b6d98,0x38a7b57af40
sfi-move,0x20cab7b6e08,0x38a7b57afb0
sfi-move,0x20cab7b6e78,0x38a7b57b020
sfi-move,0x20cab7b6ee8,0x38a7b57b090
sfi-move,0x20cab7b6f58,0x38a7b57b100
sfi-move,0x20cab7b7000,0x38a7b57b1a8
sfi-move,0x20cab7b71f8,0x38a7b57b3a0
sfi-move,0x20cab7b7328,0x38a7b57b4d0
sfi-move,0x20cab7b76f8,0x38a7b57b8a0
sfi-move,0x20cab7b7768,0x38a7b57b910
sfi-move,0x20cab7b77d8,0x38a7b57b980
sfi-move,0x20cab7b7848,0x38a7b57b9f0
sfi-move,0x20cab7b7ac0,0x38a7b57bc68
sfi-move,0x20cab7b7b30,0x38a7b57bcd8
sfi-move,0x20cab7b7ca0,0x38a7b57be48
sfi-move,0x20cab7b7dc8,0x38a7b57bf70
sfi-move,0x20cab7b7ef8,0x38a7b57c0a0
sfi-move,0x20cab7b8028,0x38a7b57c1d0
sfi-move,0x20cab7b8130,0x38a7b57c2d8
sfi-move,0x20cab7b8238,0x38a7b57c3e0
sfi-move,0x20cab7b8340,0x38a7b57c4e8
sfi-move,0x20cab7b8448,0x38a7b57c5f0
sfi-move,0x20cab7b85b0,0x38a7b57c758
sfi-move,0x20cab7b86d8,0x38a7b57c880
sfi-move,0x20cab7b8a78,0x38a7b57cc20
sfi-move,0x20cab7b8ae8,0x38a7b57cc90
sfi-move,0x20cab7b8b58,0x38a7b57cd00
sfi-move,0x20cab7b8bc8,0x38a7b57cd70
sfi-move,0x20cab7b8cd8,0x38a7b57ce80
code-move,0xbfdd36a80e,0x1129fff463e
sfi-move,0x20cab7b90b0,0x38a7b57d258
sfi-move,0x20cab7b9120,0x38a7b57d2c8
code-move,0xbfdd36a96e,0x1129fff479e
sfi-move,0x20cab7b9d38,0x38a7b57dc00
code-move,0xbfdd36aafe,0x1129fff4916
sfi-move,0x20cab7b9d88,0x38a7b57dc50
sfi-move,0x20cab7b9dd8,0x38a7b57dca0
sfi-move,0x20cab7b9e50,0x38a7b57dd18
sfi-move,0x20cab7b9ea0,0x38a7b57dd68
sfi-move,0x20cab7b9ef0,0x38a7b57ddb8
sfi-move,0x20cab7b9f40,0x38a7b57de08
sfi-move,0x20cab7b9f90,0x38a7b57de58
sfi-move,0x20cab7b9fe0,0x38a7b57dea8
sfi-move,0x20cab7ba030,0x38a7b57def8
sfi-move,0x20cab7ba080,0x38a7b57df48
sfi-move,0x20cab7ba0d0,0x38a7b57df98
sfi-move,0x20cab7ba120,0x38a7b57dfe8
sfi-move,0x20cab7ba170,0x38a7b57e038
sfi-move,0x20cab7ba1c0,0x38a7b57e088
sfi-move,0x20cab7ba210,0x38a7b57e0d8
sfi-move,0x20cab7ba260,0x38a7b57e128
sfi-move,0x20cab7ba2b0,0x38a7b57e178
sfi-move,0x20cab7ba300,0x38a7b57e1c8
sfi-move,0x20cab7ba350,0x38a7b57e218
sfi-move,0x20cab7ba3a0,0x38a7b57e268
code-move,0x39bd862067e,0x3fe574a50de
code-move,0x39bd86207ee,0x3fe574a522e
code-move,0x39bd8620966,0x3fe574a5366
code-move,0x39bd8620ae6,0x3fe574a54ce
sfi-move,0x20cab7bc4e0,0x38a7b57e7b0
sfi-move,0x20cab7bc530,0x38a7b57e800
sfi-move,0xbfdd36adb8,0x1129fff4b28
sfi-move,0xbfdd36ae70,0x1129fff4b60
sfi-move,0xbfdd36b008,0x1129fff4c50
sfi-move,0xbfdd36b0f8,0x1129fff4d40
code-move,0x2f65a708126,0x13cb80f5fde
sfi-move,0x20cab7bc580,0x38a7b57e850
sfi-move,0x20cab7bc5d0,0x38a7b57e8a0
code-move,0x1bb8fb3ad7e,0x1a5adc60f16
sfi-move,0x2f65a709360,0x13cb80f6820
sfi-move,0x2f65a709418,0x13cb80f6858
code-move,0x1bb8fb3b33e,0x1a5adc61496
sfi-move,0x20cab7bde68,0x38a7b57f6f8
sfi-move,0x20cab7bdeb8,0x38a7b57f730
sfi-move,0x20cab7bdf08,0x38a7b57f780
sfi-move,0x20cab7bdf58,0x38a7b57f7d0
sfi-move,0x20cab7bdfa8,0x38a7b57f820
sfi-move,0x20cab7bdff8,0x38a7b57f870
sfi-move,0x20cab7be048,0x38a7b57f8c0
sfi-move,0x20cab7be098,0x38a7b57f910
sfi-move,0x20cab7be0e8,0x38a7b57f960
sfi-move,0x20cab7be138,0x38a7b57f9b0
sfi-move,0x20cab7be188,0x38a7b57fa00
sfi-move,0x20cab7be1d8,0x38a7b57fa50
sfi-move,0x20cab7be228,0x38a7b57faa0
sfi-move,0x20cab7be278,0x38a7b57faf0
sfi-move,0x20cab7be2c8,0x38a7b57fb40
sfi-move,0x20cab7be318,0x38a7b57fb90
sfi-move,0x20cab7be368,0x38a7b57fbe0
sfi-move,0x20cab7be3b8,0x38a7b57fc30
sfi-move,0x20cab7be408,0x38a7b57fc80
sfi-move,0x20cab7be458,0x38a7b57fcd0
sfi-move,0x20cab7be4a8,0x38a7b57fd20
sfi-move,0x20cab7be4f8,0x38a7b57fd70
sfi-move,0x20cab7be548,0x38a7b57fdc0
sfi-move,0x20cab7be598,0x38a7b57fe10
code-move,0x1bb8fb3b73e,0x1a5adc61896
tick,0x7ff6a7980eb5,35550861,0,0x0,1
sfi-move,0x2f65a70b6c8,0x13cb80f77e8
code-move,0x1bb8fb3b886,0x1a5adc619de
sfi-move,0x2f65a70bc08,0x13cb80f7b20
code-move,0x1bb8fb3be2e,0x1a5adc61e9e
code-move,0x39bd8620e4e,0x3fe574a5836
sfi-move,0x39bd86210c0,0x3fe574a5aa8
code-move,0xbfdd36b19e,0x1129fff4de6
code-move,0x2f65a70bcee,0x13cb80f7c06
sfi-move,0xbfdd36c158,0x1129fff5da0
sfi-move,0xbfdd36c1a8,0x1129fff5df0
sfi-move,0xbfdd36c1f8,0x1129fff5e40
sfi-move,0xbfdd36c248,0x1129fff5e90
sfi-move,0x2f65a70d098,0x13cb80f8e98
sfi-move,0x2f65a70d150,0x13cb80f8ed0
code-move,0x1bb8fb3c0ee,0x1a5adc6215e
sfi-move,0x2f65a70dff8,0x13cb80f96a0
sfi-move,0x2f65a70e0b0,0x13cb80f96d8
code-move,0x1bb8fb3c22e,0x1a5adc6229e
sfi-move,0x2f65a70f4e8,0x13cb80fa2e8
sfi-move,0x1bb8fb3c348,0x1a5adc623b8
sfi-move,0x1bb8fb3c3a0,0x1a5adc623f0
sfi-move,0x2f65a710610,0x13cb80fafe8
sfi-move,0x2f65a7106c8,0x13cb80fb020
sfi-move,0x2f65a710718,0x13cb80fb070
sfi-move,0x2f65a710768,0x13cb80fb0c0
sfi-move,0x2f65a7107b8,0x13cb80fb110
sfi-move,0x2f65a710808,0x13cb80fb160
sfi-move,0x2f65a710858,0x13cb80fb1b0
sfi-move,0x2f65a7108a8,0x13cb80fb200
sfi-move,0x2f65a710928,0x13cb80fb280
sfi-move,0x2f65a710978,0x13cb80fb2d0
code-move,0x2bdba104496,0x318716acf66
code-move,0xbfdd36c376,0x1129fff5fa6
code-move,0xbfdd36c6f6,0x1129fff61f6
code-move,0xbfdd36c9ae,0x1129fff638e
sfi-move,0xbfdd36da00,0x1129fff6c20
sfi-move,0xbfdd36da50,0x1129fff6c70
sfi-move,0xbfdd36daa0,0x1129fff6cc0
sfi-move,0xbfdd36daf0,0x1129fff6d10
sfi-move,0xbfdd36db40,0x1129fff6d60
sfi-move,0xbfdd36db90,0x1129fff6db0
sfi-move,0xbfdd36dbe0,0x1129fff6e00
sfi-move,0xbfdd36dc30,0x1129fff6e50
sfi-move,0xbfdd36dc80,0x1129fff6ea0
sfi-move,0xbfdd36dcd0,0x1129fff6ef0
sfi-move,0xbfdd36dd20,0x1129fff6f40
sfi-move,0xbfdd36dd70,0x1129fff6f90
sfi-move,0xbfdd36ddc0,0x1129fff6fe0
sfi-move,0xbfdd36de80,0x1129fff70a0
sfi-move,0xbfdd36df30,0x1129fff7138
sfi-move,0xbfdd36dfc0,0x1129fff71c8
sfi-move,0xbfdd36e050,0x1129fff7258
sfi-move,0xbfdd3702a8,0x1129fff7d28
sfi-move,0xbfdd3702f8,0x1129fff7d78
sfi-move,0xbfdd370378,0x1129fff7df8
sfi-move,0xbfdd3703c8,0x1129fff7e48
sfi-move,0xbfdd370418,0x1129fff7e98
sfi-move,0xbfdd3704b8,0x1129fff7f38
sfi-move,0xbfdd370508,0x1129fff7f88
sfi-move,0xbfdd370558,0x1129fff7fd8
sfi-move,0xbfdd3705d8,0x1129fff8058
sfi-move,0xbfdd370628,0x1129fff80a8
sfi-move,0xbfdd370678,0x1129fff80f8
sfi-move,0xbfdd3706c8,0x1129fff8148
sfi-move,0xbfdd370718,0x1129fff8198
sfi-move,0xbfdd370768,0x1129fff81e8
sfi-move,0xbfdd3707b8,0x1129fff8238
sfi-move,0xbfdd370808,0x1129fff8288
sfi-move,0xbfdd3741b0,0x1129fff94e8
sfi-move,0xbfdd374220,0x1129fff9558
sfi-move,0xbfdd374290,0x1129fff95c8
sfi-move,0xbfdd374300,0x1129fff9638
sfi-move,0xbfdd374370,0x1129fff96a8
sfi-move,0xbfdd3743e0,0x1129fff9718
sfi-move,0xbfdd374468,0x1129fff97a0
sfi-move,0xbfdd374538,0x1129fff9870
sfi-move,0xbfdd3745a8,0x1129fff98e0
sfi-move,0xbfdd374618,0x1129fff9950
sfi-move,0xbfdd374688,0x1129fff99c0
sfi-move,0xbfdd3746f8,0x1129fff9a30
sfi-move,0xbfdd374768,0x1129fff9aa0
sfi-move,0xbfdd3747d8,0x1129fff9b10
sfi-move,0xbfdd374848,0x1129fff9b80
sfi-move,0xbfdd3748b8,0x1129fff9bf0
sfi-move,0xbfdd374928,0x1129fff9c60
sfi-move,0xbfdd374998,0x1129fff9cd0
sfi-move,0xbfdd374a10,0x1129fff9d48
sfi-move,0xbfdd374bb0,0x1129fff9ee8
sfi-move,0xbfdd375f88,0x1129fffaf20
sfi-move,0xbfdd375fd8,0x1129fffaf70
sfi-move,0xbfdd376028,0x1129fffafc0
sfi-move,0xbfdd376078,0x1129fffb010
sfi-move,0xbfdd3760c8,0x1129fffb060
sfi-move,0xbfdd376118,0x1129fffb0b0
sfi-move,0xbfdd376168,0x1129fffb100
sfi-move,0xbfdd3761b8,0x1129fffb150
sfi-move,0xbfdd376208,0x1129fffb1a0
sfi-move,0xbfdd3762e8,0x1129fffb280
sfi-move,0xbfdd376338,0x1129fffb2d0
sfi-move,0xbfdd3763b8,0x1129fffb350
sfi-move,0xbfdd376408,0x1129fffb3a0
sfi-move,0xbfdd376458,0x1129fffb3f0
sfi-move,0xbfdd3764a8,0x1129fffb440
sfi-move,0xbfdd3764f8,0x1129fffb490
sfi-move,0xbfdd376548,0x1129fffb4e0
sfi-move,0xbfdd376598,0x1129fffb530
sfi-move,0xbfdd3765e8,0x1129fffb580
sfi-move,0xbfdd376638,0x1129fffb5d0
sfi-move,0xbfdd376688,0x1129fffb620
sfi-move,0xbfdd3766d8,0x1129fffb670
sfi-move,0xbfdd376728,0x1129fffb6c0
sfi-move,0xbfdd376778,0x1129fffb710
sfi-move,0xbfdd3767c8,0x1129fffb760
sfi-move,0xbfdd376818,0x1129fffb7b0
sfi-move,0xbfdd3768a0,0x1129fffb838
sfi-move,0xbfdd376928,0x1129fffb8c0
sfi-move,0xbfdd3769b0,0x1129fffb948
sfi-move,0xbfdd376a38,0x1129fffb9d0
sfi-move,0xbfdd376a88,0x1129fffba20
sfi-move,0xbfdd376ad8,0x1129fffba70
sfi-move,0xbfdd376b28,0x1129fffbac0
sfi-move,0xbfdd376b78,0x1129fffbb10
sfi-move,0xbfdd376be0,0x1129fffbb78
sfi-move,0xbfdd376c30,0x1129fffbbc8
code-move,0x2f65a7124e6,0x13cb80fc0ae
code-move,0x2bdba1045b6,0x318716ad086
code-move,0x2bdba10473e,0x318716ad20e
code-move,0x2bdba104976,0x318716ad406
code-move,0x2bdba104af6,0x318716ad586
code-move,0x2bdba104d36,0x318716ad736
code-move,0x2bdba1050a6,0x318716adaa6
code-move,0x2bdba10527e,0x318716adc7e
sfi-move,0x2bdba105568,0x318716ade38
code-move,0xbfdd377cce,0x1129fffbc4e
sfi-move,0x2bdba105780,0x318716adf48
code-move,0x2f65a7126b6,0x13cb80fc27e
sfi-move,0xbfdd37be40,0x1129fffd4c8
sfi-move,0xbfdd37be90,0x1129fffd500
sfi-move,0xbfdd37bee0,0x1129fffd538
sfi-move,0xbfdd37bf30,0x1129fffd570
sfi-move,0xbfdd37bf80,0x1129fffd5a8
sfi-move,0xbfdd37bfd0,0x1129fffd5f8
sfi-move,0xbfdd37c020,0x1129fffd648
sfi-move,0xbfdd37c070,0x1129fffd680
sfi-move,0xbfdd37c0c0,0x1129fffd6b8
sfi-move,0xbfdd37c110,0x1129fffd6f0
sfi-move,0xbfdd37c160,0x1129fffd728
sfi-move,0xbfdd37c1b0,0x1129fffd778
sfi-move,0xbfdd37c200,0x1129fffd7b0
sfi-move,0xbfdd37c2a0,0x1129fffd7e8
sfi-move,0xbfdd37c2f0,0x1129fffd838
sfi-move,0xbfdd37c340,0x1129fffd888
sfi-move,0xbfdd37c3e0,0x1129fffd928
sfi-move,0xbfdd37c430,0x1129fffd978
sfi-move,0xbfdd37c480,0x1129fffd9c8
sfi-move,0xbfdd37c4d0,0x1129fffda00
sfi-move,0xbfdd37c520,0x1129fffda38
sfi-move,0xbfdd37c570,0x1129fffda70
sfi-move,0xbfdd37c5c0,0x1129fffdaa8
sfi-move,0xbfdd37c610,0x1129fffdae0
sfi-move,0xbfdd37c660,0x1129fffdb30
sfi-move,0xbfdd37c6b0,0x1129fffdb68
sfi-move,0xbfdd37c728,0x1129fffdba0
sfi-move,0xbfdd37c7a0,0x1129fffdc18
sfi-move,0xbfdd37c7f0,0x1129fffdc50
sfi-move,0xbfdd37c890,0x1129fffdca0
sfi-move,0xbfdd37c8e0,0x1129fffdcf0
sfi-move,0xbfdd37c930,0x1129fffdd28
sfi-move,0xbfdd37c9b8,0x1129fffdd98
sfi-move,0xbfdd37ca48,0x1129fffde28
sfi-move,0xbfdd37cad8,0x1129fffdeb8
sfi-move,0xbfdd37cb68,0x1129fffdf48
sfi-move,0xbfdd37cbf0,0x1129fffdfd0
sfi-move,0xbfdd37cc78,0x1129fffe058
sfi-move,0xbfdd37ccc8,0x1129fffe090
sfi-move,0xbfdd37cd50,0x1129fffe118
sfi-move,0xbfdd37cdd8,0x1129fffe1a0
sfi-move,0xbfdd37ce60,0x1129fffe210
sfi-move,0xbfdd37cee8,0x1129fffe268
code-move,0x2f65a7128fe,0x13cb80fc4b6
sfi-move,0xbfdd37cf70,0x1129fffe2c0
sfi-move,0xbfdd37cff8,0x1129fffe330
sfi-move,0xbfdd37d080,0x1129fffe3a0
sfi-move,0xbfdd37d108,0x1129fffe3f8
code-move,0x2f65a71334e,0x13cb80fc786
sfi-move,0xbfdd37d198,0x1129fffe488
sfi-move,0xbfdd37d228,0x1129fffe500
code-move,0x2f65a71387e,0x13cb80fc986
sfi-move,0xbfdd37d2b8,0x1129fffe590
sfi-move,0xbfdd37d308,0x1129fffe5e0
sfi-move,0xbfdd37d358,0x1129fffe630
sfi-move,0xbfdd37d3a8,0x1129fffe680
sfi-move,0xbfdd37d3f8,0x1129fffe6d0
sfi-move,0xbfdd37d488,0x1129fffe760
sfi-move,0xbfdd37d4d8,0x1129fffe7b0
sfi-move,0xbfdd37d528,0x1129fffe800
sfi-move,0xbfdd37d5b8,0x1129fffe878
sfi-move,0xbfdd37d670,0x1129fffe8f0
sfi-move,0xbfdd37d6f8,0x1129fffe960
sfi-move,0xbfdd37d780,0x1129fffe9d0
sfi-move,0xbfdd37d7d0,0x1129fffea20
sfi-move,0xbfdd37d820,0x1129fffea70
sfi-move,0xbfdd37d8a8,0x1129fffeaf8
sfi-move,0xbfdd37d930,0x1129fffeb68
sfi-move,0xbfdd37d9b8,0x1129fffebd8
sfi-move,0xbfdd37da40,0x1129fffec48
sfi-move,0xbfdd37dac8,0x1129fffecd0
sfi-move,0xbfdd37db50,0x1129fffed58
sfi-move,0xbfdd37dc10,0x1129fffee18
sfi-move,0xbfdd37dcc0,0x1129fffeeb0
sfi-move,0xbfdd37dd50,0x1129fffef28
sfi-move,0xbfdd37dde0,0x1129fffefb8
sfi-move,0xbfdd37de30,0x1129ffff008
sfi-move,0xbfdd37de80,0x1129ffff058
sfi-move,0xbfdd37ded0,0x1129ffff090
sfi-move,0xbfdd37df20,0x1129ffff0c8
sfi-move,0xbfdd37dfb0,0x1129ffff158
sfi-move,0xbfdd37e038,0x1129ffff1c8
sfi-move,0xbfdd37e0c0,0x1129ffff238
sfi-move,0xbfdd37e180,0x1129ffff2a8
sfi-move,0xbfdd37e1f8,0x1129ffff308
sfi-move,0xbfdd37faf0,0x1129ffff418
sfi-move,0xbfdd37fb40,0x1129ffff468
sfi-move,0xbfdd37fb90,0x1129ffff4a0
sfi-move,0xbfdd37fbe0,0x1129ffff4d8
sfi-move,0xbfdd37fc30,0x1129ffff528
sfi-move,0xbfdd37fc80,0x1129ffff560
sfi-move,0xbfdd37fcd0,0x1129ffff598
sfi-move,0xbfdd37fd20,0x1129ffff5d0
sfi-move,0xbfdd37fd70,0x1129ffff620
sfi-move,0xbfdd37fdc0,0x1129ffff670
sfi-move,0xbfdd37fe10,0x1129ffff6a8
sfi-move,0xbfdd37fe60,0x1129ffff6f8
sfi-move,0xbfdd37feb0,0x1129ffff730
sfi-move,0xbfdd37ff00,0x1129ffff768
sfi-move,0xbfdd37ff50,0x1129ffff7a0
sfi-move,0xbfdd37ffa0,0x1129ffff7d8
code-move,0x39bd8621196,0x3fe574a5b7e
code-move,0x39bd862137e,0x3fe574a5d66
sfi-move,0x39bd86214d8,0x3fe574a5ec0
sfi-move,0x39bd8621528,0x3fe574a5ef8
sfi-move,0x39bd8621578,0x3fe574a5f48
code-move,0x2bdba105c26,0x31871681c66
code-move,0x2f65a717176,0x13cb80d1cf6
code-move,0x2f65a71742e,0x13cb80d1f6e
code-move,0x2f65a7177c6,0x13cb80d22de
code-move,0x2f65a71798e,0x13cb80d2486
sfi-move,0x2bdba106e48,0x31871686818
sfi-move,0x2bdba106f00,0x31871687a30
sfi-move,0xe49884a988,0x5b69ad15c0
sfi-move,0x2bdba108010,0x3187168a2c8
sfi-move,0x2bdba1080c8,0x3187168a300
sfi-move,0x2bdba108118,0x3187168a350
sfi-move,0x2bdba108168,0x3187168a3a0
sfi-move,0x2bdba1081b8,0x3187168a3d8
sfi-move,0x2bdba108230,0x3187168a410
sfi-move,0x2bdba108280,0x38a7b555eb0
sfi-move,0x2bdba1082d0,0x38a7b555ee8
sfi-move,0x2bdba108398,0x38a7b555f20
sfi-move,0x2bdba1083e8,0x318716898f0
sfi-move,0x2bdba108438,0x31871689940
sfi-move,0x2bdba108488,0x31871689990
sfi-move,0x2bdba1084d8,0x318716899c8
sfi-move,0x2bdba108528,0x31871689a18
sfi-move,0x2bdba108578,0x31871689a50
sfi-move,0x2bdba1085c8,0x31871689aa0
sfi-move,0x2bdba108618,0x31871689ad8
sfi-move,0x2bdba108668,0x31871689b28
sfi-move,0x2bdba1086e0,0x31871689b60
sfi-move,0x2bdba108730,0x31871689bb0
sfi-move,0x2bdba108780,0x31871689c00
sfi-move,0xe49884aa40,0x5b69ad7818
sfi-move,0xe49884aa90,0x5b69ad7868
sfi-move,0xe49884aae0,0x5b69ad78b8
sfi-move,0xe49884ab30,0x5b69ad7908
sfi-move,0xe49884ab80,0x5b69ad7958
code-move,0x39bd862166e,0x3fe574a603e
sfi-move,0xe49884c3e8,0x5b69ac1258
sfi-move,0xe49884c850,0x5b69ac1488
code-move,0x1bb8fb3c45e,0x1a5adc62496
sfi-move,0x39bd8621870,0x3fe574a6240
code-move,0x1bb8fb3c63e,0x1a5adc62676
sfi-move,0x1bb8fb3c778,0x1a5adc627b0
code-move,0x2bdba108a3e,0x318716891fe
code-move,0xe49884cc26,0x5b69adca06
code-move,0x2f65a7185ae,0x13cb80d2946
sfi-move,0xe49884d680,0x5b69add260
sfi-move,0xe49884d738,0x5b69add298
sfi-move,0xe49884d818,0x5b69add378
sfi-move,0xe49884d890,0x5b69add3f0
sfi-move,0xe49884d8e0,0x5b69add440
sfi-move,0xe49884d990,0x5b69add4d8
sfi-move,0xe49884d9e0,0x5b69add510
sfi-move,0xe49884da30,0x5b69add560
sfi-move,0xe49884da80,0x5b69add5b0
sfi-move,0xe49884dad0,0x5b69add5e8
sfi-move,0xe49884db48,0x5b69add660
sfi-move,0xe49884dc00,0x5b69add6f8
sfi-move,0xe49884dc50,0x5b69add748
sfi-move,0xe49884dca0,0x5b69add780
sfi-move,0xe49884dd58,0x5b69add820
sfi-move,0xe49884dda8,0x5b69ac2330
sfi-move,0xe49884ddf8,0x5b69ac2380
sfi-move,0xe49884de48,0x5b69ac23b8
sfi-move,0xe49884dec8,0x5b69ac2408
sfi-move,0xe49884df18,0x5b69ac2458
sfi-move,0xe49884dfa0,0x5b69ac24c8
sfi-move,0xe49884dff0,0x5b69ac2518
sfi-move,0xe49884e078,0x5b69ac25a0
sfi-move,0xe49884e0f8,0x5b69ac2608
sfi-move,0x2f65a719140,0x13cb80d32c8
sfi-move,0x2f65a7191f8,0x13cb80d3300
sfi-move,0x2f65a719248,0x13cb80d3350
sfi-move,0x2f65a719298,0x13cb80d33a0
sfi-move,0x2f65a7192e8,0x13cb80d33f0
sfi-move,0x2f65a719338,0x13cb80d3440
code-move,0x39bd862195e,0x3fe574a632e
code-move,0x39bd8621b5e,0x3fe574a652e
code-move,0x39bd8621c7e,0x3fe574a664e
code-move,0x39bd8621e46,0x3fe574a6816
code-move,0xe49884e426,0x5b69ac2936
sfi-move,0x2f65a71c218,0x13cb80d5840
sfi-move,0x2f65a71c2d0,0x13cb80d5878
sfi-move,0x2f65a71c320,0x13cb80d58c8
sfi-move,0x2f65a71c3f8,0x13cb80d5918
sfi-move,0x2f65a71c448,0x13cb80d5968
sfi-move,0x2f65a71c4c0,0x13cb80d59a0
sfi-move,0x2f65a71c510,0x13cb80d59d8
code-move,0x1bb8fb3c826,0x1a5adc62846
code-move,0x1bb8fb3c9e6,0x1a5adc62a06
code-move,0x1bb8fb3cb36,0x1a5adc62b56
sfi-move,0x2f65a71fea0,0x13cb80d70e0
sfi-move,0x2f65a71ff58,0x13cb80d7118
code-move,0x1bb8fb3cd66,0x1a5adc62d66
new,MemoryChunk,0x1bac6b80000,262144
sfi-move,0x2f65a720470,0x13cb80d7458
sfi-move,0x2bdba10bd08,0x31871688370
sfi-move,0xe498852200,0x1bac6b84788
sfi-move,0xe4988522b8,0x1bac6b847c0
sfi-move,0xe498852308,0x1bac6b84810
sfi-move,0xe498852390,0x1bac6b84880
code-move,0x1bb8fb3d18e,0x1a5adc6318e
code-move,0x1bb8fb3d36e,0x1a5adc6336e
code-move,0x1bb8fb3d51e,0x1a5adc6351e
code-move,0x1bb8fb3d63e,0x1a5adc6363e
code-move,0x1bb8fb3d786,0x1a5adc63786
code-move,0x1bb8fb3dace,0x1a5adc63ace
code-move,0x1bb8fb3df2e,0x1a5adc63f2e
sfi-move,0x2bdba10bdc0,0x318716883a8
sfi-move,0x2bdba10be10,0x318716883f8
sfi-move,0x2bdba10be88,0x31871688430
sfi-move,0x2bdba10bed8,0x31871688480
sfi-move,0x2bdba10bf28,0x31871689c38
sfi-move,0x2bdba10bf78,0x31871689c88
sfi-move,0x2bdba10bfc8,0x31871689cd8
sfi-move,0x2bdba10c018,0x318716bc5f0
sfi-move,0x2bdba10c068,0x318716bc640
sfi-move,0x2bdba10c0e0,0x318716bc6b8
sfi-move,0xe498852f90,0x1bac6b85138
sfi-move,0xe498853048,0x1bac6b85170
sfi-move,0xe498853098,0x1bac6b851c0
sfi-move,0xe4988530e8,0x1bac6b85210
sfi-move,0xe498853138,0x1bac6b85260
sfi-move,0xe498853188,0x1bac6b852b0
sfi-move,0xe4988531d8,0x1bac6b85300
sfi-move,0xe4988542d0,0x1bac6b86188
sfi-move,0xe498854388,0x1bac6b861c0
sfi-move,0xe4988543d8,0x1bac6b86210
sfi-move,0xe498854428,0x1bac6b86260
sfi-move,0xe498854fe0,0x1bac6b86bf8
sfi-move,0x2bdba10dd60,0x318716af360
sfi-move,0x2bdba10ebb0,0x318716afe80
sfi-move,0x2bdba10ec68,0x318716afeb8
sfi-move,0x2bdba10ecb8,0x318716afef0
sfi-move,0x2bdba10ed08,0x318716aff40
sfi-move,0x2bdba10ed58,0x318716aff90
sfi-move,0x2bdba10eda8,0x318716affc8
sfi-move,0x2bdba10ee48,0x318716b0000
sfi-move,0x2bdba10ee98,0x318716b0038
sfi-move,0x2bdba10efb0,0x318716b0070
sfi-move,0x2bdba10f0a0,0x318716b0148
sfi-move,0x2bdba1104f8,0x318716b0f10
sfi-move,0x2bdba110548,0x318716b0f48
sfi-move,0x2bdba110598,0x318716b0f98
sfi-move,0x2bdba1105e8,0x318716b0fd0
sfi-move,0x2bdba110678,0x318716b1060
sfi-move,0x2bdba110708,0x318716b10f0
sfi-move,0x2bdba110798,0x318716b1180
sfi-move,0x2bdba110828,0x318716b1210
sfi-move,0x2bdba1108b8,0x318716b12a0
sfi-move,0x2bdba110948,0x318716b1330
sfi-move,0x2bdba111bc0,0x318716b1a10
sfi-move,0x2bdba111c10,0x318716b1a60
sfi-move,0x2bdba111c60,0x318716b1ab0
sfi-move,0x2bdba113a48,0x318716b29c8
sfi-move,0x2bdba113b00,0x318716b2a00
sfi-move,0x2bdba113b50,0x318716b2a38
sfi-move,0x2bdba113bf0,0x318716b2a70
sfi-move,0x2bdba113c40,0x318716b2aa8
sfi-move,0x2bdba113c90,0x318716b2af8
sfi-move,0x2bdba113ce0,0x318716b2b30
sfi-move,0x2bdba115270,0x318716b3a88
sfi-move,0x2bdba115328,0x318716b3ac0
sfi-move,0x2bdba115378,0x318716b3b10
sfi-move,0x2bdba1153c8,0x318716b3b60
sfi-move,0x2bdba115418,0x318716b3bb0
sfi-move,0x2bdba115468,0x318716b3c00
code-move,0x2bdba115ce6,0x318716b435e
sfi-move,0x2f65a720528,0x13cb80d7490
sfi-move,0x2bdba115e60,0x318716b4488
sfi-move,0x2f65a721638,0x13cb80d7bb0
sfi-move,0x2bdba117ca8,0x318716b5630
code-move,0x2bdba117d7e,0x318716b56e6
code-move,0x2bdba11826e,0x318716b5966
code-move,0x2bdba118396,0x318716b5a8e
sfi-move,0x2f65a7220a0,0x13cb80d8390
sfi-move,0x2f65a722158,0x13cb80d83c8
sfi-move,0x2bdba119358,0x318716b6620
sfi-move,0x2bdba119410,0x318716b6658
sfi-move,0x2f65a722b50,0x13cb80d8ad8
sfi-move,0x2bdba119e08,0x318716b6e28
sfi-move,0x2bdba119ec0,0x318716b6e60
sfi-move,0x2f65a723980,0x13cb80d9118
sfi-move,0x2f65a723a38,0x13cb80d9150
sfi-move,0x2bdba11ada0,0x318716b79e0
sfi-move,0x2bdba11ae58,0x318716b7a18
sfi-move,0x2bdba11aea8,0x318716b7a68
sfi-move,0x2bdba11aef8,0x318716b7ab8
sfi-move,0x2bdba11af78,0x318716b7b38
sfi-move,0x2bdba11afc8,0x318716b7b88
sfi-move,0x2bdba11b040,0x318716b7c00
sfi-move,0x2bdba11b108,0x318716b7c78
sfi-move,0x2f65a724b38,0x13cb80d9e08
sfi-move,0x2f65a724bf0,0x13cb80d9e40
sfi-move,0x2f65a724c40,0x13cb80d9e78
sfi-move,0x2bdba11c430,0x318716b8a70
sfi-move,0x2bdba11c4e8,0x318716b8aa8
sfi-move,0x2bdba11c570,0x318716b8b30
code-move,0x2f65a72576e,0x13cb80da66e
sfi-move,0x2bdba11d188,0x31871687300
sfi-move,0x2bdba11d240,0x31871687338
sfi-move,0x2bdba11d290,0x31871687370
sfi-move,0x2bdba11d2e0,0x318716873a8
sfi-move,0x2bdba11d330,0x318716873e0
sfi-move,0x2f65a725bc0,0x13cb80daac0
code-move,0x2f65a725c7e,0x13cb80dab66
code-move,0x2f65a725e76,0x13cb80dad5e
sfi-move,0x2f65a727b80,0x13cb80dbe80
sfi-move,0x2f65a727c38,0x13cb80dbeb8
sfi-move,0x2f65a727c88,0x13cb80dbf08
sfi-move,0x2f65a727cd8,0x13cb80dbf58
sfi-move,0x2f65a727d28,0x13cb80dbfa8
sfi-move,0x2f65a727d78,0x13cb80dbff8
sfi-move,0x2f65a727dc8,0x13cb80dc048
sfi-move,0x2f65a727e18,0x13cb80dc098
sfi-move,0x2f65a727e68,0x13cb80dc0e8
sfi-move,0x2f65a727eb8,0x13cb80dc138
sfi-move,0x2f65a727f08,0x13cb80dc188
sfi-move,0x2f65a727f58,0x13cb80dc1d8
sfi-move,0x2f65a727fa8,0x13cb80dc210
sfi-move,0x2f65a727ff8,0x13cb80dc260
sfi-move,0x2f65a728048,0x13cb80dc2b0
sfi-move,0x2f65a728098,0x13cb80dc300
sfi-move,0x2f65a7280e8,0x13cb80dc350
sfi-move,0x2f65a728138,0x13cb80dc3a0
sfi-move,0x2f65a728188,0x13cb80dc3f0
sfi-move,0x2f65a7281d8,0x13cb80dc440
sfi-move,0x2f65a728228,0x13cb80dc490
sfi-move,0x2f65a728278,0x13cb80dc4e0
sfi-move,0x2f65a7282c8,0x13cb80dc530
sfi-move,0x2f65a728318,0x13cb80dc580
sfi-move,0x2f65a728368,0x13cb80dc5d0
sfi-move,0x2f65a7283b8,0x13cb80dc620
sfi-move,0x2f65a728408,0x13cb80dc670
sfi-move,0x2f65a728458,0x13cb80dc6c0
sfi-move,0x2f65a7284a8,0x13cb80dc710
sfi-move,0x2f65a7284f8,0x13cb80dc760
sfi-move,0x2f65a728548,0x13cb80dc7b0
sfi-move,0x2f65a728598,0x13cb80dc800
sfi-move,0x2f65a728638,0x13cb80dc850
sfi-move,0x2bdba11ed08,0x96d3227008
sfi-move,0x2bdba11eeb0,0x96d323df58
sfi-move,0x2bdba11ef00,0x96d323ddc0
sfi-move,0x2bdba11ef50,0x96d3229d30
sfi-move,0x2f65a72a770,0x13cb80ddfa8
sfi-move,0x2bdba1203d0,0x96d3224e88
code-move,0x2bdba120bbe,0x96d321ae6e
sfi-move,0x2f65a72bae0,0x13cb80dedf8
sfi-move,0x2bdba1215c0,0x96d321cd28
code-move,0x2bdba12179e,0x96d3213f56
sfi-move,0x2bdba122520,0x96d3217c30
sfi-move,0x2bdba1225d8,0x96d3217c68
sfi-move,0x2bdba122628,0x96d3217cb8
sfi-move,0x2f65a72bb98,0x13cb80dee30
sfi-move,0x2f65a72bbd0,0x13cb80dee68
sfi-move,0x2f65a72bc20,0x13cb80deea0
sfi-move,0x2f65a72bc70,0x13cb80deef0
sfi-move,0x2f65a72bcf0,0x13cb80def28
sfi-move,0x2f65a72bd68,0x13cb80defa0
sfi-move,0x2f65a72bdb8,0x13cb80defd8
sfi-move,0x2f65a72be30,0x13cb80df050
sfi-move,0x2f65a72be80,0x13cb80df088
sfi-move,0x2f65a72bed0,0x13cb80df0c0
sfi-move,0x2f65a72bf20,0x13cb80df110
sfi-move,0x2f65a72bf70,0x13cb80df160
code-move,0x2f65a72c38e,0x13cb80df226
sfi-move,0x2bdba1234b0,0x96d3215110
sfi-move,0x2bdba123568,0x96d3215148
sfi-move,0x2bdba1235b8,0x96d3215198
sfi-move,0x2bdba123608,0x96d32151d0
sfi-move,0x2bdba123658,0x96d3215208
sfi-move,0x2bdba1236a8,0x96d3215258
sfi-move,0x2bdba1236f8,0x96d3215290
sfi-move,0x2bdba123748,0x96d32152e0
sfi-move,0x2bdba1237c0,0x96d3215318
sfi-move,0x2bdba123810,0x96d3215368
sfi-move,0x2bdba123888,0x96d32153e0
sfi-move,0x2bdba123938,0x96d3215450
sfi-move,0x2bdba123988,0x96d32154a0
sfi-move,0x2bdba123a38,0x96d32154d8
sfi-move,0x2bdba123ab8,0x96d3215510
sfi-move,0x2bdba123b08,0x96d3215548
sfi-move,0x2bdba123b58,0x96d3215580
sfi-move,0x2f65a72d148,0x13cb80dff18
sfi-move,0x2f65a72d200,0x13cb80dff50
sfi-move,0x2f65a72d308,0x13cb80e0058
sfi-move,0x2f65a72e5d8,0x13cb80e0eb0
sfi-move,0x2f65a72e690,0x13cb80e0ee8
sfi-move,0x2f65a72e708,0x13cb80e0f60
sfi-move,0x2f65a72e758,0x13cb80e0f98
sfi-move,0x2f65a72e7d0,0x13cb80e0fd0
sfi-move,0x2f65a72e820,0x13cb80e1008
sfi-move,0x2f65a72e870,0x13cb80e1040
sfi-move,0x2f65a72e8c0,0x13cb80e1078
sfi-move,0x2f65a72fe08,0x13cb80e2050
sfi-move,0x2f65a72fec0,0x13cb80e2088
sfi-move,0x2f65a72ff10,0x13cb80e20d8
sfi-move,0x2f65a72ff60,0x13cb80e2128
sfi-move,0x2f65a72ffb0,0x13cb80e2178
sfi-move,0x2f65a730000,0x13cb80e21c8
sfi-move,0x2bdba125a98,0x21ae3a70ff8
sfi-move,0x2bdba125b50,0x21ae3a71030
sfi-move,0x2bdba125ba0,0x21ae3a71068
sfi-move,0x2bdba125bf0,0x21ae3a710a0
sfi-move,0x2bdba125c40,0x21ae3a710f0
sfi-move,0x2bdba125cb8,0x21ae3a71128
sfi-move,0x2bdba125d08,0x21ae3a71178
sfi-move,0x2bdba127490,0x21ae3a72390
sfi-move,0x2bdba127548,0x21ae3a723c8
sfi-move,0x2bdba127598,0x21ae3a72418
sfi-move,0x2bdba1275e8,0x21ae3a72450
sfi-move,0x2bdba127dd8,0x21ae3a72ac8
sfi-move,0x2bdba127e90,0x21ae3a72b00
sfi-move,0x2bdba127ee0,0x21ae3a72b38
sfi-move,0x2bdba127f30,0x21ae3a72b88
sfi-move,0x2bdba127f80,0x21ae3a72bd8
sfi-move,0x2bdba127fd0,0x21ae3a72c10
sfi-move,0xe498856160,0x1bac6b87840
sfi-move,0xe498856218,0x1bac6b87878
sfi-move,0xe498856298,0x1bac6b878f8
sfi-move,0xe4988562e8,0x1bac6b87948
sfi-move,0xe498856338,0x1bac6b87998
sfi-move,0xe498856388,0x1bac6b879e8
sfi-move,0xe4988563d8,0x1bac6b87a38
sfi-move,0x2f65a731a48,0x13cb80e3638
sfi-move,0xe498857668,0x1bac6b88988
sfi-move,0xe498857720,0x1bac6b889c0
sfi-move,0xe498857770,0x1bac6b88a10
sfi-move,0x2f65a731ac0,0x13cb80e36b0
sfi-move,0x2f65a731b10,0x13cb80e3700
sfi-move,0x2f65a731b60,0x13cb80e3750
sfi-move,0x2f65a731bb0,0x13cb80e37a0
sfi-move,0x2f65a731c00,0x13cb80e37f0
sfi-move,0x2f65a731c50,0x13cb80e3840
sfi-move,0x2f65a731ca0,0x13cb80e3890
sfi-move,0x2f65a731cf0,0x13cb80e38e0
sfi-move,0x2f65a731d40,0x13cb80e3930
sfi-move,0x2f65a731dc8,0x13cb80e39b8
sfi-move,0x2f65a731e58,0x13cb80e3a48
sfi-move,0x2f65a731ee0,0x13cb80e3ad0
sfi-move,0x2f65a731f30,0x13cb80e3b20
sfi-move,0x2f65a731f80,0x13cb80e3b70
sfi-move,0x2f65a731fd0,0x13cb80e3bc0
sfi-move,0x2f65a732020,0x13cb80e3c10
sfi-move,0x2f65a7320a8,0x13cb80e3c98
sfi-move,0x2f65a732130,0x13cb80e3d20
sfi-move,0x2f65a7321c0,0x13cb80e3db0
sfi-move,0x2f65a732248,0x13cb80e3e38
sfi-move,0x2bdba129048,0x3103a7e838
sfi-move,0x2f65a736060,0x13cb80e4ce0
sfi-move,0x2f65a736118,0x13cb80e4d18
sfi-move,0x2f65a736168,0x13cb80e4d68
sfi-move,0x2f65a7361e0,0x13cb80e4da0
sfi-move,0x2f65a736230,0x13cb80e4dd8
sfi-move,0x2f65a736280,0x13cb80e4e28
sfi-move,0x2f65a736310,0x13cb80e4eb8
sfi-move,0x2f65a7363a0,0x13cb80e4f48
sfi-move,0x2f65a736430,0x13cb80e4fd8
sfi-move,0x2f65a7364c0,0x13cb80e5050
sfi-move,0x2f65a736510,0x13cb80e5088
sfi-move,0x2f65a7365d0,0x13cb80e5100
code-move,0x2f65a7367f6,0x13cb80e530e
sfi-move,0x2bdba129100,0x3103a7e870
sfi-move,0xe4988577e8,0x1bac6b88a88
sfi-move,0x2f65a737b68,0x13cb80e64a8
sfi-move,0x2bdba129fe8,0x3103a7d098
sfi-move,0xe498858ea8,0x1bac6b89c70
sfi-move,0xe498858f60,0x1bac6b89ca8
sfi-move,0xe498859000,0x1bac6b89d48
sfi-move,0xe498859050,0x1bac6b89d98
sfi-move,0x2bdba12aa98,0x3103a70be0
sfi-move,0x2bdba12aae8,0x3103a4aac0
sfi-move,0x2bdba12ab38,0x3103a4aa30
sfi-move,0x2bdba12ab88,0x3103a48028
sfi-move,0x2bdba12abd8,0x3103a47198
sfi-move,0x2bdba12ac28,0x3103a46838
sfi-move,0xe49885a730,0x1bac6b8afb8
sfi-move,0xe49885a7e8,0x1bac6b8aff0
sfi-move,0xe49885a838,0x1bac6b8b040
sfi-move,0xe49885a8d8,0x1bac6b8b0e0
sfi-move,0xe49885a928,0x1bac6b8b130
sfi-move,0xe49885aa38,0x1bac6b8b1f0
sfi-move,0x2bdba12c118,0x3103a7d678
sfi-move,0x2bdba12c168,0x21ae3a64560
sfi-move,0x2bdba12c1b8,0x21ae3a615c8
sfi-move,0x2bdba12c230,0x3103a41768
sfi-move,0x2bdba12c280,0x21ae3a7fe20
sfi-move,0x2bdba12c308,0x21ae3a7f730
sfi-move,0x2bdba12c358,0x21ae3a7f468
sfi-move,0x2bdba12c3a8,0x21ae3a7eb98
sfi-move,0x2bdba12c3f8,0x21ae3a7ea80
sfi-move,0x2bdba12c448,0x21ae3a7e8d0
sfi-move,0x2bdba12c498,0x21ae3a7de20
sfi-move,0x2bdba12c4e8,0x21ae3a7dd90
sfi-move,0x2bdba12c538,0x21ae3a7dd00
sfi-move,0x2bdba12c588,0x21ae3a7dc70
sfi-move,0x2bdba12c5d8,0x21ae3a7dbe0
sfi-move,0x2bdba12c628,0x21ae3a7dac0
sfi-move,0xe49885c838,0x1bac6b8c788
sfi-move,0xe49885c8f0,0x1bac6b8c7c0
sfi-move,0xe49885c940,0x1bac6b8c810
sfi-move,0xe49885c990,0x1bac6b8c860
sfi-move,0xe49885c9e0,0x1bac6b8c8b0
sfi-move,0xe49885ca30,0x1bac6b8c900
sfi-move,0xe49885cac0,0x1bac6b8c990
sfi-move,0xe49885cb10,0x1bac6b8c9e0
sfi-move,0x2bdba12e598,0x21ae3a7cfb0
sfi-move,0x2f65a739820,0x13cb80e7630
sfi-move,0x2f65a7398d8,0x13cb80e7668
sfi-move,0x2f65a739928,0x13cb80e76b8
sfi-move,0x2f65a739978,0x13cb80e7708
sfi-move,0x2f65a7399c8,0x13cb80e7758
sfi-move,0x2f65a739a18,0x13cb80e77a8
sfi-move,0x2f65a739a68,0x13cb80e77f8
sfi-move,0x2f65a739ab8,0x13cb80e7848
sfi-move,0x2f65a739b08,0x13cb80e7898
sfi-move,0x2f65a739b58,0x13cb80e78e8
sfi-move,0x2f65a739ba8,0x13cb80e7938
sfi-move,0x2f65a739bf8,0x13cb80e7988
sfi-move,0x2f65a73ba28,0x13cb80e9280
sfi-move,0x2f65a73bae0,0x13cb80e92b8
sfi-move,0x2f65a73bb30,0x13cb80e92f0
sfi-move,0x2f65a73bb80,0x13cb80e9328
sfi-move,0x2f65a73bbd0,0x13cb80e9378
sfi-move,0x2f65a73bc20,0x13cb80e93b0
sfi-move,0x2bdba130ff8,0x36bef194478
sfi-move,0x2bdba131048,0x36bef1944c8
sfi-move,0x2bdba131098,0x36bef194518
sfi-move,0x2bdba1310e8,0x36bef194568
sfi-move,0x2bdba131138,0x36bef1945b8
sfi-move,0x2bdba131188,0x36bef194608
sfi-move,0x2bdba1311d8,0x36bef194658
sfi-move,0x2bdba131228,0x36bef1946a8
sfi-move,0x2bdba131278,0x36bef1946f8
sfi-move,0x2bdba1312c8,0x36bef194748
sfi-move,0x2bdba131318,0x36bef194798
sfi-move,0x2bdba131368,0x36bef1947e8
sfi-move,0x2bdba1313b8,0x36bef194838
sfi-move,0x2bdba131408,0x36bef194888
sfi-move,0x2bdba131458,0x36bef1948d8
sfi-move,0x2bdba1314a8,0x36bef194928
sfi-move,0x2bdba1314f8,0x36bef194978
sfi-move,0x2bdba131548,0x36bef1949c8
sfi-move,0x2bdba131598,0x36bef194a18
sfi-move,0x2bdba131610,0x36bef194a90
sfi-move,0x2bdba131660,0x36bef194ae0
sfi-move,0x2bdba1316d8,0x36bef194b58
sfi-move,0x2bdba131728,0x36bef194ba8
sfi-move,0x2bdba131778,0x36bef194bf8
sfi-move,0x2bdba1317c8,0x36bef194c48
sfi-move,0x2bdba131818,0x36bef194c98
sfi-move,0x2bdba131868,0x36bef194ce8
sfi-move,0x2bdba1318b8,0x36bef194d38
sfi-move,0x2bdba131908,0x36bef194d88
sfi-move,0x2bdba131958,0x36bef194dd8
sfi-move,0x2bdba1319a8,0x36bef194e28
sfi-move,0x2bdba1319f8,0x36bef194e78
sfi-move,0x2bdba134f30,0x36bef195a08
sfi-move,0x2bdba134f80,0x36bef195a58
sfi-move,0x2bdba134fd0,0x36bef195a90
sfi-move,0x2bdba135020,0x36bef195ae0
sfi-move,0x2bdba135070,0x36bef195b18
sfi-move,0x2bdba1350c0,0x36bef195b68
sfi-move,0x2bdba135110,0x36bef195ba0
sfi-move,0x2bdba135160,0x36bef1bff10
sfi-move,0x2bdba1351b0,0x36bef1ba198
sfi-move,0x2bdba135200,0x36bef1921a0
sfi-move,0x2bdba135250,0x36bef186100
sfi-move,0x2bdba1352f0,0x36bef1a4090
sfi-move,0x2f65a73da78,0x13cb80ead90
sfi-move,0x2f65a73db30,0x13cb80eadc8
sfi-move,0x2f65a73db80,0x13cb80eae00
sfi-move,0x2f65a73dbd0,0x13cb80eae38
sfi-move,0x2f65a73dc20,0x13cb80eae88
sfi-move,0x2f65a73dc70,0x13cb80eaed8
sfi-move,0x2f65a73dcc0,0x13cb80eaf10
sfi-move,0x2f65a73dd10,0x13cb80eaf60
sfi-move,0x2f65a73dd60,0x13cb80eafb0
sfi-move,0x2bdba136be0,0x21ae3a7ce00
sfi-move,0x2bdba136c50,0x21ae3a7cb30
sfi-move,0x2bdba136cc0,0x21ae3a7c5c8
sfi-move,0x2bdba136d30,0x21ae3a74950
sfi-move,0x2bdba136da0,0x21ae3a74830
sfi-move,0x2bdba136e10,0x21ae3a745f0
sfi-move,0x2bdba136e80,0x21ae3a73038
sfi-move,0x2bdba136ef0,0x21ae3a72f18
sfi-move,0x2bdba136f60,0x21ae3a72df8
sfi-move,0x2bdba136fd0,0x21ae3a59cb8
sfi-move,0x2bdba137040,0x36bef19e220
sfi-move,0x2bdba1373b8,0x3103a69830
sfi-move,0x2bdba137408,0x3103a69868
sfi-move,0x2bdba137458,0x21ae3a78d00
sfi-move,0x2f65a73ddb0,0x13cb80eafe8
sfi-move,0x2bdba137dc8,0x36bef1ba118
sfi-move,0x2bdba137e18,0x21ae3a66b20
sfi-move,0xe49885dbc0,0x1bac6b8d498
sfi-move,0x2bdba137e68,0x21ae3a59ac8
sfi-move,0x2bdba137eb8,0x21ae3a59b00
sfi-move,0x2bdba137f08,0x21ae3a59840
sfi-move,0x2bdba137f58,0x21ae3a59878
sfi-move,0x2bdba137fa8,0x21ae3a56940
sfi-move,0x2bdba137ff8,0x21ae3a56978
sfi-move,0x2bdba138080,0x21ae3a44758
sfi-move,0x2bdba138108,0x21ae3a42d10
sfi-move,0x2bdba138190,0x96d3217d20
sfi-move,0x2bdba138218,0x96d3222898
sfi-move,0x2bdba1382a0,0x96d323cf60
sfi-move,0x2bdba138328,0x96d3229da8
sfi-move,0x2bdba138378,0x96d3229df8
sfi-move,0x2bdba1383c8,0x96d321c668
sfi-move,0x2bdba138418,0x96d321c6a0
sfi-move,0x2f65a73de00,0x13cb80eb020
sfi-move,0x2f65a73de50,0x13cb80eb070
sfi-move,0x2f65a73dea0,0x13cb80eb0a8
sfi-move,0x2f65a73def0,0x13cb80eb0f8
sfi-move,0x2f65a73df40,0x13cb80eb148
sfi-move,0x2f65a73df90,0x13cb80eb198
sfi-move,0x2f65a73dfe0,0x13cb80eb1e8
sfi-move,0x2f65a73e030,0x13cb80eb238
sfi-move,0x2f65a73e080,0x13cb80eb288
sfi-move,0x2f65a73e0d0,0x13cb80eb2d8
sfi-move,0x2f65a73e120,0x13cb80eb328
sfi-move,0x2f65a73e170,0x13cb80eb378
sfi-move,0x2f65a73e1c0,0x13cb80eb3c8
sfi-move,0x2f65a73e210,0x13cb80eb400
sfi-move,0x2f65a73e260,0x13cb80eb438
sfi-move,0x2f65a73e2b0,0x13cb80eb488
sfi-move,0x2f65a73e328,0x13cb80eb500
sfi-move,0x2f65a73e378,0x13cb80eb550
sfi-move,0x2f65a73e3c8,0x13cb80eb5a0
sfi-move,0x2f65a73e418,0x13cb80eb5f0
sfi-move,0x2f65a73e468,0x13cb80eb640
sfi-move,0x2f65a73e4b8,0x13cb80eb678
sfi-move,0x2f65a73e508,0x13cb80eb6c8
sfi-move,0x2f65a73e558,0x13cb80eb718
sfi-move,0x2f65a73e5a8,0x13cb80eb768
sfi-move,0x2f65a73e5f8,0x13cb80eb7a0
sfi-move,0x2f65a73e648,0x13cb80eb7f0
sfi-move,0x2f65a73e6f0,0x13cb80eb828
sfi-move,0x2f65a73e790,0x13cb80eb8c8
sfi-move,0x2f65a73e818,0x13cb80eb950
sfi-move,0x2f65a73e868,0x13cb80eb9a0
sfi-move,0xe49885e838,0x1bac6b8daf8
sfi-move,0xe49885e8f0,0x1bac6b8db30
sfi-move,0xe49885e940,0x1bac6b8db80
sfi-move,0xe49885e990,0x1bac6b8dbd0
sfi-move,0xe49885ea18,0x1bac6b8dc58
sfi-move,0xe49885eaa0,0x1bac6b8dce0
sfi-move,0xe49885eb28,0x1bac6b8dd68
sfi-move,0x2bdba13ada0,0x36bef1aaaf8
sfi-move,0x2bdba13adf0,0x3103a6e3a8
sfi-move,0x2bdba13ae40,0x96d3227700
sfi-move,0x2bdba13ae90,0x96d3227738
sfi-move,0x2bdba13aee0,0x96d3227770
sfi-move,0x2bdba13af30,0x96d3221ba8
sfi-move,0x2bdba13af80,0x96d3221be0
sfi-move,0x2bdba13afd0,0x96d3221c18
sfi-move,0x2bdba13b020,0x96d32137d0
sfi-move,0x2bdba13b070,0x96d3213820
sfi-move,0x2bdba13b0c0,0x96d3213858
sfi-move,0x2bdba13b110,0x36bef19d858
sfi-move,0x2bdba13b1b0,0x36bef19d890
sfi-move,0x2bdba13b200,0x36bef19d8c8
sfi-move,0x2bdba13b250,0x21ae3a5f6b8
sfi-move,0x2bdba13b2a0,0x21ae3a5f708
sfi-move,0x2bdba13b2f0,0x31871687748
sfi-move,0x2bdba13b340,0x31871687798
sfi-move,0x2bdba13b390,0x318716877e8
sfi-move,0x2bdba13b3e0,0x96d3213e28
sfi-move,0x2bdba13b430,0x96d3213e78
sfi-move,0x2bdba13b4b8,0x96d3213d10
sfi-move,0x2bdba13b540,0x96d3213d98
sfi-move,0x2bdba13b590,0x36bef1af3d8
sfi-move,0x2bdba13b5e0,0x36bef1af428
sfi-move,0x2bdba13b630,0x36bef1af478
sfi-move,0x2bdba13b6b8,0x36bef1af128
sfi-move,0x2bdba13b740,0x36bef1af1b0
sfi-move,0x2bdba13b7b8,0x3103a7d368
sfi-move,0x2bdba13b830,0x3103a7d3e0
sfi-move,0x2bdba13b880,0x3103a7d418
sfi-move,0x2bdba13b8d0,0x21ae3a57cc8
sfi-move,0x2bdba13b920,0x21ae3a57d00
sfi-move,0x2bdba13b970,0x21ae3a57d38
sfi-move,0x2bdba13b9c0,0x21ae3a57d70
sfi-move,0x2bdba13ba10,0x96d323e320
sfi-move,0x2bdba13ba60,0x96d323e370
sfi-move,0x2bdba13bab0,0x96d323e3c0
sfi-move,0x2bdba13bb00,0x96d321c520
sfi-move,0x2bdba13bb50,0x96d321c570
sfi-move,0x2bdba13bba0,0x96d321c5c0
sfi-move,0x2bdba13bc28,0x96d321c0b0
sfi-move,0x2bdba13bcb0,0x96d321c138
sfi-move,0x2bdba13bd38,0x36bef1a59d8
sfi-move,0x2bdba13bd88,0x36bef1a5a28
sfi-move,0x2bdba13bdd8,0x36bef1a5a78
sfi-move,0x2bdba13be28,0x36bef1a5ab0
sfi-move,0x2bdba13be78,0x36bef19bd48
sfi-move,0x2bdba13bec8,0x36bef19bd80
sfi-move,0x2bdba13bf18,0x36bef19bdb8
sfi-move,0x2bdba13bf68,0x36bef19be08
sfi-move,0x2bdba13bfb8,0x36bef19be58
sfi-move,0xe49885f700,0x1bac6b8e700
sfi-move,0xe49885f7b8,0x1bac6b8e738
sfi-move,0xe49885f808,0x1bac6b8e788
sfi-move,0xe49885f858,0x1bac6b8e7d8
sfi-move,0xe49885f908,0x1bac6b8e848
sfi-move,0xe49885f998,0x1bac6b8e8d8
sfi-move,0xe49885fa20,0x1bac6b8e960
sfi-move,0xe49885fad0,0x1bac6b8ea10
sfi-move,0xe49885fb60,0x1bac6b8eaa0
sfi-move,0xe49885fbe8,0x1bac6b8eb28
sfi-move,0x2bdba13faf0,0x3103a6f178
sfi-move,0x2bdba13fb40,0x3103a6f1b0
sfi-move,0x2bdba13fb90,0x3103a709b8
sfi-move,0x2bdba13fbe0,0x3103a709f0
sfi-move,0x2bdba13fec8,0x3103a70a28
sfi-move,0x2bdba13ff18,0x3103a48b58
sfi-move,0x2bdba13ff68,0x3103a48b90
sfi-move,0x2bdba13ffb8,0x3103a48bc8
sfi-move,0xe498860898,0x1bac6b8f3a8
sfi-move,0xe4988608e8,0x1bac6b8f3f8
sfi-move,0xe498860f88,0x1bac6b8f830
sfi-move,0xe498861040,0x1bac6b8f868
sfi-move,0xe498861a28,0x1bac6b90148
sfi-move,0xe498861a80,0x1bac6b901a0
sfi-move,0xe498862d50,0x1bac6b91000
sfi-move,0xe498862e08,0x1bac6b91038
sfi-move,0xe498862e88,0x1bac6b910b8
sfi-move,0xe498863c98,0x1bac6b91c68
sfi-move,0xe498863d50,0x1bac6b91ca0
sfi-move,0xe498863df8,0x1bac6b91cd8
sfi-move,0xe498863e48,0x1bac6b91d28
sfi-move,0xe498863e98,0x1bac6b91d78
sfi-move,0xe498863f10,0x1bac6b91df0
sfi-move,0xe4988655c8,0x1bac6b92f70
sfi-move,0xe498865680,0x1bac6b92fa8
sfi-move,0xe498865700,0x1bac6b93028
sfi-move,0xe498865750,0x1bac6b93078
sfi-move,0xe4988662c0,0x1bac6b939c8
sfi-move,0xe498866378,0x1bac6b93a00
sfi-move,0xe4988663f8,0x1bac6b93a80
sfi-move,0xe498866470,0x1bac6b93af8
sfi-move,0xe4988664c0,0x1bac6b93b48
sfi-move,0xe498866510,0x1bac6b93b98
sfi-move,0xe498866560,0x1bac6b93be8
sfi-move,0xe4988665d8,0x1bac6b93c60
sfi-move,0xe498867b30,0x1bac6b94ef8
code-move,0x2f65a73ec26,0x13cb80ebd5e
code-move,0xe498867ca6,0x1bac6b9506e
sfi-move,0xe498868060,0x1bac6b953d8
sfi-move,0xe498868498,0x1bac6b954d8
code-move,0xe498868716,0x1bac6b9560e
sfi-move,0xe498868c40,0x1bac6b959e8
sfi-move,0xe498868c90,0x1bac6b95a38
code-move,0xe498869436,0x1bac6b95da6
sfi-move,0xe498869690,0x1bac6b96000
code-move,0xe4988697c6,0x1bac6b96136
sfi-move,0xe49886a800,0x1bac6b96738
sfi-move,0xe49886aaf8,0x1bac6b96808
code-move,0xe49886b4a6,0x1bac6b96b86
sfi-move,0xe49886b570,0x1bac6b96c50
code-move,0xe49886b85e,0x1bac6b96e0e
sfi-move,0xe49886b9a8,0x1bac6b96f58
code-move,0xe49886c186,0x1bac6b97206
sfi-move,0xe49886cd08,0x1bac6b974f0
code-move,0xe498872dae,0x1bac6b9a8be
code-move,0xe4988743e6,0x1bac6b9bed6
code-move,0xe498874c56,0x1bac6b9c746
code-move,0xe498874d56,0x1bac6b9c846
code-move,0xe49887520e,0x1bac6b9ccfe
code-move,0xe4988752fe,0x1bac6b9cdee
code-move,0xe4988753f6,0x1bac6b9cee6
code-move,0xe49887551e,0x1bac6b9cfe6
code-move,0xe49887562e,0x1bac6b9d0f6
code-move,0xe498875716,0x1bac6b9d1de
code-move,0xe498875826,0x1bac6b9d2ee
code-move,0xe49887596e,0x1bac6b9d436
code-move,0xe498875a7e,0x1bac6b9d546
code-move,0xe498875c2e,0x1bac6b9d6de
code-move,0xe498875f0e,0x1bac6b9d9be
code-move,0xe498876056,0x1bac6b9daee
code-move,0xe49887618e,0x1bac6b9dc26
code-move,0xe4988762de,0x1bac6b9dd76
code-move,0xe4988767ce,0x1bac6b9e086
code-move,0xe49887d56e,0x1bac6ba3e36
code-move,0xe49887d666,0x1bac6ba3f2e
code-move,0xe49887d84e,0x1bac6ba4116
code-move,0xe49887dc16,0x1bac6ba44de
sfi-move,0xe49887df38,0x1bac6ba4778
code-move,0xe49887e04e,0x1bac6ba488e
code-move,0xe49887e276,0x1bac6ba4ab6
code-move,0xe49887ee46,0x1bac6ba55ce
code-move,0xe49887f296,0x1bac6ba57e6
code-move,0xe49887f42e,0x1bac6ba597e
code-move,0xe49887f55e,0x1bac6ba5aae
code-move,0xe49887f64e,0x1bac6ba5b9e
code-move,0xe49887f7b6,0x1bac6ba5ce6
code-move,0xe49887f996,0x1bac6ba5ec6
code-move,0xe49887fbae,0x1bac6ba608e
delete,MemoryChunk,0x215b4700000
delete,MemoryChunk,0x20b1ee80000
delete,MemoryChunk,0x2b628580000
delete,MemoryChunk,0x2c6f3800000
delete,MemoryChunk,0x3a60b2c0000
delete,MemoryChunk,0x29cb9a80000
delete,MemoryChunk,0xc74e640000
delete,MemoryChunk,0x114d35c0000
delete,MemoryChunk,0x726b240000
delete,MemoryChunk,0x397ab180000
delete,MemoryChunk,0x16624bc0000
delete,MemoryChunk,0x21d00000
delete,MemoryChunk,0x37b7f180000
delete,MemoryChunk,0xd7ec080000
delete,MemoryChunk,0x304c7d00000
delete,MemoryChunk,0x13f2c5c0000
delete,MemoryChunk,0x353bfec0000
delete,MemoryChunk,0x2f466500000
delete,MemoryChunk,0x21b52f40000
delete,MemoryChunk,0x188598c0000
delete,MemoryChunk,0x7779c40000
delete,MemoryChunk,0x124c1f00000
delete,MemoryChunk,0x2a57ad00000
delete,MemoryChunk,0x2a469d40000
delete,MemoryChunk,0x15c6e880000
delete,MemoryChunk,0xf0e0fc0000
delete,MemoryChunk,0x2e7630c0000
delete,MemoryChunk,0x31861080000
delete,MemoryChunk,0x35e45200000
delete,MemoryChunk,0x1e6932c0000
delete,MemoryChunk,0x17f2d780000
delete,MemoryChunk,0x1f4c83c0000
delete,MemoryChunk,0x1f733c40000
delete,MemoryChunk,0x137ea400000
delete,MemoryChunk,0x2de96900000
delete,MemoryChunk,0xaa82ac0000
delete,MemoryChunk,0x9022080000
delete,MemoryChunk,0x14c9d940000
delete,MemoryChunk,0x4491900000
delete,MemoryChunk,0x1d49d300000
delete,MemoryChunk,0x2d6b6a80000
delete,MemoryChunk,0x16b62940000
delete,MemoryChunk,0x81f72c0000
delete,MemoryChunk,0x3e054600000
delete,MemoryChunk,0x1a1a8dc0000
delete,MemoryChunk,0x36f3c680000
delete,MemoryChunk,0x105cd800000
delete,MemoryChunk,0x6dd4b80000
delete,MemoryChunk,0x7950500000
delete,MemoryChunk,0x2f3127c0000
delete,MemoryChunk,0x3757f840000
delete,MemoryChunk,0x1a5c5440000
delete,MemoryChunk,0x30010000000
delete,MemoryChunk,0x2808efc0000
delete,MemoryChunk,0x137ee9c0000
delete,MemoryChunk,0x3fab2540000
delete,MemoryChunk,0x6a6ce00000
delete,MemoryChunk,0x4b32bc0000
delete,MemoryChunk,0xe258580000
delete,MemoryChunk,0x9f66fc0000
delete,MemoryChunk,0x3b81f940000
delete,MemoryChunk,0x3a4e0bc0000
delete,MemoryChunk,0x1d91e140000
delete,MemoryChunk,0x18891340000
delete,MemoryChunk,0x33416080000
delete,MemoryChunk,0x1bb8fb00000
delete,MemoryChunk,0x2f65a700000
delete,MemoryChunk,0x1fdf8f00000
delete,MemoryChunk,0x39bd8600000
delete,MemoryChunk,0x2bdba100000
delete,MemoryChunk,0xe6a6180000
delete,MemoryChunk,0x2264540000
delete,MemoryChunk,0x20cab780000
delete,MemoryChunk,0x8cc0300000
delete,MemoryChunk,0xbfdd340000
delete,MemoryChunk,0xe498840000
markcompact,end,18,171875,1671212027920
delete,MemoryChunk,0x388ab8c0000
delete,MemoryChunk,0x5457f40000
delete,MemoryChunk,0x11e700000
delete,MemoryChunk,0x329156c0000
delete,MemoryChunk,0x255b4980000
delete,MemoryChunk,0x4983640000
delete,MemoryChunk,0x2c362300000
delete,MemoryChunk,0x2b8ae200000
delete,MemoryChunk,0x26fa1e00000
delete,MemoryChunk,0x27a5d40000
delete,MemoryChunk,0x2eeb6400000
delete,MemoryChunk,0x2aab7240000
delete,MemoryChunk,0x3c207740000
delete,MemoryChunk,0x305193c0000
delete,MemoryChunk,0x18ec9680000
delete,MemoryChunk,0x38a4d6c0000
delete,MemoryChunk,0x4653000000
delete,MemoryChunk,0x397b4ac0000
delete,MemoryChunk,0x1eb33d40000
delete,MemoryChunk,0x29a0780000
delete,MemoryChunk,0x2b304600000
delete,MemoryChunk,0x1ed204c0000
delete,MemoryChunk,0x15a6b600000
delete,MemoryChunk,0x1e909240000
delete,MemoryChunk,0x354a9ec0000
delete,MemoryChunk,0x31ea21c0000
delete,MemoryChunk,0x60a4200000
delete,MemoryChunk,0x2b104b80000
delete,MemoryChunk,0x121a8b40000
delete,MemoryChunk,0x2c7e1140000
delete,MemoryChunk,0x10138040000
delete,MemoryChunk,0x249ee540000
delete,MemoryChunk,0x25246e00000
delete,MemoryChunk,0x14dd4e80000
delete,MemoryChunk,0x22893440000
delete,MemoryChunk,0x24763100000
delete,MemoryChunk,0x240f7c40000
delete,MemoryChunk,0x1dceb80000
delete,MemoryChunk,0x1655400000
delete,MemoryChunk,0xa553a00000
delete,MemoryChunk,0x13ccbb80000
delete,MemoryChunk,0x2c04fd80000
delete,MemoryChunk,0x4d06c00000
delete,MemoryChunk,0x2f98c040000
delete,MemoryChunk,0x1cd36c00000
delete,MemoryChunk,0x3ac83640000
delete,MemoryChunk,0x3115b9c0000
delete,MemoryChunk,0x28cfeb80000
delete,MemoryChunk,0xa1c7d80000
delete,MemoryChunk,0xb99e440000
delete,MemoryChunk,0x2c62c040000
delete,MemoryChunk,0xa286780000
delete,MemoryChunk,0x128982c0000
delete,MemoryChunk,0x37f48880000
delete,MemoryChunk,0xf797780000
delete,MemoryChunk,0xea60800000
delete,MemoryChunk,0x335a6c80000
delete,MemoryChunk,0x2d09180000
delete,MemoryChunk,0x45c2dc0000
delete,MemoryChunk,0x32386240000
delete,MemoryChunk,0x176a7b40000
delete,MemoryChunk,0x1de12b40000
delete,MemoryChunk,0x27927100000
delete,MemoryChunk,0x3132b040000
delete,MemoryChunk,0x8ae12c0000
delete,MemoryChunk,0x2b200d80000
delete,MemoryChunk,0x92f140000
delete,MemoryChunk,0x1cfad280000
delete,MemoryChunk,0x39fec140000
delete,MemoryChunk,0x3ceb5540000
delete,MemoryChunk,0x1fbedb40000
delete,MemoryChunk,0xa9623c0000
delete,MemoryChunk,0x1433f940000
delete,MemoryChunk,0x1ba7fec0000
delete,MemoryChunk,0x2315f500000
delete,MemoryChunk,0x2f33de80000
delete,MemoryChunk,0x380d2c0000
delete,MemoryChunk,0x264fda40000
delete,MemoryChunk,0x15781c80000
delete,MemoryChunk,0x3b32a880000
delete,MemoryChunk,0x11ce7a40000
delete,MemoryChunk,0x3249bec0000
delete,MemoryChunk,0xe16b300000
delete,MemoryChunk,0x1dc93340000
delete,MemoryChunk,0xf7c5640000
delete,MemoryChunk,0x184a4680000
delete,MemoryChunk,0x166e79c0000
delete,MemoryChunk,0x3159ca00000
delete,MemoryChunk,0x1b97a580000
delete,MemoryChunk,0x34bc1580000
delete,MemoryChunk,0x2e732640000
delete,MemoryChunk,0xce9d100000
delete,MemoryChunk,0x28de7180000
delete,MemoryChunk,0x268a40000
delete,MemoryChunk,0x24cbeac0000
delete,MemoryChunk,0x166409c0000
delete,MemoryChunk,0x34af2c40000
delete,MemoryChunk,0x3997500000
delete,MemoryChunk,0x3931ea80000
delete,MemoryChunk,0x20408280000
delete,MemoryChunk,0x712d280000
delete,MemoryChunk,0x7649a00000
delete,MemoryChunk,0xaa17840000
delete,MemoryChunk,0x1fbc3c0000
delete,MemoryChunk,0x4737d00000
delete,MemoryChunk,0xe072f00000
delete,MemoryChunk,0x30143180000
delete,MemoryChunk,0x1e800a00000
delete,MemoryChunk,0x212fbe80000
delete,MemoryChunk,0x16c88780000
delete,MemoryChunk,0xbc31700000
delete,MemoryChunk,0x38703440000
delete,MemoryChunk,0x23b7e180000
delete,MemoryChunk,0x10a7ddc0000
delete,MemoryChunk,0x14d7db00000
delete,MemoryChunk,0x5446b80000
delete,MemoryChunk,0xd119000000
delete,MemoryChunk,0x4b384c0000
delete,MemoryChunk,0x350ffbc0000
delete,MemoryChunk,0x19870f00000
delete,MemoryChunk,0x2b9fe600000
delete,MemoryChunk,0x7b57ac0000
delete,MemoryChunk,0x2ce29000000
delete,MemoryChunk,0x3338f140000
tick,0x7fffb2a0feb4,35566808,0,0x0,8
tick,0x7fffb2a0feb4,35582869,0,0x0,8
tick,0x7fffb2a0feb4,35598823,0,0x0,8
tick,0x7fffb2a0feb4,35614820,0,0x0,8
tick,0x7fffb2a0feb4,35630845,0,0x0,8
tick,0x7fffb2a0feb4,35646820,0,0x0,8
tick,0x7fffb2a0feb4,35661826,0,0x0,8
tick,0x7fffb2a0feb4,35677821,0,0x0,8
tick,0x7fffb2a0feb4,35693849,0,0x0,8
tick,0x7fffb2a0feb4,35709450,0,0x0,8
tick,0x7fffb2a0feb4,35724777,0,0x0,8
tick,0x7fffb2a0feb4,35740489,0,0x0,8
tick,0x7fffb2a0feb4,35756483,0,0x0,8
tick,0x7fffb2a0feb4,35771476,0,0x0,8
tick,0x7fffb2a0feb4,35787488,0,0x0,8
tick,0x7fffb2a0feb4,35803474,0,0x0,8
tick,0x7fffb2a0feb4,35819498,0,0x0,8
tick,0x7fffb2a0feb4,35835480,0,0x0,8
tick,0x7fffb2a0feb4,35850826,0,0x0,8
tick,0x7fffb2a0feb4,35866809,0,0x0,8
tick,0x7fffb2a0feb4,35881823,0,0x0,8
tick,0x7fffb2a0feb4,35896801,0,0x0,8
tick,0x7fffb2a0feb4,35912836,0,0x0,8
tick,0x7fffb2a0feb4,35928820,0,0x0,8
tick,0x7fffb2a0feb4,35944823,0,0x0,8
tick,0x7fffb2a0feb4,35960817,0,0x0,8
tick,0x7fffb2a0feb4,35976850,0,0x0,8
tick,0x7fffb2a0feb4,35992823,0,0x0,8
tick,0x7fffb2a0feb4,36008844,0,0x0,8
tick,0x7fffb2a0feb4,36024824,0,0x0,8
tick,0x7fffb2a0feb4,36040852,0,0x0,8
tick,0x7fffb2a0feb4,36056819,0,0x0,8
tick,0x7fffb2a0feb4,36072829,0,0x0,8
tick,0x7fffb2a0feb4,36088798,0,0x0,8
tick,0x7fffb2a0feb4,36104861,0,0x0,8
tick,0x7fffb2a0feb4,36119834,0,0x0,8
tick,0x7fffb2a0feb4,36134852,0,0x0,8
tick,0x7fffb2a0feb4,36149826,0,0x0,8
tick,0x7ff6a832ebfe,36165867,0,0x0,5
markcompact,begin,18,171875,1671212028533
code-move,0x1a5adc44746,0x18ab9879086
code-move,0x1a5adc44976,0x18ab98792b6
code-move,0x1a5adc44bde,0x18ab987951e
code-move,0x1a5adc44ef6,0x18ab9879836
code-move,0x1a5adc450de,0x18ab9879a1e
code-move,0x1a5adc4526e,0x18ab9866da6
code-move,0x1a5adc454c6,0x18ab9866ffe
code-move,0x1a5adc45776,0x18ab986940e
code-move,0x1a5adc45a56,0x18ab98696ee
code-move,0x1a5adc45f6e,0x18ab9869c06
sfi-move,0x1a5adc460f8,0x18ab9869d90
code-move,0x1a5adc461de,0x18ab9869e76
code-move,0x1a5adc463d6,0x18ab986a06e
code-move,0x1a5adc4651e,0x18ab986a1b6
code-move,0x1a5adc46626,0x18ab986a2be
code-move,0x1a5adc46ace,0x18ab9863dae
code-move,0x1a5adc4700e,0x18ab98642ee
code-move,0x1a5adc47156,0x18ab9864436
code-move,0x1a5adc47bde,0x18ab9864ebe
code-move,0x1a5adc47dce,0x18ab98650ae
code-move,0x1a5adc47eee,0x18ab98651ce
code-move,0x1a5adc48126,0x18ab9865406
code-move,0x1a5adc48296,0x18ab9865576
code-move,0x1a5adc483c6,0x18ab98656a6
code-move,0x1a5adc484d6,0x18ab98657b6
sfi-move,0x1a5adc48590,0x18ab9865870
code-move,0x1a5adc4861e,0x18ab986a766
code-move,0x1a5adc4878e,0x18ab987a0de
code-move,0x1a5adc4890e,0x18ab987a25e
code-move,0x1a5adc48a86,0x18ab987a3d6
code-move,0x1a5adc48bde,0x18ab987a52e
code-move,0x1a5adc50dd6,0x2c2a0accb6
code-move,0x1a5adc51206,0x2c2a0ad0e6
code-move,0x1a5adc5205e,0x2c2a0aee46
code-move,0x1a5adc521a6,0x2c2a0ad33e
code-move,0x1a5adc5262e,0x2c2a0a5c8e
code-move,0x1a5adc52b26,0x2c2a0a6186
code-move,0x1a5adc52c3e,0x2c2a0a629e
code-move,0x1a5adc52eae,0x2c2a0a650e
code-move,0x1a5adc532d6,0x2c2a0a6936
code-move,0x1a5adc5545e,0x2c2a0bcc2e
code-move,0x1a5adc56536,0x2c2a0b889e
code-move,0x1a5adc5662e,0x2c2a0b8996
code-move,0x1a5adc5671e,0x2c2a0b8a86
code-move,0x1a5adc568ae,0x2c2a0b8c16
code-move,0x1a5adc56ab6,0x2c2a0b8e1e
code-move,0x1a5adc56c36,0x2c2a0b8f9e
code-move,0x1a5adc56da6,0x2c2a0b910e
code-move,0x1a5adc56fbe,0x2c2a0b9326
code-move,0x1a5adc571c6,0x2c2a0b952e
code-move,0x1a5adc5800e,0x2ea32e1e676
code-move,0x1a5adc58606,0x2ea32e1ec6e
code-move,0x1a5adc58796,0x2ea32e1829e
sfi-move,0x1a5adc588f8,0x2ea32e11e30
code-move,0x1a5adc589c6,0x2ea32e183a6
sfi-move,0x1a5adc58c28,0x2ea32e01860
sfi-move,0x1a5adc58c60,0x2ea32e01898
sfi-move,0x1a5adc58c98,0x2ea32e018d0
code-move,0x1a5adc58d9e,0x2c2a0bd096
code-move,0x1a5adc590a6,0x2c2a0a6b86
sfi-move,0x1a5adc59230,0x2ea32e116c0
code-move,0x1a5adc592e6,0x2ea32e11776
sfi-move,0x1a5adc594a8,0x2ea32e11938
code-move,0x1a5adc595be,0x2ea32e03fbe
code-move,0x1a5adc59aae,0x2ea32e044ae
code-move,0x1a5adc59bee,0x2ea32e11a4e
code-move,0x1a5adc59d0e,0x2ea32e11b6e
code-move,0x1a5adc59e4e,0x2ea32e01d76
code-move,0x1a5adc5a28e,0x2ea32e1b13e
code-move,0x1a5adc5c37e,0x13cb80ef176
code-move,0x1a5adc5c506,0x13cb80ef2fe
sfi-move,0x1a5adc5c7e0,0x13cb80ef5d8
sfi-move,0x1a5adc5c830,0x13cb80ef628
code-move,0x1a5adc5c8f6,0x13cb80ef6ee
code-move,0x1a5adc5ca96,0x13cb80ef88e
code-move,0x1a5adc5cc96,0x13cb80efa8e
code-move,0x1a5adc5cfee,0x13cb80efde6
code-move,0x1a5adc5d116,0x13cb80eff0e
code-move,0x1a5adc5d24e,0x13cb80f0046
code-move,0x1a5adc5d37e,0x13cb80f0176
code-move,0x1a5adc5d7e6,0x13cb80f05de
code-move,0x1a5adc5dbce,0x13cb80f09c6
sfi-move,0x1a5adc5dd00,0x13cb80f0af8
code-move,0x1a5adc5dea6,0x13cb80f0c9e
code-move,0x1a5adc5e3de,0x13cb80f11d6
code-move,0x1a5adc5e536,0x13cb80f132e
code-move,0x1a5adc5e656,0x13cb80f144e
code-move,0x1a5adc5e796,0x13cb80f158e
code-move,0x1a5adc5e97e,0x13cb80f1776
code-move,0x1a5adc5ed2e,0x13cb80f1b26
sfi-move,0x1a5adc5efb8,0x13cb80f1db0
sfi-move,0x1a5adc5f008,0x13cb80f1e00
code-move,0x1a5adc5f166,0x13cb80f1f5e
code-move,0x1a5adc5f46e,0x13cb80f2266
code-move,0x1a5adc5f72e,0x13cb80f2526
code-move,0x1a5adc5f966,0x13cb80f275e
code-move,0x1a5adc5fb86,0x13cb80f297e
code-move,0x1a5adc5fd96,0x13cb80f2b8e
code-move,0x1a5adc5ff26,0x13cb80f2d1e
code-move,0x1a5adc60036,0x13cb80f2e2e
code-move,0x1a5adc60146,0x13cb80f2f3e
code-move,0x1a5adc60286,0x13cb80f307e
sfi-move,0x1a5adc603d8,0x13cb80f31d0
sfi-move,0x1a5adc60428,0x13cb80f3220
code-move,0x1a5adc60566,0x13cb80f335e
code-move,0x1a5adc60876,0x13cb80f366e
code-move,0x1a5adc609fe,0x13cb80f37f6
code-move,0x1a5adc60f16,0x13cb80f3d0e
code-move,0x1a5adc61496,0x13cb80fcaf6
code-move,0x1a5adc61896,0x2ea32e1b2e6
code-move,0x1a5adc619de,0x2ea32e1b42e
code-move,0x1a5adc61e9e,0x2ea32e186e6
code-move,0x1a5adc6215e,0x2ea32e189a6
code-move,0x1a5adc6229e,0x2ea32e18ae6
sfi-move,0x1a5adc623b8,0x2ea32e18c00
sfi-move,0x1a5adc623f0,0x2ea32e18c38
code-move,0x1a5adc62496,0x2ea32e18cde
code-move,0x1a5adc62676,0x2ea32e18ebe
sfi-move,0x1a5adc627b0,0x2ea32e18ff8
code-move,0x1a5adc62846,0x2ea32e1908e
code-move,0x1a5adc62a06,0x2ea32e1924e
code-move,0x1a5adc62b56,0x2ea32e1939e
code-move,0x1a5adc62d66,0x2ea32e1765e
code-move,0x1a5adc6318e,0x2ea32e17a86
code-move,0x1a5adc6336e,0x2ea32e17c66
code-move,0x1a5adc6351e,0x2ea32e17e16
code-move,0x1a5adc6363e,0x2ea32e1b8ee
code-move,0x1a5adc63786,0x2ea32e19626
code-move,0x1a5adc63ace,0x2ea32e1023e
code-move,0x1a5adc63f2e,0x2ea32e1069e
new,MemoryChunk,0xad25100000,262144
sfi-move,0x1bac6b84788,0xad25104788
sfi-move,0x1bac6b847c0,0xad251047c0
sfi-move,0x1bac6b84810,0xad25104810
sfi-move,0x1bac6b84880,0xad25104880
sfi-move,0x1bac6b85138,0xad25105138
sfi-move,0x1bac6b85170,0xad25105170
sfi-move,0x1bac6b851c0,0xad251051c0
sfi-move,0x1bac6b85210,0xad25105210
sfi-move,0x1bac6b85260,0xad25105260
sfi-move,0x1bac6b852b0,0xad251052b0
sfi-move,0x1bac6b85300,0xad25105300
sfi-move,0x1bac6b86188,0xad25106188
sfi-move,0x1bac6b861c0,0xad251061c0
sfi-move,0x1bac6b86210,0xad25106210
sfi-move,0x1bac6b86260,0xad25106260
sfi-move,0x1bac6b86bf8,0xad25106bf8
sfi-move,0x1bac6b87840,0xad25107840
sfi-move,0x1bac6b87878,0xad25107878
sfi-move,0x1bac6b878f8,0xad251078f8
sfi-move,0x1bac6b87948,0xad25107948
sfi-move,0x1bac6b87998,0xad25107998
sfi-move,0x1bac6b879e8,0xad251079e8
sfi-move,0x1bac6b87a38,0xad25107a38
sfi-move,0x1bac6b88988,0xad25108988
sfi-move,0x1bac6b889c0,0xad251089c0
sfi-move,0x1bac6b88a10,0xad25108a10
sfi-move,0x1bac6b88a88,0xad25108a88
sfi-move,0x1bac6b89c70,0xad25109c70
sfi-move,0x1bac6b89ca8,0xad25109ca8
sfi-move,0x1bac6b89d48,0xad25109d48
sfi-move,0x1bac6b89d98,0xad25109d98
sfi-move,0x1bac6b8afb8,0xad2510afb8
sfi-move,0x1bac6b8aff0,0xad2510aff0
sfi-move,0x1bac6b8b040,0xad2510b040
sfi-move,0x1bac6b8b0e0,0xad2510b0e0
sfi-move,0x1bac6b8b130,0xad2510b130
sfi-move,0x1bac6b8b1f0,0xad2510b1f0
sfi-move,0x1bac6b8c788,0xad2510c788
sfi-move,0x1bac6b8c7c0,0xad2510c7c0
sfi-move,0x1bac6b8c810,0xad2510c810
sfi-move,0x1bac6b8c860,0xad2510c860
sfi-move,0x1bac6b8c8b0,0xad2510c8b0
sfi-move,0x1bac6b8c900,0xad2510c900
sfi-move,0x1bac6b8c990,0xad2510c990
sfi-move,0x1bac6b8c9e0,0xad2510c9e0
sfi-move,0x1bac6b8d498,0xad2510d498
sfi-move,0x1bac6b8daf8,0xad2510daf8
sfi-move,0x1bac6b8db30,0xad2510db30
sfi-move,0x1bac6b8db80,0xad2510db80
sfi-move,0x1bac6b8dbd0,0xad2510dbd0
sfi-move,0x1bac6b8dc58,0xad2510dc58
sfi-move,0x1bac6b8dce0,0xad2510dce0
sfi-move,0x1bac6b8dd68,0xad2510dd68
sfi-move,0x1bac6b8e700,0xad2510e700
sfi-move,0x1bac6b8e738,0xad2510e738
sfi-move,0x1bac6b8e788,0xad2510e788
sfi-move,0x1bac6b8e7d8,0xad2510e7d8
sfi-move,0x1bac6b8e848,0xad2510e848
sfi-move,0x1bac6b8e8d8,0xad2510e8d8
sfi-move,0x1bac6b8e960,0xad2510e960
sfi-move,0x1bac6b8ea10,0xad2510ea10
sfi-move,0x1bac6b8eaa0,0xad2510eaa0
sfi-move,0x1bac6b8eb28,0xad2510eb28
sfi-move,0x1bac6b8f3a8,0xad2510f3a8
sfi-move,0x1bac6b8f3f8,0xad2510f3f8
sfi-move,0x1bac6b8f830,0xad2510f830
sfi-move,0x1bac6b8f868,0xad2510f868
sfi-move,0x1bac6b90148,0xad25110148
sfi-move,0x1bac6b901a0,0xad251101a0
sfi-move,0x1bac6b91000,0xad25111000
sfi-move,0x1bac6b91038,0xad25111038
sfi-move,0x1bac6b910b8,0xad251110b8
sfi-move,0x1bac6b91c68,0xad25111c68
sfi-move,0x1bac6b91ca0,0xad25111ca0
sfi-move,0x1bac6b91cd8,0xad25111cd8
sfi-move,0x1bac6b91d28,0xad25111d28
sfi-move,0x1bac6b91d78,0xad25111d78
sfi-move,0x1bac6b91df0,0xad25111df0
sfi-move,0x1bac6b92f70,0xad25112f70
sfi-move,0x1bac6b92fa8,0xad25112fa8
sfi-move,0x1bac6b93028,0xad25113028
sfi-move,0x1bac6b93078,0xad25113078
sfi-move,0x1bac6b939c8,0xad251139c8
sfi-move,0x1bac6b93a00,0xad25113a00
sfi-move,0x1bac6b93a80,0xad25113a80
sfi-move,0x1bac6b93af8,0xad25113af8
sfi-move,0x1bac6b93b48,0xad25113b48
sfi-move,0x1bac6b93b98,0xad25113b98
sfi-move,0x1bac6b93be8,0xad25113be8
sfi-move,0x1bac6b93c60,0xad25113c60
sfi-move,0x1bac6b94ef8,0xad25114ef8
code-move,0x1bac6b9506e,0xad2511506e
sfi-move,0x1bac6b953d8,0xad251153d8
sfi-move,0x1bac6b954d8,0xad251154d8
code-move,0x1bac6b9560e,0xad2511560e
sfi-move,0x1bac6b959e8,0xad251159e8
sfi-move,0x1bac6b95a38,0xad25115a38
code-move,0x1bac6b95da6,0xad25115da6
sfi-move,0x1bac6b96000,0xad25116000
code-move,0x1bac6b96136,0xad25116136
sfi-move,0x1bac6b96738,0xad25116738
sfi-move,0x1bac6b96808,0xad25116808
code-move,0x1bac6b96b86,0xad25116b86
sfi-move,0x1bac6b96c50,0xad25116c50
code-move,0x1bac6b96e0e,0xad25116e0e
sfi-move,0x1bac6b96f58,0xad25116f58
code-move,0x1bac6b97206,0xad25117206
sfi-move,0x1bac6b974f0,0xad251174f0
code-move,0x1bac6b9a8be,0xad2511a8be
code-move,0x1bac6b9bed6,0xad2511bed6
code-move,0x1bac6b9c746,0xad2511c746
code-move,0x1bac6b9c846,0xad2511c846
code-move,0x1bac6b9ccfe,0xad2511ccfe
code-move,0x1bac6b9cdee,0xad2511cdee
code-move,0x1bac6b9cee6,0xad2511cee6
code-move,0x1bac6b9cfe6,0xad2511cfe6
code-move,0x1bac6b9d0f6,0xad2511d0f6
code-move,0x1bac6b9d1de,0xad2511d1de
code-move,0x1bac6b9d2ee,0xad2511d2ee
code-move,0x1bac6b9d436,0xad2511d436
code-move,0x1bac6b9d546,0xad2511d546
code-move,0x1bac6b9d6de,0xad2511d6de
code-move,0x1bac6b9d9be,0xad2511d9be
code-move,0x1bac6b9daee,0xad2511daee
code-move,0x1bac6b9dc26,0xad2511dc26
code-move,0x1bac6b9dd76,0xad2511dd76
code-move,0x1bac6b9e086,0xad2511e086
code-move,0x1bac6ba3e36,0xad25123e36
code-move,0x1bac6ba3f2e,0xad25123f2e
code-move,0x1bac6ba4116,0xad25124116
code-move,0x1bac6ba44de,0xad251244de
sfi-move,0x1bac6ba4778,0xad25124778
code-move,0x1bac6ba488e,0xad2512488e
code-move,0x1bac6ba4ab6,0xad25124ab6
code-move,0x1bac6ba55ce,0xad251255ce
code-move,0x1bac6ba57e6,0xad251257e6
code-move,0x1bac6ba597e,0xad2512597e
code-move,0x1bac6ba5aae,0xad25125aae
code-move,0x1bac6ba5b9e,0xad25125b9e
code-move,0x1bac6ba5ce6,0xad25125ce6
code-move,0x1bac6ba5ec6,0xad25125ec6
code-move,0x1bac6ba608e,0xad2512608e
code-move,0x3fe5748972e,0xad2512e436
code-move,0x3fe574898de,0xad2512e5e6
code-move,0x3fe57489b6e,0xad2512e876
code-move,0x3fe57489fbe,0xad2512ecc6
code-move,0x3fe5748a0ae,0xad2512edb6
code-move,0x3fe5748a18e,0xad2512ee96
code-move,0x3fe5748a2be,0xad2512efc6
code-move,0x3fe5748a48e,0xad2512f196
code-move,0x3fe57495806,0xad2513a276
code-move,0x3fe57495946,0xad2513a3b6
code-move,0x3fe57495b2e,0xad2513a59e
sfi-move,0x3fe57495d80,0xad2513a7f0
code-move,0x3fe57495e5e,0xad2513a8ce
code-move,0x3fe57496066,0xad2513aad6
code-move,0x3fe574962d6,0xad2513ad46
code-move,0x3fe57496506,0xad2513af76
code-move,0x3fe5749663e,0xad2513b0ae
code-move,0x3fe5749684e,0xad2513b2be
code-move,0x3fe57496be6,0xad2513b656
code-move,0x3fe57496d76,0xad2513b7e6
sfi-move,0x3fe57496f08,0xad2513b978
code-move,0x3fe57496fd6,0xad2513ba46
code-move,0x3fe574971b6,0xad2513bc26
sfi-move,0x3fe57497368,0xad2513bdd8
code-move,0x3fe5749746e,0xad2513bede
code-move,0x3fe5749768e,0xad2513c0fe
code-move,0x3fe574977de,0xad2513c24e
code-move,0x3fe57497a16,0xad2513c486
code-move,0x3fe57497cae,0xad2513c71e
code-move,0x3fe57497fb6,0xad2513ca26
code-move,0x3fe574984ae,0xad2513cf1e
code-move,0x3fe574985b6,0xad2513d026
code-move,0x3fe574986ee,0xad2513d15e
code-move,0x3fe57498956,0xad2513d3c6
code-move,0x3fe57498c7e,0xad2513d6ee
code-move,0x3fe574991ae,0xad2513dc1e
code-move,0x3fe57499696,0xad2513e106
code-move,0x3fe57499a0e,0xad2513e47e
code-move,0x3fe57499af6,0xad2513e566
code-move,0x3fe57499cce,0xad2513e73e
code-move,0x3fe57499e96,0xad2513e906
code-move,0x3fe5749a026,0xad2513ea96
code-move,0x3fe5749a17e,0xad2513ebee
code-move,0x3fe5749a326,0xad2513ed96
code-move,0x3fe5749a4d6,0xad2513ef46
code-move,0x3fe5749ac7e,0xad2513f6ee
code-move,0x3fe5749b6be,0x23ad5936dde
code-move,0x3fe5749b886,0x23ad593fee6
code-move,0x3fe5749ba76,0x23ad593700e
code-move,0x3fe5749bd46,0x23ad59312c6
code-move,0x3fe5749c0d6,0x23ad591460e
code-move,0x3fe5749c376,0x23ad592bb16
code-move,0x3fe5749c70e,0x23ad593cdbe
code-move,0x3fe5749c8de,0x23ad592b67e
code-move,0x3fe5749d016,0x23ad592e166
code-move,0x3fe5749d69e,0x23ad592bd26
code-move,0x3fe5749d84e,0x23ad593be5e
code-move,0x3fe5749da36,0x23ad593e86e
code-move,0x3fe5749dc36,0x23ad593cc6e
code-move,0x3fe5749df0e,0x23ad593958e
code-move,0x3fe5749e05e,0x23ad592dd5e
new,MemoryChunk,0x2b515b80000,262144
code-move,0x3fe5749f846,0x2b515b82886
code-move,0x3fe5749fab6,0x2b515b82af6
code-move,0x3fe5749fcae,0x2b515b82cee
code-move,0x3fe5749ff4e,0x2b515b82f8e
code-move,0x3fe574a00e6,0x2b515b83126
code-move,0x3fe574a05fe,0x2b515b8363e
code-move,0x3fe574a0796,0x2b515b837d6
code-move,0x3fe574a087e,0x2b515b838be
code-move,0x3fe574a0b76,0x2b515b83bb6
code-move,0x3fe574a0d36,0x2b515b83d76
code-move,0x3fe574a0ed6,0x2b515b83f16
code-move,0x3fe574a100e,0x2b515b8404e
code-move,0x3fe574a124e,0x2b515b8428e
code-move,0x3fe574a16a6,0x2b515b846e6
code-move,0x3fe574a1ad6,0x2b515b84b16
sfi-move,0x3fe574a1bb0,0x2b515b84bf0
code-move,0x3fe574a1cd6,0x2b515b84d16
code-move,0x3fe574a20d6,0x2b515b85116
code-move,0x3fe574a225e,0x2b515b8529e
code-move,0x3fe574a23a6,0x2b515b853e6
code-move,0x3fe574a25fe,0x2b515b8563e
code-move,0x3fe574a277e,0x2b515b857be
code-move,0x3fe574a2936,0x2b515b85976
code-move,0x3fe574a2a4e,0x2b515b85a8e
code-move,0x3fe574a2b76,0x2b515b85bb6
code-move,0x3fe574a2c76,0x2b515b85cb6
code-move,0x3fe574a2d16,0x2b515b85d56
code-move,0x3fe574a2de6,0x2b515b85e26
code-move,0x3fe574a302e,0x2b515b8606e
code-move,0x3fe574a32f6,0x2b515b86336
code-move,0x3fe574a342e,0x2b515b8646e
code-move,0x3fe574a35ee,0x2b515b8662e
code-move,0x3fe574a3946,0x2b515b86986
code-move,0x3fe574a3a9e,0x2b515b86ade
code-move,0x3fe574a3bc6,0x2b515b86c06
code-move,0x3fe574a3d1e,0x2b515b86d5e
code-move,0x3fe574a3e6e,0x2b515b86eae
code-move,0x3fe574a3fce,0x2b515b8700e
code-move,0x3fe574a42b6,0x2b515b872f6
code-move,0x3fe574a4436,0x2b515b87476
code-move,0x3fe574a50de,0x2b515b8811e
code-move,0x3fe574a522e,0x2b515b8826e
code-move,0x3fe574a5366,0x2b515b883a6
code-move,0x3fe574a54ce,0x2b515b8850e
code-move,0x3fe574a5836,0x2b515b88876
sfi-move,0x3fe574a5aa8,0x2b515b88ae8
code-move,0x3fe574a5b7e,0x2b515b88bbe
code-move,0x3fe574a5d66,0x2b515b88da6
sfi-move,0x3fe574a5ec0,0x2b515b88f00
sfi-move,0x3fe574a5ef8,0x2b515b88f38
sfi-move,0x3fe574a5f48,0x2b515b88f88
code-move,0x3fe574a603e,0x2b515b8907e
sfi-move,0x3fe574a6240,0x2b515b89280
code-move,0x3fe574a632e,0x2b515b8936e
code-move,0x3fe574a652e,0x2b515b8956e
code-move,0x3fe574a664e,0x2b515b8968e
code-move,0x3fe574a6816,0x2b515b89856
delete,MemoryChunk,0x1a5adc40000
delete,MemoryChunk,0x1bac6b80000
delete,MemoryChunk,0x3fe57480000
markcompact,end,18,171875,1671212028537
delete,MemoryChunk,0x38a4d6c0000
delete,MemoryChunk,0x305193c0000
delete,MemoryChunk,0x3c207740000
delete,MemoryChunk,0x18ec9680000
delete,MemoryChunk,0x11e700000
delete,MemoryChunk,0x5457f40000
delete,MemoryChunk,0x388ab8c0000
delete,MemoryChunk,0x2b200d80000
delete,MemoryChunk,0x34052480000
delete,MemoryChunk,0x1256ff40000
delete,MemoryChunk,0x126ff00000
delete,MemoryChunk,0xa0dbd80000
tick,0x7fffb2a0feb4,36181820,0,0x0,8
tick,0x7fffb2a0feb4,36197811,0,0x0,8
tick,0x7fffb2a0feb4,36213806,0,0x0,8
tick,0x7fffb2a0feb4,36229841,0,0x0,8
tick,0x7fffb2a0feb4,36245836,0,0x0,8
tick,0x7fffb2a0feb4,36261835,0,0x0,8
tick,0x7fffb2a0feb4,36277785,0,0x0,8
tick,0x7fffb2a0feb4,36293825,0,0x0,8
tick,0x7fffb2a0feb4,36309802,0,0x0,8
tick,0x7fffb2a0feb4,36325827,0,0x0,8
tick,0x7fffb2a0feb4,36341839,0,0x0,8
tick,0x7fffb2a0feb4,36357837,0,0x0,8
tick,0x7fffb2a0feb4,36373816,0,0x0,8
tick,0x7fffb2a0feb4,36389848,0,0x0,8
tick,0x7fffb2a0feb4,36405816,0,0x0,8
tick,0x7fffb2a0feb4,36421820,0,0x0,8
tick,0x7fffb2a0feb4,36437815,0,0x0,8
tick,0x7fffb2a0feb4,36453819,0,0x0,8
tick,0x7fffb2a0feb4,36469808,0,0x0,8
tick,0x7fffb2a0feb4,36485806,0,0x0,8
tick,0x7fffb2a0feb4,36501821,0,0x0,8
tick,0x7fffb2a0feb4,36517751,0,0x0,8
tick,0x7fffb2a0feb4,36533719,0,0x0,8
tick,0x7fffb2a0feb4,36549822,0,0x0,8
tick,0x7fffb2a0feb4,36565826,0,0x0,8
tick,0x7fffb2a0feb4,36581838,0,0x0,8
tick,0x7fffb2a0feb4,36597811,0,0x0,8
tick,0x7fffb2a0feb4,36612991,0,0x0,8
tick,0x7fffb2a0feb4,36628829,0,0x0,8
tick,0x7fffb2a0feb4,36644848,0,0x0,8
tick,0x7fffb2a0feb4,36660819,0,0x0,8
tick,0x7fffb2a0feb4,36676864,0,0x0,8
tick,0x7fffb2a0feb4,36692824,0,0x0,8
tick,0x7fffb2a0feb4,36708741,0,0x0,8
tick,0x7fffb2a0feb4,36724723,0,0x0,8
tick,0x7fffb2a0feb4,36740730,0,0x0,8
tick,0x7fffb2a0feb4,36756817,0,0x0,8
tick,0x7fffb2a0feb4,36772847,0,0x0,8
tick,0x7fffb2a0feb4,36788829,0,0x0,8
tick,0x7fffb2a0feb4,36804842,0,0x0,8
tick,0x7fffb2a0feb4,36820829,0,0x0,8
tick,0x7fffb2a0feb4,36836820,0,0x0,8
tick,0x7fffb2a0feb4,36851814,0,0x0,8
tick,0x7fffb2a0feb4,36867826,0,0x0,8
tick,0x7fffb2a0feb4,36883816,0,0x0,8
tick,0x7fffb2a0feb4,36899820,0,0x0,8
tick,0x7fffb2a0feb4,36915821,0,0x0,8
tick,0x7fffb2a0feb4,36931835,0,0x0,8
tick,0x7fffb2a0feb4,36946830,0,0x0,8
tick,0x7fffb2a0feb4,36962767,0,0x0,8
tick,0x7fffb2a0feb4,36978825,0,0x0,8
tick,0x7fffb2a0feb4,36994845,0,0x0,8
tick,0x7fffb2a0feb4,37010816,0,0x0,8
tick,0x7fffb2a0feb4,37025832,0,0x0,8
tick,0x7fffb2a0feb4,37040818,0,0x0,8
tick,0x7fffb2a0feb4,37055829,0,0x0,8
tick,0x7fffb2a0feb4,37071823,0,0x0,8
tick,0x7fffb2a0feb4,37087839,0,0x0,8
tick,0x7fffb2a0feb4,37103814,0,0x0,8
tick,0x7fffb2a0feb4,37118850,0,0x0,8
tick,0x7fffb2a0feb4,37134768,0,0x0,8
tick,0x7fffb2a0feb4,37149844,0,0x0,8
tick,0x7fffb2a0feb4,37165822,0,0x0,8
tick,0x7fffb2a0feb4,37181809,0,0x0,8
tick,0x7fffb2a0feb4,37197776,0,0x0,8
tick,0x7fffb2a0feb4,37213795,0,0x0,8
tick,0x7fffb2a0feb4,37228771,0,0x0,8
tick,0x7fffb2a0feb4,37244770,0,0x0,8
tick,0x7fffb2a0feb4,37260216,0,0x0,8
tick,0x7fffb2a0feb4,37275906,0,0x0,8
tick,0x7fffb2a0feb4,37291828,0,0x0,8
tick,0x7fffb2a0feb4,37307787,0,0x0,8
tick,0x7fffb2a0feb4,37323775,0,0x0,8
tick,0x7fffb2a0feb4,37339845,0,0x0,8
tick,0x7fffb2a0feb4,37355825,0,0x0,8
tick,0x7fffb2a0feb4,37371844,0,0x0,8
tick,0x7fffb2a0feb4,37387826,0,0x0,8
tick,0x7fffb2a0feb4,37402825,0,0x0,8
tick,0x7fffb2a0feb4,37418796,0,0x0,8
tick,0x7fffb2a0feb4,37434801,0,0x0,8
tick,0x7fffb2a0feb4,37450775,0,0x0,8
tick,0x7fffb2a0feb4,37466796,0,0x0,8
tick,0x7fffb2a0feb4,37482798,0,0x0,8
tick,0x7fffb2a0feb4,37498825,0,0x0,8
tick,0x7fffb2a0feb4,37514791,0,0x0,8
tick,0x7fffb2a0feb4,37530864,0,0x0,8
tick,0x7fffb2a0feb4,37546821,0,0x0,8
tick,0x7fffb2a0feb4,37561826,0,0x0,8
tick,0x7fffb2a0feb4,37577828,0,0x0,8
tick,0x7fffb2a0feb4,37593780,0,0x0,8
tick,0x7fffb2a0feb4,37609831,0,0x0,8
tick,0x7fffb2a0feb4,37625859,0,0x0,8
tick,0x7fffb2a0feb4,37640820,0,0x0,8
tick,0x7fffb2a0feb4,37656847,0,0x0,8
tick,0x7fffb2a0feb4,37672823,0,0x0,8
tick,0x7fffb2a0feb4,37688845,0,0x0,8
tick,0x7fffb2a0feb4,37704856,0,0x0,8
tick,0x7fffb2a0feb4,37719841,0,0x0,8
tick,0x7fffb2a0feb4,37735853,0,0x0,8
tick,0x7fffb2a0feb4,37751882,0,0x0,8
tick,0x7fffb2a0feb4,37767847,0,0x0,8
tick,0x7fffb2a0feb4,37783873,0,0x0,8
tick,0x7fffb2a0feb4,37799854,0,0x0,8
tick,0x7fffb2a0feb4,37815921,0,0x0,8
tick,0x7fffb2a0feb4,37830849,0,0x0,8
tick,0x7fffb2a0feb4,37846852,0,0x0,8
tick,0x7fffb2a0feb4,37862817,0,0x0,8
tick,0x7fffb2a0feb4,37878869,0,0x0,8
tick,0x7fffb2a0feb4,37894845,0,0x0,8
tick,0x7fffb2a0feb4,37910839,0,0x0,8
tick,0x7fffb2a0feb4,37926841,0,0x0,8
tick,0x7fffb2a0feb4,37942855,0,0x0,8
tick,0x7fffb2a0feb4,37958853,0,0x0,8
tick,0x7fffb2a0feb4,37974858,0,0x0,8
tick,0x7fffb2a0feb4,37990827,0,0x0,8
tick,0x7fffb2a0feb4,38006788,0,0x0,8
tick,0x7fffb2a0feb4,38022792,0,0x0,8
tick,0x7fffb2a0feb4,38038778,0,0x0,8
tick,0x7fffb2a0feb4,38054777,0,0x0,8
tick,0x7fffb2a0feb4,38070827,0,0x0,8
tick,0x7fffb2a0feb4,38086841,0,0x0,8
tick,0x7fffb2a0feb4,38102866,0,0x0,8
tick,0x7fffb2a0feb4,38118898,0,0x0,8
tick,0x7fffb2a0feb4,38134887,0,0x0,8
tick,0x7fffb2a0feb4,38149872,0,0x0,8
tick,0x7fffb2a0feb4,38164877,0,0x0,8
tick,0x7fffb2a0feb4,38179896,0,0x0,8
tick,0x7fffb2a0feb4,38195904,0,0x0,8
tick,0x7fffb2a0feb4,38211869,0,0x0,8
tick,0x7fffb2a0feb4,38227941,0,0x0,8
tick,0x7fffb2a0feb4,38243871,0,0x0,8
tick,0x7fffb2a0feb4,38259899,0,0x0,8
tick,0x7fffb2a0feb4,38275876,0,0x0,8
tick,0x7fffb2a0feb4,38291875,0,0x0,8
tick,0x7fffb2a0feb4,38307819,0,0x0,8
tick,0x7fffb2a0feb4,38323824,0,0x0,8
tick,0x7fffb2a0feb4,38339830,0,0x0,8
tick,0x7fffb2a0feb4,38355862,0,0x0,8
tick,0x7fffb2a0feb4,38371803,0,0x0,8
tick,0x7fffb2a0feb4,38387822,0,0x0,8
tick,0x7fffb2a0feb4,38402827,0,0x0,8
tick,0x7fffb2a0feb4,38418861,0,0x0,8
tick,0x7fffb2a0feb4,38434812,0,0x0,8
tick,0x7fffb2a0feb4,38450860,0,0x0,8
tick,0x7fffb2a0feb4,38465849,0,0x0,8
tick,0x7fffb2a0feb4,38481851,0,0x0,8
tick,0x7fffb2a0feb4,38497843,0,0x0,8
tick,0x7fffb2a0feb4,38513879,0,0x0,8
tick,0x7fffb2a0feb4,38529865,0,0x0,8
tick,0x7fffb2a0feb4,38545871,0,0x0,8
tick,0x7fffb2a0feb4,38561846,0,0x0,8
tick,0x7fffb2a0feb4,38577867,0,0x0,8
tick,0x7fffb2a0feb4,38593849,0,0x0,8
tick,0x7fffb2a0feb4,38609860,0,0x0,8
tick,0x7fffb2a0feb4,38625872,0,0x0,8
tick,0x7fffb2a0feb4,38640895,0,0x0,8
tick,0x7fffb2a0feb4,38656859,0,0x0,8
tick,0x7fffb2a0feb4,38672893,0,0x0,8
tick,0x7fffb2a0feb4,38688875,0,0x0,8
tick,0x7fffb2a0feb4,38704864,0,0x0,8
tick,0x7fffb2a0feb4,38719820,0,0x0,8
tick,0x7fffb2a0feb4,38735468,0,0x0,8
tick,0x7fffb2a0feb4,38750442,0,0x0,8
tick,0x7fffb2a0feb4,38766464,0,0x0,8
tick,0x7fffb2a0feb4,38781814,0,0x0,8
tick,0x7fffb2a0feb4,38797770,0,0x0,8
tick,0x7fffb2a0feb4,38813757,0,0x0,8
tick,0x7fffb2a0feb4,38829799,0,0x0,8
tick,0x7fffb2a0feb4,38845770,0,0x0,8
tick,0x7fffb2a0feb4,38861801,0,0x0,8
tick,0x7fffb2a0feb4,38877830,0,0x0,8
tick,0x7fffb2a0feb4,38893849,0,0x0,8
tick,0x7fffb2a0feb4,38909506,0,0x0,8
tick,0x7fffb2a0feb4,38924831,0,0x0,8
tick,0x7fffb2a0feb4,38940827,0,0x0,8
tick,0x7fffb2a0feb4,38956847,0,0x0,8
tick,0x7fffb2a0feb4,38972822,0,0x0,8
tick,0x7fffb2a0feb4,38988854,0,0x0,8
tick,0x7fffb2a0feb4,39004826,0,0x0,8
tick,0x7fffb2a0feb4,39020834,0,0x0,8
tick,0x7fffb2a0feb4,39036817,0,0x0,8
tick,0x7fffb2a0feb4,39052810,0,0x0,8
tick,0x7fffb2a0feb4,39068806,0,0x0,8
tick,0x7fffb2a0feb4,39084845,0,0x0,8
tick,0x7fffb2a0feb4,39100840,0,0x0,8
tick,0x7fffb2a0feb4,39116843,0,0x0,8
tick,0x7fffb2a0feb4,39132835,0,0x0,8
tick,0x7fffb2a0feb4,39148838,0,0x0,8
tick,0x7fffb2a0feb4,39164873,0,0x0,8
tick,0x7fffb2a0feb4,39179862,0,0x0,8
tick,0x7fffb2a0feb4,39195801,0,0x0,8
tick,0x7fffb2a0feb4,39211835,0,0x0,8
tick,0x7fffb2a0feb4,39226796,0,0x0,8
tick,0x7fffb2a0feb4,39242787,0,0x0,8
tick,0x7fffb2a0feb4,39258801,0,0x0,8
tick,0x7fffb2a0feb4,39274821,0,0x0,8
tick,0x7fffb2a0feb4,39290861,0,0x0,8
tick,0x7fffb2a0feb4,39306827,0,0x0,8
tick,0x7fffb2a0feb4,39322803,0,0x0,8
tick,0x7fffb2a0feb4,39338829,0,0x0,8
tick,0x7fffb2a0feb4,39354822,0,0x0,8
tick,0x7fffb2a0feb4,39370836,0,0x0,8
tick,0x7fffb2a0feb4,39386827,0,0x0,8
tick,0x7fffb2a0feb4,39402824,0,0x0,8
tick,0x7fffb2a0feb4,39418829,0,0x0,8
tick,0x7fffb2a0feb4,39434753,0,0x0,8
tick,0x7fffb2a0feb4,39450734,0,0x0,8
tick,0x7fffb2a0feb4,39466765,0,0x0,8
tick,0x7fffb2a0feb4,39482747,0,0x0,8
tick,0x7fffb2a0feb4,39498769,0,0x0,8
tick,0x7fffb2a0feb4,39514752,0,0x0,8
tick,0x7fffb2a0feb4,39530769,0,0x0,8
tick,0x7fffb2a0feb4,39546827,0,0x0,8
tick,0x7fffb2a0feb4,39561828,0,0x0,8
tick,0x7fffb2a0feb4,39577831,0,0x0,8
tick,0x7fffb2a0feb4,39593851,0,0x0,8
tick,0x7fffb2a0feb4,39609488,0,0x0,8
tick,0x7fffb2a0feb4,39624839,0,0x0,8
tick,0x7fffb2a0feb4,39640862,0,0x0,8
tick,0x7fffb2a0feb4,39655882,0,0x0,8
tick,0x7fffb2a0feb4,39671871,0,0x0,8
tick,0x7fffb2a0feb4,39687863,0,0x0,8
tick,0x7fffb2a0feb4,39703836,0,0x0,8
tick,0x7fffb2a0feb4,39719859,0,0x0,8
tick,0x7fffb2a0feb4,39735832,0,0x0,8
tick,0x7fffb2a0feb4,39751872,0,0x0,8
tick,0x7fffb2a0feb4,39767822,0,0x0,8
tick,0x7fffb2a0feb4,39783853,0,0x0,8
tick,0x7fffb2a0feb4,39799817,0,0x0,8
tick,0x7fffb2a0feb4,39815847,0,0x0,8
tick,0x7fffb2a0feb4,39831839,0,0x0,8
tick,0x7fffb2a0feb4,39847837,0,0x0,8
tick,0x7fffb2a0feb4,39863835,0,0x0,8
tick,0x7fffb2a0feb4,39879856,0,0x0,8
tick,0x7fffb2a0feb4,39895836,0,0x0,8
tick,0x7fffb2a0feb4,39911852,0,0x0,8
tick,0x7fffb2a0feb4,39927836,0,0x0,8
tick,0x7fffb2a0feb4,39943917,0,0x0,8
tick,0x7fffb2a0feb4,39959825,0,0x0,8
tick,0x7fffb2a0feb4,39975841,0,0x0,8
tick,0x7fffb2a0feb4,39991872,0,0x0,8
tick,0x7fffb2a0feb4,40007835,0,0x0,8
tick,0x7fffb2a0feb4,40023781,0,0x0,8
tick,0x7fffb2a0feb4,40039790,0,0x0,8
tick,0x7fffb2a0feb4,40054794,0,0x0,8
tick,0x7fffb2a0feb4,40070813,0,0x0,8
tick,0x7fffb2a0feb4,40086790,0,0x0,8
tick,0x7fffb2a0feb4,40102845,0,0x0,8
tick,0x7fffb2a0feb4,40118858,0,0x0,8
tick,0x7fffb2a0feb4,40134856,0,0x0,8
tick,0x7fffb2a0feb4,40150841,0,0x0,8
tick,0x7fffb2a0feb4,40166839,0,0x0,8
tick,0x7fffb2a0feb4,40182845,0,0x0,8
tick,0x7fffb2a0feb4,40198771,0,0x0,8
tick,0x7fffb2a0feb4,40214761,0,0x0,8
tick,0x7fffb2a0feb4,40230826,0,0x0,8
tick,0x7fffb2a0feb4,40246797,0,0x0,8
tick,0x7fffb2a0feb4,40262802,0,0x0,8
tick,0x7fffb2a0feb4,40278798,0,0x0,8
tick,0x7fffb2a0feb4,40294860,0,0x0,8
tick,0x7fffb2a0feb4,40310833,0,0x0,8
tick,0x7fffb2a0feb4,40326835,0,0x0,8
tick,0x7fffb2a0feb4,40342842,0,0x0,8
tick,0x7fffb2a0feb4,40358879,0,0x0,8
tick,0x7fffb2a0feb4,40374847,0,0x0,8
tick,0x7fffb2a0feb4,40390869,0,0x0,8
tick,0x7fffb2a0feb4,40406833,0,0x0,8
tick,0x7fffb2a0feb4,40422881,0,0x0,8
tick,0x7fffb2a0feb4,40438837,0,0x0,8
tick,0x7fffb2a0feb4,40454831,0,0x0,8
tick,0x7fffb2a0feb4,40470825,0,0x0,8
tick,0x7fffb2a0feb4,40486860,0,0x0,8
tick,0x7fffb2a0feb4,40502859,0,0x0,8
tick,0x7fffb2a0feb4,40518853,0,0x0,8
tick,0x7fffb2a0feb4,40534729,0,0x0,8
tick,0x7fffb2a0feb4,40550750,0,0x0,8
tick,0x7fffb2a0feb4,40566724,0,0x0,8
tick,0x7fffb2a0feb4,40582856,0,0x0,8
tick,0x7fffb2a0feb4,40598826,0,0x0,8
tick,0x7fffb2a0feb4,40614848,0,0x0,8
tick,0x7fffb2a0feb4,40630865,0,0x0,8
tick,0x7fffb2a0feb4,40645863,0,0x0,8
tick,0x7fffb2a0feb4,40661842,0,0x0,8
tick,0x7fffb2a0feb4,40677871,0,0x0,8
tick,0x7fffb2a0feb4,40693846,0,0x0,8
tick,0x7fffb2a0feb4,40709869,0,0x0,8
tick,0x7fffb2a0feb4,40725825,0,0x0,8
tick,0x7fffb2a0feb4,40741792,0,0x0,8
tick,0x7fffb2a0feb4,40757833,0,0x0,8
tick,0x7fffb2a0feb4,40773784,0,0x0,8
tick,0x7fffb2a0feb4,40788851,0,0x0,8
tick,0x7fffb2a0feb4,40803839,0,0x0,8
tick,0x7fffb2a0feb4,40819838,0,0x0,8
tick,0x7fffb2a0feb4,40835845,0,0x0,8
tick,0x7fffb2a0feb4,40851822,0,0x0,8
tick,0x7fffb2a0feb4,40867791,0,0x0,8
tick,0x7fffb2a0feb4,40882795,0,0x0,8
tick,0x7fffb2a0feb4,40898788,0,0x0,8
tick,0x7fffb2a0feb4,40914791,0,0x0,8
tick,0x7fffb2a0feb4,40930844,0,0x0,8
tick,0x7fffb2a0feb4,40946832,0,0x0,8
tick,0x7fffb2a0feb4,40962861,0,0x0,8
tick,0x7fffb2a0feb4,40978802,0,0x0,8
tick,0x7fffb2a0feb4,40994838,0,0x0,8
tick,0x7fffb2a0feb4,41010806,0,0x0,8
tick,0x7fffb2a0feb4,41026840,0,0x0,8
tick,0x7fffb2a0feb4,41042784,0,0x0,8
tick,0x7fffb2a0feb4,41057835,0,0x0,8
tick,0x7fffb2a0feb4,41073788,0,0x0,8
tick,0x7fffb2a0feb4,41089789,0,0x0,8
tick,0x7fffb2a0feb4,41105833,0,0x0,8
tick,0x7fffb2a0feb4,41121844,0,0x0,8
tick,0x7fffb2a0feb4,41137834,0,0x0,8
tick,0x7fffb2a0feb4,41153845,0,0x0,8
tick,0x7fffb2a0feb4,41169752,0,0x0,8
tick,0x7fffb2a0feb4,41185783,0,0x0,8
tick,0x7fffb2a0feb4,41201819,0,0x0,8
tick,0x7fffb2a0feb4,41217839,0,0x0,8
tick,0x7fffb2a0feb4,41233834,0,0x0,8
tick,0x7fffb2a0feb4,41249874,0,0x0,8
tick,0x7fffb2a0feb4,41265786,0,0x0,8
tick,0x7fffb2a0feb4,41281847,0,0x0,8
tick,0x7fffb2a0feb4,41297837,0,0x0,8
tick,0x7fffb2a0feb4,41313848,0,0x0,8
tick,0x7fffb2a0feb4,41329787,0,0x0,8
tick,0x7fffb2a0feb4,41345795,0,0x0,8
tick,0x7fffb2a0feb4,41361793,0,0x0,8
tick,0x7fffb2a0feb4,41377811,0,0x0,8
tick,0x7fffb2a0feb4,41393808,0,0x0,8
tick,0x7fffb2a0feb4,41409864,0,0x0,8
tick,0x7fffb2a0feb4,41425860,0,0x0,8
tick,0x7fffb2a0feb4,41440830,0,0x0,8
tick,0x7fffb2a0feb4,41455825,0,0x0,8
tick,0x7fffb2a0feb4,41470867,0,0x0,8
tick,0x7fffb2a0feb4,41486826,0,0x0,8
tick,0x7fffb2a0feb4,41502262,0,0x0,8
tick,0x7fffb2a0feb4,41517876,0,0x0,8
tick,0x7fffb2a0feb4,41533866,0,0x0,8
tick,0x7fffb2a0feb4,41548844,0,0x0,8
tick,0x7fffb2a0feb4,41564836,0,0x0,8
tick,0x7fffb2a0feb4,41580836,0,0x0,8
tick,0x7fffb2a0feb4,41596830,0,0x0,8
tick,0x7fffb2a0feb4,41611800,0,0x0,8
tick,0x7fffb2a0feb4,41627921,0,0x0,8
tick,0x7fffb2a0feb4,41643836,0,0x0,8
tick,0x7fffb2a0feb4,41659846,0,0x0,8
tick,0x7fffb2a0feb4,41675823,0,0x0,8
tick,0x7fffb2a0feb4,41690855,0,0x0,8
tick,0x7fffb2a0feb4,41706837,0,0x0,8
tick,0x7fffb2a0feb4,41722869,0,0x0,8
tick,0x7fffb2a0feb4,41738873,0,0x0,8
tick,0x7fffb2a0feb4,41754921,0,0x0,8
tick,0x7fffb2a0feb4,41770921,0,0x0,8
tick,0x7fffb2a0feb4,41786891,0,0x0,8
tick,0x7fffb2a0feb4,41802852,0,0x0,8
tick,0x7fffb2a0feb4,41818869,0,0x0,8
tick,0x7fffb2a0feb4,41834863,0,0x0,8
tick,0x7fffb2a0feb4,41850879,0,0x0,8
tick,0x7fffb2a0feb4,41866840,0,0x0,8
tick,0x7fffb2a0feb4,41882739,0,0x0,8
tick,0x7fffb2a0feb4,41897722,0,0x0,8
tick,0x7fffb2a0feb4,41913762,0,0x0,8
tick,0x7fffb2a0feb4,41929836,0,0x0,8
tick,0x7fffb2a0feb4,41945873,0,0x0,8
tick,0x7fffb2a0feb4,41961867,0,0x0,8
tick,0x7fffb2a0feb4,41977869,0,0x0,8
tick,0x7fffb2a0feb4,41992884,0,0x0,8
tick,0x7fffb2a0feb4,42008883,0,0x0,8
tick,0x7fffb2a0feb4,42023868,0,0x0,8
tick,0x7fffb2a0feb4,42039880,0,0x0,8
tick,0x7fffb2a0feb4,42055839,0,0x0,8
tick,0x7fffb2a0feb4,42071868,0,0x0,8
tick,0x7fffb2a0feb4,42087887,0,0x0,8
tick,0x7fffb2a0feb4,42103830,0,0x0,8
tick,0x7fffb2a0feb4,42119800,0,0x0,8
tick,0x7fffb2a0feb4,42135829,0,0x0,8
tick,0x7fffb2a0feb4,42151797,0,0x0,8
tick,0x7fffb2a0feb4,42167851,0,0x0,8
tick,0x7fffb2a0feb4,42183840,0,0x0,8
tick,0x7fffb2a0feb4,42199868,0,0x0,8
tick,0x7fffb2a0feb4,42215842,0,0x0,8
tick,0x7fffb2a0feb4,42231810,0,0x0,8
tick,0x7fffb2a0feb4,42247786,0,0x0,8
tick,0x7fffb2a0feb4,42263820,0,0x0,8
tick,0x7fffb2a0feb4,42279796,0,0x0,8
tick,0x7fffb2a0feb4,42295833,0,0x0,8
tick,0x7fffb2a0feb4,42311788,0,0x0,8
tick,0x7fffb2a0feb4,42327814,0,0x0,8
tick,0x7fffb2a0feb4,42343789,0,0x0,8
tick,0x7fffb2a0feb4,42359816,0,0x0,8
tick,0x7fffb2a0feb4,42375809,0,0x0,8
tick,0x7fffb2a0feb4,42391908,0,0x0,8
tick,0x7fffb2a0feb4,42407805,0,0x0,8
tick,0x7fffb2a0feb4,42423876,0,0x0,8
tick,0x7fffb2a0feb4,42439814,0,0x0,8
tick,0x7fffb2a0feb4,42455733,0,0x0,8
tick,0x7fffb2a0feb4,42471716,0,0x0,8
tick,0x7fffb2a0feb4,42487746,0,0x0,8
tick,0x7fffb2a0feb4,42503816,0,0x0,8
tick,0x7fffb2a0feb4,42519744,0,0x0,8
tick,0x7fffb2a0feb4,42535727,0,0x0,8
tick,0x7fffb2a0feb4,42551855,0,0x0,8
tick,0x7fffb2a0feb4,42567060,0,0x0,8
tick,0x7fffb2a0feb4,42583070,0,0x0,8
tick,0x7fffb2a0feb4,42599088,0,0x0,8
tick,0x7fffb2a0feb4,42614990,0,0x0,8
tick,0x7fffb2a0feb4,42630984,0,0x0,8
tick,0x7fffb2a0feb4,42646987,0,0x0,8
tick,0x7fffb2a0feb4,42662199,0,0x0,8
tick,0x7fffb2a0feb4,42677817,0,0x0,8
tick,0x7fffb2a0feb4,42693818,0,0x0,8
tick,0x7fffb2a0feb4,42709555,0,0x0,8
tick,0x7fffb2a0feb4,42724825,0,0x0,8
tick,0x7fffb2a0feb4,42740831,0,0x0,8
tick,0x7fffb2a0feb4,42756759,0,0x0,8
tick,0x7fffb2a0feb4,42772817,0,0x0,8
tick,0x7fffb2a0feb4,42788785,0,0x0,8
tick,0x7fffb2a0feb4,42803810,0,0x0,8
tick,0x7fffb2a0feb4,42818788,0,0x0,8
tick,0x7fffb2a0feb4,42833827,0,0x0,8
tick,0x7fffb2a0feb4,42848833,0,0x0,8
tick,0x7fffb2a0feb4,42863868,0,0x0,8
tick,0x7fffb2a0feb4,42879833,0,0x0,8
tick,0x7fffb2a0feb4,42895866,0,0x0,8
tick,0x7fffb2a0feb4,42911828,0,0x0,8
tick,0x7fffb2a0feb4,42927768,0,0x0,8
tick,0x7fffb2a0feb4,42943779,0,0x0,8
tick,0x7fffb2a0feb4,42959854,0,0x0,8
tick,0x7fffb2a0feb4,42975828,0,0x0,8
tick,0x7fffb2a0feb4,42991847,0,0x0,8
tick,0x7fffb2a0feb4,43007829,0,0x0,8
tick,0x7fffb2a0feb4,43023795,0,0x0,8
tick,0x7fffb2a0feb4,43039790,0,0x0,8
tick,0x7fffb2a0feb4,43055783,0,0x0,8
tick,0x7fffb2a0feb4,43071799,0,0x0,8
tick,0x7fffb2a0feb4,43087810,0,0x0,8
tick,0x7fffb2a0feb4,43103829,0,0x0,8
tick,0x7fffb2a0feb4,43118816,0,0x0,8
tick,0x7fffb2a0feb4,43133802,0,0x0,8
tick,0x7fffb2a0feb4,43148841,0,0x0,8
tick,0x7fffb2a0feb4,43164806,0,0x0,8
tick,0x7fffb2a0feb4,43180837,0,0x0,8
tick,0x7fffb2a0feb4,43196806,0,0x0,8
tick,0x7fffb2a0feb4,43212851,0,0x0,8
tick,0x7fffb2a0feb4,43228829,0,0x0,8
tick,0x7fffb2a0feb4,43244832,0,0x0,8
tick,0x7fffb2a0feb4,43260820,0,0x0,8
tick,0x7fffb2a0feb4,43276756,0,0x0,8
tick,0x7fffb2a0feb4,43292748,0,0x0,8
tick,0x7fffb2a0feb4,43308793,0,0x0,8
tick,0x7fffb2a0feb4,43324774,0,0x0,8
tick,0x7fffb2a0feb4,43339843,0,0x0,8
tick,0x7fffb2a0feb4,43355788,0,0x0,8
tick,0x7fffb2a0feb4,43371837,0,0x0,8
tick,0x7fffb2a0feb4,43387833,0,0x0,8
tick,0x7fffb2a0feb4,43403836,0,0x0,8
tick,0x7fffb2a0feb4,43419834,0,0x0,8
tick,0x7fffb2a0feb4,43435866,0,0x0,8
tick,0x7fffb2a0feb4,43451857,0,0x0,8
tick,0x7fffb2a0feb4,43467848,0,0x0,8
tick,0x7fffb2a0feb4,43483829,0,0x0,8
tick,0x7fffb2a0feb4,43499820,0,0x0,8
tick,0x7fffb2a0feb4,43515848,0,0x0,8
tick,0x7fffb2a0feb4,43531850,0,0x0,8
tick,0x7fffb2a0feb4,43547865,0,0x0,8
tick,0x7fffb2a0feb4,43563863,0,0x0,8
tick,0x7fffb2a0feb4,43579821,0,0x0,8
tick,0x7fffb2a0feb4,43595845,0,0x0,8
tick,0x7fffb2a0feb4,43611775,0,0x0,8
tick,0x7fffb2a0feb4,43627870,0,0x0,8
tick,0x7fffb2a0feb4,43643839,0,0x0,8
tick,0x7fffb2a0feb4,43659872,0,0x0,8
tick,0x7fffb2a0feb4,43674984,0,0x0,8
tick,0x7fffb2a0feb4,43690856,0,0x0,8
tick,0x7fffb2a0feb4,43706237,0,0x0,8
tick,0x7fffb2a0feb4,43721863,0,0x0,8
tick,0x7fffb2a0feb4,43737761,0,0x0,8
tick,0x7fffb2a0feb4,43753784,0,0x0,8
tick,0x7fffb2a0feb4,43769776,0,0x0,8
tick,0x7fffb2a0feb4,43785908,0,0x0,8
tick,0x7fffb2a0feb4,43801856,0,0x0,8
tick,0x7fffb2a0feb4,43817877,0,0x0,8
tick,0x7fffb2a0feb4,43833848,0,0x0,8
tick,0x7fffb2a0feb4,43848863,0,0x0,8
tick,0x7fffb2a0feb4,43864871,0,0x0,8
tick,0x7fffb2a0feb4,43880854,0,0x0,8
tick,0x7fffb2a0feb4,43896522,0,0x0,8
tick,0x7fffb2a0feb4,43911877,0,0x0,8
tick,0x7fffb2a0feb4,43927840,0,0x0,8
tick,0x7fffb2a0feb4,43943872,0,0x0,8
tick,0x7fffb2a0feb4,43959562,0,0x0,8
tick,0x7fffb2a0feb4,43975597,0,0x0,8
tick,0x7fffb2a0feb4,43990593,0,0x0,8
tick,0x7fffb2a0feb4,44006597,0,0x0,8
tick,0x7fffb2a0feb4,44022604,0,0x0,8
tick,0x7fffb2a0feb4,44038596,0,0x0,8
tick,0x7fffb2a0feb4,44053865,0,0x0,8
tick,0x7fffb2a0feb4,44069880,0,0x0,8
tick,0x7fffb2a0feb4,44084872,0,0x0,8
tick,0x7fffb2a0feb4,44100924,0,0x0,8
tick,0x7fffb2a0feb4,44116845,0,0x0,8
tick,0x7fffb2a0feb4,44132862,0,0x0,8
tick,0x7fffb2a0feb4,44147853,0,0x0,8
tick,0x7fffb2a0feb4,44163857,0,0x0,8
tick,0x7fffb2a0feb4,44179884,0,0x0,8
tick,0x7fffb2a0feb4,44195869,0,0x0,8
tick,0x7fffb2a0feb4,44211840,0,0x0,8
tick,0x7fffb2a0feb4,44226864,0,0x0,8
tick,0x7fffb2a0feb4,44242852,0,0x0,8
tick,0x7fffb2a0feb4,44258914,0,0x0,8
tick,0x7fffb2a0feb4,44274829,0,0x0,8
tick,0x7fffb2a0feb4,44289862,0,0x0,8
tick,0x7fffb2a0feb4,44305825,0,0x0,8
tick,0x7fffb2a0feb4,44321856,0,0x0,8
tick,0x7fffb2a0feb4,44337780,0,0x0,8
tick,0x7fffb2a0feb4,44353801,0,0x0,8
tick,0x7fffb2a0feb4,44369787,0,0x0,8
tick,0x7fffb2a0feb4,44385865,0,0x0,8
tick,0x7fffb2a0feb4,44401839,0,0x0,8
tick,0x7fffb2a0feb4,44417858,0,0x0,8
tick,0x7fffb2a0feb4,44433831,0,0x0,8
tick,0x7fffb2a0feb4,44449763,0,0x0,8
tick,0x7fffb2a0feb4,44465747,0,0x0,8
tick,0x7fffb2a0feb4,44481857,0,0x0,8
tick,0x7fffb2a0feb4,44497857,0,0x0,8
tick,0x7fffb2a0feb4,44512865,0,0x0,8
tick,0x7fffb2a0feb4,44528826,0,0x0,8
tick,0x7fffb2a0feb4,44544880,0,0x0,8
tick,0x7fffb2a0feb4,44560822,0,0x0,8
tick,0x7fffb2a0feb4,44576855,0,0x0,8
tick,0x7fffb2a0feb4,44592835,0,0x0,8
tick,0x7fffb2a0feb4,44608863,0,0x0,8
tick,0x7fffb2a0feb4,44624883,0,0x0,8
tick,0x7fffb2a0feb4,44640931,0,0x0,8
tick,0x7fffb2a0feb4,44656200,0,0x0,8
tick,0x7fffb2a0feb4,44671804,0,0x0,8
tick,0x7fffb2a0feb4,44687346,0,0x0,8
tick,0x7fffb2a0feb4,44702864,0,0x0,8
tick,0x7fffb2a0feb4,44718838,0,0x0,8
tick,0x7fffb2a0feb4,44734883,0,0x0,8
tick,0x7fffb2a0feb4,44750824,0,0x0,8
tick,0x7fffb2a0feb4,44766898,0,0x0,8
tick,0x7fffb2a0feb4,44782098,0,0x0,8
tick,0x7fffb2a0feb4,44797943,0,0x0,8
tick,0x7fffb2a0feb4,44813885,0,0x0,8
tick,0x7fffb2a0feb4,44829926,0,0x0,8
tick,0x7fffb2a0feb4,44845764,0,0x0,8
tick,0x7fffb2a0feb4,44861864,0,0x0,8
tick,0x7fffb2a0feb4,44877830,0,0x0,8
tick,0x7fffb2a0feb4,44892988,0,0x0,8
tick,0x7fffb2a0feb4,44908828,0,0x0,8
tick,0x7fffb2a0feb4,44924899,0,0x0,8
tick,0x7fffb2a0feb4,44940816,0,0x0,8
tick,0x7fffb2a0feb4,44956840,0,0x0,8
tick,0x7fffb2a0feb4,44972834,0,0x0,8
tick,0x7fffb2a0feb4,44988854,0,0x0,8
tick,0x7fffb2a0feb4,45003838,0,0x0,8
tick,0x7fffb2a0feb4,45019858,0,0x0,8
tick,0x7fffb2a0feb4,45035865,0,0x0,8
tick,0x7fffb2a0feb4,45051816,0,0x0,8
tick,0x7fffb2a0feb4,45067227,0,0x0,8
tick,0x7fffb2a0feb4,45083233,0,0x0,8
tick,0x7fffb2a0feb4,45098809,0,0x0,8
tick,0x7fffb2a0feb4,45114865,0,0x0,8
tick,0x7fffb2a0feb4,45130930,0,0x0,8
tick,0x7fffb2a0feb4,45146870,0,0x0,8
tick,0x7fffb2a0feb4,45161849,0,0x0,8
tick,0x7fffb2a0feb4,45177878,0,0x0,8
tick,0x7fffb2a0feb4,45193880,0,0x0,8
tick,0x7fffb2a0feb4,45209889,0,0x0,8
tick,0x7fffb2a0feb4,45225838,0,0x0,8
tick,0x7fffb2a0feb4,45241781,0,0x0,8
tick,0x7fffb2a0feb4,45257811,0,0x0,8
tick,0x7fffb2a0feb4,45273831,0,0x0,8
tick,0x7fffb2a0feb4,45289845,0,0x0,8
tick,0x7fffb2a0feb4,45305790,0,0x0,8
tick,0x7fffb2a0feb4,45321769,0,0x0,8
tick,0x7fffb2a0feb4,45337853,0,0x0,8
tick,0x7fffb2a0feb4,45353833,0,0x0,8
tick,0x7fffb2a0feb4,45369843,0,0x0,8
tick,0x7fffb2a0feb4,45385771,0,0x0,8
tick,0x7fffb2a0feb4,45400794,0,0x0,8
tick,0x7fffb2a0feb4,45416843,0,0x0,8
tick,0x7fffb2a0feb4,45432818,0,0x0,8
tick,0x7fffb2a0feb4,45448823,0,0x0,8
tick,0x7fffb2a0feb4,45464890,0,0x0,8
tick,0x7fffb2a0feb4,45480887,0,0x0,8
tick,0x7fffb2a0feb4,45496854,0,0x0,8
tick,0x7fffb2a0feb4,45512832,0,0x0,8
tick,0x7fffb2a0feb4,45528849,0,0x0,8
tick,0x7fffb2a0feb4,45544840,0,0x0,8
tick,0x7fffb2a0feb4,45560847,0,0x0,8
tick,0x7fffb2a0feb4,45575757,0,0x0,8
tick,0x7fffb2a0feb4,45591860,0,0x0,8
tick,0x7fffb2a0feb4,45607834,0,0x0,8
tick,0x7fffb2a0feb4,45623871,0,0x0,8
tick,0x7fffb2a0feb4,45639840,0,0x0,8
tick,0x7fffb2a0feb4,45655883,0,0x0,8
tick,0x7fffb2a0feb4,45671844,0,0x0,8
tick,0x7fffb2a0feb4,45687849,0,0x0,8
tick,0x7fffb2a0feb4,45703832,0,0x0,8
tick,0x7fffb2a0feb4,45718861,0,0x0,8
tick,0x7fffb2a0feb4,45734835,0,0x0,8
tick,0x7fffb2a0feb4,45750876,0,0x0,8
tick,0x7fffb2a0feb4,45766843,0,0x0,8
tick,0x7fffb2a0feb4,45782866,0,0x0,8
tick,0x7fffb2a0feb4,45798865,0,0x0,8
tick,0x7fffb2a0feb4,45814860,0,0x0,8
tick,0x7fffb2a0feb4,45830840,0,0x0,8
tick,0x7fffb2a0feb4,45846779,0,0x0,8
tick,0x7fffb2a0feb4,45862760,0,0x0,8
tick,0x7fffb2a0feb4,45878771,0,0x0,8
tick,0x7fffb2a0feb4,45894778,0,0x0,8
tick,0x7fffb2a0feb4,45910853,0,0x0,8
tick,0x7fffb2a0feb4,45926825,0,0x0,8
tick,0x7fffb2a0feb4,45942894,0,0x0,8
tick,0x7fffb2a0feb4,45958846,0,0x0,8
tick,0x7fffb2a0feb4,45974870,0,0x0,8
tick,0x7fffb2a0feb4,45990836,0,0x0,8
tick,0x7fffb2a0feb4,46006865,0,0x0,8
tick,0x7fffb2a0feb4,46022863,0,0x0,8
tick,0x7fffb2a0feb4,46038861,0,0x0,8
tick,0x7fffb2a0feb4,46053827,0,0x0,8
tick,0x7fffb2a0feb4,46069865,0,0x0,8
tick,0x7fffb2a0feb4,46085849,0,0x0,8
tick,0x7fffb2a0feb4,46101926,0,0x0,8
tick,0x7fffb2a0feb4,46117825,0,0x0,8
tick,0x7fffb2a0feb4,46133866,0,0x0,8
tick,0x7fffb2a0feb4,46149825,0,0x0,8
tick,0x7fffb2a0feb4,46165858,0,0x0,8
tick,0x7fffb2a0feb4,46180844,0,0x0,8
tick,0x7fffb2a0feb4,46195870,0,0x0,8
tick,0x7fffb2a0feb4,46210885,0,0x0,8
tick,0x7fffb2a0feb4,46226807,0,0x0,8
tick,0x7fffb2a0feb4,46242792,0,0x0,8
tick,0x7fffb2a0feb4,46258829,0,0x0,8
tick,0x7fffb2a0feb4,46274785,0,0x0,8
tick,0x7fffb2a0feb4,46290859,0,0x0,8
tick,0x7fffb2a0feb4,46306837,0,0x0,8
tick,0x7fffb2a0feb4,46322843,0,0x0,8
tick,0x7fffb2a0feb4,46338849,0,0x0,8
tick,0x7fffb2a0feb4,46354853,0,0x0,8
tick,0x7fffb2a0feb4,46370815,0,0x0,8
tick,0x7fffb2a0feb4,46386787,0,0x0,8
tick,0x7fffb2a0feb4,46402823,0,0x0,8
tick,0x7fffb2a0feb4,46418845,0,0x0,8
tick,0x7fffb2a0feb4,46434752,0,0x0,8
tick,0x7fffb2a0feb4,46450793,0,0x0,8
tick,0x7fffb2a0feb4,46466826,0,0x0,8
tick,0x7fffb2a0feb4,46482798,0,0x0,8
tick,0x7fffb2a0feb4,46498784,0,0x0,8
tick,0x7fffb2a0feb4,46514808,0,0x0,8
tick,0x7fffb2a0feb4,46530840,0,0x0,8
tick,0x7fffb2a0feb4,46546848,0,0x0,8
tick,0x7fffb2a0feb4,46562836,0,0x0,8
tick,0x7fffb2a0feb4,46578863,0,0x0,8
tick,0x7fffb2a0feb4,46594795,0,0x0,8
tick,0x7fffb2a0feb4,46610805,0,0x0,8
tick,0x7fffb2a0feb4,46626778,0,0x0,8
tick,0x7fffb2a0feb4,46641839,0,0x0,8
tick,0x7fffb2a0feb4,46657837,0,0x0,8
code-creation,LazyCompile,10,46671605,0x23ad592c10e,197, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:16:21,0x1ff5946a420,~
code-source-info,0x23ad592c10e,137,306,794,C0O346C5O352C14O394C19O400C28O441C41O441C48O474C52O492C56O504C61O509C66O543C76O543C81O559C82O585C87O592C97O592C103O608C111O609C117O647C122O654C146O654C152O709C157O715C164O738C170O753C176O725C180O775C190O775C196O793,,
code-creation,LazyCompile,10,46671784,0x23ad592c4ce,130,randomBytes node:internal/crypto/random:90:21,0x38a7b57dca0,~
code-source-info,0x23ad592c4ce,209,2036,2565,C0O2036C12O2058C22O2088C29O2065C36O2102C40O2137C50O2137C54O2187C63O2187C68O2187C70O2214C74O2249C82O2268C92O2249C97O2291C99O2302C100O2382C108O2397C115O2408C123O2382C129O2564,,
code-creation,LazyCompile,10,46671854,0x2b515b97806,131,assertSize node:internal/crypto/random:74:20,0x38a7b57dc50,~
code-source-info,0x2b515b97806,209,1556,2012,C0O1597C8O1597C13O1630C15O1638C23O1656C28O1660C36O1688C38O1686C44O1715C49O1727C62O1808C74O1733C79O1727C80O1847C82O1856C88O1865C93O1882C106O1932C113O1947C119O1888C124O1882C125O1968C127O1980C130O1986,,
code-creation,LazyCompile,10,46671949,0x2b515b97a56,190,randomFillSync node:internal/crypto/random:110:24,0x38a7b57dd18,~
code-source-info,0x2b515b97a56,209,2592,3269,C16O2621C21O2626C29O2652C32O2652C38O2683C56O2689C61O2683C62O2819C71O2848C74O2895C85O2857C91O2913C95O2955C102O2966C108O2993C111O3042C125O3000C131O3065C132O3074C137O3086C139O3097C140O3115C147O3140C161O3115C167O3212C172O3212C178O3217C182O3225C184O3239C186O3239C187O3255C189O3266,,
code-creation,LazyCompile,10,46672015,0x2b515b97c8e,98,assertOffset node:internal/crypto/random:62:22,0x38a7b57dc00,~
code-source-info,0x2b515b97c8e,209,1178,1533,C0O1213C8O1213C13O1250C15O1260C23O1296C30O1312C33O1296C39O1336C44O1340C52O1370C58O1392C63O1404C76O1455C86O1410C91O1404C92O1487C94O1501C97O1507,,
code-creation,LazyCompile,10,46672162,0x2b515b97dee,12,slice node:buffer:642:12,0x6682ea7110,~
code-source-info,0x2b515b97dee,18,19246,19294,C0O19271C5O19271C11O19294,,
code-creation,LazyCompile,10,46672238,0x2b515b97f6e,164,pbkdf2Sync node:internal/crypto/pbkdf2:68:20,0x38a7b57e800,~
code-source-info,0x2b515b97f6e,210,1464,1978,C0O1514C18O1569C24O1517C30O1527C36O1533C42O1545C48O1553C54O1638C61O1658C81O1638C87O1783C92O1783C97O1760C103O1768C110O1793C114O1821C116O1821C117O1849C122O1856C127O1856C133O1890C138O1890C142O1915C144O1931C153O1956C158O1956C163O1975,,
code-creation,LazyCompile,10,46672296,0x2b515b98636,112,check node:internal/crypto/pbkdf2:89:15,0x38a7b57e850,~
code-source-info,0x2b515b98636,210,1996,2336,C0O2046C8O2046C13O2085C21O2096C28O2143C36O2150C43O2189C56O2189C61O2240C69O2240C74O2279C81O2288C87O2298C93O2304C99O2316C105O2324C111O2333,,
code-creation,LazyCompile,10,46672349,0x2b515b9882e,86, node:internal/crypto/util:114:46,0x38a7b57fdc0,~
code-source-info,0x2b515b9882e,211,2560,3045,C0O2593C5O2597C11O2628C13O2642C14O2646C20O2685C22O2698C27O2719C31O2743C36O2757C41O2757C47O2780C48O2789C53O2794C59O2828C64O2867C77O2834C82O2828C83O3028C85O3042,,
tick,0x7ff6a77e2138,46673939,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x23ad592c1a0,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7db6,46689928,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x23ad592c1a0,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b25,46705938,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x23ad592c1a0,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,10,46715565,0x2b515b98afe,135,fromArrayBuffer node:buffer:448:25,0x6682ea5e68,~
code-source-info,0x2b515b98afe,18,13364,14066,C0O13431C4O13468C9O13501C11O13514C15O13532C20O13536C26O13568C29O13616C36O13627C40O13646C41O13660C46O13670C56O13676C61O13670C62O13721C66O13754C73O13839C75O13848C79O13862C80O13873C85O13887C87O13898C92O13920C102O13926C107O13920C110O13987C113O14016C129O14023C134O14063,,
code-creation,LazyCompile,10,46715647,0x2b515b98c86,3,getDefaultEncoding node:internal/crypto/util:80:28,0x38a7b57f780,~
code-source-info,0x2b515b98c86,211,1549,1583,C0O1557C2O1580,,
code-creation,LazyCompile,10,46715993,0x2b515b99326,183,fresh C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\fresh\\index.js:33:16,0x18ab9850db8,~
code-source-info,0x2b515b99326,225,537,1800,C0O608C5O658C10O706C16O729C18O746C19O758C20O948C25O968C30O1018C35O1018C42O1044C43O1056C44O1083C50O1110C55O1146C60O1160C62O1179C63O1191C64O1219C66O1242C69O1242C74O1285C76O1300C80O1290C85O1333C87O1340C91O1350C93O1360C103O1387C106O1378C116O1402C122O1410C127O1430C129O1456C131O1309C136O1272C139O1481C143O1504C144O1516C145O1553C149O1607C154O1649C160O1668C168O1699C172O1696C177O1734C179O1761C180O1773C181O1787C182O1798,,
code-creation,LazyCompile,10,46716151,0x2b515b995ee,136,parseTokenList C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\fresh\\index.js:110:25,0x18ab9850e58,~
code-source-info,0x2b515b995ee,225,2199,2710,C0O2219C2O2234C5O2251C7O2288C9O2301C14O2311C16O2311C21O2341C26O2341C48O2391C50O2401C55O2422C57O2438C62O2460C64O2504C69O2513C74O2513C81O2504C86O2544C88O2560C93O2572C95O2601C97O2609C101O2621C103O2319C108O2275C111O2662C116O2671C121O2671C128O2662C133O2697C135O2708,,
code-creation,Function,11,46716244,0x225ca85fe60,860,parseTokenList C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\fresh\\index.js:110:25,0x18ab9850e58,^
code-source-info,0x225ca85fe60,225,2199,2710,,,
code-creation,Function,11,46716281,0x225ca860220,1628,onFinish node:internal/streams/writable:665:20,0x1129ffd2f10,^
code-source-info,0x225ca860220,56,20396,21140,,,
code-creation,Function,11,46716306,0x225ca8608e0,948,getStderr node:internal/bootstrap/switches/is_main_thread:133:19,0x1d24e4d2310,^
code-source-info,0x225ca8608e0,88,3772,4095,,,
code-creation,LazyCompile,10,46716381,0x2b515b99bce,129,removeHeader node:_http_outgoing:650:63,0x96d321c520,~
code-source-info,0x2b515b99bce,171,20433,21004,C0O20445C8O20445C13O20489C19O20505C29O20511C34O20505C35O20570C40O20570C45O20609C78O20655C79O20679C83O20694C85O20736C86O20757C90O20772C92O20817C93O20833C97O20848C99O20880C100O20894C104O20910C106O20927C108O20936C110O20935C115O20966C117O20978C119O20977C125O20991C128O21003,,
code-creation,LazyCompile,10,46716684,0x2b515b99fb6,26,Socket._write node:net:806:35,0x1129fffe960,~
code-source-info,0x2b515b99fb6,120,21501,21576,C0O21532C19O21532C25O21575,,
code-creation,LazyCompile,10,46716736,0x2b515b9a0e6,55,writeGeneric node:internal/stream_base_commons:151:22,0x1d24e4c36d0,~
code-source-info,0x2b515b9a0e6,84,3830,4020,C0O3874C5O3895C7O3894C11O3874C17O3925C29O3925C35O3967C47O3967C52O4006C54O4017,,
code-creation,LazyCompile,10,46716816,0x2b515b9a2b6,215,handleWriteReq node:internal/stream_base_commons:45:24,0x1d24e4c3570,~
code-source-info,0x2b515b9a2b6,84,1218,2083,C0O1253C5O1274C80O1347C85O1347C92O1378C99O1398C101O1397C106O1428C108O1439C112O1454C114O1465C115O1534C120O1534C126O1563C127O1622C132O1622C138O1649C139O1690C144O1690C150O1718C151O1820C156O1820C162O1847C163O1891C168O1898C173O1898C180O1946C185O1946C192O1979C199O1999C201O1998C206O2029C208O2040C212O2057C214O2068,,
tick,0x7fffb2a0feb4,46721951,0,0x0,8
tick,0x7fffb2a0feb4,46737990,0,0x0,8
tick,0x7fffb2a0feb4,46753968,0,0x0,8
tick,0x7fffb2a0feb4,46769997,0,0x0,8
tick,0x7fffb2a0feb4,46786018,0,0x0,8
tick,0x7fffb2a0feb4,46801828,0,0x0,8
tick,0x7fffb2a0feb4,46817834,0,0x0,8
tick,0x7fffb2a0feb4,46833842,0,0x0,8
tick,0x7fffb2a0feb4,46849918,0,0x0,8
tick,0x7fffb2a0feb4,46864848,0,0x0,8
tick,0x7fffb2a0feb4,46879819,0,0x0,8
tick,0x7fffb2a0feb4,46894897,0,0x0,8
tick,0x7fffb2a0feb4,46910850,0,0x0,8
tick,0x7fffb2a0feb4,46926839,0,0x0,8
tick,0x7fffb2a0feb4,46942834,0,0x0,8
tick,0x7fffb2a0feb4,46958856,0,0x0,8
tick,0x7fffb2a0feb4,46973736,0,0x0,8
tick,0x7fffb2a0feb4,46988779,0,0x0,8
tick,0x7fffb2a0feb4,47003757,0,0x0,8
tick,0x7fffb2a0feb4,47019800,0,0x0,8
tick,0x7fffb2a0feb4,47035764,0,0x0,8
tick,0x7fffb2a0feb4,47051809,0,0x0,8
tick,0x7fffb2a0feb4,47067790,0,0x0,8
tick,0x7fffb2a0feb4,47082816,0,0x0,8
tick,0x7fffb2a0feb4,47098790,0,0x0,8
tick,0x7fffb2a0feb4,47114818,0,0x0,8
tick,0x7fffb2a0feb4,47130843,0,0x0,8
tick,0x7fffb2a0feb4,47146858,0,0x0,8
tick,0x7fffb2a0feb4,47161769,0,0x0,8
tick,0x7fffb2a0feb4,47177783,0,0x0,8
tick,0x7fffb2a0feb4,47193778,0,0x0,8
tick,0x7fffb2a0feb4,47209822,0,0x0,8
tick,0x7fffb2a0feb4,47225820,0,0x0,8
tick,0x7fffb2a0feb4,47240813,0,0x0,8
tick,0x7fffb2a0feb4,47256824,0,0x0,8
tick,0x7fffb2a0feb4,47272857,0,0x0,8
tick,0x7fffb2a0feb4,47288820,0,0x0,8
tick,0x7fffb2a0feb4,47304855,0,0x0,8
tick,0x7fffb2a0feb4,47319830,0,0x0,8
tick,0x7fffb2a0feb4,47335833,0,0x0,8
tick,0x7fffb2a0feb4,47350840,0,0x0,8
tick,0x7fffb2a0feb4,47366846,0,0x0,8
tick,0x7fffb2a0feb4,47382777,0,0x0,8
tick,0x7fffb2a0feb4,47398796,0,0x0,8
tick,0x7fffb2a0feb4,47414789,0,0x0,8
tick,0x7fffb2a0feb4,47430859,0,0x0,8
tick,0x7fffb2a0feb4,47446790,0,0x0,8
tick,0x7fffb2a0feb4,47462152,0,0x0,8
tick,0x7fffb2a0feb4,47477829,0,0x0,8
tick,0x7fffb2a0feb4,47493801,0,0x0,8
tick,0x7fffb2a0feb4,47509827,0,0x0,8
tick,0x7fffb2a0feb4,47525804,0,0x0,8
tick,0x7fffb2a0feb4,47541794,0,0x0,8
tick,0x7fffb2a0feb4,47557814,0,0x0,8
tick,0x7fffb2a0feb4,47572965,0,0x0,8
tick,0x7fffb2a0feb4,47588860,0,0x0,8
tick,0x7fffb2a0feb4,47603618,0,0x0,8
tick,0x7fffb2a0feb4,47618840,0,0x0,8
tick,0x7fffb2a0feb4,47634837,0,0x0,8
tick,0x7ff6a7a572f2,47650856,0,0x0,6
tick,0x7fffb2a0feb4,47666852,0,0x0,8
tick,0x7fffb2a0feb4,47682842,0,0x0,8
tick,0x7fffb2a0feb4,47698840,0,0x0,8
tick,0x7fffb2a0feb4,47714779,0,0x0,8
tick,0x7fffb2a0feb4,47730749,0,0x0,8
tick,0x7fffb2a0feb4,47745756,0,0x0,8
tick,0x7fffb2a0feb4,47761765,0,0x0,8
tick,0x7fffb2a0feb4,47777798,0,0x0,8
tick,0x7fffb2a0feb4,47793393,0,0x0,8
tick,0x7fffb2a0feb4,47809416,0,0x0,8
tick,0x7fffb2a0feb4,47824837,0,0x0,8
tick,0x7fffb2a0feb4,47839887,0,0x0,8
tick,0x7fffb2a0feb4,47855850,0,0x0,8
tick,0x7fffb2a0feb4,47871874,0,0x0,8
tick,0x7fffb2a0feb4,47887838,0,0x0,8
tick,0x7fffb2a0feb4,47903849,0,0x0,8
tick,0x7fffb2a0feb4,47919385,0,0x0,8
tick,0x7fffb2a0feb4,47935393,0,0x0,8
tick,0x7fffb2a0feb4,47950380,0,0x0,8
tick,0x7fffb2a0feb4,47966438,0,0x0,8
tick,0x7fffb2a0feb4,47982424,0,0x0,8
tick,0x7fffb2a0feb4,47998461,0,0x0,8
tick,0x7fffb2a0feb4,48013831,0,0x0,8
tick,0x7fffb2a0feb4,48029858,0,0x0,8
tick,0x7fffb2a0feb4,48045831,0,0x0,8
tick,0x7fffb2a0feb4,48061870,0,0x0,8
tick,0x7fffb2a0feb4,48077835,0,0x0,8
tick,0x7fffb2a0feb4,48093822,0,0x0,8
tick,0x7fffb2a0feb4,48109962,0,0x0,8
tick,0x7fffb2a0feb4,48125960,0,0x0,8
tick,0x7fffb2a0feb4,48141821,0,0x0,8
tick,0x7fffb2a0feb4,48157864,0,0x0,8
tick,0x7fffb2a0feb4,48172827,0,0x0,8
tick,0x7fffb2a0feb4,48187857,0,0x0,8
tick,0x7fffb2a0feb4,48203847,0,0x0,8
tick,0x7fffb2a0feb4,48219856,0,0x0,8
tick,0x7fffb2a0feb4,48235830,0,0x0,8
tick,0x7fffb2a0feb4,48251845,0,0x0,8
tick,0x7fffb2a0feb4,48267867,0,0x0,8
tick,0x7fffb2a0feb4,48282885,0,0x0,8
tick,0x7fffb2a0feb4,48298844,0,0x0,8
tick,0x7fffb2a0feb4,48314875,0,0x0,8
tick,0x7fffb2a0feb4,48330837,0,0x0,8
tick,0x7fffb2a0feb4,48346888,0,0x0,8
tick,0x7fffb2a0feb4,48361850,0,0x0,8
tick,0x7fffb2a0feb4,48377804,0,0x0,8
tick,0x7fffb2a0feb4,48393792,0,0x0,8
tick,0x7fffb2a0feb4,48409823,0,0x0,8
tick,0x7fffb2a0feb4,48425863,0,0x0,8
tick,0x7fffb2a0feb4,48441818,0,0x0,8
tick,0x7fffb2a0feb4,48457810,0,0x0,8
tick,0x7fffb2a0feb4,48473830,0,0x0,8
tick,0x7fffb2a0feb4,48489815,0,0x0,8
tick,0x7fffb2a0feb4,48505840,0,0x0,8
tick,0x7fffb2a0feb4,48521841,0,0x0,8
tick,0x7fffb2a0feb4,48537810,0,0x0,8
tick,0x7fffb2a0feb4,48552861,0,0x0,8
tick,0x7fffb2a0feb4,48568835,0,0x0,8
tick,0x7fffb2a0feb4,48584833,0,0x0,8
tick,0x7fffb2a0feb4,48600853,0,0x0,8
tick,0x7fffb2a0feb4,48616822,0,0x0,8
tick,0x7fffb2a0feb4,48632767,0,0x0,8
tick,0x7fffb2a0feb4,48648789,0,0x0,8
tick,0x7fffb2a0feb4,48664804,0,0x0,8
tick,0x7fffb2a0feb4,48680774,0,0x0,8
tick,0x7fffb2a0feb4,48696843,0,0x0,8
tick,0x7fffb2a0feb4,48712823,0,0x0,8
tick,0x7fffb2a0feb4,48728747,0,0x0,8
tick,0x7fffb2a0feb4,48744834,0,0x0,8
tick,0x7fffb2a0feb4,48760820,0,0x0,8
tick,0x7fffb2a0feb4,48776761,0,0x0,8
tick,0x7fffb2a0feb4,48792857,0,0x0,8
tick,0x7fffb2a0feb4,48808832,0,0x0,8
tick,0x7fffb2a0feb4,48824848,0,0x0,8
tick,0x7fffb2a0feb4,48840865,0,0x0,8
tick,0x7fffb2a0feb4,48856859,0,0x0,8
tick,0x7fffb2a0feb4,48872838,0,0x0,8
tick,0x7fffb2a0feb4,48888853,0,0x0,8
tick,0x7fffb2a0feb4,48904886,0,0x0,8
tick,0x7fffb2a0feb4,48919849,0,0x0,8
tick,0x7fffb2a0feb4,48935819,0,0x0,8
tick,0x7fffb2a0feb4,48951859,0,0x0,8
tick,0x7fffb2a0feb4,48967856,0,0x0,8
tick,0x7fffb2a0feb4,48983806,0,0x0,8
tick,0x7fffb2a0feb4,48999847,0,0x0,8
tick,0x7fffb2a0feb4,49015823,0,0x0,8
tick,0x7fffb2a0feb4,49031792,0,0x0,8
tick,0x7fffb2a0feb4,49047816,0,0x0,8
tick,0x7fffb2a0feb4,49063805,0,0x0,8
tick,0x7fffb2a0feb4,49079852,0,0x0,8
tick,0x7fffb2a0feb4,49095830,0,0x0,8
tick,0x7fffb2a0feb4,49111850,0,0x0,8
tick,0x7fffb2a0feb4,49127847,0,0x0,8
tick,0x7fffb2a0feb4,49143852,0,0x0,8
tick,0x7fffb2a0feb4,49159964,0,0x0,8
tick,0x7fffb2a0feb4,49175846,0,0x0,8
tick,0x7fffb2a0feb4,49191836,0,0x0,8
tick,0x7fffb2a0feb4,49206846,0,0x0,8
tick,0x7fffb2a0feb4,49222842,0,0x0,8
tick,0x7fffb2a0feb4,49238867,0,0x0,8
tick,0x7fffb2a0feb4,49254834,0,0x0,8
tick,0x7fffb2a0feb4,49270843,0,0x0,8
tick,0x7fffb2a0feb4,49286837,0,0x0,8
tick,0x7fffb2a0feb4,49302860,0,0x0,8
tick,0x7fffb2a0feb4,49318855,0,0x0,8
tick,0x7fffb2a0feb4,49334858,0,0x0,8
tick,0x7fffb2a0feb4,49350828,0,0x0,8
tick,0x7fffb2a0feb4,49366856,0,0x0,8
tick,0x7fffb2a0feb4,49382838,0,0x0,8
tick,0x7fffb2a0feb4,49398856,0,0x0,8
tick,0x7fffb2a0feb4,49414851,0,0x0,8
tick,0x7fffb2a0feb4,49430857,0,0x0,8
tick,0x7fffb2a0feb4,49446754,0,0x0,8
tick,0x7fffb2a0feb4,49462777,0,0x0,8
tick,0x7fffb2a0feb4,49478771,0,0x0,8
tick,0x7fffb2a0feb4,49494795,0,0x0,8
tick,0x7fffb2a0feb4,49509836,0,0x0,8
tick,0x7fffb2a0feb4,49525521,0,0x0,8
tick,0x7fffb2a0feb4,49541513,0,0x0,8
tick,0x7fffb2a0feb4,49557534,0,0x0,8
tick,0x7fffb2a0feb4,49572504,0,0x0,8
tick,0x7fffb2a0feb4,49588513,0,0x0,8
tick,0x7fffb2a0feb4,49603509,0,0x0,8
tick,0x7fffb2a0feb4,49619525,0,0x0,8
tick,0x7fffb2a0feb4,49635532,0,0x0,8
tick,0x7fffb2a0feb4,49650522,0,0x0,8
tick,0x7fffb2a0feb4,49665843,0,0x0,8
tick,0x7fffb2a0feb4,49681850,0,0x0,8
tick,0x7fffb2a0feb4,49697867,0,0x0,8
tick,0x7fffb2a0feb4,49713696,0,0x0,8
tick,0x7fffb2a0feb4,49729674,0,0x0,8
tick,0x7fffb2a0feb4,49744827,0,0x0,8
tick,0x7fffb2a0feb4,49760831,0,0x0,8
tick,0x7fffb2a0feb4,49776867,0,0x0,8
tick,0x7fffb2a0feb4,49792840,0,0x0,8
tick,0x7fffb2a0feb4,49808847,0,0x0,8
tick,0x7fffb2a0feb4,49823843,0,0x0,8
tick,0x7fffb2a0feb4,49839876,0,0x0,8
tick,0x7fffb2a0feb4,49855837,0,0x0,8
tick,0x7fffb2a0feb4,49871849,0,0x0,8
tick,0x7fffb2a0feb4,49886846,0,0x0,8
tick,0x7fffb2a0feb4,49902687,0,0x0,8
tick,0x7fffb2a0feb4,49918652,0,0x0,8
tick,0x7fffb2a0feb4,49934682,0,0x0,8
tick,0x7fffb2a0feb4,49950660,0,0x0,8
tick,0x7fffb2a0feb4,49965702,0,0x0,8
tick,0x7fffb2a0feb4,49981735,0,0x0,8
tick,0x7fffb2a0feb4,49996848,0,0x0,8
tick,0x7fffb2a0feb4,50012840,0,0x0,8
tick,0x7fffb2a0feb4,50028878,0,0x0,8
tick,0x7fffb2a0feb4,50044844,0,0x0,8
tick,0x7fffb2a0feb4,50060867,0,0x0,8
tick,0x7fffb2a0feb4,50076851,0,0x0,8
tick,0x7fffb2a0feb4,50092846,0,0x0,8
tick,0x7fffb2a0feb4,50108827,0,0x0,8
tick,0x7fffb2a0feb4,50124855,0,0x0,8
tick,0x7fffb2a0feb4,50140826,0,0x0,8
tick,0x7fffb2a0feb4,50156816,0,0x0,8
tick,0x7fffb2a0feb4,50172837,0,0x0,8
tick,0x7fffb2a0feb4,50188856,0,0x0,8
tick,0x7fffb2a0feb4,50204838,0,0x0,8
tick,0x7fffb2a0feb4,50219842,0,0x0,8
tick,0x7fffb2a0feb4,50235870,0,0x0,8
tick,0x7fffb2a0feb4,50251848,0,0x0,8
tick,0x7fffb2a0feb4,50267810,0,0x0,8
tick,0x7fffb2a0feb4,50283850,0,0x0,8
tick,0x7fffb2a0feb4,50299820,0,0x0,8
tick,0x7fffb2a0feb4,50315370,0,0x0,8
tick,0x7fffb2a0feb4,50330820,0,0x0,8
tick,0x7fffb2a0feb4,50345840,0,0x0,8
tick,0x7fffb2a0feb4,50361831,0,0x0,8
tick,0x7fffb2a0feb4,50377836,0,0x0,8
tick,0x7fffb2a0feb4,50393840,0,0x0,8
tick,0x7fffb2a0feb4,50409420,0,0x0,8
tick,0x7fffb2a0feb4,50425440,0,0x0,8
tick,0x7fffb2a0feb4,50441415,0,0x0,8
tick,0x7fffb2a0feb4,50457396,0,0x0,8
tick,0x7fffb2a0feb4,50473427,0,0x0,8
tick,0x7fffb2a0feb4,50489393,0,0x0,8
tick,0x7fffb2a0feb4,50505434,0,0x0,8
tick,0x7fffb2a0feb4,50521417,0,0x0,8
tick,0x7fffb2a0feb4,50536845,0,0x0,8
tick,0x7fffb2a0feb4,50552825,0,0x0,8
tick,0x7fffb2a0feb4,50568873,0,0x0,8
tick,0x7fffb2a0feb4,50584897,0,0x0,8
tick,0x7fffb2a0feb4,50600856,0,0x0,8
tick,0x7fffb2a0feb4,50616414,0,0x0,8
tick,0x7fffb2a0feb4,50632431,0,0x0,8
tick,0x7fffb2a0feb4,50648401,0,0x0,8
tick,0x7fffb2a0feb4,50663837,0,0x0,8
tick,0x7fffb2a0feb4,50679145,0,0x0,8
tick,0x7fffb2a0feb4,50694847,0,0x0,8
tick,0x7fffb2a0feb4,50710824,0,0x0,8
tick,0x7fffb2a0feb4,50726863,0,0x0,8
tick,0x7fffb2a0feb4,50742838,0,0x0,8
tick,0x7fffb2a0feb4,50758855,0,0x0,8
tick,0x7fffb2a0feb4,50774825,0,0x0,8
tick,0x7fffb2a0feb4,50790849,0,0x0,8
tick,0x7fffb2a0feb4,50806839,0,0x0,8
tick,0x7fffb2a0feb4,50822847,0,0x0,8
tick,0x7fffb2a0feb4,50837844,0,0x0,8
tick,0x7fffb2a0feb4,50853866,0,0x0,8
tick,0x7fffb2a0feb4,50869833,0,0x0,8
tick,0x7fffb2a0feb4,50885851,0,0x0,8
tick,0x7fffb2a0feb4,50901854,0,0x0,8
tick,0x7fffb2a0feb4,50917863,0,0x0,8
tick,0x7fffb2a0feb4,50933874,0,0x0,8
tick,0x7fffb2a0feb4,50949878,0,0x0,8
tick,0x7fffb2a0feb4,50965871,0,0x0,8
tick,0x7fffb2a0feb4,50981873,0,0x0,8
tick,0x7fffb2a0feb4,50997903,0,0x0,8
tick,0x7fffb2a0feb4,51013847,0,0x0,8
tick,0x7fffb2a0feb4,51029841,0,0x0,8
tick,0x7fffb2a0feb4,51045850,0,0x0,8
tick,0x7fffb2a0feb4,51061823,0,0x0,8
tick,0x7fffb2a0feb4,51077842,0,0x0,8
tick,0x7fffb2a0feb4,51093829,0,0x0,8
tick,0x7fffb2a0feb4,51108841,0,0x0,8
tick,0x7fffb2a0feb4,51124867,0,0x0,8
tick,0x7fffb2a0feb4,51140839,0,0x0,8
tick,0x7fffb2a0feb4,51156776,0,0x0,8
tick,0x7fffb2a0feb4,51172788,0,0x0,8
tick,0x7fffb2a0feb4,51188778,0,0x0,8
tick,0x7fffb2a0feb4,51203810,0,0x0,8
tick,0x7fffb2a0feb4,51219812,0,0x0,8
tick,0x7fffb2a0feb4,51235842,0,0x0,8
tick,0x7fffb2a0feb4,51250827,0,0x0,8
tick,0x7fffb2a0feb4,51266843,0,0x0,8
tick,0x7fffb2a0feb4,51282817,0,0x0,8
tick,0x7fffb2a0feb4,51298883,0,0x0,8
tick,0x7fffb2a0feb4,51314855,0,0x0,8
tick,0x7fffb2a0feb4,51330836,0,0x0,8
tick,0x7fffb2a0feb4,51346827,0,0x0,8
tick,0x7fffb2a0feb4,51362809,0,0x0,8
tick,0x7fffb2a0feb4,51378818,0,0x0,8
tick,0x7fffb2a0feb4,51394833,0,0x0,8
tick,0x7fffb2a0feb4,51410869,0,0x0,8
tick,0x7fffb2a0feb4,51426848,0,0x0,8
tick,0x7fffb2a0feb4,51442839,0,0x0,8
tick,0x7fffb2a0feb4,51458846,0,0x0,8
tick,0x7fffb2a0feb4,51474817,0,0x0,8
tick,0x7fffb2a0feb4,51490845,0,0x0,8
tick,0x7fffb2a0feb4,51506809,0,0x0,8
tick,0x7fffb2a0feb4,51522851,0,0x0,8
tick,0x7fffb2a0feb4,51538855,0,0x0,8
tick,0x7fffb2a0feb4,51554876,0,0x0,8
tick,0x7fffb2a0feb4,51570851,0,0x0,8
tick,0x7fffb2a0feb4,51586871,0,0x0,8
tick,0x7fffb2a0feb4,51602881,0,0x0,8
tick,0x7fffb2a0feb4,51618894,0,0x0,8
tick,0x7fffb2a0feb4,51634832,0,0x0,8
tick,0x7fffb2a0feb4,51650851,0,0x0,8
tick,0x7fffb2a0feb4,51666844,0,0x0,8
tick,0x7fffb2a0feb4,51682866,0,0x0,8
tick,0x7fffb2a0feb4,51698825,0,0x0,8
tick,0x7fffb2a0feb4,51714857,0,0x0,8
tick,0x7ff6a7ac70a2,51730831,0,0x0,8
code-creation,LazyCompile,10,51730994,0x2b515b9a7de,84,Socket._onTimeout node:net:487:39,0x1129fffdd98,~
code-source-info,0x2b515b9a7de,120,13641,14152,C0O13669C5O13708C7O13713C9O13712C13O13738C14O13761C21O13768C23O13919C28O13951C30O13974C35O14003C37O14008C42O14029C46O14059C51O14059C55O14081C56O14088C57O14104C65O14104C69O14133C77O14133C83O14151,,
code-creation,LazyCompile,10,51731101,0x2b515b9a9de,105,socketOnTimeout node:_http_server:576:25,0x1129ffff4d8,~
code-source-info,0x2b515b9a9de,173,20273,20631,C0O20298C6O20313C11O20320C16O20352C18O20364C25O20380C33O20380C40O20423C45O20459C47O20470C55O20470C62O20523C67O20530C75O20530C82O20558C88O20578C92O20593C94O20618C99O20618C104O20630,,
tick,0x7fffb2a0feb4,51746857,0,0x0,8
tick,0x7fffb2a0feb4,51762847,0,0x0,8
tick,0x7fffb2a0feb4,51778860,0,0x0,8
tick,0x7fffb2a0feb4,51794838,0,0x0,8
tick,0x7fffb2a0feb4,51810802,0,0x0,8
tick,0x7fffb2a0feb4,51826779,0,0x0,8
tick,0x7fffb2a0feb4,51842808,0,0x0,8
tick,0x7fffb2a0feb4,51858880,0,0x0,8
tick,0x7fffb2a0feb4,51874713,0,0x0,8
tick,0x7fffb2a0feb4,51890700,0,0x0,8
tick,0x7fffb2a0feb4,51906732,0,0x0,8
tick,0x7fffb2a0feb4,51922708,0,0x0,8
tick,0x7fffb2a0feb4,51937868,0,0x0,8
tick,0x7fffb2a0feb4,51953844,0,0x0,8
tick,0x7fffb2a0feb4,51969854,0,0x0,8
tick,0x7fffb2a0feb4,51985859,0,0x0,8
tick,0x7fffb2a0feb4,52001856,0,0x0,8
tick,0x7fffb2a0feb4,52017848,0,0x0,8
tick,0x7fffb2a0feb4,52033839,0,0x0,8
tick,0x7fffb2a0feb4,52049843,0,0x0,8
tick,0x7fffb2a0feb4,52065888,0,0x0,8
tick,0x7fffb2a0feb4,52081865,0,0x0,8
tick,0x7fffb2a0feb4,52097814,0,0x0,8
tick,0x7fffb2a0feb4,52113749,0,0x0,8
tick,0x7fffb2a0feb4,52129781,0,0x0,8
tick,0x7fffb2a0feb4,52145771,0,0x0,8
tick,0x7fffb2a0feb4,52161758,0,0x0,8
tick,0x7fffb2a0feb4,52177781,0,0x0,8
tick,0x7fffb2a0feb4,52193799,0,0x0,8
tick,0x7fffb2a0feb4,52209772,0,0x0,8
tick,0x7fffb2a0feb4,52225851,0,0x0,8
tick,0x7fffb2a0feb4,52241771,0,0x0,8
tick,0x7fffb2a0feb4,52257860,0,0x0,8
tick,0x7fffb2a0feb4,52273851,0,0x0,8
tick,0x7fffb2a0feb4,52289858,0,0x0,8
tick,0x7fffb2a0feb4,52305820,0,0x0,8
tick,0x7fffb2a0feb4,52321942,0,0x0,8
tick,0x7fffb2a0feb4,52337823,0,0x0,8
tick,0x7fffb2a0feb4,52353852,0,0x0,8
tick,0x7fffb2a0feb4,52369831,0,0x0,8
tick,0x7fffb2a0feb4,52385864,0,0x0,8
tick,0x7fffb2a0feb4,52401815,0,0x0,8
tick,0x7fffb2a0feb4,52417864,0,0x0,8
tick,0x7fffb2a0feb4,52433829,0,0x0,8
tick,0x7fffb2a0feb4,52449824,0,0x0,8
tick,0x7fffb2a0feb4,52465841,0,0x0,8
tick,0x7fffb2a0feb4,52481828,0,0x0,8
tick,0x7fffb2a0feb4,52497163,0,0x0,8
tick,0x7fffb2a0feb4,52512906,0,0x0,8
tick,0x7fffb2a0feb4,52528818,0,0x0,8
tick,0x7fffb2a0feb4,52544855,0,0x0,8
tick,0x7fffb2a0feb4,52560817,0,0x0,8
tick,0x7fffb2a0feb4,52576824,0,0x0,8
tick,0x7fffb2a0feb4,52592822,0,0x0,8
tick,0x7fffb2a0feb4,52608857,0,0x0,8
tick,0x7fffb2a0feb4,52623998,0,0x0,8
tick,0x7fffb2a0feb4,52639829,0,0x0,8
tick,0x7fffb2a0feb4,52655831,0,0x0,8
tick,0x7fffb2a0feb4,52671834,0,0x0,8
tick,0x7fffb2a0feb4,52687819,0,0x0,8
tick,0x7fffb2a0feb4,52703838,0,0x0,8
tick,0x7fffb2a0feb4,52719815,0,0x0,8
tick,0x7fffb2a0feb4,52735852,0,0x0,8
tick,0x7fffb2a0feb4,52751814,0,0x0,8
tick,0x7fffb2a0feb4,52767841,0,0x0,8
tick,0x7fffb2a0feb4,52783813,0,0x0,8
tick,0x7fffb2a0feb4,52799836,0,0x0,8
tick,0x7fffb2a0feb4,52815825,0,0x0,8
tick,0x7fffb2a0feb4,52831866,0,0x0,8
tick,0x7fffb2a0feb4,52847787,0,0x0,8
tick,0x7fffb2a0feb4,52863787,0,0x0,8
tick,0x7fffb2a0feb4,52879795,0,0x0,8
tick,0x7fffb2a0feb4,52894835,0,0x0,8
tick,0x7fffb2a0feb4,52910819,0,0x0,8
tick,0x7fffb2a0feb4,52926840,0,0x0,8
tick,0x7fffb2a0feb4,52942843,0,0x0,8
tick,0x7fffb2a0feb4,52958856,0,0x0,8
tick,0x7fffb2a0feb4,52973823,0,0x0,8
tick,0x7fffb2a0feb4,52989824,0,0x0,8
tick,0x7fffb2a0feb4,53005835,0,0x0,8
tick,0x7fffb2a0feb4,53021833,0,0x0,8
tick,0x7fffb2a0feb4,53037810,0,0x0,8
tick,0x7fffb2a0feb4,53052988,0,0x0,8
tick,0x7fffb2a0feb4,53068973,0,0x0,8
tick,0x7fffb2a0feb4,53084848,0,0x0,8
tick,0x7fffb2a0feb4,53100828,0,0x0,8
tick,0x7fffb2a0feb4,53116849,0,0x0,8
tick,0x7fffb2a0feb4,53132769,0,0x0,8
tick,0x7fffb2a0feb4,53148859,0,0x0,8
tick,0x7fffb2a0feb4,53164775,0,0x0,8
tick,0x7fffb2a0feb4,53180850,0,0x0,8
tick,0x7fffb2a0feb4,53196853,0,0x0,8
tick,0x7fffb2a0feb4,53212830,0,0x0,8
tick,0x7fffb2a0feb4,53228812,0,0x0,8
tick,0x7fffb2a0feb4,53243813,0,0x0,8
tick,0x7fffb2a0feb4,53259805,0,0x0,8
tick,0x7fffb2a0feb4,53275836,0,0x0,8
tick,0x7fffb2a0feb4,53291820,0,0x0,8
tick,0x7fffb2a0feb4,53307030,0,0x0,8
tick,0x7fffb2a0feb4,53323040,0,0x0,8
tick,0x7fffb2a0feb4,53339002,0,0x0,8
tick,0x7fffb2a0feb4,53354827,0,0x0,8
tick,0x7fffb2a0feb4,53370845,0,0x0,8
tick,0x7fffb2a0feb4,53386818,0,0x0,8
tick,0x7fffb2a0feb4,53402404,0,0x0,8
tick,0x7fffb2a0feb4,53417848,0,0x0,8
tick,0x7fffb2a0feb4,53433839,0,0x0,8
tick,0x7fffb2a0feb4,53448968,0,0x0,8
tick,0x7fffb2a0feb4,53464763,0,0x0,8
tick,0x7fffb2a0feb4,53480767,0,0x0,8
tick,0x7fffb2a0feb4,53496798,0,0x0,8
tick,0x7fffb2a0feb4,53512812,0,0x0,8
tick,0x7fffb2a0feb4,53528843,0,0x0,8
tick,0x7fffb2a0feb4,53544929,0,0x0,8
tick,0x7fffb2a0feb4,53560838,0,0x0,8
tick,0x7fffb2a0feb4,53576831,0,0x0,8
tick,0x7fffb2a0feb4,53592037,0,0x0,8
tick,0x7fffb2a0feb4,53607860,0,0x0,8
tick,0x7fffb2a0feb4,53622994,0,0x0,8
tick,0x7fffb2a0feb4,53638963,0,0x0,8
tick,0x7fffb2a0feb4,53654840,0,0x0,8
tick,0x7fffb2a0feb4,53670816,0,0x0,8
tick,0x7fffb2a0feb4,53686724,0,0x0,8
tick,0x7fffb2a0feb4,53702718,0,0x0,8
tick,0x7fffb2a0feb4,53718734,0,0x0,8
tick,0x7fffb2a0feb4,53733772,0,0x0,8
tick,0x7fffb2a0feb4,53749813,0,0x0,8
tick,0x7fffb2a0feb4,53765770,0,0x0,8
tick,0x7fffb2a0feb4,53781806,0,0x0,8
tick,0x7fffb2a0feb4,53796818,0,0x0,8
tick,0x7fffb2a0feb4,53812753,0,0x0,8
tick,0x7fffb2a0feb4,53828813,0,0x0,8
tick,0x7fffb2a0feb4,53844904,0,0x0,8
tick,0x7fffb2a0feb4,53860840,0,0x0,8
tick,0x7fffb2a0feb4,53876879,0,0x0,8
tick,0x7fffb2a0feb4,53892860,0,0x0,8
tick,0x7fffb2a0feb4,53908867,0,0x0,8
tick,0x7fffb2a0feb4,53924865,0,0x0,8
tick,0x7fffb2a0feb4,53940920,0,0x0,8
tick,0x7fffb2a0feb4,53956855,0,0x0,8
tick,0x7fffb2a0feb4,53972894,0,0x0,8
tick,0x7fffb2a0feb4,53988860,0,0x0,8
tick,0x7fffb2a0feb4,54004901,0,0x0,8
tick,0x7fffb2a0feb4,54020875,0,0x0,8
tick,0x7fffb2a0feb4,54036904,0,0x0,8
tick,0x7fffb2a0feb4,54052886,0,0x0,8
tick,0x7fffb2a0feb4,54068913,0,0x0,8
tick,0x7fffb2a0feb4,54084897,0,0x0,8
tick,0x7fffb2a0feb4,54100904,0,0x0,8
tick,0x7fffb2a0feb4,54116899,0,0x0,8
tick,0x7fffb2a0feb4,54132897,0,0x0,8
tick,0x7fffb2a0feb4,54148901,0,0x0,8
tick,0x7fffb2a0feb4,54164941,0,0x0,8
tick,0x7fffb2a0feb4,54180897,0,0x0,8
tick,0x7fffb2a0feb4,54196943,0,0x0,8
tick,0x7fffb2a0feb4,54212905,0,0x0,8
tick,0x7fffb2a0feb4,54227918,0,0x0,8
tick,0x7fffb2a0feb4,54243920,0,0x0,8
tick,0x7fffb2a0feb4,54259949,0,0x0,8
tick,0x7fffb2a0feb4,54275938,0,0x0,8
tick,0x7fffb2a0feb4,54291950,0,0x0,8
tick,0x7fffb2a0feb4,54307731,0,0x0,8
tick,0x7fffb2a0feb4,54323752,0,0x0,8
tick,0x7fffb2a0feb4,54339718,0,0x0,8
tick,0x7fffb2a0feb4,54355758,0,0x0,8
tick,0x7fffb2a0feb4,54371744,0,0x0,8
tick,0x7fffb2a0feb4,54386784,0,0x0,8
tick,0x7fffb2a0feb4,54402743,0,0x0,8
tick,0x7fffb2a0feb4,54418282,0,0x0,8
tick,0x7fffb2a0feb4,54434260,0,0x0,8
tick,0x7fffb2a0feb4,54450293,0,0x0,8
tick,0x7fffb2a0feb4,54466253,0,0x0,8
tick,0x7fffb2a0feb4,54482302,0,0x0,8
tick,0x7fffb2a0feb4,54498269,0,0x0,8
tick,0x7fffb2a0feb4,54513287,0,0x0,8
tick,0x7fffb2a0feb4,54529274,0,0x0,8
tick,0x7fffb2a0feb4,54545308,0,0x0,8
tick,0x7fffb2a0feb4,54561282,0,0x0,8
tick,0x7fffb2a0feb4,54577296,0,0x0,8
tick,0x7fffb2a0feb4,54592271,0,0x0,8
tick,0x7fffb2a0feb4,54608313,0,0x0,8
tick,0x7fffb2a0feb4,54624306,0,0x0,8
tick,0x7fffb2a0feb4,54640347,0,0x0,8
tick,0x7fffb2a0feb4,54655775,0,0x0,8
tick,0x7fffb2a0feb4,54671748,0,0x0,8
tick,0x7fffb2a0feb4,54687722,0,0x0,8
tick,0x7fffb2a0feb4,54703242,0,0x0,8
tick,0x7fffb2a0feb4,54719218,0,0x0,8
tick,0x7fffb2a0feb4,54735273,0,0x0,8
tick,0x7fffb2a0feb4,54751244,0,0x0,8
tick,0x7fffb2a0feb4,54767267,0,0x0,8
tick,0x7fffb2a0feb4,54783231,0,0x0,8
tick,0x7fffb2a0feb4,54799300,0,0x0,8
tick,0x7fffb2a0feb4,54814608,0,0x0,8
tick,0x7fffb2a0feb4,54830649,0,0x0,8
tick,0x7fffb2a0feb4,54846610,0,0x0,8
tick,0x7fffb2a0feb4,54862626,0,0x0,8
tick,0x7fffb2a0feb4,54878613,0,0x0,8
tick,0x7fffb2a0feb4,54893676,0,0x0,8
tick,0x7fffb2a0feb4,54909264,0,0x0,8
code-creation,LazyCompile,13,54922308,0x225ca860d00,628,popAsyncContext node:internal/async_hooks:543:25,0x25aadb3b518,*
code-source-info,0x225ca860d00,24,18271,18873,C0O18271C48O18323C71O18358C80O18388C119O18426C141O18446C207O18537C212O18601C225O18675C237O18672C273O18644C278O18762C288O18750C304O18722C310O18797C388O18839C392O18870C439O18378C445O18271C499O18797,,
tick,0x7fffb2a0db64,54925284,0,0x0,8
scavenge,begin,18,234375,1671212047295
scavenge,end,18,234375,1671212047295
delete,MemoryChunk,0x4983640000
delete,MemoryChunk,0x2c362300000
delete,MemoryChunk,0x26fa1e00000
delete,MemoryChunk,0x27a5d40000
code-creation,LazyCompile,13,54935358,0x225ca861000,1216,addListener node:events:486:58,0x25aadb33ed8,*
code-source-info,0x225ca861000,13,14677,14751,C0O14677C56O7463I4C91O12525I0C146O12537I0C160O12811I0C224O12854I0C229O13129I0C275O13147I0C285O13330I0C355O13493I0C441O13506I0C445O13516I0C453O13461I0C506O8060I2C562O8150I2C613O3965I3C640O13776I0C658O13792I0C686O13799I0C695O13816I0C700O13673I0C705O13273I0C752O13290I0C826O13299I0C885O14748C916O12596I0C921O7507I4C926O14677C1016O3965I3,F0O14706F1O12479I0F2O13739I0F3O8114I2F4O3812I1,S0x25aadb33e38S0x25aadb33798S0x25aadb33c18S0x25aadb33838S0x6682e9ad78
code-creation,LazyCompile,10,54936722,0x2b515bb861e,173,pbkdf2 node:internal/crypto/pbkdf2:36:16,0x38a7b57e7b0,~
code-source-info,0x2b515bb861e,210,628,1441,C0O628C15O688C21O729C23O738C25O753C28O783C48O838C54O786C60O796C66O802C72O814C78O822C84O895C94O895C98O940C109O960C129O940C134O940C136O1069C143O1069C146O1069C148O1094C155O1105C159O1428C162O1432C167O1432C172O1440,,
scavenge,begin,18,234375,1671212047300
new,MemoryChunk,0xa5d3640000,262144
new,MemoryChunk,0x35a87ac0000,262144
new,MemoryChunk,0x23ffe240000,262144
scavenge,end,18,234375,1671212047300
delete,MemoryChunk,0x38a4d6c0000
delete,MemoryChunk,0x305193c0000
delete,MemoryChunk,0x3c207740000
delete,MemoryChunk,0x11e700000
code-creation,LazyCompile,13,54939617,0x225ca8615e0,308,newAsyncId node:internal/async_hooks:415:20,0x25aadb3aee0,*
code-source-info,0x225ca8615e0,24,14740,14793,C0O14740C44O14773C83O14788C88O14790C202O14740,,
tick,0x7ff6a873e4da,54941331,0,0x0,4,0x7ff6a7f1e700,0x225ca7d8f38,0x225ca7df694,0x225ca827bf9,0x225ca7df2e2,0x225ca7d2f3b,0x225ca7cf1fa,0x225ca7d090a,0x225ca7d761c,0x225ca827bf9,0x225ca7df2e2,0x225ca7d2f3b,0x225ca7cf1fa,0x225ca7d090a,0x225ca7d7799,0x225ca827bf9,0x225ca7df2e2,0x225ca7d2f3b,0x225ca7cf1fa,0x225ca7d090a,0x225ca7d80f2,0x225ca85ee72,0x225ca7ca221,0x225ca7e0acd,0x225ca7da3a8
scavenge,begin,18,234375,1671212047306
new,MemoryChunk,0x185b5580000,262144
new,MemoryChunk,0x35492dc0000,262144
scavenge,end,18,234375,1671212047306
delete,MemoryChunk,0x18ec9680000
delete,MemoryChunk,0x388ab8c0000
delete,MemoryChunk,0x34052480000
delete,MemoryChunk,0xa0dbd80000
delete,MemoryChunk,0x11e700000
delete,MemoryChunk,0x3c207740000
delete,MemoryChunk,0x305193c0000
delete,MemoryChunk,0x38a4d6c0000
delete,MemoryChunk,0x4983640000
delete,MemoryChunk,0x2c362300000
delete,MemoryChunk,0x26fa1e00000
delete,MemoryChunk,0x27a5d40000
code-creation,LazyCompile,13,54944232,0x225ca859500,1720,fastparse C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\parseurl\\index.js:95:20,0x318716873a8,*
code-source-info,0x225ca859500,156,1451,2477,C0O1451C48O1461C75O1496C322O1510C384O1926C394O1790C448O1827C816O1976C820O1878C842O1926C895O2004C907O1926C928O2004C982O1964C1074O2004C1127O1772C1156O1878C1222O2059I0C1226O2083I0C1230O2104I0C1234O2125I0C1238O2146I0C1242O2171I0C1246O2192I0C1250O2215I0C1254O2237I0C1258O2262I0C1262O2304I0C1276O2337C1283O2354C1287O2375C1305O2389C1315O2426C1323O2449C1327O2475C1357O2248C1362O1541C1367O1451C1421O1496C1484O1827C1558O1772,F0O2306,S0x1d24e4cf510
code-creation,LazyCompile,13,54947261,0x225ca859ca0,2388,EventEmitter node:events:84:22,0x25aadb32d48,*
code-source-info,0x225ca859ca0,13,2562,2612,C0O2562C48O5832I0C63O2592C93O5795I0C152O5832I0C190O5840I0C200O5902I0C227O5900I0C681O5945I0C1011O5986I0C1137O5979I0C1189O6021I0C1213O6029I0C1345O6337I0C1401O2611C1432O6078I0C1477O6057I0C1482O2562C1537O5986I0C1594O6029I0,F0O2592,S0x25aadb33a48
scavenge,begin,18,250000,1671212047310
new,MemoryChunk,0x38755340000,262144
scavenge,end,18,250000,1671212047311
delete,MemoryChunk,0x5457f40000
delete,MemoryChunk,0x2b200d80000
delete,MemoryChunk,0x1256ff40000
delete,MemoryChunk,0x126ff00000
code-creation,LazyCompile,13,54951965,0x225ca83d2a0,388,shift node:internal/fixed_queue:108:8,0x2ee4c9c62f8,*
code-source-info,0x225ca83d2a0,28,4061,4295,C0O4061C48O4089C85O3411I1C89O3415I1C148O3435I1C158O3511I1C162O3556I1C166O3561I1C173O3511I1C192O3541I1C209O3176I0C217O4141C226O4159C240O4253C245O4290C275O4061,F0O4141F1O4118,S0x2ee4c9c5fa0S0x2ee4c9c60d8
scavenge,begin,18,250000,1671212047314
new,MemoryChunk,0x18318140000,262144
new,MemoryChunk,0x22b5d000000,262144
scavenge,end,18,250000,1671212047315
delete,MemoryChunk,0xa0dbd80000
delete,MemoryChunk,0x305193c0000
delete,MemoryChunk,0x38a4d6c0000
delete,MemoryChunk,0x2c362300000
delete,MemoryChunk,0x126ff00000
delete,MemoryChunk,0x1256ff40000
delete,MemoryChunk,0x2b200d80000
delete,MemoryChunk,0x5457f40000
delete,MemoryChunk,0x18ec9680000
delete,MemoryChunk,0x388ab8c0000
delete,MemoryChunk,0x34052480000
delete,MemoryChunk,0x11e700000
scavenge,begin,18,250000,1671212047319
scavenge,end,18,250000,1671212047319
delete,MemoryChunk,0x3c207740000
delete,MemoryChunk,0x4983640000
delete,MemoryChunk,0x27a5d40000
delete,MemoryChunk,0x26fa1e00000
tick,0x7ff6a8048e82,54957333,0,0x0,0,0x7ff6a7f0aef0,0x225ca7c722b,0x225ca7d878f,0x225ca7e56c0,0x225ca7e651b,0x225ca853ee0,0x225ca7de9cf
code-creation,LazyCompile,13,54958561,0x225ca83d4a0,3256,assignSocket node:_http_server:239:62,0x13cb80ce910,*
code-source-info,0x225ca83d4ax6682e98098S0x36bef19bd48S0x25aadb33d78S0x18ab9865870S0x334252dc5a0S0x334252eae18
tick,0x7fffb2a0feb4,54973271,0,0x0,8
tick,0x7fffb2a0feb4,54988291,0,0x0,8
code-creation,LazyCompile,10,54992000,0x2b515bbf176,124,job.ondone node:internal/crypto/pbkdf2:56:16,0x2b515bb84e8,~
code-source-info,0x2b515bbf176,210,1107,1421,C0O1131C4O1161C16O1200C22O1168C27O1210C28O1228C35O1235C40O1235C46O1254C53O1267C58O1288C70O1327C78O1295C83O1343C84O1349C96O1381C101O1396C108O1405C111O1396C117O1349C123O1420,,
code-creation,LazyCompile,10,54992072,0x2b515bbf31e,84, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:67:73,0xad2513bdd8,~
code-source-info,0x2b515bbf31e,137,1830,2050,C0O1856C9O1866C11O1865C15O1876C20O1881C25O1881C30O1901C35O1901C39O1892C44O1928C47O1932C57O1932C64O2012C67O2016C77O2016C83O2049,,
tick,0x7ff6a77e837b,55004299,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4be7e,55019315,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8330,55035290,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81b9,55051324,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8243,55067294,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,55083313,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64881,55099310,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a00,55115336,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c0e,55131334,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4350,55147325,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648d7,55163340,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648df,55179342,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d87,55195336,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b518f1,55210336,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8179,55226330,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e87fc,55242343,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,55258359,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ff4,55274356,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82ad,55290356,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a56,55306364,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53420,55322357,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6489a,55338362,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cdf,55354374,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8748,55370359,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x2b515b97fca,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,Function,11,55380702,0x225ca82ea00,1036,pbkdf2Sync node:internal/crypto/pbkdf2:68:20,0x38a7b57e800,^
code-source-info,0x225ca82ea00,210,1464,1978,,,
code-creation,Function,11,55380740,0x225ca82ee80,764, node:internal/crypto/util:114:46,0x38a7b57fdc0,^
code-source-info,0x225ca82ee80,211,2560,3045,,,
code-creation,Function,11,55380767,0x225ca82f1e0,784,check node:internal/crypto/pbkdf2:89:15,0x38a7b57e850,^
code-source-info,0x225ca82f1e0,210,1996,2336,,,
code-creation,Function,11,55380784,0x225ca82f560,48,getDefaultEncoding node:internal/crypto/util:80:28,0x38a7b57f780,^
code-source-info,0x225ca82f560,211,1549,1583,,,
code-creation,Function,11,55380813,0x225ca82f600,1348,pbkdf2 node:internal/crypto/pbkdf2:36:16,0x38a7b57e7b0,^
code-source-info,0x225ca82f600,210,628,1441,,,
scavenge,begin,18,609375,1671212047743
new,MemoryChunk,0x16f6080000,262144
new,MemoryChunk,0x338edb40000,262144
scavenge,end,18,609375,1671212047744
delete,MemoryChunk,0x2c362300000
delete,MemoryChunk,0x5457f40000
delete,MemoryChunk,0x2b200d80000
delete,MemoryChunk,0x34052480000
delete,MemoryChunk,0x26fa1e00000
delete,MemoryChunk,0x27a5d40000
delete,MemoryChunk,0x4983640000
delete,MemoryChunk,0x3c207740000
delete,MemoryChunk,0xa0dbd80000
delete,MemoryChunk,0x126ff00000
delete,MemoryChunk,0x305193c0000
delete,MemoryChunk,0x38a4d6c0000
tick,0x7ff6a77e84b7,55386373,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11bba,55402411,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,55418353,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644bb,55434394,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f24,55449396,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b9,55465392,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11c0c,55481392,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,55497464,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b1b,55513741,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e837b,55529497,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4350,55545454,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11660,55561419,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644bb,55577405,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ed7,55592444,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b0d,55608439,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8265,55624434,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,55640459,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b114b7,55655452,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53435,55670456,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e820d,55685458,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648b0,55701491,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b41d3,55717464,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e88,55733465,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a6f,55749467,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f5f,55765523,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644cf,55781544,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7af9,55797474,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b4e,55813480,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2135,55829473,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84d0,55845545,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a85,55861546,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a4c,55877480,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,55892519,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,55908550,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83c5,55924517,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8423,55940536,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e820d,55956529,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84c7,55972516,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,55988512,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8219,56004549,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,56020531,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84d0,56036553,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83c9,56052526,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e828b,56068539,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,56084527,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e807e,56100581,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b61,56116545,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b114d5,56132552,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83c5,56148577,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4927,56164608,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f29,56180578,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648b0,56196567,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6488e,56212573,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7af9,56228619,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83ac,56244601,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e3e00,56260598,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81c3,56276594,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4350,56292569,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,56308570,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cce,56324600,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8072,56340581,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b79,56356606,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c48,56372587,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113af,56388606,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e23,56404599,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,56420637,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba81,56436592,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,56452647,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d9d,56468629,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8208,56484646,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f05,56500687,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8359,56516731,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b430d,56532701,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f5f,56549028,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7baa,56564725,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c7a,56580880,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7888,56596708,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8280,56612702,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84ca,56628718,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648a8,56644748,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7af9,56660688,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c06,56676727,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cc5,56692703,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6495a,56708697,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113c5,56724756,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7fffb2a0d1a4,56740763,1,0x7ff6a791cd60,6,0x7ff6a82ef2d0,0x225ca7f0590,0x225ca80349b,0x225ca7f27e4,0x225ca804c80,0x225ca7fd4fd,0x225ca7ef92c,0x225ca7fe5b0,0x225ca807c4e,0x225ca7f4f5f,0x225ca80f163,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e836b,56756729,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e89f9,56772694,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82f5,56788722,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8029,56804721,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e820d,56820722,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1159e,56836715,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e883c,56852699,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8298,56868722,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80d1,56884728,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8921,56900740,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8968,56916735,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8122,56932767,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,56948721,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a81595b4,56964752,0,0x0,0,0x7ff6a8153cd0,0x225ca7fb67c,0x225ca843a9f,0x225ca7fdf9e,0x225ca807c4e,0x225ca7f4f5f,0x225ca80f163,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648db,56980720,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64815,56996757,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f01,57012741,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53450,57028770,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8169,57044737,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b114ce,57060774,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a12,57076769,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1167b,57092767,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b446d,57108781,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64820,57124754,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e866d,57140771,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8257,57156779,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82da,57172763,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fa8,57188803,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b2da9,57204778,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82f5,57220753,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c61,57236729,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8402,57252781,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7dd8,57268748,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fae,57284780,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53425,57300754,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f4a,57316783,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113fc,57332756,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b2da9,57348770,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644f3,57364769,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b35,57380793,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e88d9,57396795,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648b0,57412800,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83e7,57428802,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,57444829,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f5a,57460796,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b431f,57475808,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2135,57491794,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8353,57507845,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e830e,57522810,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e23,57538814,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9f,57553837,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,57569841,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e893d,57585860,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c14,57601850,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11610,57617854,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64af8,57633875,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ae6,57649869,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11379,57665850,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,20,906250,1671212050038
scavenge,end,20,906250,1671212050038
delete,MemoryChunk,0x1256ff40000
delete,MemoryChunk,0x388ab8c0000
delete,MemoryChunk,0x18ec9680000
delete,MemoryChunk,0x11e700000
tick,0x7ff6a77e7c7f,57681869,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11609,57697864,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8257,57713841,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e811f,57729868,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11609,57745891,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8463,57761889,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ba4,57777866,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b9c,57793902,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11671,57809892,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,57825897,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4b9f0,57841876,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8243,57857919,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e815e,57873932,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64957,57889913,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c48,57905737,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8869,57920768,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e86ff,57936750,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ef2,57952747,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64af8,57968751,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81b3,57983774,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84b7,57999756,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82f5,58015777,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e813a,58031806,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64503,58047789,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83c5,58063786,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82da,58078808,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fd7,58094792,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e833b,58110825,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64810,58126783,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7963,58142808,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e845d,58158790,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a12,58174817,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,58190844,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84b7,58206841,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8348,58222834,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4357,58238846,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d0d,58254819,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f45,58270835,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d55,58286819,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1146d,58302854,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd85,58318837,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84db,58334894,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8535,58350850,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a20,58366866,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b35,58382855,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b51994,58398903,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,58414889,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4350,58430878,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113fc,58446882,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b41d0,58462888,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1153d,58478861,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83a6,58494891,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549d5,58510870,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82e7,58526928,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8249,58542881,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8327,58558916,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b0,58574929,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,58590948,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b61,58606898,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,58622924,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7dcf,58638904,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e87af,58654946,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e85b7,58670911,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64544,58686945,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2120,58702909,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e794e,58718936,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,58734921,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11c92,58750953,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,58766934,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11382,58782935,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64af8,58798942,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d5b,58814963,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8051,58830949,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fae,58846983,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e807e,58862958,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,58878989,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a97,58894956,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8aec,58910997,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d1c,58926962,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,58943010,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83a6,58958973,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ca0,58975014,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e88a0,58990983,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82c1,59007015,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fd7,59022992,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8991,59039018,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4b79a,59054995,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8a02,59071029,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b42f4,59087008,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f78,59103028,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4481,59119003,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ec8,59135055,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e82,59151029,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e0a,59167044,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1161d,59183020,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b05,59199032,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fa4,59215030,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4310,59231062,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8748,59247056,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,59263058,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e54,59279048,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11454,59295083,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8545,59311049,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba89,59327074,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8065,59343062,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44b1,59359077,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648db,59375114,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b49c8,59391105,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e873e,59407072,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1158a,59423100,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53450,59439087,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7aca,59455106,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8f76,59471092,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ba4,59487119,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,59503100,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d82,59519116,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7fc216a,59535121,0,0x0,0,0x7ff6a8153cd0,0x225ca7ee730,0x225ca7f23f1,0x225ca7f4f2b,0x225ca80f163,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7947,59551131,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8476,59567116,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ab2,59583140,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e804c,59599111,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8257,59615126,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,22,859375,1671212051987
new,MemoryChunk,0x7d4d540000,262144
new,MemoryChunk,0xa79d180000,262144
scavenge,end,22,859375,1671212051987
delete,MemoryChunk,0x2c362300000
delete,MemoryChunk,0x5457f40000
delete,MemoryChunk,0x2b200d80000
delete,MemoryChunk,0x27a5d40000
tick,0x7ff6a83a3cc6,59631146,0,0x0,0,0x225ca7b8664,0x225ca7c57b5
code-creation,LazyCompile,13,59633128,0x225ca824060,432,hasHooks node:internal/async_hooks:460:18,0x25aadb3b0d0,*
code-source-info,0x225ca824060,24,16108,16156,C0O16108C48O16143C88O16153C145O16108C199O16143,,
code-creation,LazyCompile,13,59633293,0x225ca8242a0,180,validateString node:internal/validators:117:24,0x6682e9a8e0,*
code-source-info,0x225ca8242a0,17,3514,3626,C0O3514C48O3533C76O3625C107O3575C112O3514,,
scavenge,begin,22,875000,1671212051996
new,MemoryChunk,0x38f8cf80000,262144
scavenge,end,22,875000,1671212051997
delete,MemoryChunk,0x34052480000
delete,MemoryChunk,0x3c207740000
delete,MemoryChunk,0x4983640000
delete,MemoryChunk,0x126ff00000
delete,MemoryChunk,0x27a5d40000
delete,MemoryChunk,0x2b200d80000
delete,MemoryChunk,0x5457f40000
delete,MemoryChunk,0x2c362300000
delete,MemoryChunk,0x1256ff40000
delete,MemoryChunk,0x388ab8c0000
delete,MemoryChunk,0x18ec9680000
delete,MemoryChunk,0x11e700000
tick,0x7ff6a77e807e,59647181,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b491e,59663181,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e4a,59679163,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7888,59695137,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,59711165,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80d1,59727152,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8463,59743156,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b432d,59759159,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,59775182,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e793f,59791196,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ab2,59807187,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b54a45,59823169,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83a6,59839190,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6482d,59855173,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8541,59871210,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b9,59887210,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64833,59903215,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53426,59919187,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83c5,59935254,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b49c8,59951219,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a56,59967237,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8a69,59983201,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81b9,59999234,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e820d,60015223,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f6f,60031216,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82da,60047220,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b40,60063242,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c21,60079226,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca827bf9,0x225ca7d2ec6,0x225ca7cf1fa,0x225ca7d090a,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,23,312500,1671212052447
scavenge,end,23,328125,1671212052447
code-creation,LazyCompile,13,60088177,0x225ca8243e0,420,push node:internal/fixed_queue:99:7,0x2ee4c9c62a8,*
code-source-info,0x225ca8243e0,28,3783,4050,C0O3783C48O3806C85O3237I0C92O3251I0C96O3237I0C100O3242I0C107O3811C116O3301I1C120O3316I1C219O3338I1C227O4049C258O3973C263O3783,F0O3811F1O4034,S0x2ee4c9c6008S0x2ee4c9c6070
scavenge,begin,23,328125,1671212052451
new,MemoryChunk,0x987c3c0000,262144
scavenge,end,23,328125,1671212052452
scavenge,begin,23,328125,1671212052455
new,MemoryChunk,0xf173980000,262144
new,MemoryChunk,0x2ac3d580000,262144
scavenge,end,23,328125,1671212052456
tick,0x7fffb2a0d1a4,60095281,0,0x0,8
code-creation,LazyCompile,10,60096151,0x16f60b7786,54,runNextTicks node:internal/process/task_queues:59:22,0x25aadb3cf88,~
code-source-info,0x16f60b7786,25,1343,1525,C0O1351C3O1356C10O1379C13O1379C18O1406C23O1406C26O1426C29O1431C36O1454C39O1454C44O1481C45O1488C46O1494C49O1494C53O1524,,
code-creation,LazyCompile,10,60096209,0x16f60b78b6,19,hasTickScheduled node:internal/process/task_queues:48:26,0x25aadb3c9a0,~
code-source-info,0x16f60b78b6,25,1071,1123,C0O1079C7O1095C9O1094C15O1114C18O1120,,
code-creation,LazyCompile,10,60096239,0x16f60b79ae,19,hasRejectionToWarn node:internal/process/promises:75:28,0x2ee4c9c11d0,~
code-source-info,0x16f60b79ae,26,2164,2218,C0O2172C7O2188C9O2187C15O2209C18O2215,,
code-creation,LazyCompile,13,60100542,0x225ca86c5c0,7364,next C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\express\\lib\\router\\index.js:177:16,0x2ea32e01860,*
code-source-info,0x225ca86c5c0,159,4366,6867,C0O4366C176O4399C250O4395C287O4468C371O4587C375O4599C405O4606C419O4633C424O4791C471O4893C483O4910C513O4901C533O5005C561O5011C572O5016C582O5115C613O509I5C666O516I5C680O610I5C736O2659I6C829O2713I6C839O2761I6C962O2794I6C996O2799I6C1060O628I5C1079O734I5C1116O763I5C1218O795I5C1324O12574I3C1356O5138C1383O5115C1422O5138C1545O5291C1563O5315C1586O5307C1603O5331C1631O5348C1635O5344C1639O5348C1643O5344C1660O5337C1694O5359C1709O5367C1728O13452I0C1748O1981I1C1787O2073I1C1791O2080I1C1931O2100I1C1969O2112I1C1993O2133I1C2015O2238I1C2079O2257I1C2145O2391I1C2232O2409I1C2260O2439I1C2285O2466I1C2337O2522I1C2375O2534I1C2420O2559I1C2483O2552I1C2518O2582I1C2523O2637I1C2561O5560C2573O5426C2607O5398C2611O5412C2634O5404C2658O5426C2667O5501C2747O5512C2779O5560C2789O5605C2850O5699C2929O5838C2933O5842C2964O5873C2972O5879C3002O971I8C3006O979I8C3026O1029I8C3077O1056I8C3119O1147I8C3144O1127I8C3157O5956C3219O5278C3241O2277I1C3246O5982C3251O1076I8C3256O2681I1C3266O6214C3275O6239C3280O6310C3353O6329C3360O6339C3420O6396C3431O6414C3544O6452C3572O6434C3581O6488C3603O6407C3631O6516C3639O6522C3673O6516C3698O6574C3707O6579C3811O6619C3894O8271I2C3902O8356I2C3906O8381I2C3978O8399I2C3998O8406I2C4010O9877I2C4015O8426I2C4052O6703I4C4136O6784I4C4266O6724I4C4273O6730I4C4325O1611I7C4336O1629I7C4402O1636I7C4429O1717I7C4487O6852I4C4503O6866C4534O1692I7C4539O5164C4557O5171C4562O5031C4611O5038C4616O4926C4675O4813C4726O4492C4730O4506C4735O4366C4817O4468C4876O2761I6C4978O12584I3C5006O2080I1C5126O2238I1C5168O13464I0C5312O5501C5369O5605C5411O5699C5470O1147I8C5628O5278C5715O6310C5772O6414C5872O8381I2C5914O6703I4C5971O1717I7C5982O1759I7,F0O5367F1O13452I0F2O6579F3O5115F4O8426I2F5O12561I3F6O628I5F7O6730I4F8O5879,S0x96d3215258S0x21ae3a72c10S0x96d32154d8S0x96d3215198S0x2ea32e11938S0x31871687338S0x318716873e0S0x21ae3a72bd8S0x21ae3a71068
code-creation,LazyCompile,13,60101051,0x225ca86e4a0,1868,nextTick node:internal/process/task_queues:104:18,0x25aadb3d028,*
code-source-info,0x225ca86e4ax6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
code-creation,LazyCompile,13,60102210,0x225ca86ece0,332, node:_http_outgoing:564:45,0x21ae3a57cc8,*
code-source-info,0x225ca86ece0,171,17897,18175,C0O17897C48O17919C62O7523I0C111O18017C121O18174C152O18055C184O17957C189O17897C243O18055,F0O18017,S0x36bef1bff10
tick,0x7ff6a77e7a20,60111269,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e809c,60127263,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4327,60142251,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b0d,60158280,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644f6,60174255,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83a6,60190285,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53450,60206258,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,60222302,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8613,60238272,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8772,60254295,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6498b,60270263,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cb5,60286294,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,60302270,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8362,60318317,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a97,60334282,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53435,60350305,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82b3,60366296,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11539,60382336,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11430,60398301,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b79,60414339,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6488e,60430316,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e808d,60446326,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd85,60462333,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11613,60478348,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d40,60493322,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,60509357,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4b9f4,60525320,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,60541359,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1156f,60557336,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e842f,60573357,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,23,828125,1671212052951
tick,0x7ff6a816aa37,60589334,0,0x0,1
new,MemoryChunk,0x184a6d00000,262144
scavenge,end,23,828125,1671212052952
tick,0x7ff6a7b115e1,60605369,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f65,60621343,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e85f0,60637384,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8820,60653350,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba5c,60669395,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,60685364,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e8c,60701400,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7db6,60717368,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549d5,60733392,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11419,60749380,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64987,60765412,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549e3,60781385,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e820d,60797408,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6488e,60813393,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,60829428,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8359,60845403,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a97,60861414,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e842f,60877407,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b54a45,60892460,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e86ae,60908432,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8488,60924451,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11504,60940432,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e23,60956452,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549d5,60972423,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b9,60988458,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8631,61004433,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64533,61020471,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64544,61036453,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e813d,61052458,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8778,61068445,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6488e,61084484,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b79,61100481,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,61116490,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e860f,61132463,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e7d,61148483,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648b8,61164471,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,61179500,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,61195473,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e837b,61210518,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e866d,61226498,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a09,61242521,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e793f,61258509,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4459,61274502,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8445,61290498,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,61298208,0x225ca86eec0,2468,processTicksAndRejections node:internal/process/task_queues:68:35,0x25aadb3cfd8,*
code-source-info,0x225ca86eecx25aadb3b230S0x25aadb3b0d0S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3faa8S0x2ee4c9c62f8S0x2ee4c9c60d8S0x25aadb3b370S0x25aadb3b320S0x25aadb3b4c8S0x25aadb3b518S0x25aadb3b120
tick,0x7ff6a77e88f8,61306534,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba5c,61322510,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648a8,61338535,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11bc6,61354518,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8423,61370538,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7fffb2a0d1a4,61386518,1,0x7ff6a791cd60,6,0x7ff6a82ef2d0,0x225ca7f0590,0x225ca80349b,0x225ca7f27e4,0x225ca804c80,0x225ca7fd4fd,0x225ca7ef92c,0x225ca7fe5b0,0x225ca807c4e,0x225ca7f4f5f,0x225ca80f163,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8078,61402524,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ba0,61418525,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8257,61434564,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a56,61450540,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b432d,61466578,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8192,61482553,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83b4,61498575,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e867a,61514567,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8107,61530598,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ac5,61546573,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64aca,61562596,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ddb,61578569,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113c5,61593590,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81a5,61609576,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b430d,61625600,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4327,61641576,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f68,61657610,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,61673593,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82c1,61689589,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11af2,61705594,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7bcd,61721613,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8362,61737593,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a8f,61753624,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d37,61769606,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8972,61785652,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4bdf4,61801643,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11660,61817657,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82df,61833621,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c48,61849661,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81de,61865633,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4b7b8,61881667,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e79e8,61897636,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b4,61913670,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11be0,61929638,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e78f8,61945696,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e829d,61961668,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a00,61976688,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e841b,61992693,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e54,62008691,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f0b,62024669,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d98,62040734,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,62056673,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e10,62072702,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,62087682,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8065,62103712,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83c5,62119685,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b41d0,62135710,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a6f,62150729,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f5f,62166726,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84bd,62182702,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b47,62198727,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e812b,62214713,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11699,62230740,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113fc,62246734,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f38,62261759,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8445,62277718,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8298,62293744,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,62309724,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e5c,62325797,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,62341741,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7fd1e62,62357768,0,0x0,0,0x7ff6a8152de0,0x225ca7f840c,0x225ca7f2651,0x225ca807486,0x225ca7f4f5f,0x225ca80f163,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba79,62373749,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,62389781,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e860f,62405747,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83a6,62421794,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64af8,62437809,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8348,62453794,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c21,62469766,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81c6,62485795,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e820d,62501796,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8110,62517793,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d18,62533792,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b54a45,62549841,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648a8,62565787,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64aca,62581824,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f38,62597796,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8327,62613818,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e809c,62629799,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8327,62645835,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e85ba,62661820,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11642,62677841,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b115ff,62693814,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a79,62709858,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64833,62725828,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e213c,62741891,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64aeb,62757847,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e88d0,62773874,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba2c,62789893,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b446d,62805878,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8277,62821876,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e29,62837883,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53420,62853855,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8f76,62869880,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b4,62885868,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b2f,62901897,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,62917867,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e88,62933878,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e849a,62949872,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b25,62965906,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53435,62981891,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,62997907,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64ac5,63013888,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8130,63029941,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4327,63045896,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e785a,63061922,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8154,63077920,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7dd8,63093908,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,63109918,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64af8,63125944,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b41d0,63141925,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8226,63157951,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e805b,63173941,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84b7,63189943,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8219,63205929,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,63221978,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ba4,63237952,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84b7,63253976,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e844f,63269958,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8092,63285977,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,63301976,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,63317980,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113fc,63333962,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8416,63349971,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e85a8,63366016,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e798a,63382009,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8463,63397985,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cff,63414000,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8603,63430013,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b115bc,63446016,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8975,63462027,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba69,63478029,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b115ee,63493996,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,63510026,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b61,63526005,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8243,63542041,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,63554446,0x225ca86f960,640,matchHeader node:_http_outgoing:524:21,0x96d3221be0,*
code-source-info,0x225ca86f960,171,16767,17650,C0O16767C48O16810C80O16817C90O16837C100O16867C115O16905C373O17620C378O17544C383O17406C425O17442C465O17649C496O17211C501O16970C506O16855C512O16767,,
tick,0x7ff6a77e7ded,63558030,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d18,63574034,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81c3,63589035,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b9,63605042,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7858df0,63621025,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e837b,63637053,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,63653037,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,63669062,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4b9f4,63685037,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e74,63701077,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e829d,63717050,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b54a45,63733077,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e853e,63749091,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7947,63765086,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d7a,63781109,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a8a,63797102,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b25,63813078,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b25,63829102,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e89e6,63845072,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8ac7,63861109,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e800f,63877077,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ecb,63893113,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8881,63909088,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648db,63925146,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,63941116,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8208,63957128,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6489d,63973095,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648a8,63989146,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c74,64005157,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b6d,64021146,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ffa,64037136,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8968,64053149,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e792b,64069135,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7c94b2b,64085171,0,0x0,0,0x7ff6a8153cd0,0x225ca7fa0c6,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,27,328125,1671212056447
new,MemoryChunk,0x300cb380000,262144
new,MemoryChunk,0x29080b80000,262144
new,MemoryChunk,0xc7966c0000,262144
scavenge,end,27,328125,1671212056448
code-creation,LazyCompile,13,64091522,0x225ca86fce0,144,noop node:internal/util/debuglog:47:14,0x2ee4c9fc888,*
code-source-info,0x225ca86fce0,40,1465,1473,C0O1465C44O1472C75O1465,,
code-creation,LazyCompile,13,64091921,0x225ca86fe00,2388,Stream node:internal/streams/legacy:10:16,0x334252de520,*
code-source-info,0x225ca86fe00,50,136,171,C0O136C48O5832I1C63O2592I0C93O5795I1C152O5832I1C190O5840I1C200O5902I1C227O5900I1C681O5945I1C1011O5986I1C1137O5979I1C1189O6021I1C1213O6029I1C1345O6337I1C1401O170C1432O6078I1C1477O6057I1C1482O136C1537O5986I1C1594O6029I1,F0O151F1O2592I0,S0x25aadb32d48S0x25aadb33a48
code-creation,LazyCompile,13,64093394,0x225ca870840,192,checkIsHttpToken node:_http_common:221:26,0x36bef195ba0,*
code-source-info,0x225ca870840,168,7144,7203,C0O7144C48O7162C98O7200C125O7144,,
scavenge,begin,27,328125,1671212056456
new,MemoryChunk,0x327837c0000,262144
new,MemoryChunk,0x21696580000,262144
new,MemoryChunk,0x2b942200000,262144
scavenge,end,27,328125,1671212056457
tick,0x7ff6a8160e96,64100133,0,0x0,1
markcompact,begin,27,343750,1671212056464
markcompact,end,27,343750,1671212056465
tick,0x7fffb2a0feb4,64116179,0,0x0,8
tick,0x7fffb2a0feb4,64132175,0,0x0,8
tick,0x7fffb2a0feb4,64148165,0,0x0,8
tick,0x7fffb2a0feb4,64164150,0,0x0,8
tick,0x7fffb2a0feb4,64180169,0,0x0,8
tick,0x7fffb2a0feb4,64196189,0,0x0,8
tick,0x7fffb2a0feb4,64212170,0,0x0,8
tick,0x7fffb2a0feb4,64228170,0,0x0,8
tick,0x7fffb2a0feb4,64244169,0,0x0,8
tick,0x7fffb2a0feb4,64260189,0,0x0,8
tick,0x7fffb2a0feb4,64276208,0,0x0,8
tick,0x7ff6a8232f37,64292172,0,0x0,5
tick,0x7fffb2a0feb4,64308205,0,0x0,8
tick,0x7fffb2a0feb4,64324181,0,0x0,8
tick,0x7fffb2a0feb4,64340201,0,0x0,8
tick,0x7fffb2a0feb4,64356196,0,0x0,8
tick,0x7fffb2a0feb4,64372206,0,0x0,8
tick,0x7fffb2a0feb4,64388206,0,0x0,8
tick,0x7fffb2a0feb4,64404201,0,0x0,8
tick,0x7fffb2a0feb4,64420209,0,0x0,8
tick,0x7fffb2a0feb4,64436250,0,0x0,8
tick,0x7fffb2a0feb4,64452207,0,0x0,8
tick,0x7fffb2a0feb4,64468241,0,0x0,8
tick,0x7fffb2a0feb4,64484220,0,0x0,8
tick,0x7fffb2a0feb4,64500234,0,0x0,8
tick,0x7fffb2a0feb4,64516228,0,0x0,8
tick,0x7fffb2a0feb4,64532247,0,0x0,8
tick,0x7fffb2a0feb4,64548235,0,0x0,8
tick,0x7fffb2a0feb4,64564266,0,0x0,8
tick,0x7fffb2a0feb4,64580244,0,0x0,8
tick,0x7fffb2a0feb4,64596264,0,0x0,8
tick,0x7fffb2a0feb4,64612257,0,0x0,8
tick,0x7fffb2a0feb4,64628271,0,0x0,8
tick,0x7fffb2a0feb4,64644253,0,0x0,8
tick,0x7fffb2a0feb4,64660284,0,0x0,8
tick,0x7fffb2a0feb4,64676272,0,0x0,8
tick,0x7fffb2a0feb4,64692287,0,0x0,8
tick,0x7fffb2a0feb4,64708305,0,0x0,8
tick,0x7fffb2a0feb4,64724300,0,0x0,8
tick,0x7fffb2a0feb4,64740294,0,0x0,8
tick,0x7ff6a8393cfa,64756315,0,0x0,0,0x225ca7fbd04,0x225ca843a9f,0x225ca7fdf9e,0x225ca807c4e,0x225ca7f4f5f,0x2b515bbf36b,0x2b515bbf1c4
tick,0x7fffb2a0feb4,64771788,0,0x0,8
tick,0x7fffb2a0feb4,64787816,0,0x0,8
tick,0x7fffb2a0feb4,64803818,0,0x0,8
tick,0x7fffb2a0feb4,64819819,0,0x0,8
tick,0x7fffb2a0feb4,64835806,0,0x0,8
tick,0x7fffb2a0feb4,64851845,0,0x0,8
tick,0x7fffb2a0feb4,64867828,0,0x0,8
tick,0x7fffb2a0feb4,64883846,0,0x0,8
tick,0x7fffb2a0feb4,64899837,0,0x0,8
tick,0x7fffb2a0feb4,64915847,0,0x0,8
tick,0x7fffb2a0feb4,64931815,0,0x0,8
tick,0x7fffb2a0feb4,64947850,0,0x0,8
tick,0x7fffb2a0feb4,64963843,0,0x0,8
tick,0x7fffb2a0feb4,64979850,0,0x0,8
tick,0x7fffb2a0feb4,64995855,0,0x0,8
tick,0x7fffb2a0feb4,65011886,0,0x0,8
tick,0x7fffb2a0feb4,65027852,0,0x0,8
tick,0x7fffb2a0feb4,65043876,0,0x0,8
tick,0x7fffb2a0feb4,65059856,0,0x0,8
tick,0x7fffb2a0feb4,65075886,0,0x0,8
tick,0x7ff6a838e515,65091872,0,0x0,0,0x225ca79a305,0x225ca803304,0x225ca7f27e4,0x225ca804c80,0x225ca7fd4fd,0x225ca7ef92c,0x225ca7fe5b0,0x225ca807c4e,0x225ca7f4f5f,0x2b515bbf36b,0x2b515bbf1c4
tick,0x7fffb2a0feb4,65107891,0,0x0,8
tick,0x7fffb2a0feb4,65123893,0,0x0,8
tick,0x7fffb2a0feb4,65139908,0,0x0,8
tick,0x7fffb2a0feb4,65155887,0,0x0,8
tick,0x7fffb2a0feb4,65171922,0,0x0,8
tick,0x7fffb2a0feb4,65187903,0,0x0,8
tick,0x7fffb2a0feb4,65203930,0,0x0,8
tick,0x7ff6a7b5345e,65219919,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4bdf0,65235953,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e05,65251939,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,65267959,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4bdf4,65283944,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8522,65299950,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c48,65315944,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f42,65331979,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83d5,65347944,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4477,65363962,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4b7cf,65379967,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d07,65395978,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ba4,65411974,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64ab6,65427990,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7dc0,65443966,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e837b,65460000,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8029,65475974,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64833,65492004,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c86,65507992,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b25,65524009,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64987,65539989,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ec3,65556014,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d5b,65572069,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b51990,65587049,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4481,65603012,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e820d,65619033,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f0b,65635017,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64533,65651040,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,65667025,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e797d,65683050,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64526,65699025,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a33,65715052,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f42,65731033,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c61,65747050,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83e4,65763067,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e812b,65779078,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e0d,65795061,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11539,65811078,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,65827069,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64833,65843076,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,65859058,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,65875094,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd85,65891064,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8613,65907097,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44a3,65923104,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d69,65939114,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c83,65955115,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2143,65971153,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11430,65987093,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,66003140,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8427,66019121,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,66035153,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,66051103,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81b9,66067149,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648db,66083149,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8176,66099115,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e87f3,66115116,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a6f,66131160,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f68,66147152,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7858df0,66163149,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53435,66178129,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e54,66194168,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82b3,66210153,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f6f,66226191,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba69,66242161,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4481,66258188,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549d5,66274187,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7bca,66290191,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,66306161,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cce,66322208,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e86d7,66338198,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113d7,66354216,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7eaa,66370191,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e862d,66386198,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113e7,66402220,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a6f,66418210,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2135,66434181,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8327,66450218,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fc7,66466228,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6498b,66482232,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a97,66498204,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b49b3,66514226,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b49b3,66530216,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81c3,66546236,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644b5,66562240,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84d0,66578236,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba79,66593235,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f42,66609254,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a2b,66625245,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549d5,66641280,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53452,66657246,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,66673281,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e795b,66689244,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b79,66705274,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8643,66721260,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e88b6,66737281,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f18,66753275,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b79,66769272,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,66785319,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648b0,66801290,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d69,66817272,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11bba,66833306,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4be88,66849283,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64544,66865316,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,66881303,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84d0,66897315,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ab2,66913304,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b05,66929327,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,66945310,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44b8,66961332,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64af8,66976323,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,66992337,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d1f,67007324,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8728,67023350,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80d1,67039326,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6488e,67055364,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b431f,67070335,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a6f,67086361,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f78,67102363,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e849d,67118365,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8402,67134347,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6489d,67150373,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c0b,67166360,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fef,67182393,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81c6,67198360,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a56,67214399,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,67230371,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8029,67246415,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d9d,67262381,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8065,67278398,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fef,67293389,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4d353,67309414,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fa8,67325391,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1147b,67341415,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f42,67357392,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b51905,67373439,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f01,67389411,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8362,67405402,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a79,67421414,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,67437448,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8698,67453419,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,67469455,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e828b,67485437,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a82,67501459,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81db,67517470,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64870,67532464,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b25,67548442,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d82,67564488,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8470,67580450,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a25,67596466,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64af8,67612465,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d3a,67628484,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ba4,67644454,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,67660499,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cce,67676474,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4be54,67692508,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d0d,67708472,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a33,67724495,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8884,67740495,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b79,67756514,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e813a,67772489,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8508,67788514,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f5f,67804516,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1153d,67820526,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64aa8,67836503,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8185,67851534,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,67867522,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53435,67883546,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4b7d8,67899538,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81f0,67915556,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,67930530,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e847c,67946566,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e0a,67962535,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82f5,67978566,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cce,67993556,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8179,68009574,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7beb,68025597,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4477,68041590,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e876a,68057577,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b21,68073596,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e806f,68089587,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81fe,68105592,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d9d,68121565,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81f0,68137607,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cf9,68153603,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ac5,68169613,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11bb0,68185583,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82f0,68201619,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e804c,68217598,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64544,68233631,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d60,68249609,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83a6,68265640,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b54a43,68281607,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,68297626,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cce,68313616,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11421,68329647,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8015,68345649,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,68361654,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8243,68377651,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d55,68393683,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64af8,68409668,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a42,68425665,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81e6,68441644,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7db6,68457675,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8485,68473676,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7bca,68489689,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7997,68505697,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e79c7,68521700,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e85e0,68537659,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e792b,68553688,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e95,68569679,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8485,68585716,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4357,68600680,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8362,68616716,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,68632693,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f78,68648735,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44bf,68664693,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8098,68680738,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b2da9,68696719,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44b8,68712733,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b17,68728713,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e836b,68744741,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4bdf4,68760745,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c2d,68776742,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e89e2,68792718,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c5b,68808754,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e89a1,68824750,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2127,68840756,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b49a9,68856738,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e87a8,68872769,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fce,68888779,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a6f,68904785,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e88f4,68920747,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d66,68936795,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cb0,68952760,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648a8,68968784,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11379,68984807,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,69000798,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e847c,69016809,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b05,69032801,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44bf,69048775,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7863,69064808,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e05,69080812,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4b7cf,69096801,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,69112819,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644bb,69128826,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648a8,69144812,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b9,69160833,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c61,69176809,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e801d,69192838,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4350,69207810,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64810,69223857,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e95,69239823,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b1b,69255849,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,69271838,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7bc3,69287858,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648df,69303850,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11642,69319864,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e23,69335847,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7858df0,69350864,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cce,69366857,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e863d,69382887,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e792b,69398857,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e78f4,69414895,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e23,69430879,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e794e,69446896,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d9d,69462875,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8839,69478910,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e85e0,69494871,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83ba,69510897,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,69526913,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8718,69542914,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,69558907,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81cc,69574922,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e847c,69590905,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81b9,69606939,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8490,69622918,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113ee,69638951,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
scavenge,begin,31,828125,1671212062014
scavenge,end,31,828125,1671212062014
delete,MemoryChunk,0xa553a00000
delete,MemoryChunk,0x24763100000
delete,MemoryChunk,0x1dceb80000
delete,MemoryChunk,0x1e909240000
delete,MemoryChunk,0x354a9ec0000
delete,MemoryChunk,0x15a6b600000
delete,MemoryChunk,0x18ec9680000
delete,MemoryChunk,0x34052480000
delete,MemoryChunk,0x3c207740000
delete,MemoryChunk,0x2b200d80000
delete,MemoryChunk,0x388ab8c0000
delete,MemoryChunk,0x11e700000
delete,MemoryChunk,0x2c362300000
delete,MemoryChunk,0x126ff00000
delete,MemoryChunk,0x4653000000
delete,MemoryChunk,0x397b4ac0000
delete,MemoryChunk,0x1eb33d40000
delete,MemoryChunk,0x29a0780000
delete,MemoryChunk,0x2b304600000
tick,0x7ff6a7c8c467,69654929,0,0x0,0,0x7ff6a7f0aef0,0x225ca86e8f8,0x225ca7edbde,0x225ca7be522,0x225ca84f25f,0x225ca86f31f
code-creation,LazyCompile,13,69659699,0x225ca85bee0,1728,emitReadable node:internal/streams/readable:563:22,0x334252dc278,*
code-source-info,0x225ca85bee0,49,18662,18977,C0O18662C56O18697C89O18716C116O18744C144O18764C148O18716C167O18804C175O18827C240O18916C248O18937C309O2755I2C482O2857I2C560O2874I2C568O3176I5C586O3183I2C599O1196I6C623O14773I7C663O14788I7C669O15268I12C675O15390I12C694O15422I12C714O3335I2C771O3361I2C806O3402I2C966O3423I2C1044O3438I2C1112O16143I9C1122O3456I2C1141O3316I13C1158O3350I13C1162O3355I13C1169O3251I11C1173O3811I10C1182O3316I13C1263O3338I13C1276O3973I10C1281O3479I2C1286O18976C1317O18662C1368O18827C1404O2755I2C1484O3402I2C1504O18716,F0O18716F0O18851F1O18937F2O2710I2F3O3183I2F4O3758I4F5O3199I2F6O3245I2F7O3456I2F8O16263I8F9O3549I2F10O3811I10F11O3285I2F12O4034I10,S0x2ee4c9fc888S0x25aadb3d028S0x6682e9acd8S0x2ee4c9c6258S0x2ee4c9c5fa0S0x25aadb3cf38S0x25aadb3aee0S0x25aadb3b170S0x25aadb3b0d0S0x2ee4c9c62a8S0x2ee4c9c6008S0x25aadb3af80S0x2ee4c9c6070
scavenge,begin,31,828125,1671212062022
scavenge,end,31,828125,1671212062023
tick,0x7fffb2a0feb4,69670946,0,0x0,8
tick,0x7fffb2a0feb4,69686921,0,0x0,8
tick,0x7fffb2a0feb4,69702956,0,0x0,8
tick,0x7fffb2a0feb4,69718933,0,0x0,8
tick,0x7fffb2a0feb4,69734948,0,0x0,8
tick,0x7fffb2a0feb4,69750933,0,0x0,8
tick,0x7fffb2a0feb4,69766975,0,0x0,8
tick,0x7fffb2a0feb4,69782945,0,0x0,8
tick,0x7fffb2a0feb4,69798980,0,0x0,8
tick,0x7fffb2a0feb4,69814966,0,0x0,8
tick,0x7fffb2a0feb4,69830972,0,0x0,8
tick,0x7fffb2a0feb4,69846959,0,0x0,8
tick,0x7fffb2a0feb4,69862984,0,0x0,8
tick,0x7fffb2a0feb4,69879000,0,0x0,8
tick,0x7ff6a8355528,69894995,0,0x0,0,0x225ca80f22a,0x225ca80f3a5,0x225ca7db415,0x225ca7d8cab
tick,0x7fffb2a0feb4,69910966,0,0x0,8
tick,0x7fffb2a0feb4,69926990,0,0x0,8
tick,0x7fffb2a0feb4,69942991,0,0x0,8
tick,0x7fffb2a0feb4,69959003,0,0x0,8
tick,0x7fffb2a0feb4,69974984,0,0x0,8
tick,0x7fffb2a0feb4,69991022,0,0x0,8
tick,0x7fffb2a0feb4,70006987,0,0x0,8
tick,0x7fffb2a0feb4,70023020,0,0x0,8
tick,0x7fffb2a0feb4,70039028,0,0x0,8
tick,0x7fffb2a0feb4,70055040,0,0x0,8
tick,0x7fffb2a0feb4,70071022,0,0x0,8
tick,0x7fffb2a0feb4,70087041,0,0x0,8
tick,0x7fffb2a0feb4,70103019,0,0x0,8
tick,0x7fffb2a0feb4,70119037,0,0x0,8
tick,0x7fffb2a0feb4,70135016,0,0x0,8
tick,0x7fffb2a0feb4,70151051,0,0x0,8
tick,0x7fffb2a0feb4,70167032,0,0x0,8
tick,0x7fffb2a0feb4,70183055,0,0x0,8
tick,0x7ff6a834acb2,70199039,0,0x0,0
tick,0x7fffb2a0feb4,70215061,0,0x0,8
tick,0x7ff6a839367b,70231051,0,0x0,0,0x225ca7f18b2,0x225ca7f01a1,0x225ca80349b,0x225ca7f27e4,0x225ca804c80,0x225ca7fd4fd,0x225ca7ef92c,0x225ca7fe5b0,0x225ca807c4e,0x225ca7f4f5f,0x2b515bbf36b,0x2b515bbf1c4
tick,0x7fffb2a0feb4,70247054,0,0x0,8
tick,0x7fffb2a0feb4,70263087,0,0x0,8
tick,0x7fffb2a0feb4,70279077,0,0x0,8
tick,0x7fffb2a0feb4,70295050,0,0x0,8
tick,0x7fffb2a0feb4,70311083,0,0x0,8
tick,0x7fffb2a0feb4,70327070,0,0x0,8
tick,0x7fffb2a0feb4,70343090,0,0x0,8
tick,0x7ff6a7ec9ae3,70359085,0,0x0,0,0x7ff6a82d7030,0x225ca7e180e,0x225ca7e2e5b,0x225ca7df9fa,0x225ca827bf9,0x225ca7df2e2,0x225ca86d665,0x225ca7d761c,0x225ca827bf9,0x225ca7df2e2,0x225ca86d665,0x225ca7d7799,0x225ca827bf9,0x225ca7df2e2,0x225ca86d665,0x225ca7d80f2,0x225ca85ee72,0x225ca7ca221,0x225ca7e0acd,0x225ca7da3a8
tick,0x7fffb2a0feb4,70375099,0,0x0,8
tick,0x7fffb2a0feb4,70391082,0,0x0,8
tick,0x7fffb2a0feb4,70407079,0,0x0,8
tick,0x7fffb2a0feb4,70423098,0,0x0,8
tick,0x7fffb2a0feb4,70439114,0,0x0,8
scavenge,begin,31,843750,1671212062810
scavenge,end,31,843750,1671212062811
tick,0x7fffb2a0feb4,70455117,0,0x0,8
tick,0x7fffb2a0feb4,70471115,0,0x0,8
tick,0x7fffb2a0feb4,70487091,0,0x0,8
tick,0x7fffb2a0feb4,70503127,0,0x0,8
tick,0x7fffb2a0feb4,70519107,0,0x0,8
tick,0x7fffb2a0feb4,70535133,0,0x0,8
tick,0x7fffb2a0feb4,70551123,0,0x0,8
tick,0x7fffb2a0feb4,70567148,0,0x0,8
tick,0x7fffb2a0feb4,70583135,0,0x0,8
tick,0x7fffb2a0feb4,70599194,0,0x0,8
tick,0x7fffb2a0feb4,70615132,0,0x0,8
tick,0x7fffb2a0feb4,70631159,0,0x0,8
tick,0x7fffb2a0feb4,70647143,0,0x0,8
tick,0x7fffb299fab3,70663170,0,0x0,8
tick,0x7fffb2a0feb4,70679141,0,0x0,8
tick,0x7fffb2a0feb4,70695168,0,0x0,8
tick,0x7fffb2a0feb4,70711155,0,0x0,8
tick,0x7fffb2a0feb4,70727177,0,0x0,8
tick,0x7fffb2a0feb4,70743166,0,0x0,8
tick,0x7fffb2a0feb4,70759179,0,0x0,8
tick,0x7fffb2a0feb4,70775163,0,0x0,8
tick,0x7ff6a7b648db,70791201,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e85d3,70807187,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44b8,70823216,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,70839196,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8aae,70855203,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8553,70871188,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e809f,70887226,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8389,70903195,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80fc,70919216,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e74,70935220,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648c5,70951225,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549d5,70967210,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8274,70983256,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e74,70999214,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,71015250,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e3e3c,71031228,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c98,71047258,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e852b,71063236,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8a91,71079261,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cbb,71095247,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e54,71111266,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ddb,71127259,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8553,71142273,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fae,71158256,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e86ec,71174285,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca7ca221,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,71184503,0x225ca85c680,1224,emit node:events:340:44,0x25aadb33d78,*
code-source-info,0x225ca85c680,13,10080,12370,C0O10080C98O10121C154O10160C197O10172C214O10205C233O10226C275O10269C280O10333C332O10459C342O11422C368O11435C378O11551C388O11486C421O11551C521O11710C541O11764C551O11844C585O11875C624O11919C728O11964C770O11968C856O12237C876O11928C884O11901C899O12367C930O12293C935O11480C941O10365C951O10397C957O10501C962O10080C1017O11901,,
tick,0x7ff6a77e816c,71190261,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82f5,71206292,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,71222263,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e849d,71238301,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b90,71254270,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c7a,71270303,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2135,71286298,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b41d0,71302312,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a83872aa,71318288,0,0x0,0,0x225ca85c889,0x225ca7f34fc,0x225ca7ed964,0x225ca7f1e6d,0x225ca7f4c81,0x225ca86f2bc
tick,0x7ff6a77e7cf9,71334321,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b446d,71350342,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,71366332,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fd7,71382317,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81af,71398330,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8341,71414309,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11656,71430342,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b49ba,71446322,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81e6,71461849,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81d2,71477826,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba5c,71493857,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e77,71509837,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84d0,71525867,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,71540848,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e4e,71556879,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e793f,71572857,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2103,71588879,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8685,71604859,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e837b,71619893,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c06,71635868,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f38,71651921,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64aca,71667878,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80d1,71683904,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e798f,71699880,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11c84,71715935,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c6e,71731914,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e807e,71747898,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8171,71763902,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6452a,71779925,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,71795913,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e785a,71811937,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e849a,71827908,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,71843942,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82ad,71859915,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f5f,71875951,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e785d,71891927,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1153d,71907945,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e877f,71923931,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e822c,71939968,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4350,71955940,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11c82,71971965,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648b0,71986955,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e820d,72002991,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8277,72018956,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,72035007,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6482d,72050956,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8065,72066998,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e87c3,72082968,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e844a,72098982,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8298,72114984,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4bdf4,72131012,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8208,72146990,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1166d,72163023,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64815,72178997,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7de3,72194029,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64526,72210029,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd85,72226047,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,72242027,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84d0,72258048,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64870,72274023,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,72290054,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e800a,72306030,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,72322066,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7af4,72338033,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd85,72354058,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44a3,72370048,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113c5,72386082,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b79,72402046,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e54,72418091,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4327,72434058,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81e6,72450081,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cdf,72466060,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b116bf,72482102,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b41de,72498087,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8a11,72514105,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,72530072,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b49b3,72546122,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11be4,72562095,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba81,72578124,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8365,72594112,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e95,72610145,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e793f,72626117,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e23,72642156,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e793f,72658122,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11c06,72674141,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8143,72690157,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e847c,72706157,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b05,72722130,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cb0,72738153,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1161d,72754131,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f9a,72770158,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b05,72786142,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,72802167,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64881,72818140,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1155b,72834182,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e849a,72850156,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83f2,72866187,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7898,72882164,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b9,72898187,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d9d,72914172,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e899b,72930217,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6488e,72945219,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d60,72961220,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,72977181,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f29,72992235,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e13,73008189,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,73024217,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e86d4,73040203,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8029,73055238,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64895,73071210,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,73087241,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e79f7,73103232,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cb5,73119240,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b116b7,73135223,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d9d,73151245,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44bf,73166921,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b114ad,73182958,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8277,73198927,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d69,73214953,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84d0,73230956,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b05,73246942,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e05,73262939,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b61,73278980,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8aa1,73294973,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,73310973,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd85,73326951,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d82,73342993,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82b3,73358964,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b51955,73375005,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b114f7,73390975,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82a9,73406968,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b49ba,73422973,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e89bc,73439016,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644cf,73454992,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c11,73471012,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64ab6,73487002,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,73503029,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8496,73518995,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648df,73535024,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e809c,73550990,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b116ad,73567040,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd85,73583013,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b115e1,73599032,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53420,73615033,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53450,73631055,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b5345e,73647040,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644b5,73663061,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c57,73679041,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8738,73695061,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a83872aa,73711045,0,0x0,0,0x225ca80d805,0x225ca82f019,0x225ca82f333,0x225ca82ea7c,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8362,73727073,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4357,73743045,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d5b,73759076,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b115ff,73775067,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a33,73791094,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64823,73807062,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba6b,73823088,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,73839073,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b9,73855100,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a3c,73871076,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e54,73887110,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113af,73903087,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11696,73919106,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fcb,73935094,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1166d,73951130,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11be4,73967106,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a8a,73982145,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e804c,73998110,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84d0,74014137,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd9a,74030142,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,74046146,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,74062120,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e844a,74078150,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6488e,74094124,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ab7,74110157,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba34,74126134,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,74142170,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c4d,74158135,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53443,74174173,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2135,74190156,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4495,74206201,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83fe,74222160,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e813a,74238208,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64878,74254162,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,74270190,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,74286177,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64ab6,74302203,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84b7,74318197,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cac,74334210,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84bd,74350184,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e844a,74366217,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64af8,74382192,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e0a,74398221,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64810,74414203,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8102,74430227,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53450,74446207,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b09,74462244,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d5b,74478219,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11685,74494254,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e869c,74510225,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a25,74526250,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1167b,74542222,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e800a,74558269,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7eaa,74574231,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,74590262,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e793f,74606249,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,74622254,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8660,74638258,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b05,74654305,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64ab6,74670268,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8204,74686285,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,74702264,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ab2,74718298,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2120,74734282,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d18,74750309,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f78,74766281,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,74782323,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4357,74798289,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fc1,74814318,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,74830298,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e6d,74846329,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c25,74862304,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4b7cf,74878331,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44bf,74893310,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84bd,74909356,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,74925319,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11bbf,74941338,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81d7,74957322,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b49a9,74973371,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cc1,74989327,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8270,75005378,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8afe,75021377,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b446d,75037391,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba14,75053360,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113dd,75069433,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e839e,75085438,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a00,75100436,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b1b,75116402,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84b7,75132402,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e852b,75148376,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644c2,75164414,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b79,75180399,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8a59,75196447,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e820d,75212411,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,75223668,0x225ca85cc40,2144,matchKnownFields node:_http_incoming:231:26,0x21ae3a59840,*
code-source-info,0x225ca85cc40,170,7322,11286,C0O7322C48O7361C113O7401C118O7489C153O7509C158O7535C195O7848C227O7870C263O7918C299O7940C335O7994C371O8016C407O8070C443O8092C479O8146C515O8168C520O8204C535O8128C550O8052C565O7976C580O7900C595O8249C600O8501C610O8705C642O8731C678O8796C714O8822C750O8883C786O8909C791O8962C806O8865C821O8778C836O9008C841O9130C846O9352C878O9381C914O9452C950O9481C986O9552C1022O9581C1058O9658C1094O9687C1099O9746C1114O9640C1129O9534C1144O9434C1159O9792C1191O9822C1227O9877C1242O9923C1274O9954C1310O10035C1346O10066C1351O10129C1366O10017C1381O10287C1413O10319C1449O10402C1485O10434C1521O10499C1536O10384C1551O10545C1556O11162C1635O11225C1649O11242C1675O11225C1715O11283C1720O11201C1770O11209C1775O10921C1780O7322C1834O11162,,
tick,0x7ff6a83290a0,75228411,0,0x0,6
scavenge,begin,36,296875,1671212067603
scavenge,end,36,312500,1671212067604
tick,0x7fffb2a0feb4,75244389,0,0x0,8
code-creation,LazyCompile,10,75258987,0xf1739bd3c6,187,NodeError node:internal/errors:342:28,0x25aadb24f68,~
code-source-info,0xf1739bd3c6,11,9886,10827,C0O9886C3O9917C10O9923C15O9945C20O9949C25O9983C33O10005C37O10029C40O10029C46O10101C51O10105C56O10139C65O10161C69O10191C83O10191C89O10226C96O10249C105O10266C109O10281C121O10414C128O10432C142O10550C147O10561C162O10226C167O10749C174O10749C178O10786C180O10797C184O10809C186O10822,,
code-creation,LazyCompile,10,75259121,0xf1739bd7a6,287,getMessage node:internal/errors:410:20,0x25aadb25220,~
code-source-info,0xf1739bd7a6,11,11900,12762,C0O11935C5O11944C10O11944C16O11959C22O11985C28O11994C35O11992C41O12027C47O12065C52O12084C57O12099C61O12091C70O12156C81O12200C99O12263C113O12220C117O12065C122O12287C136O12294C141O12324C142O12363C147O12385C152O12364C162O12412C167O12423C172O12460C176O12451C185O12482C196O12526C216O12583C226O12546C230O12423C235O12620C241O12627C246O12639C248O12650C249O12656C254O12656C259O12693C267O12713C271O12738C281O12700C286O12759,,
code-creation,RegExp,3,75259267,0x225ca85ab60,892,%[dfijoOs]
code-creation,LazyCompile,10,75259301,0xf1739bdcbe,30,lazyInternalUtilInspect node:internal/errors:184:33,0x25aadb24b78,~
code-source-info,0xf1739bdcbe,11,5407,5542,C0O5415C6O5448C12O5470C19O5468C25O5512C29O5539,,
code-creation,LazyCompile,10,75259336,0xf1739bdda6,14,format node:internal/util/inspect:1879:16,0x6682e96718,~
code-source-info,0xf1739bdda6,14,65439,65507,C0O65439C3O65454C8O65461C13O65504,,
code-creation,LazyCompile,10,75259499,0xf1739be066,855,formatWithOptionsInternal node:internal/util/inspect:1891:35,0x6682e967e0,~
code-source-info,0xf1739be
tick,0x7fffb2a0feb4,75260415,0,0x0,8
code-creation,Function,11,75267226,0x225ca848bc0,6556,formatWithOptionsInternal node:internal/util/inspect:1891:35,0x6682e967e0,^
code-source-info,0x225ca848bc0,14,65830,69793,,,
code-creation,Function,11,75267269,0x225ca84a5c0,940,fromArrayBuffer node:buffer:448:25,0x6682ea5e68,^
code-source-info,0x225ca84a5c0,18,13364,14066,,,
code-creation,Function,11,75267291,0x225ca84a9e0,544, C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\profiling.js:67:73,0xad2513bdd8,^
code-source-info,0x225ca84a9e0,137,1830,2050,,,
code-creation,Function,11,75267320,0x225ca84ac60,1016,job.ondone node:internal/crypto/pbkdf2:56:16,0x2b515bb84e8,^
code-source-info,0x225ca84ac60,210,1107,1421,,,
tick,0x7fffb2a0feb4,75276392,0,0x0,8
tick,0x7fffb2a0feb4,75292418,0,0x0,8
tick,0x7fffb2a0feb4,75308401,0,0x0,8
tick,0x7fffb2a0feb4,75324426,0,0x0,8
tick,0x7fffb2a0feb4,75340409,0,0x0,8
tick,0x7fffb2a0feb4,75356417,0,0x0,8
tick,0x7fffb2a0feb4,75372441,0,0x0,8
tick,0x7fffb2a0feb4,75388430,0,0x0,8
tick,0x7fffb2a0feb4,75404427,0,0x0,8
code-creation,Function,11,75409388,0x225ca84b0c0,2064,getMessage node:internal/errors:410:20,0x25aadb25220,^
code-source-info,0x225ca84b0c0,11,11900,12762,,,
code-creation,Function,11,75409420,0x225ca84b940,116,format node:internal/util/inspect:1879:16,0x6682e96718,^
code-source-info,0x225ca84b940,14,65439,65507,,,
code-creation,Function,11,75409450,0x225ca84ba20,1336,NodeError node:internal/errors:342:28,0x25aadb24f68,^
code-source-info,0x225ca84ba20,11,9886,10827,,,
tick,0x7fffb2a0feb4,75420453,0,0x0,8
tick,0x7fffb2a0feb4,75436431,0,0x0,8
tick,0x7fffb2a0feb4,75452458,0,0x0,8
tick,0x7fffb2a0feb4,75468432,0,0x0,8
tick,0x7fffb2a0feb4,75484464,0,0x0,8
tick,0x7fffb2a0feb4,75500448,0,0x0,8
tick,0x7fffb2a0feb4,75516470,0,0x0,8
tick,0x7fffb2a0feb4,75532487,0,0x0,8
tick,0x7fffb2a0feb4,75548486,0,0x0,8
tick,0x7fffb2a0feb4,75564786,0,0x0,8
tick,0x7fffb2a0feb4,75580792,0,0x0,8
tick,0x7fffb2a0feb4,75596787,0,0x0,8
tick,0x7fffb2a0feb4,75612808,0,0x0,8
tick,0x7fffb2a0feb4,75628790,0,0x0,8
tick,0x7ff6a831ec03,75644794,0,0x0,5
tick,0x7fffb2a0feb4,75659935,0,0x0,8
tick,0x7fffb2a0feb4,75675784,0,0x0,8
tick,0x7fffb2a0feb4,75691770,0,0x0,8
tick,0x7fffb2a0feb4,75707796,0,0x0,8
tick,0x7fffb2a0feb4,75723767,0,0x0,8
tick,0x7fffb2a0feb4,75739785,0,0x0,8
tick,0x7fffb2a0feb4,75755832,0,0x0,8
tick,0x7fffb2a0feb4,75771827,0,0x0,8
tick,0x7fffb2a0feb4,75786944,0,0x0,8
tick,0x7fffb2a0feb4,75802801,0,0x0,8
tick,0x7fffb2a0feb4,75818793,0,0x0,8
tick,0x7fffb2a0feb4,75834814,0,0x0,8
tick,0x7fffb2a0feb4,75850771,0,0x0,8
tick,0x7fffb2a0feb4,75866793,0,0x0,8
tick,0x7fffb2a0feb4,75882781,0,0x0,8
tick,0x7fffb2a0feb4,75897866,0,0x0,8
tick,0x7fffb2a0feb4,75912956,0,0x0,8
tick,0x7fffb2a0feb4,75928989,0,0x0,8
tick,0x7fffb2a0feb4,75944505,0,0x0,8
tick,0x7fffb2a0feb4,75960060,0,0x0,8
tick,0x7ff6a7ecb217,75976060,1,0x7ff6a7a1d770,5,0x7ff6a82ef2d0,0x225ca797c91,0x225ca84ab11,0x225ca84af04
tick,0x7fffb2a0feb4,75992074,0,0x0,8
tick,0x7fffb2a0feb4,76007232,0,0x0,8
tick,0x7fffb2a0feb4,76023222,0,0x0,8
tick,0x7fffb2a0feb4,76039224,0,0x0,8
tick,0x7fffb2a0feb4,76055228,0,0x0,8
tick,0x7fffb2a0feb4,76071236,0,0x0,8
tick,0x7fffb2a0feb4,76087252,0,0x0,8
tick,0x7fffb2a0feb4,76103234,0,0x0,8
tick,0x7fffb2a0feb4,76119265,0,0x0,8
tick,0x7fffb2a0feb4,76135250,0,0x0,8
tick,0x7fffb2a0feb4,76151283,0,0x0,8
tick,0x7fffb2a0feb4,76167254,0,0x0,8
tick,0x7fffb2a0feb4,76183287,0,0x0,8
tick,0x7fffb2a0feb4,76199272,0,0x0,8
tick,0x7fffb2a0feb4,76215296,0,0x0,8
tick,0x7fffb2a0feb4,76231279,0,0x0,8
tick,0x7fffb2a0feb4,76247296,0,0x0,8
tick,0x7fffb2a0feb4,76263290,0,0x0,8
tick,0x7fffb2a0feb4,76279322,0,0x0,8
tick,0x7fffb2a0feb4,76295352,0,0x0,8
tick,0x7fffb2a0feb4,76310347,0,0x0,8
tick,0x7fffb2a0feb4,76326326,0,0x0,8
tick,0x7ff6a77e2138,76342373,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b51955,76358348,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e23,76374365,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549e0,76390104,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11336,76406103,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113fc,76422119,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d82,76438135,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e876a,76454114,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e858c,76470155,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b518cb,76486163,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648c5,76502125,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11474,76518133,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7eaa,76534158,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1164c,76550161,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e89a5,76566166,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113fc,76582143,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e34,76598179,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e79f7,76614152,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11518,76630187,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11430,76646171,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8463,76662210,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e0a,76678183,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c19,76694191,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e85a5,76710166,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7db6,76726218,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b518e3,76742223,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83f2,76758212,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c9b,76774228,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e85b7,76790227,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b6a,76806203,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8031,76822218,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b44a3,76838203,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a7f,76854243,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6488e,76870221,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a97,76886244,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7dc9,76902217,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b61,76918232,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c00,76934260,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8f76,76950241,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ee4,76966235,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b115ff,76982270,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82c1,76998243,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cce,77014279,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83da,77030255,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ec3,77046299,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e804c,77062268,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e893a,77078329,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6488e,77093250,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1162e,77109286,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e54,77125275,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d04,77141308,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e886f,77157275,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,77173308,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e857c,77189287,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81d7,77205319,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e79dd,77221285,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8277,77237317,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549d5,77253322,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4350,77269321,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82f0,77285333,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e3e20,77301344,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7eaa,77317309,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11499,77333318,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11336,77349357,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64953,77365377,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11430,77381339,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11699,77397386,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11609,77413349,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fae,77429391,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b41d0,77445354,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f45,77461370,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c06,77477372,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8102,77492399,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8a75,77508371,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2149,77524412,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e83e4,77540370,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64833,77556415,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b64,77572381,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84d0,77588424,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,77604392,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e7d,77620434,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64870,77636459,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7858df0,77652451,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c98,77668433,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82be,77684446,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d28,77700456,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4bdf4,77716442,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,77732414,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e867a,77748437,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8423,77764453,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fd7,77780468,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8102,77796438,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e7d,77812451,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6494f,77828441,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8468,77844473,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11522,77860455,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e87fc,77876494,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b4327,77892438,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64af3,77908473,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82e7,77924448,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64810,77940479,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b51955,77956469,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,77972491,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8226,77988457,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11638,78004491,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113dd,78020469,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d6e,78036513,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cce,78052501,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a4c,78068509,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549d5,78084485,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e88ba,78100528,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fa4,78116520,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c61,78132529,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b3a,78148519,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b41d0,78164509,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b115b2,78180509,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1164c,78196569,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b51950,78212526,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e87a2,78228550,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e819b,78244559,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7fae,78260555,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81f8,78276525,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a97,78292561,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b51955,78308543,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8226,78324574,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a73,78340592,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2103,78356193,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81f3,78372186,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e864a,78388212,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b116b7,78404171,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7888,78420200,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644cf,78436177,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11656,78452242,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8a3d,78468203,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b61,78484217,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7856,78500244,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d18,78516243,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e851e,78532220,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64aa8,78548237,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b114ad,78563227,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648db,78579252,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e793f,78595214,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11671,78611234,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53435,78627210,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7beb,78643228,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8968,78659241,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d66,78675247,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8333,78691236,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e864a,78707262,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b431f,78723238,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e876a,78739234,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81a0,78755268,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,78771259,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80b9,78787244,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8257,78803268,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7eaa,78819257,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b115b9,78835280,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e6d,78851254,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8985,78867278,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f1e,78883267,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b79,78899302,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6489a,78915270,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
code-creation,LazyCompile,13,78915901,0x225ca84bfc0,4692,createHttpError C:\\Users\\Aaron\\Documents\\Curso BackEnd\\claseGenerico\\node_modules\\send\\index.js:977:26,0x13cb80eafb0,*
code-source-info,0x225ca84bfcx23ad5936ca8
tick,0x7ff6a77e84b7,78931304,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80ee,78947285,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cb5,78963307,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba79,78979294,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7af4,78994310,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8327,79010325,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e79d7,79026342,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e79b8,79042304,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84e9,79058346,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b4e,79074338,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7bca,79090347,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8087,79106322,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7df0,79122347,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648df,79138323,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82d2,79154371,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648b0,79170333,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e80f4,79186373,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,79202390,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7bcd,79218382,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c98,79234405,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e84d0,79250386,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f5f,79266362,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7ea0,79282393,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e87d9,79298371,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,79314385,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b61,79330394,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b25,79346403,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8748,79362400,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b443f,79378410,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64aeb,79393383,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11699,79409421,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d55,79425394,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7df0,79441415,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6488e,79457418,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b549d5,79473418,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7da8,79489405,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e88f8,79505444,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f1e,79521411,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d69,79537466,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7b61,79553431,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4ba69,79569450,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a8f,79585454,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e85f0,79601460,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b113c5,79617445,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a20,79633461,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a20,79649509,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b51955,79665488,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,79681453,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d18,79696492,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648a8,79712479,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8463,79728482,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d9d,79744473,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a88b41da,79760503,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8721,79775476,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,79790517,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8505,79805507,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8b52,79821507,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e890e,79837484,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64953,79853505,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64b16,79869504,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b11656,79885524,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e62,79901521,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c3d,79917531,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a70,79933521,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6cd85,79949531,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d6e,79965527,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e875c,79981544,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b4b9f4,79996809,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7f24,80012842,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7d6e,80028831,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b648c5,80044847,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e2138,80060839,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b1149f,80076846,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7c2d,80092840,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a3c,80108871,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64503,80124866,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e81a0,80140888,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a79,80156863,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e79e8,80172896,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b644b5,80188871,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8018,80204896,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e830e,80220870,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a42,80236898,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e79c7,80252877,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64aca,80268896,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e844a,80284885,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cb5,80300924,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7a6f,80316890,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8047,80332923,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7e01,80348898,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b6489d,80364930,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e3e1d,80380926,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b53452,80396924,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e89e6,80412942,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8345,80428966,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8613,80444930,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e7cb5,80460937,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e88aa,80476923,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a7b64a8f,80491932,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8463,80507937,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e82cb,80523951,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7ff6a77e8277,80539964,1,0x7ff6a787f3d0,6,0x7ff6a82ef2d0,0x225ca82ec2b,0x225ca80f037,0x225ca84da9e,0x225ca86d747,0x225ca7f76e4,0x225ca85c889,0x225ca80c545,0x225ca7fdb82,0x225ca8089d8,0x225ca808e3a,0x225ca8090fe
tick,0x7fffb2a0feb4,80555968,0,0x0,8
tick,0x7fffb2a0feb4,80571963,0,0x0,8
tick,0x7fffb2a0feb4,80587520,0,0x0,8
tick,0x7fffb2a0feb4,80602817,0,0x0,8
tick,0x7fffb2a0feb4,80618840,0,0x0,8
tick,0x7fffb2a0feb4,80634835,0,0x0,8
tick,0x7fffb2a0feb4,80650853,0,0x0,8
tick,0x7fffb2a0feb4,80666831,0,0x0,8
tick,0x7fffb2a0feb4,80682856,0,0x0,8
tick,0x7fffb2a0feb4,80697956,0,0x0,8
tick,0x7fffb2a0feb4,80713997,0,0x0,8
tick,0x7fffb2a0feb4,80729820,0,0x0,8
tick,0x7fffb2a0feb4,80745827,0,0x0,8
tick,0x7fffb2a0feb4,80761824,0,0x0,8
tick,0x7fffb2a0feb4,80777161,0,0x0,8
tick,0x7fffb2a0feb4,80792823,0,0x0,8
tick,0x7fffb2a0feb4,80808849,0,0x0,8
tick,0x7fffb2a0feb4,80824870,0,0x0,8
tick,0x7fffb2a0feb4,80840831,0,0x0,8
tick,0x7fffb2a0feb4,80856811,0,0x0,8
tick,0x7fffb2a0feb4,80872849,0,0x0,8
tick,0x7fffb2a0feb4,80888812,0,0x0,8
tick,0x7fffb2a0feb4,80904781,0,0x0,8
tick,0x7fffb2a0feb4,80920851,0,0x0,8
tick,0x7fffb2a0feb4,80936859,0,0x0,8
tick,0x7fffb2a0feb4,80952771,0,0x0,8
tick,0x7fffb2a0feb4,80968777,0,0x0,8
tick,0x7fffb2a0feb4,80984751,0,0x0,8
tick,0x7fffb2a0feb4,81000778,0,0x0,8
tick,0x7fffb2a0feb4,81016754,0,0x0,8
tick,0x7fffb2a0feb4,81032810,0,0x0,8
tick,0x7fffb2a0feb4,81048824,0,0x0,8
tick,0x7fffb2a0feb4,81064839,0,0x0,8
tick,0x7fffb2a0feb4,81080832,0,0x0,8
tick,0x7fffb2a0feb4,81096829,0,0x0,8
tick,0x7fffb2a0feb4,81112816,0,0x0,8
tick,0x7fffb2a0feb4,81128842,0,0x0,8
tick,0x7fffb2a0feb4,81143967,0,0x0,8
tick,0x7fffb2a0feb4,81159838,0,0x0,8
tick,0x7fffb2a0feb4,81175754,0,0x0,8
tick,0x7fffb2a0feb4,81191789,0,0x0,8
tick,0x7fffb2a0feb4,81206774,0,0x0,8
tick,0x7fffb2a0feb4,81222798,0,0x0,8
tick,0x7fffb2a0feb4,81238782,0,0x0,8
tick,0x7fffb2a0feb4,81254791,0,0x0,8
tick,0x7fffb2a0feb4,81270777,0,0x0,8
tick,0x7fffb2a0feb4,81286806,0,0x0,8
tick,0x7fffb2a0feb4,81302784,0,0x0,8
tick,0x7fffb2a0feb4,81318804,0,0x0,8
tick,0x7fffb2a0feb4,81334820,0,0x0,8
tick,0x7fffb2a0feb4,81350841,0,0x0,8
tick,0x7fffb2a0feb4,81366827,0,0x0,8
tick,0x7fffb2a0feb4,81382869,0,0x0,8
tick,0x7fffb2a0feb4,81398818,0,0x0,8
tick,0x7fffb2a0feb4,81414846,0,0x0,8
tick,0x7fffb2a0feb4,81429827,0,0x0,8
tick,0x7fffb2a0feb4,81444855,0,0x0,8
tick,0x7fffb2a0feb4,81460824,0,0x0,8
tick,0x7fffb2a0feb4,81475834,0,0x0,8
tick,0x7fffb2a0feb4,81491823,0,0x0,8
tick,0x7fffb2a0feb4,81507169,0,0x0,8
tick,0x7fffb2a0feb4,81522820,0,0x0,8
tick,0x7fffb2a0feb4,81538839,0,0x0,8
tick,0x7fffb2a0feb4,81554655,0,0x0,8
tick,0x7fffb2a0feb4,81569683,0,0x0,8
tick,0x7fffb2a0feb4,81585701,0,0x0,8
tick,0x7fffb2a0feb4,81601696,0,0x0,8
tick,0x7fffb2a0feb4,81617696,0,0x0,8
tick,0x7fffb2a0feb4,81633701,0,0x0,8
tick,0x7fffb2a0feb4,81648818,0,0x0,8
tick,0x7fffb2a0feb4,81664813,0,0x0,8
tick,0x7fffb2a0feb4,81680817,0,0x0,8
tick,0x7fffb2a0feb4,81696844,0,0x0,8
tick,0x7fffb2a0feb4,81712818,0,0x0,8
tick,0x7fffb2a0feb4,81727841,0,0x0,8
tick,0x7fffb2a0feb4,81742959,0,0x0,8
tick,0x7fffb2a0feb4,81758848,0,0x0,8
tick,0x7fffb2a0feb4,81774825,0,0x0,8
tick,0x7fffb2a0feb4,81790842,0,0x0,8
tick,0x7fffb2a0feb4,81805669,0,0x0,8
tick,0x7fffb2a0feb4,81821662,0,0x0,8
tick,0x7fffb2a0feb4,81836824,0,0x0,8
tick,0x7fffb2a0feb4,81852837,0,0x0,8
tick,0x7fffb2a0feb4,81868816,0,0x0,8
tick,0x7fffb2a0feb4,81884729,0,0x0,8
tick,0x7fffb2a0feb4,81899722,0,0x0,8
tick,0x7fffb2a0feb4,81915782,0,0x0,8
tick,0x7fffb2a0feb4,81930770,0,0x0,8
tick,0x7fffb2a0feb4,81946802,0,0x0,8
tick,0x7fffb2a0feb4,81962771,0,0x0,8
tick,0x7fffb2a0feb4,81978896,0,0x0,8
tick,0x7fffb2a0feb4,81994820,0,0x0,8
tick,0x7fffb2a0feb4,82010840,0,0x0,8
tick,0x7fffb2a0feb4,82026810,0,0x0,8
tick,0x7fffb2a0feb4,82041847,0,0x0,8
tick,0x7fffb2a0feb4,82057013,0,0x0,8
tick,0x7fffb2a0feb4,82073042,0,0x0,8
tick,0x7fffb2a0feb4,82088811,0,0x0,8
tick,0x7fffb2a0feb4,82104041,0,0x0,8
tick,0x7fffb2a0feb4,82119820,0,0x0,8
tick,0x7fffb2a0feb4,82135837,0,0x0,8
tick,0x7fffb2a0feb4,82151001,0,0x0,8
tick,0x7fffb2a0feb4,82166781,0,0x0,8
tick,0x7fffb2a0feb4,82181969,0,0x0,8
tick,0x7fffb2a0feb4,82197800,0,0x0,8
tick,0x7fffb2a0feb4,82213837,0,0x0,8
tick,0x7fffb2a0feb4,82229805,0,0x0,8
tick,0x7fffb2a0feb4,82245777,0,0x0,8
code-creation,LazyCompile,10,82252651,0x2b515bac9de,104,exit node:internal/process/per_thread:178:16,0x6682ebfb80,~
code-source-info,0x2b515bac9de,23,4888,5325,C0O4902C5O4919C10O4933C17O4950C21O4965C26O4978C32O4997C38O5014C42O5029C47O5037C60O5058C68O5037C74O5278C79O5286C89O5305C97O5286C103O5324,,
